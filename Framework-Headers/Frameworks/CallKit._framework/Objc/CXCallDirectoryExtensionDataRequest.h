//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <CallKit/CXCallDirectoryExtensionDataRequest-Protocol.h>
#import <CallKit/CXCallDirectoryProviderHostProtocol-Protocol.h>

@class CXCallDirectoryExtensionHostContext, NSError, NSExtension, NSString;
@protocol CXCallDirectoryExtensionDataRequestDelegate, NSCopying, OS_dispatch_queue;

@interface CXCallDirectoryExtensionDataRequest : NSObject <CXCallDirectoryProviderHostProtocol, CXCallDirectoryExtensionDataRequest>
{
    NSObject<OS_dispatch_queue> *_queue;
    id<CXCallDirectoryExtensionDataRequestDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_delegateQueue;
    NSExtension *_extension;
    id<NSCopying> _requestIdentifier;
    CXCallDirectoryExtensionHostContext *_context;
    NSError *_hostCancellationError;
}

@property (strong, nonatomic) CXCallDirectoryExtensionHostContext *context; // @synthesize context=_context;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<CXCallDirectoryExtensionDataRequestDelegate> delegate; // @synthesize delegate=_delegate;
@property (strong, nonatomic) NSObject<OS_dispatch_queue> *delegateQueue; // @synthesize delegateQueue=_delegateQueue;
@property (readonly, copy) NSString *description;
@property (strong, nonatomic) NSExtension *extension; // @synthesize extension=_extension;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) NSError *hostCancellationError; // @synthesize hostCancellationError=_hostCancellationError;
@property (strong, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property (strong, nonatomic) id<NSCopying> requestIdentifier; // @synthesize requestIdentifier=_requestIdentifier;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_cancelWithError:(id)arg1;
- (void)_performDelegateCallback:(CDUnknownBlockType)arg1;
- (oneway void)addBlockingEntriesWithData:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (oneway void)addIdentificationEntriesWithData:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)beginWithCompletion:(CDUnknownBlockType)arg1;
- (oneway void)completeRequestWithReply:(CDUnknownBlockType)arg1;
- (id)init;
- (id)initWithExtension:(id)arg1;
- (void)setDelegate:(id)arg1 queue:(id)arg2;

@end

