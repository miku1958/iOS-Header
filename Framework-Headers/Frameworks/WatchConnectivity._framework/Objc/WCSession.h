//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <WatchConnectivity/WCXPCManagerDelegate-Protocol.h>

@class NSArray, NSDictionary, NSMutableDictionary, NSMutableSet, NSString, NSURL, WCQueueManager, WCSessionUserInfoTransfer;
@protocol OS_dispatch_group, OS_dispatch_queue, WCSessionDelegate;

@interface WCSession : NSObject <WCXPCManagerDelegate>
{
    BOOL _paired;
    BOOL _watchAppInstalled;
    BOOL _complicationEnabled;
    BOOL _reachable;
    BOOL _iOSDeviceNeedsUnlockAfterRebootForReachability;
    BOOL _sessionActivated;
    BOOL _delegateQueueSuspended;
    BOOL _shouldSuspendDelegateQueue;
    id<WCSessionDelegate> _delegate;
    NSURL *_watchDirectoryURL;
    NSDictionary *_applicationContext;
    NSDictionary *_receivedApplicationContext;
    NSObject<OS_dispatch_queue> *_delegateQueue;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSMutableDictionary *_currentMessages;
    NSMutableSet *_currentMessageIdentifiersAwaitingReply;
    NSMutableDictionary *_internalOutstandingUserInfoTransfers;
    NSMutableDictionary *_internalOutstandingFileTransfers;
    NSObject<OS_dispatch_group> *_sessionStateGroup;
    WCSessionUserInfoTransfer *_currentComplicationUserInfoTransfer;
    WCQueueManager *_queueManager;
    NSString *_pairingID;
}

@property (copy, nonatomic) NSDictionary *applicationContext; // @synthesize applicationContext=_applicationContext;
@property (nonatomic, getter=isComplicationEnabled) BOOL complicationEnabled; // @synthesize complicationEnabled=_complicationEnabled;
@property (strong) WCSessionUserInfoTransfer *currentComplicationUserInfoTransfer; // @synthesize currentComplicationUserInfoTransfer=_currentComplicationUserInfoTransfer;
@property (strong) NSMutableSet *currentMessageIdentifiersAwaitingReply; // @synthesize currentMessageIdentifiersAwaitingReply=_currentMessageIdentifiersAwaitingReply;
@property (readonly) NSMutableDictionary *currentMessages; // @synthesize currentMessages=_currentMessages;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<WCSessionDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly) NSObject<OS_dispatch_queue> *delegateQueue; // @synthesize delegateQueue=_delegateQueue;
@property BOOL delegateQueueSuspended; // @synthesize delegateQueueSuspended=_delegateQueueSuspended;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) BOOL iOSDeviceNeedsUnlockAfterRebootForReachability; // @synthesize iOSDeviceNeedsUnlockAfterRebootForReachability=_iOSDeviceNeedsUnlockAfterRebootForReachability;
@property (strong, nonatomic) NSMutableDictionary *internalOutstandingFileTransfers; // @synthesize internalOutstandingFileTransfers=_internalOutstandingFileTransfers;
@property (strong, nonatomic) NSMutableDictionary *internalOutstandingUserInfoTransfers; // @synthesize internalOutstandingUserInfoTransfers=_internalOutstandingUserInfoTransfers;
@property (readonly, copy, nonatomic) NSArray *outstandingFileTransfers;
@property (readonly, copy, nonatomic) NSArray *outstandingUserInfoTransfers;
@property (nonatomic, getter=isPaired) BOOL paired; // @synthesize paired=_paired;
@property (copy, nonatomic) NSString *pairingID; // @synthesize pairingID=_pairingID;
@property (strong) WCQueueManager *queueManager; // @synthesize queueManager=_queueManager;
@property (nonatomic, getter=isReachable) BOOL reachable; // @synthesize reachable=_reachable;
@property (copy, nonatomic) NSDictionary *receivedApplicationContext; // @synthesize receivedApplicationContext=_receivedApplicationContext;
@property BOOL sessionActivated; // @synthesize sessionActivated=_sessionActivated;
@property (strong) NSObject<OS_dispatch_group> *sessionStateGroup; // @synthesize sessionStateGroup=_sessionStateGroup;
@property BOOL shouldSuspendDelegateQueue; // @synthesize shouldSuspendDelegateQueue=_shouldSuspendDelegateQueue;
@property (readonly) Class superclass;
@property (nonatomic, getter=isWatchAppInstalled) BOOL watchAppInstalled; // @synthesize watchAppInstalled=_watchAppInstalled;
@property (strong, nonatomic) NSURL *watchDirectoryURL; // @synthesize watchDirectoryURL=_watchDirectoryURL;
@property (readonly) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)defaultSession;
+ (BOOL)isSupported;
- (void).cxx_destruct;
- (id)_init;
- (void)_onqueue_notifyOfMessageError:(id)arg1 withErrorHandler:(CDUnknownBlockType)arg2;
- (void)_onqueue_sendResponseError:(id)arg1 identifier:(id)arg2 dictionaryMessage:(BOOL)arg3;
- (void)activateSession;
- (void)cancelFileTransfer:(id)arg1;
- (void)cancelUserInfo:(id)arg1;
- (id)createAndStartTimerOnWorkQueueWithHandler:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (BOOL)didPairingIDChange:(id)arg1;
- (void)didSessionStateChange:(id)arg1 forceReachableChanged:(BOOL)arg2 withChangeHandler:(CDUnknownBlockType)arg3;
- (BOOL)didWatchURLChange:(id)arg1;
- (id)errorIfNotReachable;
- (id)errorIfPreconditionsNotSatisfied;
- (id)fileSizeFromURL:(id)arg1;
- (id)init;
- (BOOL)isEqual:(id)arg1;
- (BOOL)logAndTestIfUnactivatedOrMissingDelegate;
- (void)notifyOfFileError:(id)arg1 withFileTransfer:(id)arg2;
- (void)notifyOfUserInfoError:(id)arg1 withUserInfoTransfer:(id)arg2;
- (void)onDelegateQueue_updateSessionState:(id)arg1;
- (void)onqueue_addOutstandingFileTransfer:(id)arg1;
- (id)onqueue_addOutstandingUserInfoTransfer:(id)arg1;
- (void)onqueue_cancelFileTransfer:(id)arg1;
- (void)onqueue_cancelMessagesIfNeeded;
- (void)onqueue_cancelTransfers;
- (void)onqueue_cancelUserInfo:(id)arg1;
- (void)onqueue_handleDataMessageRequest:(id)arg1;
- (void)onqueue_handleDictionaryMessageRequest:(id)arg1;
- (void)onqueue_handleMessageCompletionWithError:(id)arg1 withMessageID:(id)arg2;
- (void)onqueue_handleResponseData:(id)arg1 record:(id)arg2;
- (void)onqueue_handleResponseDictionary:(id)arg1 record:(id)arg2;
- (void)onqueue_loadAppContexts;
- (void)onqueue_loadOutstandingFileTransfers;
- (void)onqueue_loadOutstandingUserInfoTransfers;
- (void)onqueue_loadPersistedContent;
- (void)onqueue_notifyOfFileError:(id)arg1 withFileTransfer:(id)arg2;
- (void)onqueue_notifyOfUserInfoError:(id)arg1 withUserInfoTransfer:(id)arg2;
- (void)onqueue_removeOutstandingFileTransfer:(id)arg1;
- (void)onqueue_removeOutstandingUserInfoTransfer:(id)arg1;
- (void)onqueue_resumeDelegateQueue;
- (void)onqueue_sendMessageData:(id)arg1 replyHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3 dictionaryMessage:(BOOL)arg4;
- (void)onqueue_sendResponseData:(id)arg1 identifier:(id)arg2 dictionaryMessage:(BOOL)arg3;
- (void)onqueue_sendResponseDictionary:(id)arg1 identifier:(id)arg2;
- (void)onqueue_setCurrentComplicationUserInfoTransfer:(id)arg1;
- (void)onqueue_transferUserInfo:(id)arg1 withUserInfo:(id)arg2;
- (void)onqueue_updateWatchDirectoryURL:(id)arg1;
- (void)resumeDelegateQueue;
- (void)sendMessage:(id)arg1 replyHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)sendMessageData:(id)arg1 replyHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)storeAppContext:(id)arg1 withAppContextData:(id)arg2;
- (void)storeReceivedAppContext:(id)arg1 withAppContextData:(id)arg2;
- (id)transferCurrentComplicationUserInfo:(id)arg1;
- (id)transferFile:(id)arg1 metadata:(id)arg2;
- (id)transferUserInfo:(id)arg1;
- (BOOL)updateApplicationContext:(id)arg1 error:(id *)arg2;
- (void)updatePairingID:(id)arg1;
- (BOOL)verifySessionFile:(id)arg1;
- (void)xpcManager:(id)arg1 handleApplicationContext:(id)arg2;
- (void)xpcManager:(id)arg1 handleFileTransferFinishedWithIdentifier:(id)arg2 error:(id)arg3;
- (void)xpcManager:(id)arg1 handleRequest:(id)arg2;
- (void)xpcManager:(id)arg1 handleResponse:(id)arg2;
- (void)xpcManager:(id)arg1 handleSentMessageWithIdentifier:(id)arg2 error:(id)arg3;
- (void)xpcManager:(id)arg1 handleSessionFile:(id)arg2;
- (void)xpcManager:(id)arg1 handleSessionStateChanged:(id)arg2 forceReachableChanged:(BOOL)arg3;
- (void)xpcManager:(id)arg1 handleUserInfoTransfer:(id)arg2;
- (void)xpcManager:(id)arg1 handleUserInfoTransferFinishedWithIdentifier:(id)arg2 error:(id)arg3;
- (void)xpcManagerConnectionInterrupted:(id)arg1;
- (void)xpcManagerHandleMessageSendingAllowed:(id)arg1;

@end

