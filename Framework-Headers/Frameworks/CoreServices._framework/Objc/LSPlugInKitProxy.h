//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <CoreServices/LSBundleProxy.h>

#import <CoreServices/LSDetachable-Protocol.h>
#import <CoreServices/NSSecureCoding-Protocol.h>

@class LSApplicationExtensionRecord, LSExtensionPoint, NSDate, NSDictionary, NSNumber, NSString, NSUUID;

@interface LSPlugInKitProxy : LSBundleProxy <LSDetachable, NSSecureCoding>
{
    unsigned int _platform;
    unsigned int _pluginFlags;
    LSApplicationExtensionRecord *_appexRecord;
    NSString *_extensionPointID;
    BOOL _onSystemPartition;
    NSString *_signerOrganization;
    NSString *_pluginIdentifier;
    NSString *_originalIdentifier;
    NSString *_protocol;
    NSUUID *_pluginUUID;
    NSDate *_registrationDate;
    LSBundleProxy *_containingBundle;
}

@property (readonly, nonatomic) LSBundleProxy *containingBundle; // @synthesize containingBundle=_containingBundle;
@property (readonly, nonatomic) LSExtensionPoint *extensionPoint;
@property (readonly, nonatomic) NSDictionary *infoPlist;
@property (readonly, nonatomic, getter=isOnSystemPartition) BOOL onSystemPartition; // @synthesize onSystemPartition=_onSystemPartition;
@property (readonly, nonatomic) NSString *originalIdentifier; // @synthesize originalIdentifier=_originalIdentifier;
@property (readonly, nonatomic) NSNumber *platform;
@property (readonly, nonatomic) BOOL pluginCanProvideIcon;
@property (readonly, nonatomic) NSString *pluginIdentifier; // @synthesize pluginIdentifier=_pluginIdentifier;
@property (readonly, nonatomic) NSDictionary *pluginKitDictionary;
@property (readonly, nonatomic) NSUUID *pluginUUID; // @synthesize pluginUUID=_pluginUUID;
@property (readonly, nonatomic) NSString *protocol; // @synthesize protocol=_protocol;
@property (readonly, nonatomic) NSDate *registrationDate; // @synthesize registrationDate=_registrationDate;
@property (readonly, nonatomic) NSString *teamID; // @dynamic teamID;

+ (id)containingBundleIdentifiersForPlugInBundleIdentifiers:(id)arg1 error:(id *)arg2;
+ (id)plugInKitProxyForPlugin:(unsigned int)arg1 withContext:(struct LSContext *)arg2;
+ (id)plugInKitProxyForPlugin:(unsigned int)arg1 withContext:(struct LSContext *)arg2 applicationExtensionRecord:(id)arg3 resolveAndDetach:(BOOL)arg4;
+ (id)plugInKitProxyForUUID:(id)arg1 bundleIdentifier:(id)arg2 pluginIdentifier:(id)arg3 effectiveIdentifier:(id)arg4 version:(id)arg5 bundleURL:(id)arg6;
+ (id)pluginKitProxyForIdentifier:(id)arg1;
+ (id)pluginKitProxyForURL:(id)arg1;
+ (id)pluginKitProxyForUUID:(id)arg1;
+ (BOOL)supportsSecureCoding;
- (void).cxx_destruct;
- (BOOL)UPPValidated;
- (id)_initWithPlugin:(unsigned int)arg1 andContext:(struct LSContext *)arg2 applicationExtensionRecord:(id)arg3 resolveAndDetach:(BOOL)arg4;
- (id)_initWithUUID:(id)arg1 bundleIdentifier:(id)arg2 pluginIdentifier:(id)arg3 effectiveIdentifier:(id)arg4 version:(id)arg5 bundleURL:(id)arg6;
- (id)_localizedNameWithPreferredLocalizations:(id)arg1 useShortNameOnly:(BOOL)arg2;
- (id)_managedPersonas;
- (BOOL)_usesSystemPersona;
- (id)_valueForEqualityTesting;
- (id)boundIconsDictionary;
- (id)bundleType;
- (unsigned long long)compatibilityState;
- (id)dataContainerURL;
- (id)description;
- (void)detach;
- (void)encodeWithCoder:(id)arg1;
- (BOOL)freeProfileValidated;
- (id)groupContainerURLs;
- (id)iconDataForVariant:(int)arg1 withOptions:(int)arg2;
- (id)initWithCoder:(id)arg1;
- (id)objectForInfoDictionaryKey:(id)arg1 ofClass:(Class)arg2 inScope:(unsigned long long)arg3;
- (BOOL)profileValidated;
- (id)signerOrganization;

@end

