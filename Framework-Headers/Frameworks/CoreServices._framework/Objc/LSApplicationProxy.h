//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <CoreServices/LSBundleProxy.h>

#import <CoreServices/NSSecureCoding-Protocol.h>

@class NSArray, NSDate, NSDictionary, NSNumber, NSProgress, NSSet, NSString, NSUUID, _LSApplicationState, _LSDiskUsage, _LSLazyPropertyList;

@interface LSApplicationProxy : LSBundleProxy <NSSecureCoding>
{
    NSString *_deviceIdentifierVendorName;
    NSArray *_pluginUUIDs;
    NSNumber *_versionID;
    NSDictionary *_claimHandlerRanks;
    unsigned int _platform;
    NSArray *_managedPersonas;
    _LSLazyPropertyList *_siriActionDefinitionURLs;
    BOOL _standaloneWatchApp;
    BOOL _runsIndependentlyOfCompanionApp;
    BOOL _userInitiatedUninstall;
    int _bundleModTime;
    NSArray *_plugInKitPlugins;
    NSString *_signerOrganization;
    NSString *_companionApplicationIdentifier;
    NSArray *_counterpartIdentifiers;
    NSDate *_registeredDate;
    NSNumber *_itemID;
    NSString *_vendorName;
    NSString *_itemName;
    NSString *_genre;
    NSNumber *_genreID;
    NSString *_minimumSystemVersion;
    NSString *_maximumSystemVersion;
    NSString *_shortVersionString;
    NSString *_preferredArchitecture;
    _LSDiskUsage *_diskUsage;
    _LSApplicationState *_appState;
    NSNumber *_purchaserDSID;
    NSNumber *_downloaderDSID;
    NSNumber *_familyID;
    unsigned long long _installType;
    unsigned long long _originalInstallType;
    NSArray *_deviceFamily;
    NSArray *_activityTypes;
    NSString *_teamID;
    NSNumber *_storeFront;
    NSNumber *_ratingRank;
    NSString *_ratingLabel;
    NSString *_sourceAppIdentifier;
    NSString *_applicationVariant;
    NSString *_watchKitVersion;
    NSString *_complicationPrincipalClass;
    NSArray *_supportedComplicationFamilies;
    NSNumber *_installFailureReason;
    NSString *_appStoreToolsBuildVersion;
    NSSet *_claimedDocumentContentTypes;
    NSSet *_claimedURLSchemes;
    NSArray *_backgroundTaskSchedulerPermittedIdentifiers;
}

@property (readonly, nonatomic) NSNumber *ODRDiskUsage;
@property (readonly, nonatomic) NSArray *UIBackgroundModes;
@property (readonly, nonatomic) NSArray *VPNPlugins;
@property (readonly, nonatomic) NSArray *activityTypes; // @synthesize activityTypes=_activityTypes;
@property (readonly, nonatomic, getter=isAdHocCodeSigned) BOOL adHocCodeSigned;
@property (readonly, nonatomic) NSString *appIDPrefix;
@property (readonly, nonatomic) _LSApplicationState *appState; // @synthesize appState=_appState;
@property (readonly, nonatomic) NSString *appStoreToolsBuildVersion; // @synthesize appStoreToolsBuildVersion=_appStoreToolsBuildVersion;
@property (readonly, nonatomic, getter=isAppStoreVendable) BOOL appStoreVendable;
@property (readonly, nonatomic) NSArray *appTags;
@property (readonly, nonatomic, getter=isAppUpdate) BOOL appUpdate;
@property (readonly, nonatomic) NSString *applicationDSID; // @dynamic applicationDSID;
@property (readonly, nonatomic) NSString *applicationIdentifier;
@property (readonly, nonatomic) NSString *applicationType;
@property (readonly, nonatomic) NSString *applicationVariant; // @synthesize applicationVariant=_applicationVariant;
@property (readonly, nonatomic, getter=isArcadeApp) BOOL arcadeApp;
@property (readonly, nonatomic) NSArray *audioComponents;
@property (readonly, nonatomic) NSArray *backgroundTaskSchedulerPermittedIdentifiers; // @synthesize backgroundTaskSchedulerPermittedIdentifiers=_backgroundTaskSchedulerPermittedIdentifiers;
@property (readonly, nonatomic, getter=isBetaApp) BOOL betaApp;
@property (readonly, nonatomic) NSNumber *betaExternalVersionIdentifier; // @dynamic betaExternalVersionIdentifier;
@property (readonly, nonatomic) int bundleModTime; // @synthesize bundleModTime=_bundleModTime;
@property (readonly, nonatomic) BOOL canHandleWebAuthentication;
@property (readonly, nonatomic) NSArray *carPlayInstrumentClusterURLSchemes;
@property (readonly, nonatomic) NSSet *claimedDocumentContentTypes; // @synthesize claimedDocumentContentTypes=_claimedDocumentContentTypes;
@property (readonly, nonatomic) NSSet *claimedURLSchemes; // @synthesize claimedURLSchemes=_claimedURLSchemes;
@property (readonly, nonatomic) NSString *companionApplicationIdentifier; // @synthesize companionApplicationIdentifier=_companionApplicationIdentifier;
@property (readonly, nonatomic) NSString *complicationPrincipalClass; // @synthesize complicationPrincipalClass=_complicationPrincipalClass;
@property (readonly, nonatomic) NSArray *counterpartIdentifiers; // @synthesize counterpartIdentifiers=_counterpartIdentifiers;
@property (readonly, nonatomic, getter=isDeletable) BOOL deletable;
@property (readonly, nonatomic, getter=isDeviceBasedVPP) BOOL deviceBasedVPP;
@property (readonly, nonatomic) NSArray *deviceFamily; // @synthesize deviceFamily=_deviceFamily;
@property (readonly, nonatomic) NSUUID *deviceIdentifierForAdvertising;
@property (readonly, nonatomic) NSUUID *deviceIdentifierForVendor;
@property (readonly, nonatomic) long long deviceManagementPolicy;
@property (readonly, nonatomic) NSArray *directionsModes;
@property (readonly, nonatomic) _LSDiskUsage *diskUsage; // @synthesize diskUsage=_diskUsage;
@property (readonly, nonatomic) NSNumber *downloaderDSID; // @synthesize downloaderDSID=_downloaderDSID;
@property (readonly, nonatomic) NSNumber *dynamicDiskUsage;
@property (readonly, nonatomic) NSArray *externalAccessoryProtocols;
@property (readonly, nonatomic) NSNumber *externalVersionIdentifier; // @dynamic externalVersionIdentifier;
@property (readonly, nonatomic) NSNumber *familyID; // @synthesize familyID=_familyID;
@property (readonly, nonatomic) BOOL fileSharingEnabled;
@property (readonly, nonatomic, getter=isGameCenterEnabled) BOOL gameCenterEnabled;
@property (readonly, nonatomic) BOOL gameCenterEverEnabled;
@property (readonly, nonatomic) NSString *genre; // @synthesize genre=_genre;
@property (readonly, nonatomic) NSNumber *genreID; // @synthesize genreID=_genreID;
@property (readonly, nonatomic) BOOL hasComplication;
@property (readonly, nonatomic) BOOL hasCustomNotification;
@property (readonly, nonatomic) BOOL hasGlance;
@property (readonly, nonatomic) BOOL hasMIDBasedSINF;
@property (readonly, nonatomic) BOOL hasParallelPlaceholder;
@property (readonly, nonatomic) BOOL hasSettingsBundle;
@property (readonly, nonatomic) BOOL iconIsPrerendered;
@property (readonly, nonatomic) BOOL iconUsesAssetCatalog;
@property (readonly, nonatomic) NSNumber *installFailureReason; // @synthesize installFailureReason=_installFailureReason;
@property (readonly, nonatomic) NSProgress *installProgress;
@property (readonly, nonatomic) unsigned long long installType; // @synthesize installType=_installType;
@property (readonly, nonatomic, getter=isInstalled) BOOL installed;
@property (readonly, nonatomic) NSNumber *itemID; // @synthesize itemID=_itemID;
@property (readonly, nonatomic) NSString *itemName; // @synthesize itemName=_itemName;
@property (readonly, nonatomic, getter=isLaunchProhibited) BOOL launchProhibited;
@property (readonly, nonatomic) NSArray *managedPersonas;
@property (readonly, nonatomic) NSString *maximumSystemVersion; // @synthesize maximumSystemVersion=_maximumSystemVersion;
@property (readonly, nonatomic) NSString *minimumSystemVersion; // @synthesize minimumSystemVersion=_minimumSystemVersion;
@property (readonly, nonatomic) BOOL missingRequiredSINF;
@property (readonly, nonatomic, getter=isNewsstandApp) BOOL newsstandApp;
@property (readonly, nonatomic) unsigned long long originalInstallType; // @synthesize originalInstallType=_originalInstallType;
@property (readonly, nonatomic, getter=isPlaceholder) BOOL placeholder;
@property (readonly, nonatomic) NSNumber *platform;
@property (readonly, nonatomic) NSArray *plugInKitPlugins; // @synthesize plugInKitPlugins=_plugInKitPlugins;
@property (readonly, nonatomic) NSString *preferredArchitecture; // @synthesize preferredArchitecture=_preferredArchitecture;
@property (readonly, nonatomic, getter=isPurchasedReDownload) BOOL purchasedReDownload;
@property (readonly, nonatomic) NSNumber *purchaserDSID; // @synthesize purchaserDSID=_purchaserDSID;
@property (readonly, nonatomic) NSString *ratingLabel; // @synthesize ratingLabel=_ratingLabel;
@property (readonly, nonatomic) NSNumber *ratingRank; // @synthesize ratingRank=_ratingRank;
@property (readonly, nonatomic) NSDate *registeredDate; // @synthesize registeredDate=_registeredDate;
@property (readonly, nonatomic, getter=isRemoveableSystemApp) BOOL removeableSystemApp;
@property (readonly, nonatomic, getter=isRemovedSystemApp) BOOL removedSystemApp;
@property (readonly, nonatomic) NSArray *requiredDeviceCapabilities;
@property (readonly, nonatomic, getter=isRestricted) BOOL restricted;
@property (readonly, nonatomic) BOOL runsIndependentlyOfCompanionApp; // @synthesize runsIndependentlyOfCompanionApp=_runsIndependentlyOfCompanionApp;
@property (readonly, nonatomic) NSString *shortVersionString; // @synthesize shortVersionString=_shortVersionString;
@property (readonly, nonatomic) BOOL shouldSkipWatchAppInstall;
@property (readonly, nonatomic) NSDictionary *siriActionDefinitionURLs;
@property (readonly, nonatomic) NSString *sourceAppIdentifier; // @synthesize sourceAppIdentifier=_sourceAppIdentifier;
@property (readonly, nonatomic, getter=isStandaloneWatchApp) BOOL standaloneWatchApp; // @synthesize standaloneWatchApp=_standaloneWatchApp;
@property (readonly, nonatomic) NSNumber *staticDiskUsage;
@property (readonly, nonatomic) NSArray *staticShortcutItems;
@property (readonly, nonatomic) NSString *storeCohortMetadata;
@property (readonly, nonatomic) NSNumber *storeFront; // @synthesize storeFront=_storeFront;
@property (readonly, nonatomic) NSArray *subgenres;
@property (readonly, nonatomic) NSArray *supportedComplicationFamilies; // @synthesize supportedComplicationFamilies=_supportedComplicationFamilies;
@property (readonly, nonatomic) BOOL supportsAlternateIconNames;
@property (readonly, nonatomic) BOOL supportsAudiobooks;
@property (readonly, nonatomic) BOOL supportsExternallyPlayableContent;
@property (readonly, nonatomic) BOOL supportsMultiwindow;
@property (readonly, nonatomic) BOOL supportsODR;
@property (readonly, nonatomic) BOOL supportsOpenInPlace;
@property (readonly, nonatomic) BOOL supportsPurgeableLocalStorage;
@property (readonly, nonatomic) NSString *teamID; // @synthesize teamID=_teamID;
@property (nonatomic) BOOL userInitiatedUninstall; // @synthesize userInitiatedUninstall=_userInitiatedUninstall;
@property (readonly, nonatomic) NSString *vendorName; // @synthesize vendorName=_vendorName;
@property (readonly, nonatomic, getter=isWatchKitApp) BOOL watchKitApp;
@property (readonly, nonatomic) NSString *watchKitVersion; // @synthesize watchKitVersion=_watchKitVersion;
@property (readonly, nonatomic, getter=isWhitelisted) BOOL whitelisted;

+ (id)applicationProxyForBundleType:(unsigned long long)arg1 identifier:(id)arg2 isCompanion:(BOOL)arg3 URL:(id)arg4 itemID:(id)arg5 bundleUnit:(unsigned int *)arg6;
+ (id)applicationProxyForBundleURL:(id)arg1;
+ (id)applicationProxyForCompanionIdentifier:(id)arg1;
+ (id)applicationProxyForIdentifier:(id)arg1;
+ (id)applicationProxyForIdentifier:(id)arg1 placeholder:(BOOL)arg2;
+ (id)applicationProxyForIdentifier:(id)arg1 withContext:(struct LSContext *)arg2;
+ (id)applicationProxyForItemID:(id)arg1;
+ (id)applicationProxyForSystemPlaceholder:(id)arg1;
+ (id)applicationProxyWithBundleUnitID:(unsigned int)arg1 withContext:(struct LSContext *)arg2;
+ (id)iconQueue;
+ (BOOL)supportsSecureCoding;
- (void).cxx_destruct;
- (BOOL)UPPValidated;
- (id)_initWithBundleUnit:(unsigned int)arg1 context:(struct LSContext *)arg2 applicationIdentifier:(id)arg3;
- (id)_localizedNameWithPreferredLocalizations:(id)arg1 useShortNameOnly:(BOOL)arg2;
- (id)_managedPersonas;
- (BOOL)_usesSystemPersona;
- (id)alternateIconName;
- (void)clearAdvertisingIdentifier;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)getBundleMetadata;
- (void)getDeviceManagementPolicyWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)handlerRankOfClaimForContentType:(id)arg1;
- (id)iconDataForVariant:(int)arg1;
- (id)iconDataForVariant:(int)arg1 withOptions:(int)arg2;
- (id)initWithCoder:(id)arg1;
- (id)installProgressSync;
- (BOOL)isDeletableIgnoringRestrictions;
- (id)localizedNameForContext:(id)arg1;
- (id)localizedNameForContext:(id)arg1 preferredLocalizations:(id)arg2;
- (id)localizedNameForContext:(id)arg1 preferredLocalizations:(id)arg2 useShortNameOnly:(BOOL)arg3;
- (id)primaryIconDataForVariant:(int)arg1;
- (BOOL)profileValidated;
- (void)setAlternateIconName:(id)arg1 withResult:(CDUnknownBlockType)arg2;
- (id)signerOrganization;
- (id)uniqueIdentifier;

@end

