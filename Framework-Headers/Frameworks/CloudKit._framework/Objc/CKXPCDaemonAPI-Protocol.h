//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <CloudKit/NSObject-Protocol.h>

@class CKAcceptSharesOperationInfo, CKCodeFunctionInvokeOperationInfo, CKContainerSetupInfo, CKDiscoverUserIdentitiesOperationInfo, CKEventMetricInfo, CKFetchDatabaseChangesOperationInfo, CKFetchNotificationChangesOperationInfo, CKFetchRecordZoneChangesOperationInfo, CKFetchRecordZonesOperationInfo, CKFetchRecordsOperationInfo, CKFetchShareMetadataOperationInfo, CKFetchShareParticipantsOperationInfo, CKFetchSubscriptionsOperationInfo, CKFetchWebAuthTokenOperationInfo, CKMarkNotificationsReadOperationInfo, CKModifyBadgeOperationInfo, CKModifyRecordZonesOperationInfo, CKModifyRecordsOperationInfo, CKModifySubscriptionsOperationInfo, CKQueryOperationInfo, NSArray, NSFileHandle, NSString;
@protocol CKAcceptSharesOperationCallbacks, CKCodeFunctionInvokeOperationCallbacks, CKCodeOperationCallbacks, CKDiscoverAllUserIdentitiesOperationCallbacks, CKDiscoverUserIdentitiesOperationCallbacks, CKFetchDatabaseChangesOperationCallbacks, CKFetchNotificationChangesOperationCallbacks, CKFetchRecordChangesOperationCallbacks, CKFetchRecordZoneChangesOperationCallbacks, CKFetchRecordZonesOperationCallbacks, CKFetchRecordsOperationCallbacks, CKFetchShareMetadataOperationCallbacks, CKFetchShareParticipantsOperationCallbacks, CKFetchSubscriptionsOperationCallbacks, CKFetchWebAuthTokenOperationCallbacks, CKMarkNotificationsReadOperationCallbacks, CKModifyRecordZonesOperationCallbacks, CKModifyRecordsOperationCallbacks, CKModifySubscriptionsOperationCallbacks, CKOperationCallbacks, CKQueryOperationCallbacks;

@protocol CKXPCDaemonAPI <NSObject>
- (void)accountInfoWithSetupInfo:(CKContainerSetupInfo *)arg1 completionHandler:(void (^)(CKAccountInfo *, NSError *))arg2;
- (void)cancelOperationWithIdentifier:(NSString *)arg1 completionHandler:(void (^)(void))arg2;
- (void)displayInfoOnAccountWithSetupInfo:(CKContainerSetupInfo *)arg1 completionHandler:(void (^)(NSPersonNameComponents *, NSString *, NSString *, NSError *))arg2;
- (void)dumpDaemonStatusReportToFileHandle:(NSFileHandle *)arg1 completionHandler:(void (^)(NSError *))arg2;
- (void)fetchAllLongLivedOperationIDsWithSetupInfo:(CKContainerSetupInfo *)arg1 completionHandler:(void (^)(NSArray *, NSError *))arg2;
- (void)fetchLongLivedOperationsWithIDs:(NSArray *)arg1 setupInfo:(CKContainerSetupInfo *)arg2 completionHandler:(void (^)(NSArray *, NSError *))arg3;
- (void)getBehaviorOptionForKey:(NSString *)arg1 isContainerOption:(BOOL)arg2 completionHandler:(void (^)(id))arg3;
- (void)importantUserIDsWithSetupInfo:(CKContainerSetupInfo *)arg1 completionHandler:(void (^)(NSString *, NSString *, NSError *))arg2;
- (void)performAcceptSharesOperation:(CKAcceptSharesOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKAcceptSharesOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)performCodeFunctionInvokeOperation:(CKCodeFunctionInvokeOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKCodeFunctionInvokeOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)performCodeOperation:(CKCodeFunctionInvokeOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKCodeOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)performDiscoverAllUserIdentitiesOperation:(CKDiscoverUserIdentitiesOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKDiscoverAllUserIdentitiesOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)performDiscoverUserIdentitiesOperation:(CKDiscoverUserIdentitiesOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKDiscoverUserIdentitiesOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)performFetchDatabaseChangesOperation:(CKFetchDatabaseChangesOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKFetchDatabaseChangesOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)performFetchNotificationChangesOperation:(CKFetchNotificationChangesOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKFetchNotificationChangesOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)performFetchRecordChangesOperation:(CKFetchRecordZoneChangesOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKFetchRecordChangesOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)performFetchRecordZoneChangesOperation:(CKFetchRecordZoneChangesOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKFetchRecordZoneChangesOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)performFetchRecordZonesOperation:(CKFetchRecordZonesOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKFetchRecordZonesOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)performFetchRecordsOperation:(CKFetchRecordsOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKFetchRecordsOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)performFetchShareMetadataOperation:(CKFetchShareMetadataOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKFetchShareMetadataOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)performFetchShareParticipantsOperation:(CKFetchShareParticipantsOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKFetchShareParticipantsOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)performFetchSubscriptionsOperation:(CKFetchSubscriptionsOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKFetchSubscriptionsOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)performFetchWebAuthTokenOperation:(CKFetchWebAuthTokenOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKFetchWebAuthTokenOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)performMarkNotificationsReadOperation:(CKMarkNotificationsReadOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKMarkNotificationsReadOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)performModifyBadgeOperation:(CKModifyBadgeOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)performModifyRecordZonesOperation:(CKModifyRecordZonesOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKModifyRecordZonesOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)performModifyRecordsOperation:(CKModifyRecordsOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKModifyRecordsOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)performModifySubscriptionsOperation:(CKModifySubscriptionsOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKModifySubscriptionsOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)performQueryOperation:(CKQueryOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKQueryOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)requestApplicationPermission:(unsigned long long)arg1 setupInfo:(CKContainerSetupInfo *)arg2 completionHandler:(void (^)(long long, NSError *))arg3;
- (void)statusForApplicationPermission:(unsigned long long)arg1 setupInfo:(CKContainerSetupInfo *)arg2 completionHandler:(void (^)(long long, NSError *))arg3;
- (void)submitClientEventMetric:(CKEventMetricInfo *)arg1 withSetupInfo:(CKContainerSetupInfo *)arg2 completeWhenQueued:(BOOL)arg3 completionHandler:(void (^)(void))arg4;
@end

