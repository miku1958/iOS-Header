//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <CloudKit/CKRecordValue-Protocol.h>
#import <CloudKit/NSSecureCoding-Protocol.h>

@class CKRecord, CKSQLite, NSArray, NSData, NSString;
@protocol OS_dispatch_queue;

@interface CKPackage : NSObject <NSSecureCoding, CKRecordValue>
{
    struct _OpaquePCSShareProtection *_recordPCS;
    BOOL _open;
    BOOL _transaction;
    BOOL _wasCached;
    BOOL _uploaded;
    BOOL _downloaded;
    BOOL _hasSize;
    BOOL _shouldReadRawEncryptedData;
    NSString *_databaseBasePath;
    long long _state;
    NSData *_archiverInfo;
    CKSQLite *_sqlite;
    long long _packageID;
    unsigned long long _nextItemIndex;
    NSObject<OS_dispatch_queue> *_queue;
    NSString *_UUID;
    unsigned long long _size;
    long long _storageGroupingPolicy;
    long long _uploadRank;
    NSArray *_assets;
    CKRecord *_record;
    NSString *_recordKey;
}

@property (strong, nonatomic) NSString *UUID; // @synthesize UUID=_UUID;
@property (copy, nonatomic) NSData *archiverInfo; // @synthesize archiverInfo=_archiverInfo;
@property (copy, nonatomic) NSArray *assets; // @synthesize assets=_assets;
@property (strong, nonatomic) NSString *databaseBasePath; // @synthesize databaseBasePath=_databaseBasePath;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) BOOL downloaded; // @synthesize downloaded=_downloaded;
@property (nonatomic) BOOL hasSize; // @synthesize hasSize=_hasSize;
@property (readonly) unsigned long long hash;
@property (nonatomic) unsigned long long nextItemIndex; // @synthesize nextItemIndex=_nextItemIndex;
@property (nonatomic, getter=isOpen) BOOL open; // @synthesize open=_open;
@property (nonatomic) long long packageID; // @synthesize packageID=_packageID;
@property (strong, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property (weak, nonatomic) CKRecord *record; // @synthesize record=_record;
@property (copy, nonatomic) NSString *recordKey; // @synthesize recordKey=_recordKey;
@property (nonatomic) struct _OpaquePCSShareProtection *recordPCS; // @synthesize recordPCS=_recordPCS;
@property (nonatomic) BOOL shouldReadRawEncryptedData; // @synthesize shouldReadRawEncryptedData=_shouldReadRawEncryptedData;
@property (copy, nonatomic) NSData *signature;
@property (nonatomic) unsigned long long size; // @synthesize size=_size;
@property (strong, nonatomic) CKSQLite *sqlite; // @synthesize sqlite=_sqlite;
@property (nonatomic) long long state; // @synthesize state=_state;
@property (nonatomic) long long storageGroupingPolicy; // @synthesize storageGroupingPolicy=_storageGroupingPolicy;
@property (readonly) Class superclass;
@property (nonatomic, getter=inTransaction) BOOL transaction; // @synthesize transaction=_transaction;
@property (nonatomic) long long uploadRank; // @synthesize uploadRank=_uploadRank;
@property (nonatomic) BOOL uploaded; // @synthesize uploaded=_uploaded;
@property (nonatomic) BOOL wasCached; // @synthesize wasCached=_wasCached;

+ (id)_packageDatabaseDirectoryWithBasePath:(id)arg1 state:(long long)arg2;
+ (id)_packageDatabasePathWithBasePath:(id)arg1 UUID:(id)arg2 state:(long long)arg3;
+ (id)_packagesBasePathForBundleID:(id)arg1;
+ (id)clientPackageDatabaseDirectory;
+ (void)destroyClientPackageWithDatabaseBasePath:(id)arg1 UUID:(id)arg2;
+ (void)gcPackagesInDirectory:(id)arg1 dbInUseBlock:(CDUnknownBlockType)arg2;
+ (id)packageInDaemonWithBundleIdentifier:(id)arg1 error:(id *)arg2;
+ (id)packageWithError:(id *)arg1;
+ (id)packageWithPackage:(id)arg1 error:(id *)arg2;
+ (BOOL)supportsSecureCoding;
- (void).cxx_destruct;
- (id)CKPropertiesDescription;
- (id)_initWithBasePath:(id)arg1 UUID:(id)arg2;
- (id)_itemOrNilAtIndex:(unsigned long long)arg1;
- (id)_itemWithColumnsByName:(id)arg1;
- (void)_locked_beginTransaction;
- (void)_locked_endTransaction;
- (void)_locked_open;
- (BOOL)_locked_openWithError:(id *)arg1;
- (id)_packageDatabasePath;
- (id)_packageDatabasePathWithState:(long long)arg1;
- (void)addItem:(id)arg1;
- (void)addSection:(id)arg1;
- (void)beginTransaction;
- (BOOL)claimOwnershipWithError:(id *)arg1;
- (void)close;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (void)endTransaction;
- (void)handleChangeStateAction:(long long)arg1;
- (BOOL)handleChangeStateAction:(long long)arg1 error:(id *)arg2;
- (id)init;
- (id)initUnreachablePackageWithUUID:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)itemAtIndex:(unsigned long long)arg1;
- (unsigned long long)itemCount;
- (id)itemEnumerator;
- (id)itemEnumeratorForSectionAtIndex:(unsigned long long)arg1;
- (BOOL)movePackagesDatabaseInDirection:(BOOL)arg1 error:(id *)arg2;
- (void)open;
- (BOOL)openWithError:(id *)arg1;
- (BOOL)prepareDBWithError:(id *)arg1;
- (void)releaseDB;
- (void)releaseDBWithRemove:(BOOL)arg1;
- (void)removeDB;
- (id)sectionAtIndex:(unsigned long long)arg1;
- (unsigned long long)sectionCount;
- (BOOL)setArchiverInfo:(id)arg1 error:(id *)arg2;
- (id)sqliteOrRaise;
- (void)updateItemAtIndex:(long long)arg1 withFileURL:(id)arg2;
- (void)updateItemAtIndex:(long long)arg1 withSignature:(id)arg2 size:(unsigned long long)arg3 itemID:(unsigned long long)arg4 sectionIndex:(unsigned long long)arg5;
- (void)updateItemsAtIndexes:(id)arg1 fileURLs:(id)arg2;

@end

