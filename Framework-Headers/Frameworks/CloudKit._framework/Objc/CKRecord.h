//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <CloudKit/NSCopying-Protocol.h>
#import <CloudKit/NSSecureCoding-Protocol.h>

@class CKContainerID, CKEncryptedData, CKRecordID, CKReference, NSArray, NSData, NSDate, NSDictionary, NSMutableDictionary, NSMutableSet, NSSet, NSString, NSURL;

@interface CKRecord : NSObject <NSSecureCoding, NSCopying>
{
    NSMutableDictionary *_values;
    NSMutableDictionary *_originalValues;
    NSMutableSet *_changedKeysSet;
    BOOL _hasUpdatedShare;
    BOOL _hasUpdatedParent;
    BOOL _trackChanges;
    BOOL _knownToServer;
    BOOL _wasCached;
    BOOL _serializeProtectionData;
    BOOL _wantsPublicSharingKey;
    BOOL _wantsChainPCS;
    BOOL _useLightweightPCS;
    NSString *_recordType;
    CKRecordID *_recordID;
    CKRecordID *_creatorUserRecordID;
    NSDate *_creationDate;
    CKRecordID *_lastModifiedUserRecordID;
    NSDate *_modificationDate;
    CKReference *_share;
    CKReference *_parent;
    CKContainerID *_containerID;
    CKReference *_previousShare;
    CKReference *_previousParent;
    CKEncryptedData *_chainPrivateKey;
    NSData *_chainProtectionInfo;
    NSData *_chainParentPublicKeyID;
    NSArray *_tombstonedPublicKeyIDs;
    NSURL *_mutableURL;
    NSString *_modifiedByDevice;
    NSString *_etag;
    NSArray *_conflictLoserEtags;
    NSData *_protectionData;
    NSString *_previousProtectionEtag;
    NSString *_protectionEtag;
    NSString *_zoneProtectionEtag;
    NSString *_shareEtag;
    NSString *_routingKey;
    NSString *_baseToken;
    CKEncryptedData *_mutableEncryptedPublicSharingKey;
    long long _permission;
    NSDictionary *_pluginFields;
    NSString *_previousProtectionEtagFromUnitTest;
}

@property (readonly, copy, nonatomic) NSURL *URL;
@property (strong, nonatomic) NSString *baseToken; // @synthesize baseToken=_baseToken;
@property (strong, nonatomic) NSData *chainParentPublicKeyID; // @synthesize chainParentPublicKeyID=_chainParentPublicKeyID;
@property (strong, nonatomic) CKEncryptedData *chainPrivateKey; // @synthesize chainPrivateKey=_chainPrivateKey;
@property (strong, nonatomic) NSData *chainProtectionInfo; // @synthesize chainProtectionInfo=_chainProtectionInfo;
@property (strong, nonatomic) NSSet *changedKeysSet; // @synthesize changedKeysSet=_changedKeysSet;
@property (strong, nonatomic) NSArray *conflictLoserEtags; // @synthesize conflictLoserEtags=_conflictLoserEtags;
@property (copy, nonatomic) CKContainerID *containerID; // @synthesize containerID=_containerID;
@property (readonly, nonatomic) BOOL containsAssetValues;
@property (readonly, nonatomic) BOOL containsPackageValues;
@property (copy, nonatomic) NSDate *creationDate; // @synthesize creationDate=_creationDate;
@property (copy, nonatomic) CKRecordID *creatorUserRecordID; // @synthesize creatorUserRecordID=_creatorUserRecordID;
@property (readonly, nonatomic) NSData *encryptedFullTokenData;
@property (readonly, nonatomic) NSData *encryptedPublicSharingKey;
@property (strong, nonatomic) NSString *etag; // @synthesize etag=_etag;
@property (readonly, nonatomic) NSString *fullToken;
@property (readonly, nonatomic) BOOL hasEncryptedData;
@property (readonly, nonatomic) BOOL hasModifiedEncryptedData;
@property (readonly, nonatomic) BOOL hasModifiedPropertiesRequiringEncryption;
@property (readonly, nonatomic) BOOL hasPropertiesRequiringDecryption;
@property (readonly, nonatomic) BOOL hasPropertiesRequiringEncryption;
@property (nonatomic) BOOL hasUpdatedParent; // @synthesize hasUpdatedParent=_hasUpdatedParent;
@property (nonatomic) BOOL hasUpdatedShare; // @synthesize hasUpdatedShare=_hasUpdatedShare;
@property (nonatomic, getter=isKnownToServer) BOOL knownToServer; // @synthesize knownToServer=_knownToServer;
@property (copy, nonatomic) CKRecordID *lastModifiedUserRecordID; // @synthesize lastModifiedUserRecordID=_lastModifiedUserRecordID;
@property (copy, nonatomic) NSDate *modificationDate; // @synthesize modificationDate=_modificationDate;
@property (copy, nonatomic) NSString *modifiedByDevice; // @synthesize modifiedByDevice=_modifiedByDevice;
@property (strong, nonatomic) CKEncryptedData *mutableEncryptedPublicSharingKey; // @synthesize mutableEncryptedPublicSharingKey=_mutableEncryptedPublicSharingKey;
@property (copy, nonatomic) NSURL *mutableURL; // @synthesize mutableURL=_mutableURL;
@property (strong, nonatomic) NSDictionary *originalValues; // @synthesize originalValues=_originalValues;
@property (copy, nonatomic) CKReference *parent; // @synthesize parent=_parent;
@property long long permission; // @synthesize permission=_permission;
@property (copy, nonatomic) NSDictionary *pluginFields; // @synthesize pluginFields=_pluginFields;
@property (strong, nonatomic) CKReference *previousParent; // @synthesize previousParent=_previousParent;
@property (strong, nonatomic) NSString *previousProtectionEtag; // @synthesize previousProtectionEtag=_previousProtectionEtag;
@property (strong, nonatomic) NSString *previousProtectionEtagFromUnitTest; // @synthesize previousProtectionEtagFromUnitTest=_previousProtectionEtagFromUnitTest;
@property (strong, nonatomic) CKReference *previousShare; // @synthesize previousShare=_previousShare;
@property (readonly, nonatomic) NSString *privateToken;
@property (strong, nonatomic) NSData *protectionData; // @synthesize protectionData=_protectionData;
@property (strong, nonatomic) NSString *protectionEtag; // @synthesize protectionEtag=_protectionEtag;
@property (readonly, copy, nonatomic) NSString *recordChangeTag;
@property (copy, nonatomic) CKRecordID *recordID; // @synthesize recordID=_recordID;
@property (copy, nonatomic) NSString *recordType; // @synthesize recordType=_recordType;
@property (strong, nonatomic) NSString *routingKey; // @synthesize routingKey=_routingKey;
@property (nonatomic) BOOL serializeProtectionData; // @synthesize serializeProtectionData=_serializeProtectionData;
@property (copy, nonatomic) CKReference *share; // @synthesize share=_share;
@property (strong, nonatomic) NSString *shareEtag; // @synthesize shareEtag=_shareEtag;
@property (readonly, nonatomic) NSData *shortSharingTokenData;
@property (readonly, nonatomic) NSData *shortSharingTokenHashData;
@property (readonly, nonatomic) NSString *shortToken;
@property (readonly, nonatomic) unsigned long long size;
@property (strong, nonatomic) NSArray *tombstonedPublicKeyIDs; // @synthesize tombstonedPublicKeyIDs=_tombstonedPublicKeyIDs;
@property (nonatomic) BOOL trackChanges; // @synthesize trackChanges=_trackChanges;
@property (nonatomic) BOOL useLightweightPCS; // @synthesize useLightweightPCS=_useLightweightPCS;
@property (strong, nonatomic) NSDictionary *values; // @synthesize values=_values;
@property (nonatomic) BOOL wantsChainPCS; // @synthesize wantsChainPCS=_wantsChainPCS;
@property (nonatomic) BOOL wantsPublicSharingKey; // @synthesize wantsPublicSharingKey=_wantsPublicSharingKey;
@property (nonatomic) BOOL wasCached; // @synthesize wasCached=_wasCached;
@property (strong, nonatomic) NSString *zoneProtectionEtag; // @synthesize zoneProtectionEtag=_zoneProtectionEtag;

+ (BOOL)accessInstanceVariablesDirectly;
+ (id)decryptFullToken:(id)arg1 shortSharingTokenData:(id)arg2;
+ (id)encryptFullToken:(id)arg1 shortSharingTokenData:(id)arg2;
+ (id)fullTokenFromBaseToken:(id)arg1 privateToken:(id)arg2;
+ (id)recordWithDuplicatedPackagesOfRecord:(id)arg1 error:(id *)arg2;
+ (id)shareURLWithShortToken:(id)arg1 shareTitle:(id)arg2 shareType:(id)arg3 containerID:(id)arg4;
+ (BOOL)supportsSecureCoding;
- (void).cxx_destruct;
- (void)CKAssignToContainerWithID:(id)arg1;
- (id)CKDescriptionPropertiesWithPublic:(BOOL)arg1 private:(BOOL)arg2 shouldExpand:(BOOL)arg3;
- (id)_allStrings;
- (BOOL)_checkProperties:(BOOL)arg1 withValueCheckBlock:(CDUnknownBlockType)arg2;
- (id)_initSkippingValidationWithRecordType:(id)arg1 recordID:(id)arg2;
- (void)_sanitizeRecordValue:(id)arg1;
- (unsigned long long)_sizeOfRecordID:(id)arg1;
- (unsigned long long)_sizeOfRecordValue:(id)arg1 forKey:(id)arg2;
- (void)_validateRecordKey:(id)arg1;
- (void)_validateRecordName:(id)arg1;
- (void)_validateRecordValue:(id)arg1;
- (id)allKeys;
- (id)allTokens;
- (id)changedKeys;
- (void)claimPackagesWithSuccessBlock:(CDUnknownBlockType)arg1 failureBlock:(CDUnknownBlockType)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)copyWithOriginalValues;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)debugDescription;
- (id)decryptFullToken:(id)arg1;
- (id)description;
- (void)encodeSystemFieldsWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithRecordType:(id)arg1;
- (id)initWithRecordType:(id)arg1 recordID:(id)arg2;
- (id)initWithRecordType:(id)arg1 zoneID:(id)arg2;
- (id)objectForKey:(id)arg1;
- (id)objectForKeyedSubscript:(id)arg1;
- (void)releasePackages;
- (void)removePackages;
- (void)resetChangedKeys;
- (void)setNilValueForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (void)setObjectNoValidate:(id)arg1 forKey:(id)arg2;
- (void)setParentReferenceFromRecord:(id)arg1;
- (void)setParentReferenceFromRecordID:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)shortSharingToken;
- (id)valueForKey:(id)arg1;

@end

