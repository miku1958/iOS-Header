//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <CloudKit/CKDatabaseOperation.h>

#import <CloudKit/CKQueryOperationCallbacks-Protocol.h>

@class CKQuery, CKQueryCursor, CKQueryOperationInfo, CKRecordZoneID, NSArray, NSDictionary;
@protocol CKQueryOperationCallbacks;

@interface CKQueryOperation : CKDatabaseOperation <CKQueryOperationCallbacks>
{
    BOOL _shouldFetchAssetContent;
    BOOL _fetchAllResults;
    CDUnknownBlockType _recordFetchedBlock;
    CDUnknownBlockType _queryCompletionBlock;
    CDUnknownBlockType _queryCursorFetchedBlock;
    CKQuery *_query;
    CKQueryCursor *_cursor;
    CKRecordZoneID *_zoneID;
    unsigned long long _resultsLimit;
    NSArray *_desiredKeys;
    CKQueryCursor *_resultsCursor;
    NSDictionary *_assetTransferOptionsByKey;
}

@property (copy, nonatomic) NSDictionary *assetTransferOptionsByKey; // @synthesize assetTransferOptionsByKey=_assetTransferOptionsByKey;
@property (readonly, nonatomic) id<CKQueryOperationCallbacks> clientOperationCallbackProxy; // @dynamic clientOperationCallbackProxy;
@property (copy, nonatomic) CKQueryCursor *cursor; // @synthesize cursor=_cursor;
@property (copy, nonatomic) NSArray *desiredKeys; // @synthesize desiredKeys=_desiredKeys;
@property (nonatomic) BOOL fetchAllResults; // @synthesize fetchAllResults=_fetchAllResults;
@property (readonly, nonatomic) CKQueryOperationInfo *operationInfo; // @dynamic operationInfo;
@property (copy, nonatomic) CKQuery *query; // @synthesize query=_query;
@property (copy, nonatomic) CDUnknownBlockType queryCompletionBlock; // @synthesize queryCompletionBlock=_queryCompletionBlock;
@property (copy, nonatomic) CDUnknownBlockType queryCursorFetchedBlock; // @synthesize queryCursorFetchedBlock=_queryCursorFetchedBlock;
@property (copy, nonatomic) CDUnknownBlockType recordFetchedBlock; // @synthesize recordFetchedBlock=_recordFetchedBlock;
@property (copy, nonatomic) CKQueryCursor *resultsCursor; // @synthesize resultsCursor=_resultsCursor;
@property (nonatomic) unsigned long long resultsLimit; // @synthesize resultsLimit=_resultsLimit;
@property (nonatomic) BOOL shouldFetchAssetContent; // @synthesize shouldFetchAssetContent=_shouldFetchAssetContent;
@property (copy, nonatomic) CKRecordZoneID *zoneID; // @synthesize zoneID=_zoneID;

+ (void)applyDaemonCallbackInterfaceTweaks:(id)arg1;
+ (SEL)daemonCallbackCompletionSelector;
- (void).cxx_destruct;
- (BOOL)CKOperationShouldRun:(id *)arg1;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (id)activityCreate;
- (void)fillFromOperationInfo:(id)arg1;
- (void)fillOutOperationInfo:(id)arg1;
- (void)handleOperationDidCompleteWithCursor:(id)arg1 metrics:(id)arg2 error:(id)arg3;
- (void)handleQueryDidFetchCursor:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)handleQueryDidFetchRecord:(id)arg1;
- (BOOL)hasCKOperationCallbacksSet;
- (id)init;
- (id)initWithCursor:(id)arg1;
- (id)initWithQuery:(id)arg1;
- (void)performCKOperation;

@end

