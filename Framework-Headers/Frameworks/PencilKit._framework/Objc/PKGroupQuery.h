//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <PencilKit/PKQuery.h>

#import <PencilKit/CHQueryDelegate-Protocol.h>

@class CHStrokeGroupQuery, NSArray, NSObject, NSString, PKDrawing;
@protocol OS_dispatch_queue;

@interface PKGroupQuery : PKQuery <CHQueryDelegate>
{
    NSObject<OS_dispatch_queue> *_intersectionQueue;
    NSObject<OS_dispatch_queue> *_strokeGroupComputationQueue;
    NSArray *_strokeGroups;
    CHStrokeGroupQuery *_strokeGroupQuery;
    PKDrawing *_drawing;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (strong, nonatomic) PKDrawing *drawing; // @synthesize drawing=_drawing;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) CHStrokeGroupQuery *strokeGroupQuery; // @synthesize strokeGroupQuery=_strokeGroupQuery;
@property (readonly) Class superclass;

+ (id)_strokesInLine:(id)arg1 inDrawing:(id)arg2;
- (void).cxx_destruct;
- (id)_closestLineToPoint:(struct CGPoint)arg1 isTop:(BOOL)arg2;
- (long long)_firstLineIndexFromInitialStrokes:(id)arg1;
- (long long)_lastLineIndexFromInitialStrokes:(id)arg1;
- (id)_lines:(id)arg1 containingStrokes:(id)arg2;
- (void)_precalculateStrokeGroupProperties:(id)arg1;
- (BOOL)_strokes:(id)arg1 containsAnyStrokes:(id)arg2;
- (id)_strokesAtLineIndex:(long long)arg1 containingStrokes:(id)arg2;
- (id)_strokesForIdentifiers:(id)arg1 inDrawing:(id)arg2;
- (id)_strokesInLine:(id)arg1 leftOf:(BOOL)arg2 point:(struct CGPoint)arg3;
- (long long)_tokenizationLevelForSelectionType:(long long)arg1;
- (long long)contentTypeForIntersectedStrokes:(id)arg1;
- (void)dealloc;
- (id)firstStrokesInStrokes:(id)arg1 isRTL:(BOOL)arg2;
- (id)initWithRecognitionSessionManager:(id)arg1;
- (id)lastStrokesInStrokes:(id)arg1 isRTL:(BOOL)arg2;
- (void)pause;
- (void)q_fetchStrokesAmbiguouslyBelowAndAboveInsertSpaceHandleWithStrokes:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)q_fetchStrokesBetweenTopPoint:(struct CGPoint)arg1 bottomPoint:(struct CGPoint)arg2 isRTL:(BOOL)arg3 completion:(CDUnknownBlockType)arg4;
- (void)q_fetchStrokesForPoint:(struct CGPoint)arg1 selectionType:(long long)arg2 inputType:(long long)arg3 visibleOnscreenStrokes:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)queryDidUpdateResult:(id)arg1;
- (void)setStrokeGroups:(id)arg1;
- (void)start;
- (id)strokeGroups;
- (void)teardown;

@end

