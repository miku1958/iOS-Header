//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <PencilKit/PKTextInputCanvasControllerChangeObserver-Protocol.h>
#import <PencilKit/PKTextInputCanvasControllerDelegate-Protocol.h>
#import <PencilKit/PKTextInputContainerViewDelegate-Protocol.h>
#import <PencilKit/PKTextInputCursorControllerDelegate-Protocol.h>
#import <PencilKit/PKTextInputDebugStateReporting-Protocol.h>
#import <PencilKit/PKTextInputDebugViewControllerDelegate-Protocol.h>
#import <PencilKit/PKTextInputDrawingGestureRecognizerDelegate-Protocol.h>
#import <PencilKit/PKTextInputElementsControllerDelegate-Protocol.h>
#import <PencilKit/PKTextInputFeedbackControllerDelegate-Protocol.h>
#import <PencilKit/PKTextInputHandwritingControllerDelegate-Protocol.h>
#import <PencilKit/PKTextInputPaletteControllerDelegate-Protocol.h>
#import <PencilKit/PKTextInputReserveSpaceControllerDelegate-Protocol.h>
#import <PencilKit/PKTextInputTouchDetectionGestureRecognizerDelegate-Protocol.h>
#import <PencilKit/UIEditingOverlayInteractionWithView-Protocol.h>
#import <PencilKit/UIInteraction-Protocol.h>

@class NSString, PKTContainerView, PKTextInputCanvasController, PKTextInputCursorController, PKTextInputDebugLogController, PKTextInputDebugStateIntrospector, PKTextInputDebugViewController, PKTextInputDrawingGestureRecognizer, PKTextInputElementsController, PKTextInputFeedbackController, PKTextInputHandwritingController, PKTextInputKeyboardSuppressionPolicyDelegate, PKTextInputPaletteController, PKTextInputReserveSpaceController, PKTextInputSingleElementFinder, PKTextInputTouchDetectionGestureRecognizer, UIView;

@interface PKTextInputInteraction : NSObject <PKTextInputDebugStateReporting, UIEditingOverlayInteractionWithView, PKTextInputCanvasControllerDelegate, PKTextInputCanvasControllerChangeObserver, PKTextInputHandwritingControllerDelegate, PKTextInputElementsControllerDelegate, PKTextInputPaletteControllerDelegate, PKTextInputContainerViewDelegate, PKTextInputDrawingGestureRecognizerDelegate, PKTextInputFeedbackControllerDelegate, PKTextInputCursorControllerDelegate, PKTextInputReserveSpaceControllerDelegate, PKTextInputDebugViewControllerDelegate, PKTextInputTouchDetectionGestureRecognizerDelegate, UIInteraction>
{
    BOOL _shouldBeActive;
    BOOL _replayCancelled;
    BOOL __handwritingInteractionEnabled;
    UIView *_view;
    PKTContainerView *__containerView;
    PKTextInputCanvasController *__canvasController;
    PKTextInputFeedbackController *__feedbackController;
    PKTextInputPaletteController *__paletteController;
    PKTextInputTouchDetectionGestureRecognizer *__touchDetectionGestureRecognizer;
    PKTextInputElementsController *__elementsController;
    PKTextInputHandwritingController *__handwritingController;
    double __lastHandwritingEventTimestamp;
    PKTextInputDrawingGestureRecognizer *_drawingGestureRecognizer;
    PKTextInputSingleElementFinder *__drawingGestureElementFinder;
    PKTextInputKeyboardSuppressionPolicyDelegate *__keyboardSuppressionPolicyDelegate;
    PKTextInputDebugLogController *__debugLogController;
    unsigned long long __debugControllerAnchorCorner;
    PKTextInputDebugViewController *__debugViewController;
    PKTextInputDebugStateIntrospector *__debugStateIntrospector;
    PKTextInputCursorController *__cursorController;
    PKTextInputReserveSpaceController *__reserveSpaceController;
    struct CGRect _editingOverlayContainerSceneBounds;
}

@property (readonly, nonatomic) PKTextInputCanvasController *_canvasController; // @synthesize _canvasController=__canvasController;
@property (strong, nonatomic) PKTContainerView *_containerView; // @synthesize _containerView=__containerView;
@property (strong, nonatomic) PKTextInputCursorController *_cursorController; // @synthesize _cursorController=__cursorController;
@property (nonatomic, setter=_setDebugControllerAnchorCorner:) unsigned long long _debugControllerAnchorCorner; // @synthesize _debugControllerAnchorCorner=__debugControllerAnchorCorner;
@property (strong, nonatomic) PKTextInputDebugLogController *_debugLogController; // @synthesize _debugLogController=__debugLogController;
@property (strong, nonatomic) PKTextInputDebugStateIntrospector *_debugStateIntrospector; // @synthesize _debugStateIntrospector=__debugStateIntrospector;
@property (strong, nonatomic) PKTextInputDebugViewController *_debugViewController; // @synthesize _debugViewController=__debugViewController;
@property (strong, nonatomic) PKTextInputSingleElementFinder *_drawingGestureElementFinder; // @synthesize _drawingGestureElementFinder=__drawingGestureElementFinder;
@property (strong, nonatomic) PKTextInputElementsController *_elementsController; // @synthesize _elementsController=__elementsController;
@property (strong, nonatomic) PKTextInputFeedbackController *_feedbackController; // @synthesize _feedbackController=__feedbackController;
@property (strong, nonatomic) PKTextInputHandwritingController *_handwritingController; // @synthesize _handwritingController=__handwritingController;
@property (nonatomic, setter=_setHandwritingInteractionEnabled:) BOOL _handwritingInteractionEnabled; // @synthesize _handwritingInteractionEnabled=__handwritingInteractionEnabled;
@property (strong, nonatomic) PKTextInputKeyboardSuppressionPolicyDelegate *_keyboardSuppressionPolicyDelegate; // @synthesize _keyboardSuppressionPolicyDelegate=__keyboardSuppressionPolicyDelegate;
@property (nonatomic, setter=_setLastHandwritingEventTimestamp:) double _lastHandwritingEventTimestamp; // @synthesize _lastHandwritingEventTimestamp=__lastHandwritingEventTimestamp;
@property (strong, nonatomic) PKTextInputPaletteController *_paletteController; // @synthesize _paletteController=__paletteController;
@property (strong, nonatomic) PKTextInputReserveSpaceController *_reserveSpaceController; // @synthesize _reserveSpaceController=__reserveSpaceController;
@property (strong, nonatomic) PKTextInputTouchDetectionGestureRecognizer *_touchDetectionGestureRecognizer; // @synthesize _touchDetectionGestureRecognizer=__touchDetectionGestureRecognizer;
@property (readonly, nonatomic) PKTextInputCanvasController *canvasController;
@property (readonly, nonatomic) PKTextInputCursorController *cursorController;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) PKTextInputDebugLogController *debugLogController;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) PKTextInputDrawingGestureRecognizer *drawingGestureRecognizer;
@property (strong, nonatomic) PKTextInputDrawingGestureRecognizer *drawingGestureRecognizer; // @synthesize drawingGestureRecognizer=_drawingGestureRecognizer;
@property (nonatomic) struct CGRect editingOverlayContainerSceneBounds; // @synthesize editingOverlayContainerSceneBounds=_editingOverlayContainerSceneBounds;
@property (readonly, nonatomic) PKTextInputElementsController *elementsController;
@property (readonly, nonatomic) PKTextInputHandwritingController *handwritingController;
@property (readonly) unsigned long long hash;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) PKTextInputReserveSpaceController *reserveSpaceController;
@property (readonly) Class superclass;
@property (readonly) Class superclass;
@property (weak, nonatomic) UIView *view; // @synthesize view=_view;

+ (id)interactionForScene:(id)arg1;
- (void).cxx_destruct;
- (BOOL)_beginGestureIfPossible:(id)arg1;
- (void)_drawingGestureElementFinderDidFinish;
- (BOOL)_handleDrawingGestureTapInElement:(id)arg1 gesture:(id)arg2 touch:(id)arg3;
- (void)_handlePotentialDebugOverlayGestureAtPoint:(struct CGPoint)arg1;
- (BOOL)_isTapAwayFromCurrentStrokesAtCanvasViewLocation:(struct CGPoint)arg1;
- (void)_notifyTargetElementOfTouches:(id)arg1 event:(id)arg2;
- (BOOL)_shouldAvoidStartingDrawingOnView:(id)arg1 location:(struct CGPoint)arg2;
- (id)_topLevelHitViewForContainerViewPosition:(struct CGPoint)arg1;
- (void)_updateCanvasController;
- (void)_updateCanvasStrokeColor;
- (void)_updateContainerView;
- (void)_updateDebugController;
- (void)_updateElementsController;
- (void)_updateGestureRecognizers;
- (void)_updateHandwritingController;
- (void)_updateInteractionEnabled;
- (void)_updateKeyboardSuppressionPolicy;
- (void)_updatePaletteController;
- (void)cancelReplay;
- (void)canvasController:(id)arg1 drawingDidChange:(id)arg2;
- (void)canvasControllerCanvasDidFinishAnimatingStrokes:(id)arg1;
- (id)canvasControllerContainerView:(id)arg1;
- (void)canvasControllerDidBeginDrawing:(id)arg1;
- (void)canvasControllerDidCancelStroke:(id)arg1 strokeAcceptanceState:(long long)arg2;
- (void)canvasControllerDidEndDrawing:(id)arg1;
- (id)canvasControllerDrawingGestureRecognizer:(id)arg1;
- (void)canvasControllerEndedStroke:(id)arg1;
- (void)canvasControllerHasVisibleStrokesChanged:(id)arg1;
- (void)canvasControllerInProgressStrokeDidChange:(id)arg1;
- (id)canvasControllerPreferredStrokeColor:(id)arg1 animated:(BOOL *)arg2;
- (id)containerView:(id)arg1 hitTest:(struct CGPoint)arg2 withEvent:(id)arg3;
- (BOOL)cursorControllerCustomHighlightFeedbackIsVisible:(id)arg1;
- (long long)cursorControllerWritingState:(id)arg1;
- (void)dealloc;
- (void)debugViewControllerNeedsDismiss:(id)arg1;
- (void)didMoveToView:(id)arg1;
- (BOOL)drawingGestureRecognizer:(id)arg1 shouldBeginDrawingWithTouches:(id)arg2 event:(id)arg3;
- (BOOL)drawingGestureRecognizer:(id)arg1 shouldFinishGestureWithTouch:(id)arg2;
- (void)drawingGestureRecognizerDrawingTargetIsDrawingDidChange:(id)arg1;
- (BOOL)drawingGestureRecognizerLongPressShouldBegin:(id)arg1;
- (void)drawingGestureRecognizerLongPressStateDidChange:(id)arg1;
- (BOOL)drawingGestureRecognizerRequiresPastTapToBegin:(id)arg1;
- (BOOL)drawingGestureRecognizerRequiresTargetElementToBegin:(id)arg1;
- (void)drawingGestureStrokeAcceptanceStateDidChange:(id)arg1;
- (void)editingOverlayContainerDidChangeToSceneBounds:(struct CGRect)arg1;
- (void)elementsControllerLastDiscoveredElementsDidChange:(id)arg1;
- (id)feedbackControllerContainerView:(id)arg1;
- (void)feedbackControllerShowingCustomFeedbackDidChange:(id)arg1;
- (BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)handwritingControllerDidFinishActiveCommands:(id)arg1;
- (void)handwritingControllerStrokeAlphaOverrideDidChange:(id)arg1;
- (void)handwritingControllerWritingStateDidChange:(id)arg1;
- (id)init;
- (id)paletteControllerContainerView:(id)arg1;
- (id)paletteControllerDebugSharpenerLog:(id)arg1;
- (void)reportDebugStateDescription:(CDUnknownBlockType)arg1;
- (void)reserveSpaceController:(id)arg1 willFocusElement:(id)arg2;
- (void)reserveSpaceControllerIsActiveChanged:(id)arg1;
- (void)reserveSpaceControllerIsPlaceholderVisibleChanged:(id)arg1;
- (void)saveInteractionForScene:(id)arg1;
- (void)simulateReserveSpaceForTextInputView:(id)arg1 location:(struct CGPoint)arg2 completion:(CDUnknownBlockType)arg3;
- (id)supportedElementDelegateForHandwritingController:(id)arg1;
- (void)textInputPaletteControllerFloatingKeyboardWillHide:(id)arg1;
- (void)textInputPaletteControllerFloatingKeyboardWillShow:(id)arg1;
- (void)touchesDetected;
- (void)willMoveToView:(id)arg1;
- (id)windowSceneForController:(id)arg1;

@end

