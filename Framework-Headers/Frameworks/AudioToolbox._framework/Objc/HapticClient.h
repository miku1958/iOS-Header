//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/NSObject.h>

#import <AudioToolbox/NSXPCListenerDelegate-Protocol.h>

@class NSArray, NSString, NSXPCConnection;
@protocol ServerInterface;

__attribute__((visibility("hidden")))
@interface HapticClient : NSObject <NSXPCListenerDelegate>
{
    NSXPCConnection *_connection;
    struct unique_ptr<ClientSyncCaller, std::__1::default_delete<ClientSyncCaller>> _syncCaller;
    struct HapticSharedMemory _sharedBuffer;
    unsigned long long _uniqueID;
    BOOL _prewarmed;
    BOOL _running;
    BOOL _connected;
    int _serverProcessID;
    id<ServerInterface> _serverDelegate;
    unsigned long long _clientID;
    NSArray *_channelKeys;
}

@property (readonly) NSArray *channelKeys; // @synthesize channelKeys=_channelKeys;
@property (readonly) unsigned long long clientID; // @synthesize clientID=_clientID;
@property BOOL connected; // @synthesize connected=_connected;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) BOOL prewarmed; // @synthesize prewarmed=_prewarmed;
@property (readonly) BOOL running; // @synthesize running=_running;
@property (strong) id<ServerInterface> serverDelegate; // @synthesize serverDelegate=_serverDelegate;
@property int serverProcessID; // @synthesize serverProcessID=_serverProcessID;
@property (readonly) Class superclass;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)allocateResources:(CDUnknownBlockType)arg1;
- (BOOL)clearEventsFromTime:(double)arg1 channel:(unsigned long long)arg2;
- (void)dealloc;
- (void)destroySharedMemory;
- (BOOL)detachHapticSequence:(unsigned long long)arg1 atTime:(double)arg2;
- (void)disconnect;
- (void)doInit;
- (BOOL)enableSequenceLooping:(unsigned long long)arg1 enable:(BOOL)arg2 error:(id *)arg3;
- (BOOL)finish:(CDUnknownBlockType)arg1;
- (void)handleConnectionError;
- (void)handleHapticServerCrash;
- (id)initAndReturnError:(id *)arg1;
- (BOOL)loadHapticPreset:(id)arg1 error:(id *)arg2;
- (BOOL)loadHapticSequence:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (BOOL)prepareHapticSequence:(unsigned long long)arg1 error:(id *)arg2;
- (void)prewarm:(CDUnknownBlockType)arg1;
- (void)releaseResources;
- (BOOL)sendEvents:(id)arg1 atTime:(double)arg2 channel:(unsigned long long)arg3 error:(id *)arg4;
- (BOOL)setChannelEventBehavior:(unsigned long long)arg1 channel:(unsigned long long)arg2;
- (void)setChannelKeys:(id)arg1;
- (BOOL)setNumberOfChannels:(unsigned long long)arg1 error:(id *)arg2;
- (BOOL)setParameter:(unsigned long long)arg1 atTime:(double)arg2 value:(float)arg3 channel:(unsigned long long)arg4;
- (BOOL)setupConnectionAndReturnError:(id *)arg1;
- (int)setupSharedMemory:(id)arg1 size:(unsigned int)arg2;
- (BOOL)startEventAndReturnToken:(unsigned long long)arg1 type:(unsigned long long)arg2 atTime:(double)arg3 channel:(unsigned long long)arg4 eventToken:(unsigned long long *)arg5;
- (BOOL)startHapticSequence:(unsigned long long)arg1 atTime:(double)arg2 withOffset:(double)arg3;
- (void)startRunning:(CDUnknownBlockType)arg1;
- (BOOL)stopEventWithToken:(unsigned long long)arg1 atTime:(double)arg2 channel:(unsigned long long)arg3;
- (BOOL)stopHapticSequence:(unsigned long long)arg1 atTime:(double)arg2;
- (void)stopPrewarm;
- (void)stopRunning;

@end

