//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import <SafariServices/SFBrowserViewDelegate-Protocol.h>
#import <SafariServices/SFReaderEnabledWebViewControllerDelegate-Protocol.h>
#import <SafariServices/UIGestureRecognizerDelegate-Protocol.h>
#import <SafariServices/UIScrollViewDelegate-Protocol.h>
#import <SafariServices/WBSDigitalHealthManagerDelegate-Protocol.h>
#import <SafariServices/WBSFluidProgressControllerWindowDelegate-Protocol.h>
#import <SafariServices/WBSFluidProgressStateSource-Protocol.h>
#import <SafariServices/_SFActivityItemCustomizationDelegate-Protocol.h>
#import <SafariServices/_SFActivityViewControllerDelegate-Protocol.h>
#import <SafariServices/_SFAdaptivePreviewViewControllerDelegate-Protocol.h>
#import <SafariServices/_SFAppleConnectExtensionUIDelegate-Protocol.h>
#import <SafariServices/_SFBarManagerDelegate-Protocol.h>
#import <SafariServices/_SFBrowserContentController-Protocol.h>
#import <SafariServices/_SFBrowserDocument-Protocol.h>
#import <SafariServices/_SFBrowserKeyCommandSafariViewControllerMethods-Protocol.h>
#import <SafariServices/_SFDownloadDelegate-Protocol.h>
#import <SafariServices/_SFDynamicBarAnimatorDelegate-Protocol.h>
#import <SafariServices/_SFFindOnPageViewDelegate-Protocol.h>
#import <SafariServices/_SFMailContentProviderDataSource-Protocol.h>
#import <SafariServices/_SFNavigationBarDelegate-Protocol.h>
#import <SafariServices/_SFPageLoadErrorControllerDelegate-Protocol.h>
#import <SafariServices/_SFPrintControllerDelegate-Protocol.h>
#import <SafariServices/_SFQuickLookDocumentSource-Protocol.h>
#import <SafariServices/_SFSaveToFilesOperationDelegate-Protocol.h>
#import <SafariServices/_SFSingleBookmarkNavigationControllerDelegate-Protocol.h>

@class NSArray, NSError, NSString, NSTimer, NSURL, SFBrowserPersonaAnalyticsHelper, SFReaderEnabledWebViewController, SFReaderViewController, SFSafariViewControllerConfiguration, UIColor, UIPanGestureRecognizer, UITapGestureRecognizer, WBSDigitalHealthManager, WBSFluidProgressController, WBSFluidProgressState, WBSURLSpoofingMitigator, WKBackForwardListItem, WKPreferences, WKWebView, _SFActivityViewController, _SFAppleConnectExtensionPageController, _SFBarManager, _SFBrowserToolbar, _SFBrowserView, _SFCalendarEventDetector, _SFDigitalHealthViewController, _SFDownload, _SFDynamicBarAnimator, _SFFindOnPageView, _SFFluidProgressView, _SFMailContentProvider, _SFNavigationBar, _SFNavigationBarItem, _SFNavigationUtilitiesManager, _SFPageFormatMenuController, _SFPageLoadErrorController, _SFPageZoomPreferenceManager, _SFPerSitePreferencesVendor, _SFPrintController, _SFQuickLookDocument, _SFQuickLookDocumentController, _SFQuickLookDocumentWriter, _SFReloadOptionsController, _SFSafariSharingExtensionController, _SFSaveToFilesOperation, _SFSecIdentityPreferencesController, _SFTelephonyNavigationMitigationPolicy, _WKActivatedElementInfo, _WKUserInitiatedAction;
@protocol SFReaderContext, _SFBrowserDocument;

@interface _SFBrowserContentViewController : UIViewController <SFBrowserViewDelegate, SFReaderEnabledWebViewControllerDelegate, _SFAdaptivePreviewViewControllerDelegate, _SFAppleConnectExtensionUIDelegate, _SFBarManagerDelegate, _SFDownloadDelegate, _SFDynamicBarAnimatorDelegate, _SFFindOnPageViewDelegate, _SFMailContentProviderDataSource, _SFNavigationBarDelegate, _SFPageLoadErrorControllerDelegate, _SFPrintControllerDelegate, _SFSingleBookmarkNavigationControllerDelegate, UIGestureRecognizerDelegate, UIScrollViewDelegate, WBSFluidProgressControllerWindowDelegate, WBSFluidProgressStateSource, WBSDigitalHealthManagerDelegate, _SFActivityItemCustomizationDelegate, _SFActivityViewControllerDelegate, _SFSaveToFilesOperationDelegate, _SFQuickLookDocumentSource, _SFBrowserKeyCommandSafariViewControllerMethods, _SFBrowserContentController, _SFBrowserDocument>
{
    _SFBrowserView *_browserView;
    SFReaderViewController *_readerViewController;
    BOOL _showingReader;
    WKBackForwardListItem *_lastBackFowardListItemOnWhichReaderWasActivated;
    unsigned long long _lastReaderDeactivationMode;
    _SFNavigationBar *_navigationBar;
    _SFBrowserToolbar *_bottomToolbar;
    _SFMailContentProvider *_cachedMailContentProvider;
    _WKUserInitiatedAction *_lastUserInitiatedAction;
    BOOL _canOpenDownloadForInitialLoad;
    unsigned long long _externalAppRedirectState;
    _SFBarManager *_barManager;
    _SFDynamicBarAnimator *_dynamicBarAnimator;
    BOOL _scrollViewIsDragging;
    _SFNavigationBarItem *_navigationBarItem;
    WBSURLSpoofingMitigator *_URLSpoofingMitigator;
    WBSFluidProgressState *_fluidProgressState;
    WBSFluidProgressController *_fluidProgressController;
    _SFFluidProgressView *_cachedFluidProgressView;
    UITapGestureRecognizer *_showBarsFromBottomBarRecognizer;
    BOOL _pageScrollsWithBottomBar;
    BOOL _interfaceFillsScreen;
    BOOL _usesNarrowLayout;
    _SFPageLoadErrorController *_pageLoadErrorController;
    _SFCalendarEventDetector *_calendarEventDetector;
    _SFDownload *_activeDownload;
    BOOL _showingCrashBanner;
    double _crashBannerDraggingOffset;
    BOOL _shouldDismissReaderInReponseToSameDocumentNavigation;
    BOOL _EVOrganizationNameIsValid;
    NSString *_EVOrganizationName;
    BOOL _isShowingHTTPAuthenticationDialog;
    BOOL _isSuppressingPreviewProgressAnimation;
    _SFSafariSharingExtensionController *_sharingExtensionController;
    BOOL _didReceivePolicyForInitialLoad;
    long long _customPreferredStatusBarStyle;
    BOOL _isDisplayingTelephonyPrompt;
    _SFTelephonyNavigationMitigationPolicy *_telephonyNavigationPolicy;
    _SFPrintController *_printController;
    _SFSecIdentityPreferencesController *_secIdentityPreferencesController;
    _SFPerSitePreferencesVendor *_perSitePreferencesVendor;
    BOOL _wasLoadedWithContentBlockersEnabled;
    NSURL *_urlToReloadForcingContentBlockers;
    BOOL _enableContentBlockersWhenReloading;
    SFReaderEnabledWebViewController *_ownerWebViewController;
    struct UIEdgeInsets _verticalScrollIndicatorBaseInsets;
    struct UIEdgeInsets _horizontalScrollIndicatorBaseInsets;
    _SFAppleConnectExtensionPageController *_appleConnectPageController;
    BOOL _autoHidingHomeIndicatorPermitted;
    BOOL _prefersHomeIndicatorAutoHidden;
    BOOL _shouldAutoHideHomeIndicator;
    NSURL *_originalRequestURL;
    _SFQuickLookDocument *_quickLookDocument;
    _SFQuickLookDocumentController *_quickLookDocumentController;
    _SFQuickLookDocumentWriter *_quickLookDocumentWriter;
    _SFDownload *_downloadToShowInQuickLook;
    BOOL _quickLookDocumentCheckCompleted;
    NSTimer *_updateContinuityTimer;
    unsigned long long _cachedMediaCaptureDeviceIcon;
    _SFSaveToFilesOperation *_saveToFilesOperation;
    _SFPageFormatMenuController *_pageFormatMenuController;
    BOOL _keepBarsMinimized;
    UIPanGestureRecognizer *_hideNavigationBarGestureRecognizer;
    NSError *_lastLoadErrorForFormatMenu;
    _SFActivityViewController *_activityViewController;
    BOOL _loadWasUserDriven;
    BOOL _webViewIsInFullScreen;
    CDUnknownBlockType _pendingNavigationActionDueToExternalSchemePromptHandler;
    WBSDigitalHealthManager *_cachedDigitalHealthManager;
    _SFDigitalHealthViewController *_digitalHealthViewController;
    BOOL _remoteSwipeGestureEnabled;
    BOOL _webViewLayoutUnderlapsStatusBar;
    BOOL _didNotifyInitialLoadFinish;
    BOOL _viewDidAppearInHostApp;
    long long _displayMode;
    _SFReloadOptionsController *_reloadOptionsController;
    _SFFindOnPageView *_findOnPageView;
    SFReaderEnabledWebViewController *_webViewController;
    WKPreferences *_wkPreferences;
    NSArray *_linkActions;
    _WKActivatedElementInfo *_activatedElementInfo;
    UIColor *_preferredBarTintColor;
    UIColor *_preferredControlTintColor;
    long long _hostAppModalPresentationStyle;
    long long _dismissButtonStyle;
    SFSafariViewControllerConfiguration *_configuration;
    NSString *_bundleIdentifierForProfileInstallation;
    unsigned long long __persona;
    SFBrowserPersonaAnalyticsHelper *__analyticsHelper;
    long long _safariDataSharingMode;
    _SFNavigationUtilitiesManager *__navigationUtilitiesManager;
}

@property (readonly, nonatomic) NSURL *URLForPerSitePreferences;
@property (readonly, nonatomic) SFBrowserPersonaAnalyticsHelper *_analyticsHelper; // @synthesize _analyticsHelper=__analyticsHelper;
@property (readonly, nonatomic) NSString *_hostAppBundleId;
@property (readonly, nonatomic) BOOL _isUsedForAuthentication;
@property (strong, nonatomic) _SFNavigationUtilitiesManager *_navigationUtilitiesManager; // @synthesize _navigationUtilitiesManager=__navigationUtilitiesManager;
@property (readonly, nonatomic) unsigned long long _persona; // @synthesize _persona=__persona;
@property (readonly, nonatomic) BOOL _shouldReloadImmediatelyAfterPageLoadError;
@property (readonly, nonatomic) BOOL _usesScrollToTopView;
@property (strong, nonatomic) _WKActivatedElementInfo *activatedElementInfo; // @synthesize activatedElementInfo=_activatedElementInfo;
@property (readonly, nonatomic) id<_SFBrowserDocument> activeDocument;
@property (readonly, nonatomic) NSString *bundleIdentifierForProfileInstallation; // @synthesize bundleIdentifierForProfileInstallation=_bundleIdentifierForProfileInstallation;
@property (readonly, nonatomic) BOOL canHideToolbar;
@property (readonly, nonatomic) BOOL canPrint;
@property (copy, nonatomic) SFSafariViewControllerConfiguration *configuration; // @synthesize configuration=_configuration;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) BOOL didNotifyInitialLoadFinish; // @synthesize didNotifyInitialLoadFinish=_didNotifyInitialLoadFinish;
@property (nonatomic) long long dismissButtonStyle; // @synthesize dismissButtonStyle=_dismissButtonStyle;
@property (nonatomic) long long displayMode; // @synthesize displayMode=_displayMode;
@property (strong, nonatomic) _SFFindOnPageView *findOnPageView; // @synthesize findOnPageView=_findOnPageView;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long hostAppModalPresentationStyle; // @synthesize hostAppModalPresentationStyle=_hostAppModalPresentationStyle;
@property (readonly, nonatomic) BOOL isShowingErrorPage;
@property (nonatomic) BOOL keepBarsMinimized;
@property (copy, nonatomic) NSArray *linkActions; // @synthesize linkActions=_linkActions;
@property (nonatomic) unsigned long long mediaCaptureDeviceIcon;
@property (readonly, nonatomic) _SFPageZoomPreferenceManager *pageZoomManager;
@property (readonly, nonatomic) _SFPerSitePreferencesVendor *perSitePreferencesVendor;
@property (strong, nonatomic) UIColor *preferredBarTintColor; // @synthesize preferredBarTintColor=_preferredBarTintColor;
@property (strong, nonatomic) UIColor *preferredControlTintColor; // @synthesize preferredControlTintColor=_preferredControlTintColor;
@property (readonly, nonatomic) id<SFReaderContext> readerContext;
@property (strong, nonatomic) _SFReloadOptionsController *reloadOptionsController; // @synthesize reloadOptionsController=_reloadOptionsController;
@property (nonatomic) BOOL remoteSwipeGestureEnabled; // @synthesize remoteSwipeGestureEnabled=_remoteSwipeGestureEnabled;
@property (readonly, nonatomic) SFReaderEnabledWebViewController *rootWebViewController;
@property (nonatomic) long long safariDataSharingMode; // @synthesize safariDataSharingMode=_safariDataSharingMode;
@property (readonly, nonatomic, getter=isShowingReader) BOOL showingReader;
@property (readonly) Class superclass;
@property (nonatomic) BOOL viewDidAppearInHostApp; // @synthesize viewDidAppearInHostApp=_viewDidAppearInHostApp;
@property (readonly, nonatomic) BOOL wasLoadedWithContentBlockersEnabled;
@property (readonly, nonatomic) WKWebView *webView;
@property (strong, nonatomic) SFReaderEnabledWebViewController *webViewController; // @synthesize webViewController=_webViewController;
@property (nonatomic) BOOL webViewLayoutUnderlapsStatusBar; // @synthesize webViewLayoutUnderlapsStatusBar=_webViewLayoutUnderlapsStatusBar;
@property (readonly, nonatomic) WKPreferences *wkPreferences; // @synthesize wkPreferences=_wkPreferences;

+ (void)createDefaultWebsiteDataStore;
- (void).cxx_destruct;
- (id)_EVOrganizationName;
- (id)_applicationPayloadForOpeningInSafari;
- (BOOL)_canScrollToTopInView:(id)arg1;
- (BOOL)_canShowDownloadWithoutPrompting:(id)arg1;
- (BOOL)_canShowPageFormatMenu;
- (void)_cancelPendingUpdateUserActivityTimer;
- (void)_cleanUpAfterRedirectToExternalApp;
- (void)_commitPreviewViewController:(id)arg1;
- (id)_committedDomainForPreferences;
- (void)_completeRedirectToExternalNavigationResult:(id)arg1 fromOriginalRequest:(id)arg2 userCancelled:(BOOL)arg3;
- (double)_crashBannerDraggingOffsetForContentOffset:(struct CGPoint)arg1;
- (id)_currentWebView;
- (void)_decreasePageZoomSetting;
- (void)_didLoadWebView;
- (void)_didReceiveAllQueuedMessages;
- (void)_didResolveDestinationURL:(id)arg1 pendingAppLinkCheck:(BOOL)arg2;
- (id)_digitalHealthManager;
- (void)_dismiss;
- (BOOL)_dismissTransientUIAnimated:(BOOL)arg1;
- (BOOL)_effectiveBarCollapsingEnabled;
- (struct UIEdgeInsets)_effectiveWebViewSafeAreaInsets;
- (void)_emailCurrentPageWithPreferredContentType:(long long)arg1;
- (void)_fetchActivityViewControllerInfoForURL:(id)arg1 title:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_fetchSharingURLWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_getSafariDataSharingModeWithCompletion:(CDUnknownBlockType)arg1;
- (void)_goBack;
- (void)_goBackToOwnerWebView;
- (void)_goForward;
- (void)_hideCrashBanner;
- (void)_hideDigitalHealthOverlay;
- (void)_hideNavigationBarGestureRecognized:(id)arg1;
- (void)_hideQuickLookDocumentView;
- (void)_hideReaderAnimated:(BOOL)arg1 deactivationMode:(unsigned long long)arg2;
- (void)_increasePageZoomSetting;
- (void)_initialLoadFinishedWithSuccess:(BOOL)arg1;
- (void)_invalidateEVOrganizationName;
- (void)_invalidateUserActivity;
- (BOOL)_isPreviewing;
- (BOOL)_isSecure;
- (BOOL)_isSplitScreen;
- (id)_itemProviderCollectionForSharingURL:(id)arg1 title:(id)arg2;
- (id)_linkPreviewActionsWithDefaultActions:(id)arg1;
- (id)_mailContentProvider;
- (double)_maximumHeightObscuredByBottomBar;
- (BOOL)_notifyInitialLoadDidFinish:(BOOL)arg1;
- (double)_offsetForDynamicBarAnimator;
- (void)_openCurrentURLInSafari;
- (id)_openNewWebViewIfNeededWithConfiguration:(id)arg1 forNavigationAction:(id)arg2;
- (void)_perSiteAutomaticReaderActivationPreferenceDidChange:(id)arg1;
- (void)_perSitePageZoomPreferenceDidChange:(id)arg1;
- (void)_presentActivityViewController;
- (void)_presentSaveWebpageViewController;
- (id)_previewViewControllerForURL:(id)arg1 defaultActions:(id)arg2 elementInfo:(id)arg3;
- (void)_queueAlertForRedirectToExternalNavigationResult:(id)arg1 fromOriginalRequest:(id)arg2 isMainFrame:(BOOL)arg3 promptPolicy:(long long)arg4 userAction:(id)arg5;
- (id)_quickLookDocumentForDownload:(id)arg1;
- (BOOL)_readerViewControllerNeedsSetUp;
- (void)_recordHostAppIdAndURLForTapToRadar:(id)arg1;
- (void)_redirectToExternalNavigationResult:(id)arg1 fromOriginalRequest:(id)arg2 promptPolicy:(long long)arg3 isMainFrame:(BOOL)arg4 userAction:(id)arg5;
- (BOOL)_redirectToHostAppWithExpectedCallbackSchemeIfPossible:(id)arg1;
- (BOOL)_redirectToHostAppWithNavigationResult:(id)arg1 options:(id)arg2;
- (void)_reloadFromOrigin:(BOOL)arg1;
- (void)_resetPageZoomSetting;
- (BOOL)_safeAreaShouldAffectWebViewObscuredInsets;
- (void)_scrollToTopFromScrollToTopView;
- (void)_setShowingCrashBanner:(BOOL)arg1 animated:(BOOL)arg2;
- (void)_setShowingReader:(BOOL)arg1 deactivationMode:(unsigned long long)arg2 animated:(BOOL)arg3;
- (void)_setSuppressingPreviewProgressAnimation:(BOOL)arg1;
- (void)_setUpAppleConnectPageControllerIfNeeded;
- (void)_setUpCalendarEventDetectorIfNeeded;
- (void)_setUpFindOnPageViewIfNeeded;
- (void)_setUpReaderViewController;
- (void)_setUpReloadOptionsControllerIfNeeded;
- (void)_setUpToolbar;
- (void)_setUpTopBarAndBottomBar;
- (void)_setUpWebViewControllerIfNeeded;
- (void)_setWebView:(id)arg1;
- (BOOL)_shouldAllowAutomaticReader;
- (BOOL)_shouldGoBackToOwnerWebView;
- (void)_showBars;
- (void)_showBarsFromBottomBarTap:(id)arg1;
- (void)_showDigitalHealthOverlay;
- (void)_showDownload:(id)arg1;
- (void)_showGenericDownloadAlert;
- (BOOL)_showICSControllerForPath:(id)arg1 sourceURL:(id)arg2;
- (void)_showPassBookControllerForPass:(id)arg1;
- (void)_showPerSiteSettingsPopoverViewController;
- (void)_showQuickLookDocumentView;
- (void)_showReaderAnimated:(BOOL)arg1;
- (void)_updateBarItems;
- (void)_updateBarTheme;
- (void)_updateCrashBannerOffset;
- (void)_updateCurrentScrollViewInsets;
- (void)_updateDigitalHealthTracking;
- (void)_updateDynamicBarGeometry;
- (void)_updateHomeIndicatorAutoHideState;
- (void)_updateInterfaceFillsScreen;
- (void)_updateNavigationBar;
- (void)_updatePageZoomWithPreference;
- (void)_updatePreviewLoadingUI;
- (void)_updateRemoteSwipeGestureState;
- (void)_updateScrollIndicatorVerticalInsets:(struct UIEdgeInsets)arg1 horizontalInsets:(struct UIEdgeInsets)arg2;
- (void)_updateScrollToTopView;
- (void)_updateStatusBarStyleForced:(BOOL)arg1;
- (void)_updateTrackerProtectionPreferences;
- (void)_updateUI;
- (void)_updateUserActivity;
- (void)_updateUserActivitySoon;
- (void)_updateUserActivityTimerFired;
- (void)_updateUsesNarrowLayout;
- (void)_updateWebKitExperimentalFeatures;
- (void)_updateWebViewLayoutSize;
- (void)_updateWebViewShrinkToFit;
- (void)_viewDidTransitionToSize:(struct CGSize)arg1;
- (void)_viewWillTransitionToSize:(struct CGSize)arg1;
- (void)activityViewController:(id)arg1 prepareActivity:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)adaptivePreviewViewControlerWillDisableLinkPreview:(id)arg1;
- (id)adaptivePreviewViewController:(id)arg1 requestLinkPreviewViewControllerWithURL:(id)arg2;
- (void)addBookmarkNavController:(id)arg1 didFinishWithResult:(BOOL)arg2 bookmark:(id)arg3;
- (BOOL)addBookmarkNavControllerCanSaveBookmarkChanges:(id)arg1;
- (void)appleConnectExtensionPageController:(id)arg1 dismissViewController:(id)arg2;
- (void)appleConnectExtensionPageController:(id)arg1 presentViewController:(id)arg2;
- (void)barManager:(id)arg1 didReceiveTapForBarItem:(long long)arg2;
- (BOOL)becomeFirstResponder;
- (unsigned long long)browserPersonaForActivityViewController:(id)arg1;
- (unsigned long long)browserPersonaForWebViewController:(id)arg1;
- (BOOL)canBecomeFirstResponder;
- (BOOL)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (void)cancelKeyPressed;
- (void)clearFluidProgressState;
- (void)compressedNavigationBarWasTapped:(id)arg1;
- (BOOL)createFluidProgressState;
- (void)createReaderWebViewForWebViewController:(id)arg1;
- (id)currentFluidProgressStateSource;
- (void)customizationControllerCustomizationsDidChange:(id)arg1;
- (id)dataForQuickLookDocument:(id)arg1;
- (void)dealloc;
- (void)decreaseSize:(id)arg1;
- (void)didMoveToParentViewController:(id)arg1;
- (void)didUpdateNavigationBarItem:(id)arg1;
- (void)dismissSFSafariViewControllerKeyPressed;
- (void)downloadDidFail:(id)arg1;
- (void)downloadDidFinish:(id)arg1;
- (void)downloadDidReceiveResponse:(id)arg1;
- (void)downloadDidStart:(id)arg1;
- (BOOL)dynamicBarAnimator:(id)arg1 canTransitionToState:(long long)arg2 byDraggingWithOffset:(double)arg3;
- (double)dynamicBarAnimator:(id)arg1 minimumTopBarHeightForOffset:(double)arg2;
- (void)dynamicBarAnimatorOutputsDidChange:(id)arg1;
- (void)dynamicBarAnimatorStateDidChange:(id)arg1;
- (void)dynamicBarAnimatorWillEnterSteadyState:(id)arg1;
- (void)dynamicBarAnimatorWillLeaveSteadyState:(id)arg1;
- (void)emailCurrentPage;
- (double)estimatedProgress;
- (id)expectedOrCurrentURL;
- (void)findKeyPressed;
- (void)fluidProgressRocketAnimationDidComplete;
- (BOOL)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;
- (BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (BOOL)gestureRecognizerShouldBegin:(id)arg1;
- (id)handoffURL;
- (BOOL)hasFailedURL;
- (void)increaseSize:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (BOOL)isContentObscuredByDigitalHealthForCustomizationController:(id)arg1;
- (BOOL)isDisplayingQuickLookDocumentForCustomizationController:(id)arg1;
- (BOOL)isPageEligibileToShowNotSecureWarning;
- (BOOL)isReaderAvailableForCustomizationController:(id)arg1;
- (BOOL)isSafariRestricted;
- (id)keyCommands;
- (void)loadRequest:(id)arg1;
- (void)loadView;
- (void)navigateBackKeyPressed;
- (void)navigateForwardKeyPressed;
- (void)navigationBar:(id)arg1 didCreateLeadingToolbar:(id)arg2 trailingToolbar:(id)arg3;
- (void)navigationBarCancelButtonWasTapped:(id)arg1;
- (void)navigationBarDoneButtonWasTapped:(id)arg1;
- (void)navigationBarFormatMenuButtonBecameUnavailable:(id)arg1;
- (void)navigationBarFormatMenuButtonStartedInteraction:(id)arg1;
- (void)navigationBarFormatMenuButtonWasTapped:(id)arg1;
- (void)navigationBarMediaCaptureMuteButtonWasTapped:(id)arg1;
- (void)navigationBarMetricsDidChange:(id)arg1;
- (void)navigationBarReaderButtonWasTapped:(id)arg1;
- (void)navigationBarReloadButtonWasTapped:(id)arg1;
- (void)navigationBarStopLoadingButtonWasTapped:(id)arg1;
- (id)navigationBarURLForSharing:(id)arg1;
- (id)newProcessPool;
- (void)nextFindResultKeyPressed;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)overrideTraitCollectionForChildViewController:(id)arg1;
- (void)pageLoadErrorController:(id)arg1 loadFailedRequestAfterError:(id)arg2;
- (void)pageLoadErrorController:(id)arg1 presentViewController:(id)arg2;
- (void)pageLoadErrorController:(id)arg1 setAllowsSpecificHTTPSCertificate:(id)arg2 forHost:(id)arg3;
- (void)pageLoadErrorControllerClosePage:(id)arg1;
- (id)pageLoadErrorControllerGetSecIdentityPreferencesController:(id)arg1;
- (BOOL)pageLoadErrorControllerShouldHandleCertificateError:(id)arg1;
- (BOOL)pageLoadErrorControllerShouldPermanentlyAcceptCertificate:(id)arg1;
- (BOOL)pageLoadErrorControllerShouldReloadAfterError:(id)arg1;
- (void)perSiteSettingsUIPresentSettings;
- (void)policyDidChangeForDigitalHealthManager:(id)arg1;
- (long long)preferredStatusBarStyle;
- (BOOL)prefersHomeIndicatorAutoHidden;
- (void)presentViewController:(id)arg1 animated:(BOOL)arg2 completion:(CDUnknownBlockType)arg3;
- (id)presentingViewControllerForPrintController:(id)arg1;
- (id)presentingViewControllerForWebViewController:(id)arg1;
- (id)previewActionItems;
- (void)previousFindResultKeyPressed;
- (void)printController:(id)arg1 didCreatePrintInfo:(id)arg2;
- (BOOL)printControllerCanPresentPrintUI:(id)arg1;
- (id)printControllerForContentProvider:(id)arg1;
- (BOOL)printControllerPageIsLoading:(id)arg1;
- (BOOL)printControllerShouldPrintReader:(id)arg1;
- (id)processPool;
- (id)processPoolConfiguration;
- (id)progressState;
- (id)quickLookDocument;
- (id)quickLookDocumentForCurrentBackForwardListItem;
- (id)readerControllerForMailContentProvider:(id)arg1;
- (BOOL)readerViewIsVisibleForMailContentProvider:(id)arg1;
- (void)reloadEnablingContentBlockers:(BOOL)arg1;
- (void)reloadFromOriginKeyPressed;
- (void)reloadKeyPressed;
- (void)resetPageZoomLevelAndFontSize;
- (void)saveToFilesOperation:(id)arg1 didFinishWithSuccess:(BOOL)arg2;
- (void)saveToFilesOperation:(id)arg1 presentViewController:(id)arg2;
- (void)saveWebpageAlternativeKeyPressed;
- (void)saveWebpageKeyPressed;
- (void)scrollViewDidScroll:(id)arg1;
- (BOOL)scrollViewShouldScrollToTop:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)setQuickLookDocumentForCurrentBackForwardListItem:(id)arg1;
- (void)stopLoading;
- (id)suggestedFileExtensionForQuickLookDocument:(id)arg1;
- (id)suggestedFileNameForQuickLookDocument:(id)arg1;
- (void)takeFindStringKeyPressed;
- (void)toggleReaderKeyPressed;
- (void)toggleShowingReaderForUserAction;
- (void)updateBottombarOffset:(double)arg1 topBarHeight:(double)arg2;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewDidDisappear:(BOOL)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(BOOL)arg1;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)visibilityWillChangeForFindOnPageView:(id)arg1;
- (id)webViewConfiguration;
- (void)webViewController:(id)arg1 commitPreviewedViewController:(id)arg2;
- (void)webViewController:(id)arg1 createWebViewWithConfiguration:(id)arg2 forNavigationAction:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)webViewController:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)webViewController:(id)arg1 decidePolicyForNavigationResponse:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)webViewController:(id)arg1 decidePolicyForSOAuthorizationLoadWithCurrentPolicy:(long long)arg2 forExtension:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)webViewController:(id)arg1 didChangeFullScreen:(BOOL)arg2;
- (void)webViewController:(id)arg1 didClickLinkInReaderWithRequest:(id)arg2;
- (void)webViewController:(id)arg1 didCommitNavigation:(id)arg2;
- (void)webViewController:(id)arg1 didEndNavigationGestureToBackForwardListItem:(id)arg2;
- (void)webViewController:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webViewController:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webViewController:(id)arg1 didFinishDocumentLoadForNavigation:(id)arg2;
- (void)webViewController:(id)arg1 didFinishLoadForQuickLookDocumentInMainFrame:(id)arg2;
- (void)webViewController:(id)arg1 didFinishNavigation:(id)arg2;
- (void)webViewController:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)webViewController:(id)arg1 didReceiveServerRedirectForProvisionalNavigation:(id)arg2;
- (void)webViewController:(id)arg1 didSameDocumentNavigation:(id)arg2 ofType:(long long)arg3;
- (id)webViewController:(id)arg1 didStartDownload:(id)arg2;
- (void)webViewController:(id)arg1 didStartLoadForQuickLookDocumentInMainFrameWithFileName:(id)arg2 uti:(id)arg3;
- (void)webViewController:(id)arg1 didStartProvisionalNavigation:(id)arg2;
- (void)webViewController:(id)arg1 mediaCaptureStateDidChange:(unsigned long long)arg2;
- (long long)webViewController:(id)arg1 presentationPolicyForDialog:(id)arg2;
- (id)webViewController:(id)arg1 previewViewControllerForURL:(id)arg2 defaultActions:(id)arg3 elementInfo:(id)arg4;
- (void)webViewController:(id)arg1 printFrame:(id)arg2;
- (void)webViewController:(id)arg1 webViewDidClose:(id)arg2;
- (void)webViewController:(id)arg1 willPerformClientRedirectToURL:(id)arg2 withDelay:(double)arg3;
- (void)webViewControllerDidCancelClientRedirect:(id)arg1;
- (void)webViewControllerDidChangeEstimatedProgress:(id)arg1;
- (void)webViewControllerDidChangeHasOnlySecureContent:(id)arg1;
- (void)webViewControllerDidChangeLoadingState:(id)arg1;
- (void)webViewControllerDidChangeSafeAreaInsets:(id)arg1;
- (void)webViewControllerDidChangeSafeAreaShouldAffectObscuredInsets:(id)arg1;
- (void)webViewControllerDidChangeURL:(id)arg1;
- (void)webViewControllerDidDetermineReaderAvailability:(id)arg1 dueTo:(long long)arg2;
- (void)webViewControllerDidFirstVisuallyNonEmptyLayout:(id)arg1;
- (void)webViewControllerUpdateNavigationBar:(id)arg1;
- (void)webViewControllerWebProcessDidBecomeResponsive:(id)arg1;
- (void)webViewControllerWebProcessDidBecomeUnresponsive:(id)arg1;
- (void)webViewControllerWebProcessDidCrash:(id)arg1;
- (void)webViewControllerWillPresentJavaScriptDialog:(id)arg1;
- (id)webViewForCustomizationController:(id)arg1;
- (id)webViewForFindOnPageView:(id)arg1;
- (id)webViewForMailContentProvider:(id)arg1;
- (id)websiteDataStore;
- (id)websiteDataStoreConfiguration;

@end

