//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <NetworkExtension/NEVPNProtocolIPSec.h>

@class NEVPNIKEv2SecurityAssociationParameters, NSArray, NSString;

@interface NEVPNProtocolIKEv2 : NEVPNProtocolIPSec
{
    BOOL _useConfigurationAttributeInternalIPSubnet;
    BOOL _disableMOBIKE;
    BOOL _disableRedirect;
    BOOL _enablePFS;
    BOOL _enableRevocationCheck;
    BOOL _strictRevocationCheck;
    BOOL _enableFallback;
    BOOL _wakeForRekey;
    BOOL _opportunisticPFS;
    BOOL _disableInitialContact;
    int _natKeepAliveOffloadEnable;
    int _natKeepAliveOffloadInterval;
    int _disableMOBIKERetryOnWake;
    long long _deadPeerDetectionRate;
    NSString *_serverCertificateIssuerCommonName;
    NSString *_serverCertificateCommonName;
    long long _certificateType;
    NEVPNIKEv2SecurityAssociationParameters *_IKESecurityAssociationParameters;
    NEVPNIKEv2SecurityAssociationParameters *_childSecurityAssociationParameters;
    long long _minimumTLSVersion;
    long long _maximumTLSVersion;
    unsigned long long _mtu;
    NSString *_pluginType;
    NSArray *_IKESecurityAssociationParametersArray;
    NSArray *_childSecurityAssociationParametersArray;
    NSString *_providerBundleIdentifier;
    long long _tunnelKind;
}

@property (readonly) NEVPNIKEv2SecurityAssociationParameters *IKESecurityAssociationParameters; // @synthesize IKESecurityAssociationParameters=_IKESecurityAssociationParameters;
@property (strong) NSArray *IKESecurityAssociationParametersArray; // @synthesize IKESecurityAssociationParametersArray=_IKESecurityAssociationParametersArray;
@property long long certificateType; // @synthesize certificateType=_certificateType;
@property (readonly) NEVPNIKEv2SecurityAssociationParameters *childSecurityAssociationParameters; // @synthesize childSecurityAssociationParameters=_childSecurityAssociationParameters;
@property (strong) NSArray *childSecurityAssociationParametersArray; // @synthesize childSecurityAssociationParametersArray=_childSecurityAssociationParametersArray;
@property long long deadPeerDetectionRate; // @synthesize deadPeerDetectionRate=_deadPeerDetectionRate;
@property BOOL disableInitialContact; // @synthesize disableInitialContact=_disableInitialContact;
@property BOOL disableMOBIKE; // @synthesize disableMOBIKE=_disableMOBIKE;
@property int disableMOBIKERetryOnWake; // @synthesize disableMOBIKERetryOnWake=_disableMOBIKERetryOnWake;
@property BOOL disableRedirect; // @synthesize disableRedirect=_disableRedirect;
@property BOOL enableFallback; // @synthesize enableFallback=_enableFallback;
@property BOOL enablePFS; // @synthesize enablePFS=_enablePFS;
@property BOOL enableRevocationCheck; // @synthesize enableRevocationCheck=_enableRevocationCheck;
@property long long maximumTLSVersion; // @synthesize maximumTLSVersion=_maximumTLSVersion;
@property long long minimumTLSVersion; // @synthesize minimumTLSVersion=_minimumTLSVersion;
@property unsigned long long mtu; // @synthesize mtu=_mtu;
@property int natKeepAliveOffloadEnable; // @synthesize natKeepAliveOffloadEnable=_natKeepAliveOffloadEnable;
@property int natKeepAliveOffloadInterval; // @synthesize natKeepAliveOffloadInterval=_natKeepAliveOffloadInterval;
@property BOOL opportunisticPFS; // @synthesize opportunisticPFS=_opportunisticPFS;
@property (readonly) NSString *pluginType; // @synthesize pluginType=_pluginType;
@property (copy) NSString *providerBundleIdentifier; // @synthesize providerBundleIdentifier=_providerBundleIdentifier;
@property (copy) NSString *serverCertificateCommonName; // @synthesize serverCertificateCommonName=_serverCertificateCommonName;
@property (copy) NSString *serverCertificateIssuerCommonName; // @synthesize serverCertificateIssuerCommonName=_serverCertificateIssuerCommonName;
@property BOOL strictRevocationCheck; // @synthesize strictRevocationCheck=_strictRevocationCheck;
@property long long tunnelKind; // @synthesize tunnelKind=_tunnelKind;
@property BOOL useConfigurationAttributeInternalIPSubnet; // @synthesize useConfigurationAttributeInternalIPSubnet=_useConfigurationAttributeInternalIPSubnet;
@property BOOL wakeForRekey; // @synthesize wakeForRekey=_wakeForRekey;

+ (BOOL)supportsSecureCoding;
- (void).cxx_destruct;
- (BOOL)checkValidityAndCollectErrors:(id)arg1;
- (id)clone;
- (id)copyLegacyDictionary;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)descriptionWithIndent:(int)arg1 options:(unsigned long long)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithPluginType:(id)arg1;
- (void)setPluginType:(id)arg1;

@end

