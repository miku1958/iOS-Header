//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <NetworkExtension/NEProfileIngestionDelegate-Protocol.h>

@class NEConfiguration, NEConfigurationManager, NSMutableArray, NSString;

@interface NEProfileIngestion : NSObject <NEProfileIngestionDelegate>
{
    NSString *_clientName;
    NSString *_payloadType;
    NEConfigurationManager *_manager;
    NSMutableArray *_currentConfigurations;
    NEConfiguration *_ingestedConfiguration;
}

@property (readonly) NSString *clientName; // @synthesize clientName=_clientName;
@property (strong) NSMutableArray *currentConfigurations; // @synthesize currentConfigurations=_currentConfigurations;
@property (strong) NEConfiguration *ingestedConfiguration; // @synthesize ingestedConfiguration=_ingestedConfiguration;
@property (readonly) NEConfigurationManager *manager; // @synthesize manager=_manager;
@property (readonly) NSString *payloadType; // @synthesize payloadType=_payloadType;

+ (id)getServiceIDForPayload:(id)arg1;
+ (void)profileMigrationComplete;
- (void).cxx_destruct;
- (id)copyManagedConfigurationIDs;
- (BOOL)createConfigurationFromPayload:(id)arg1 payloadType:(id)arg2;
- (void)dealloc;
- (BOOL)enableAlwaysOnVpn;
- (BOOL)enableAlwaysOnVpnInternal:(BOOL)arg1;
- (void)enableDefaultService;
- (id)findConfigurationByConfigurationID:(id)arg1;
- (id)findConfigurationByName:(id)arg1;
- (id)findConfigurationByPayloadUUID:(id)arg1;
- (id)findMostSpecificAppRuleForBundleID:(id)arg1 config:(id)arg2;
- (id)getCertificatesForConfigurationWithIdentifier:(id)arg1;
- (id)initWithName:(id)arg1;
- (id)initWithNameAndType:(id)arg1 payloadType:(id)arg2;
- (BOOL)isAutoCreatedRule:(id)arg1;
- (BOOL)isInstalled:(id)arg1;
- (BOOL)loadConfigurationsForceReloadFromDisk;
- (BOOL)loadConfigurationsWithRefreshOption:(BOOL)arg1;
- (BOOL)lockConfigurations;
- (BOOL)removeConfiguration:(id)arg1;
- (BOOL)removeConfigurationWithIdentifier:(id)arg1;
- (BOOL)removeIngestedConfiguration;
- (id)resolveConfigurationNameConflict:(id)arg1;
- (BOOL)saveConfiguration:(id)arg1;
- (BOOL)saveIngestedConfiguration;
- (id)setAsideConfigurationName:(id)arg1 unsetAside:(BOOL)arg2;
- (void)unlockConfigurations;
- (BOOL)updateAppLayerVPNMappingRules:(id)arg1;
- (BOOL)updateDefaultAfterAddingConfiguration;
- (BOOL)updateDefaultAfterDeletingConfiguration;
- (BOOL)updateManagedAppRules:(id)arg1;

@end

