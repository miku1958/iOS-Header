//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <NetworkExtension/NEPrettyDescription-Protocol.h>

@class NSString, NSUUID, NWAddressEndpoint;

@interface NEPolicyCondition : NSObject <NEPrettyDescription>
{
    BOOL _negative;
    unsigned char _prefix;
    unsigned short _ipProtocol;
    unsigned short _packetFilterTags;
    int _pid;
    unsigned int _uid;
    unsigned int _trafficClassStart;
    unsigned int _trafficClassEnd;
    unsigned int _clientFlags;
    unsigned int _platform;
    unsigned int _sdkVersion;
    unsigned int _minSDKVersion;
    long long _conditionType;
    NSUUID *_applicationUUID;
    NSString *_accountIdentifier;
    NSString *_domain;
    NSString *_interfaceName;
    NWAddressEndpoint *_startAddress;
    NWAddressEndpoint *_endAddress;
    NSString *_customEntitlement;
    NSString *_agentDomain;
    NSString *_agentType;
    NSString *_signingIdentifier;
}

@property (copy) NSString *accountIdentifier; // @synthesize accountIdentifier=_accountIdentifier;
@property (copy) NSString *agentDomain; // @synthesize agentDomain=_agentDomain;
@property (copy) NSString *agentType; // @synthesize agentType=_agentType;
@property (copy) NSUUID *applicationUUID; // @synthesize applicationUUID=_applicationUUID;
@property unsigned int clientFlags; // @synthesize clientFlags=_clientFlags;
@property long long conditionType; // @synthesize conditionType=_conditionType;
@property (copy) NSString *customEntitlement; // @synthesize customEntitlement=_customEntitlement;
@property (copy) NSString *domain; // @synthesize domain=_domain;
@property (copy) NWAddressEndpoint *endAddress; // @synthesize endAddress=_endAddress;
@property (copy) NSString *interfaceName; // @synthesize interfaceName=_interfaceName;
@property unsigned short ipProtocol; // @synthesize ipProtocol=_ipProtocol;
@property unsigned int minSDKVersion; // @synthesize minSDKVersion=_minSDKVersion;
@property (getter=isNegative) BOOL negative; // @synthesize negative=_negative;
@property unsigned short packetFilterTags; // @synthesize packetFilterTags=_packetFilterTags;
@property int pid; // @synthesize pid=_pid;
@property unsigned int platform; // @synthesize platform=_platform;
@property unsigned char prefix; // @synthesize prefix=_prefix;
@property unsigned int sdkVersion; // @synthesize sdkVersion=_sdkVersion;
@property (copy) NSString *signingIdentifier; // @synthesize signingIdentifier=_signingIdentifier;
@property (copy) NWAddressEndpoint *startAddress; // @synthesize startAddress=_startAddress;
@property unsigned int trafficClassEnd; // @synthesize trafficClassEnd=_trafficClassEnd;
@property unsigned int trafficClassStart; // @synthesize trafficClassStart=_trafficClassStart;
@property unsigned int uid; // @synthesize uid=_uid;

+ (id)accountIdentifier:(id)arg1;
+ (id)allInterfaces;
+ (id)clientFlags:(unsigned int)arg1;
+ (id)clientProhibitsContrained;
+ (id)clientProhibitsExpensive;
+ (id)customEntitlement:(id)arg1;
+ (id)domain:(id)arg1;
+ (id)effectiveApplication:(id)arg1;
+ (id)effectivePID:(int)arg1;
+ (id)entitlement;
+ (id)fallbackTraffic;
+ (id)flowIPProtocol:(unsigned short)arg1;
+ (id)flowLocalAddress:(id)arg1 prefix:(unsigned char)arg2;
+ (id)flowLocalAddressEmpty;
+ (id)flowLocalAddressStart:(id)arg1 end:(id)arg2;
+ (id)flowRemoteAddress:(id)arg1 prefix:(unsigned char)arg2;
+ (id)flowRemoteAddressEmpty;
+ (id)flowRemoteAddressStart:(id)arg1 end:(id)arg2;
+ (id)ipProtocol:(unsigned short)arg1;
+ (id)isInbound;
+ (id)isListener;
+ (id)isSystemProxyConnection;
+ (id)localAddress:(id)arg1 prefix:(unsigned char)arg2;
+ (id)localAddressStart:(id)arg1 end:(id)arg2;
+ (id)localNetworks;
+ (id)packetFilterTags:(unsigned short)arg1;
+ (id)platformBinary;
+ (id)realApplication:(id)arg1;
+ (id)remoteAddress:(id)arg1 prefix:(unsigned char)arg2;
+ (id)remoteAddressStart:(id)arg1 end:(id)arg2;
+ (id)requiredAgentDomain:(id)arg1 agentType:(id)arg2;
+ (id)scopedInterface:(id)arg1;
+ (id)sdkVersion:(unsigned int)arg1 minSDKVersion:(unsigned int)arg2 platform:(unsigned int)arg3;
+ (id)signingIdentifier:(id)arg1;
+ (id)trafficClassStart:(unsigned int)arg1 end:(unsigned int)arg2;
+ (id)uid:(unsigned int)arg1;
+ (id)usesModernNetworkAPI;
- (void).cxx_destruct;
- (BOOL)addTLVsToMessage:(id)arg1;
- (id)conditionTypeString;
- (unsigned char)conditionTypeValue;
- (id)description;
- (id)descriptionWithIndent:(int)arg1 options:(unsigned long long)arg2;
- (id)init;
- (id)initInternal;
- (BOOL)validate;

@end

