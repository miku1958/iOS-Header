//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <NetworkExtension/NEIKEv2Packet.h>

@class NEIKEv2ChildSAPayload, NEIKEv2ConfigPayload, NEIKEv2IKESAPayload, NEIKEv2InitiatorTrafficSelectorPayload, NEIKEv2KeyExchangePayload, NEIKEv2NoncePayload, NEIKEv2ResponderTrafficSelectorPayload, NSArray;

@interface NEIKEv2CreateChildPacket : NEIKEv2Packet
{
    NEIKEv2IKESAPayload *_ikeSA;
    NEIKEv2ChildSAPayload *_childSA;
    NEIKEv2KeyExchangePayload *_ke;
    NEIKEv2NoncePayload *_nonce;
    NEIKEv2ConfigPayload *_config;
    NEIKEv2InitiatorTrafficSelectorPayload *_tsi;
    NEIKEv2ResponderTrafficSelectorPayload *_tsr;
    NSArray *_vendorIDs;
}

@property (strong) NEIKEv2ChildSAPayload *childSA; // @synthesize childSA=_childSA;
@property (strong) NEIKEv2ConfigPayload *config; // @synthesize config=_config;
@property (strong) NEIKEv2IKESAPayload *ikeSA; // @synthesize ikeSA=_ikeSA;
@property (readonly) BOOL isRekeyChild;
@property (readonly) BOOL isRekeyIKE;
@property (strong) NEIKEv2KeyExchangePayload *ke; // @synthesize ke=_ke;
@property (strong) NEIKEv2NoncePayload *nonce; // @synthesize nonce=_nonce;
@property (strong) NEIKEv2InitiatorTrafficSelectorPayload *tsi; // @synthesize tsi=_tsi;
@property (strong) NEIKEv2ResponderTrafficSelectorPayload *tsr; // @synthesize tsr=_tsr;
@property (strong) NSArray *vendorIDs; // @synthesize vendorIDs=_vendorIDs;

+ (id)copyTypeDescription;
+ (id)createChildSAForInitiatorChildSA:(id)arg1;
+ (id)createChildSAResponse:(id)arg1 childSA:(id)arg2;
+ (id)createChildSAResponse:(id)arg1 errorCode:(unsigned long long)arg2 errorData:(id)arg3;
+ (id)createRekeyChildSAForInitiator:(id)arg1;
+ (id)createRekeyIKESAForInitiator:(id)arg1;
+ (id)createRekeyResponse:(id)arg1 childSA:(id)arg2;
+ (id)createRekeyResponse:(id)arg1 ikeSA:(id)arg2;
+ (unsigned long long)exchangeType;
- (void).cxx_destruct;
- (void)filloutPayloads;
- (void)gatherPayloads;
- (BOOL)validateCreateChildAsInitiator:(id)arg1;
- (BOOL)validateCreateChildAsResponder:(id)arg1;
- (BOOL)validateRekeyChildSA:(id)arg1;
- (BOOL)validateRekeyIKESA:(id)arg1;
- (BOOL)validateResponderRekeyChildSA:(id)arg1 sendInvalidKE:(BOOL *)arg2;
- (BOOL)validateResponderRekeyIKESA:(id)arg1 sendInvalidKE:(BOOL *)arg2;

@end

