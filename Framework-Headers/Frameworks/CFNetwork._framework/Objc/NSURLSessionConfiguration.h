//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <CFNetwork/NSCopying-Protocol.h>
#import <CFNetwork/NSMutableCopying-Protocol.h>
#import <CFNetwork/NSSecureCoding-Protocol.h>

@class NSArray, NSData, NSDictionary, NSHTTPCookieStorage, NSNumber, NSSet, NSString, NSURL, NSURLCache, NSURLCredentialStorage, _NSHSTSStorage, _NSHTTPAlternativeServicesStorage;
@protocol NSURLSessionAppleIDContext;

@interface NSURLSessionConfiguration : NSObject <NSMutableCopying, NSSecureCoding, NSCopying>
{
    BOOL _allowsCellularAccess;
    BOOL _allowsExpensiveNetworkAccess;
    BOOL _allowsConstrainedNetworkAccessAPI;
    BOOL _waitsForConnectivity;
    BOOL _discretionary;
    BOOL _sessionSendsLaunchEvents;
    BOOL _HTTPShouldUsePipelining;
    BOOL _HTTPShouldSetCookies;
    BOOL _shouldUseExtendedBackgroundIdleMode;
    BOOL _requiresPowerPluggedIn;
    BOOL _reportsDataStalls;
    BOOL _allowsExpensiveAccess;
    BOOL _allowsConstrainedNetworkAccessSPI;
    BOOL _allowsPowerNapScheduling;
    BOOL _preventsIdleSleepOnceConnected;
    BOOL _sessionSendsLaunchOnDemandEvents;
    BOOL _shouldSkipPreferredClientCertificateLookup;
    BOOL _allowsRetryForBackgroundDataTasks;
    BOOL _onBehalfOfPairedDevice;
    BOOL _clientIsNotExplicitlyDiscretionary;
    BOOL _respectsAllowsCellularAccessForDiscretionaryTasks;
    BOOL _overridesBackgroundSessionAutoRedirect;
    BOOL _performsEVCertCheck;
    BOOL _infersDiscretionaryFromOriginatingClient;
    BOOL _prefersInfraWiFi;
    BOOL _allowsMultipathTCP;
    BOOL _allowsResponseMonitoringDuringBodyTranmission;
    BOOL _allowsIndefiniteConnections;
    BOOL _allowsTCPFastOpen;
    BOOL _allowsTLSSessionTickets;
    BOOL _allowsTLSSessionResumption;
    BOOL _allowsTLSFalseStart;
    BOOL _allowsTLSFallback;
    BOOL _preventsDirectWiFiAccess;
    BOOL _allowTCPIOConnectionStreamTask;
    BOOL _preventsSystemHTTPProxyAuthentication;
    BOOL _requiresSecureHTTPSProxyConnection;
    BOOL _preventsAppSSO;
    BOOL _allowsReachabilityCheck;
    BOOL _duetPreauthorized;
    BOOL _requiresSustainedDataDelivery;
    BOOL _ignoreDidReceiveResponseDisposition;
    BOOL _alwaysPerformDefaultTrustEvaluation;
    BOOL _backgroundSession;
    BOOL _phskip_credStorageSet;
    BOOL _phskip_urlCacheSet;
    BOOL _phskip_cookieStorageSet;
    BOOL _phskip_hstsStorageSet;
    BOOL _skip_download_unlink;
    BOOL _requiresClientToOpenFiles;
    BOOL _forcesNewConnections;
    BOOL _supportsAVAssetDownloads;
    BOOL _proxySession;
    BOOL _preventsIdleSleep;
    BOOL _usePipeliningHeuristics;
    BOOL _shouldPreserveBackgroundSessionDisposition;
    BOOL _disablesOutOfProcessDirectWiFiUsage;
    BOOL _disablesUseOfProxySession;
    BOOL _allowsHTTP3;
    BOOL _phskip_alternativeServicesStorageSet;
    BOOL __allowsWCA;
    int _TLSMinimumSupportedProtocol;
    int _TLSMaximumSupportedProtocol;
    int _loggingPrivacyLevel;
    NSString *_identifier;
    unsigned long long _requestCachePolicy;
    double _timeoutIntervalForRequest;
    double _timeoutIntervalForResource;
    unsigned long long _networkServiceType;
    NSString *_sharedContainerIdentifier;
    NSDictionary *_connectionProxyDictionary;
    unsigned long long _HTTPCookieAcceptPolicy;
    NSDictionary *_HTTPAdditionalHeaders;
    long long _HTTPMaximumConnectionsPerHost;
    NSArray *_protocolClasses;
    long long _multipathServiceType;
    NSURL *_directoryForDownloadedFiles;
    NSString *_sourceApplicationBundleIdentifier;
    NSString *_sourceApplicationSecondaryIdentifier;
    NSData *_sourceApplicationAuditTokenData;
    unsigned long long _TCPAdaptiveReadTimeout;
    unsigned long long _TCPAdaptiveWriteTimeout;
    long long _timingDataOptions;
    id<NSURLSessionAppleIDContext> _appleIDContext;
    NSData *_atsContext;
    double _connectionCachePurgeTimeout;
    double _connectionCacheCellPurgeTimeout;
    double _longLivedConnectionCachePurgeTimeout;
    double _longLivedConnectionCacheCellPurgeTimeout;
    NSString *_connectionPoolName;
    NSString *_CTDataConnectionServiceType;
    NSString *_tlsTrustPinningPolicyName;
    unsigned long long _customReadBufferSize;
    double _customReadBufferTimeout;
    long long _duetPreClearedMode;
    long long _IDSMessageTimeout;
    NSNumber *_maximumWatchCellularTransferSize;
    unsigned long long _multipathAlternatePort;
    NSString *_disposition;
    NSURLCredentialStorage *_phskip_credStorage;
    NSURLCache *_phskip_urlCache;
    NSHTTPCookieStorage *_phskip_cookieStorage;
    _NSHSTSStorage *_phskip_hstsStorage;
    long long _pipeliningHighWatermark;
    long long _pipeliningLowWatermark;
    long long _numPriorityLevels;
    long long _numFastLanes;
    long long _minimumFastLanePriority;
    NSString *_tcpConnectionPoolName;
    NSDictionary *_socketStreamProperties;
    NSSet *_authenticatorStatusCodes;
    NSArray *_contentDispHeadEncFallback;
    NSString *_companionAppBundleIdentifier;
    NSString *_watchAppBundleIdentifier;
    NSString *_watchExtensionBundleIdentifier;
    unsigned long long _forcedNetworkServiceType;
    NSDictionary *_overriddenDelegateOptions;
    NSSet *_suppressedAutoAddedHTTPHeaders;
    long long _expiredDNSBehavior;
    _NSHTTPAlternativeServicesStorage *_phskip_alternativeServicesStorage;
    long long __companionProxyPreference;
}

@property (copy) NSDictionary *HTTPAdditionalHeaders; // @synthesize HTTPAdditionalHeaders=_HTTPAdditionalHeaders;
@property unsigned long long HTTPCookieAcceptPolicy; // @synthesize HTTPCookieAcceptPolicy=_HTTPCookieAcceptPolicy;
@property (strong) NSHTTPCookieStorage *HTTPCookieStorage;
@property long long HTTPMaximumConnectionsPerHost; // @synthesize HTTPMaximumConnectionsPerHost=_HTTPMaximumConnectionsPerHost;
@property BOOL HTTPShouldSetCookies; // @synthesize HTTPShouldSetCookies=_HTTPShouldSetCookies;
@property BOOL HTTPShouldUsePipelining; // @synthesize HTTPShouldUsePipelining=_HTTPShouldUsePipelining;
@property int TLSMaximumSupportedProtocol; // @synthesize TLSMaximumSupportedProtocol=_TLSMaximumSupportedProtocol;
@property unsigned short TLSMaximumSupportedProtocolVersion;
@property int TLSMinimumSupportedProtocol; // @synthesize TLSMinimumSupportedProtocol=_TLSMinimumSupportedProtocol;
@property unsigned short TLSMinimumSupportedProtocolVersion;
@property (strong) NSURLCache *URLCache;
@property (strong) NSURLCredentialStorage *URLCredentialStorage;
@property (copy) NSString *_CTDataConnectionServiceType; // @synthesize _CTDataConnectionServiceType;
@property long long _IDSMessageTimeout; // @synthesize _IDSMessageTimeout;
@property unsigned long long _TCPAdaptiveReadTimeout; // @synthesize _TCPAdaptiveReadTimeout;
@property unsigned long long _TCPAdaptiveWriteTimeout; // @synthesize _TCPAdaptiveWriteTimeout;
@property BOOL _allowTCPIOConnectionStreamTask; // @synthesize _allowTCPIOConnectionStreamTask;
@property BOOL _allowsConstrainedNetworkAccess; // @synthesize _allowsConstrainedNetworkAccess=_allowsConstrainedNetworkAccessSPI;
@property BOOL _allowsExpensiveAccess; // @synthesize _allowsExpensiveAccess;
@property BOOL _allowsHTTP3; // @synthesize _allowsHTTP3;
@property BOOL _allowsIndefiniteConnections; // @synthesize _allowsIndefiniteConnections;
@property BOOL _allowsMultipathTCP; // @synthesize _allowsMultipathTCP;
@property BOOL _allowsPowerNapScheduling; // @synthesize _allowsPowerNapScheduling;
@property BOOL _allowsReachabilityCheck; // @synthesize _allowsReachabilityCheck;
@property BOOL _allowsResponseMonitoringDuringBodyTranmission; // @synthesize _allowsResponseMonitoringDuringBodyTranmission;
@property BOOL _allowsRetryForBackgroundDataTasks; // @synthesize _allowsRetryForBackgroundDataTasks;
@property BOOL _allowsSensitiveLogging;
@property BOOL _allowsTCPFastOpen; // @synthesize _allowsTCPFastOpen;
@property BOOL _allowsTLSFallback; // @synthesize _allowsTLSFallback;
@property BOOL _allowsTLSFalseStart; // @synthesize _allowsTLSFalseStart;
@property BOOL _allowsTLSSessionResumption; // @synthesize _allowsTLSSessionResumption;
@property BOOL _allowsTLSSessionTickets; // @synthesize _allowsTLSSessionTickets;
@property BOOL _allowsWCA; // @synthesize _allowsWCA=__allowsWCA;
@property (strong) _NSHTTPAlternativeServicesStorage *_alternativeServicesStorage;
@property BOOL _alwaysPerformDefaultTrustEvaluation; // @synthesize _alwaysPerformDefaultTrustEvaluation;
@property (copy) id<NSURLSessionAppleIDContext> _appleIDContext; // @synthesize _appleIDContext;
@property (copy) NSData *_atsContext; // @synthesize _atsContext;
@property (copy) NSSet *_authenticatorStatusCodes; // @synthesize _authenticatorStatusCodes;
@property BOOL _clientIsNotExplicitlyDiscretionary; // @synthesize _clientIsNotExplicitlyDiscretionary;
@property (copy) NSString *_companionAppBundleIdentifier; // @synthesize _companionAppBundleIdentifier;
@property long long _companionProxyPreference; // @synthesize _companionProxyPreference=__companionProxyPreference;
@property double _connectionCacheCellPurgeTimeout; // @synthesize _connectionCacheCellPurgeTimeout;
@property long long _connectionCacheMinimumFastLanePriority;
@property long long _connectionCacheNumFastLanes;
@property long long _connectionCacheNumPriorityLevels;
@property double _connectionCachePurgeTimeout; // @synthesize _connectionCachePurgeTimeout;
@property (copy) NSString *_connectionPoolName; // @synthesize _connectionPoolName;
@property (copy) NSArray *_contentDispHeadEncFallback; // @synthesize _contentDispHeadEncFallback;
@property unsigned long long _customReadBufferSize; // @synthesize _customReadBufferSize;
@property double _customReadBufferTimeout; // @synthesize _customReadBufferTimeout;
@property (copy) NSURL *_directoryForDownloadedFiles; // @synthesize _directoryForDownloadedFiles;
@property BOOL _disablesOutOfProcessDirectWiFiUsage; // @synthesize _disablesOutOfProcessDirectWiFiUsage;
@property BOOL _disablesUseOfProxySession; // @synthesize _disablesUseOfProxySession;
@property long long _duetPreClearedMode; // @synthesize _duetPreClearedMode;
@property BOOL _duetPreauthorized; // @synthesize _duetPreauthorized;
@property long long _expiredDNSBehavior; // @synthesize _expiredDNSBehavior;
@property unsigned long long _forcedNetworkServiceType; // @synthesize _forcedNetworkServiceType;
@property BOOL _forcesNewConnections; // @synthesize _forcesNewConnections;
@property (strong) _NSHSTSStorage *_hstsStorage;
@property BOOL _ignoreDidReceiveResponseDisposition; // @synthesize _ignoreDidReceiveResponseDisposition;
@property BOOL _infersDiscretionaryFromOriginatingClient; // @synthesize _infersDiscretionaryFromOriginatingClient;
@property int _loggingPrivacyLevel; // @synthesize _loggingPrivacyLevel;
@property double _longLivedConnectionCacheCellPurgeTimeout; // @synthesize _longLivedConnectionCacheCellPurgeTimeout;
@property double _longLivedConnectionCachePurgeTimeout; // @synthesize _longLivedConnectionCachePurgeTimeout;
@property (copy) NSNumber *_maximumWatchCellularTransferSize; // @synthesize _maximumWatchCellularTransferSize;
@property unsigned long long _multipathAlternatePort; // @synthesize _multipathAlternatePort;
@property BOOL _onBehalfOfPairedDevice; // @synthesize _onBehalfOfPairedDevice;
@property (copy) NSDictionary *_overriddenDelegateOptions; // @synthesize _overriddenDelegateOptions;
@property BOOL _overridesBackgroundSessionAutoRedirect; // @synthesize _overridesBackgroundSessionAutoRedirect;
@property BOOL _performsEVCertCheck; // @synthesize _performsEVCertCheck;
@property (strong) _NSHTTPAlternativeServicesStorage *_phskip_alternativeServicesStorage; // @synthesize _phskip_alternativeServicesStorage;
@property BOOL _phskip_alternativeServicesStorageSet; // @synthesize _phskip_alternativeServicesStorageSet;
@property (strong) NSHTTPCookieStorage *_phskip_cookieStorage; // @synthesize _phskip_cookieStorage;
@property BOOL _phskip_cookieStorageSet; // @synthesize _phskip_cookieStorageSet;
@property (strong) NSURLCredentialStorage *_phskip_credStorage; // @synthesize _phskip_credStorage;
@property BOOL _phskip_credStorageSet; // @synthesize _phskip_credStorageSet;
@property (strong) _NSHSTSStorage *_phskip_hstsStorage; // @synthesize _phskip_hstsStorage;
@property BOOL _phskip_hstsStorageSet; // @synthesize _phskip_hstsStorageSet;
@property (strong) NSURLCache *_phskip_urlCache; // @synthesize _phskip_urlCache;
@property BOOL _phskip_urlCacheSet; // @synthesize _phskip_urlCacheSet;
@property BOOL _prefersInfraWiFi; // @synthesize _prefersInfraWiFi;
@property BOOL _preventsAppSSO; // @synthesize _preventsAppSSO;
@property BOOL _preventsDirectWiFiAccess; // @synthesize _preventsDirectWiFiAccess;
@property BOOL _preventsIdleSleep; // @synthesize _preventsIdleSleep;
@property BOOL _preventsIdleSleepOnceConnected; // @synthesize _preventsIdleSleepOnceConnected;
@property BOOL _preventsSystemHTTPProxyAuthentication; // @synthesize _preventsSystemHTTPProxyAuthentication;
@property (getter=_isProxySession) BOOL _proxySession; // @synthesize _proxySession;
@property BOOL _reportsDataStalls; // @synthesize _reportsDataStalls;
@property BOOL _requiresClientToOpenFiles; // @synthesize _requiresClientToOpenFiles;
@property BOOL _requiresPowerPluggedIn; // @synthesize _requiresPowerPluggedIn;
@property BOOL _requiresSecureHTTPSProxyConnection; // @synthesize _requiresSecureHTTPSProxyConnection;
@property BOOL _requiresSustainedDataDelivery; // @synthesize _requiresSustainedDataDelivery;
@property BOOL _respectsAllowsCellularAccessForDiscretionaryTasks; // @synthesize _respectsAllowsCellularAccessForDiscretionaryTasks;
@property BOOL _sessionSendsLaunchOnDemandEvents; // @synthesize _sessionSendsLaunchOnDemandEvents;
@property BOOL _shouldPreserveBackgroundSessionDisposition; // @synthesize _shouldPreserveBackgroundSessionDisposition;
@property BOOL _shouldSkipPreferredClientCertificateLookup; // @synthesize _shouldSkipPreferredClientCertificateLookup;
@property (copy) NSDictionary *_socketStreamProperties; // @synthesize _socketStreamProperties;
@property (copy) NSData *_sourceApplicationAuditTokenData; // @synthesize _sourceApplicationAuditTokenData;
@property (copy) NSString *_sourceApplicationBundleIdentifier; // @synthesize _sourceApplicationBundleIdentifier;
@property (copy) NSString *_sourceApplicationSecondaryIdentifier; // @synthesize _sourceApplicationSecondaryIdentifier;
@property BOOL _supportsAVAssetDownloads; // @synthesize _supportsAVAssetDownloads;
@property (copy) NSSet *_suppressedAutoAddedHTTPHeaders; // @synthesize _suppressedAutoAddedHTTPHeaders;
@property (copy) NSString *_tcpConnectionPoolName; // @synthesize _tcpConnectionPoolName;
@property long long _timingDataOptions; // @synthesize _timingDataOptions;
@property (copy) NSString *_tlsTrustPinningPolicyName; // @synthesize _tlsTrustPinningPolicyName;
@property BOOL _usePipeliningHeuristics; // @synthesize _usePipeliningHeuristics;
@property (copy) NSString *_watchAppBundleIdentifier; // @synthesize _watchAppBundleIdentifier;
@property (copy) NSString *_watchExtensionBundleIdentifier; // @synthesize _watchExtensionBundleIdentifier;
@property BOOL allowsCellularAccess; // @synthesize allowsCellularAccess=_allowsCellularAccess;
@property BOOL allowsConstrainedNetworkAccess; // @synthesize allowsConstrainedNetworkAccess=_allowsConstrainedNetworkAccessAPI;
@property BOOL allowsExpensiveNetworkAccess; // @synthesize allowsExpensiveNetworkAccess=_allowsExpensiveNetworkAccess;
@property (getter=isBackgroundSession) BOOL backgroundSession; // @synthesize backgroundSession=_backgroundSession;
@property (copy) NSDictionary *connectionProxyDictionary; // @synthesize connectionProxyDictionary=_connectionProxyDictionary;
@property (getter=isDiscretionary) BOOL discretionary; // @synthesize discretionary=_discretionary;
@property NSString *disposition; // @synthesize disposition=_disposition;
@property (copy) NSString *identifier; // @synthesize identifier=_identifier;
@property long long minimumFastLanePriority; // @synthesize minimumFastLanePriority=_minimumFastLanePriority;
@property long long multipathServiceType; // @synthesize multipathServiceType=_multipathServiceType;
@property unsigned long long networkServiceType; // @synthesize networkServiceType=_networkServiceType;
@property long long numFastLanes; // @synthesize numFastLanes=_numFastLanes;
@property long long numPriorityLevels; // @synthesize numPriorityLevels=_numPriorityLevels;
@property long long pipeliningHighWatermark; // @synthesize pipeliningHighWatermark=_pipeliningHighWatermark;
@property long long pipeliningLowWatermark; // @synthesize pipeliningLowWatermark=_pipeliningLowWatermark;
@property (copy) NSArray *protocolClasses; // @synthesize protocolClasses=_protocolClasses;
@property unsigned long long requestCachePolicy; // @synthesize requestCachePolicy=_requestCachePolicy;
@property BOOL sessionSendsLaunchEvents; // @synthesize sessionSendsLaunchEvents=_sessionSendsLaunchEvents;
@property (copy) NSString *sharedContainerIdentifier; // @synthesize sharedContainerIdentifier=_sharedContainerIdentifier;
@property BOOL shouldUseExtendedBackgroundIdleMode; // @synthesize shouldUseExtendedBackgroundIdleMode=_shouldUseExtendedBackgroundIdleMode;
@property BOOL skip_download_unlink; // @synthesize skip_download_unlink=_skip_download_unlink;
@property double timeoutIntervalForRequest; // @synthesize timeoutIntervalForRequest=_timeoutIntervalForRequest;
@property double timeoutIntervalForResource; // @synthesize timeoutIntervalForResource=_timeoutIntervalForResource;
@property BOOL waitsForConnectivity; // @synthesize waitsForConnectivity=_waitsForConnectivity;

+ (id)AVBackgroundSessionConfigurationWithIdentifier:(id)arg1;
+ (id)_AVBackgroundSessionConfigurationWithIdentifier:(id)arg1;
+ (id)_defaultProtocolClasses;
+ (id)backgroundSessionConfiguration:(id)arg1;
+ (id)backgroundSessionConfigurationWithIdentifier:(id)arg1;
+ (id)defaultSessionConfiguration;
+ (id)ephemeralSessionConfiguration;
+ (void)initialize;
+ (id)new;
+ (id)sessionConfigurationForSharedSession;
+ (BOOL)supportsSecureCoding;
- (void *)_copyAttribute:(struct __CFString *)arg1;
- (struct _CFHSTSPolicy *)copyHSTSPolicy;
- (id)copyImmutableVariant:(CDUnknownBlockType)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (struct HTTPConnectionCacheLimits)getConnectionCacheLimits;
- (unsigned long long)hash;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;

@end

