//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSMutableSet, NSString;

@interface NSURLCacheDBReader : NSObject
{
    struct sqlite3_stmt *_sqlSelectStmt;
    struct sqlite3_stmt *_sqlSelectTimeStmt;
    struct sqlite3 *_dbReadConnection;
    struct os_unfair_lock_s _dbReadConnectionLock;
    long long _schemaVersion;
    struct os_unfair_lock_s _timeRelativeLookupLock;
    NSMutableSet *recentTimeStampLookups;
    unsigned char _performTimeRelativeLookups;
    NSString *_dbPathDirectory;
    NSString *_dbPathFile;
    NSMutableSet *_recentTimeStampLookups;
    BOOL _isDBOpen;
}

@property (strong) NSString *dbPathDirectory; // @synthesize dbPathDirectory=_dbPathDirectory;
@property (strong) NSString *dbPathFile; // @synthesize dbPathFile=_dbPathFile;
@property BOOL isDBOpen; // @synthesize isDBOpen=_isDBOpen;
@property unsigned char performTimeRelativeLookups; // @synthesize performTimeRelativeLookups=_performTimeRelativeLookups;
@property (strong) NSMutableSet *recentTimeStampLookups; // @synthesize recentTimeStampLookups=_recentTimeStampLookups;

- (void)_closeDB;
- (void)_closeDBReadConnections;
- (BOOL)_finalizeAllDBStatements;
- (BOOL)_finalizeDBSelectStatements;
- (BOOL)_openDBReadConnections;
- (BOOL)_prepareDBSelectStatements;
- (BOOL)_prepareDBStatements;
- (void)cleanupAndShutdown_Lock;
- (id)createCachedResponseDictForTransmissionWithKey:(id)arg1 objectVersion:(long long)arg2 storagePolicy:(int)arg3 responseObjectBytes:(char *)arg4 responseObjectBytesLength:(int)arg5 protoProps:(char *)arg6 protoPropsLength:(int)arg7 receiverDataBytes:(char *)arg8 receiverDataLength:(int)arg9 requestObjectBytes:(char *)arg10 requestObjectBytesLength:(int)arg11 userInfoBytes:(const char *)arg12 useInfoLength:(int)arg13 isDataOnFS:(BOOL)arg14 cacheDirPath:(id)arg15 cacheFileName:(id)arg16;
- (struct _CFCachedURLResponse *)createCachedResponseForKey:(id)arg1 cacheDataPath:(id *)arg2 cacheDataFile:(id *)arg3 caller:(struct _CFURLCache *)arg4;
- (void)dealloc;
- (int)execSQLStatement:(const char *)arg1 onConnection:(struct sqlite3 *)arg2 toCompletionWithRetry:(long long)arg3 writeLockHeld:(BOOL)arg4;
- (id)init;
- (id)initWithDBPath:(id)arg1 maxSize:(long long)arg2;
- (BOOL)openAndPrepareReadCacheDB;
- (void)performTimeRelativeLookupWithInitialTime:(id)arg1 caller:(struct _CFURLCache *)arg2;
- (int)stepSQLStatement:(struct sqlite3_stmt *)arg1 toCompletionWithRetry:(long long)arg2;

@end

