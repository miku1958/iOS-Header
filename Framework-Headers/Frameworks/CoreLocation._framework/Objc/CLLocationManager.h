//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class CLHeading, CLLocation, NSSet, NSString;
@protocol CLLocationManagerDelegate;

@interface CLLocationManager : NSObject
{
    id _internal;
}

@property (nonatomic) long long activityType;
@property (nonatomic) BOOL allowsAlteredAccessoryLocations;
@property (nonatomic) BOOL allowsBackgroundLocationUpdates;
@property (readonly, nonatomic) double bestAccuracy;
@property (nonatomic) id<CLLocationManagerDelegate> delegate;
@property (nonatomic) double desiredAccuracy;
@property (nonatomic) double distanceFilter;
@property (nonatomic, getter=isDynamicAccuracyReductionEnabled) BOOL dynamicAccuracyReductionEnabled;
@property (readonly, nonatomic) double expectedGpsUpdateInterval;
@property (readonly, copy, nonatomic) CLHeading *heading;
@property (readonly, nonatomic) BOOL headingAvailable;
@property (nonatomic) double headingFilter;
@property (nonatomic) int headingOrientation;
@property (readonly, nonatomic) struct __CLClient *internalClient;
@property (readonly, copy, nonatomic) CLLocation *location;
@property (readonly, nonatomic) BOOL locationServicesApproved;
@property (readonly, nonatomic) BOOL locationServicesAvailable;
@property (readonly, nonatomic) BOOL locationServicesEnabled;
@property (nonatomic, getter=isLocationServicesPreferencesDialogEnabled) BOOL locationServicesPreferencesDialogEnabled;
@property (nonatomic, getter=isMatchInfoEnabled) BOOL matchInfoEnabled;
@property (readonly, nonatomic) double maximumRegionMonitoringDistance;
@property (readonly, copy, nonatomic) NSSet *monitoredRegions;
@property (nonatomic) BOOL pausesLocationUpdatesAutomatically;
@property (nonatomic, getter=isPersistentMonitoringEnabled) BOOL persistentMonitoringEnabled;
@property (nonatomic) BOOL privateMode;
@property (copy, nonatomic) NSString *purpose;
@property (readonly, copy, nonatomic) NSSet *rangedRegions;
@property (nonatomic) BOOL supportInfo;

+ (int)_authorizationStatus;
+ (int)_authorizationStatusForBundleIdentifier:(id)arg1 bundle:(id)arg2;
+ (int)_regionMonitoringAuthorizationStatusForBundleIdentifier:(id)arg1 bundle:(id)arg2;
+ (unsigned long long)activeLocationServiceTypesForLocationDictionary:(id)arg1;
+ (BOOL)advertiseAsBeacon:(id)arg1 withPower:(id)arg2;
+ (unsigned long long)allowableAuthorizationForLocationDictionary:(id)arg1;
+ (int)authorizationStatus;
+ (int)authorizationStatusForBundle:(id)arg1;
+ (int)authorizationStatusForBundleIdentifier:(id)arg1;
+ (BOOL)bundleSupported:(id)arg1;
+ (id)dateLocationLastUsedForLocationDictionary:(id)arg1;
+ (BOOL)deferredLocationUpdatesAvailable;
+ (BOOL)dumpLogsWithMessage:(id)arg1;
+ (unsigned long long)entityAuthorizationForLocationDictionary:(id)arg1;
+ (unsigned long long)entityClassesForLocationDictionary:(id)arg1;
+ (BOOL)hasUsedBackgroundLocationServices:(id)arg1;
+ (BOOL)headingAvailable;
+ (BOOL)isEntityAuthorizedForLocationDictionary:(id)arg1;
+ (BOOL)isLocationActiveForLocationDictionary:(id)arg1;
+ (BOOL)isMonitoringAvailableForClass:(Class)arg1;
+ (BOOL)isRangingAvailable;
+ (BOOL)isStatusBarIconEnabledForLocationEntityClass:(unsigned long long)arg1;
+ (BOOL)locationServicesEnabled;
+ (BOOL)locationServicesEnabled:(BOOL)arg1;
+ (BOOL)mapCorrectionAvailable;
+ (unsigned long long)primaryEntityClassForLocationDictionary:(id)arg1;
+ (int)regionMonitoringAuthorizationStatusForBundle:(id)arg1;
+ (int)regionMonitoringAuthorizationStatusForBundleIdentifier:(id)arg1;
+ (BOOL)regionMonitoringAvailable;
+ (BOOL)regionMonitoringEnabled;
+ (void)setAuthorizationStatus:(BOOL)arg1 forBundle:(id)arg2;
+ (void)setAuthorizationStatus:(BOOL)arg1 forBundleIdentifier:(id)arg2;
+ (void)setAuthorizationStatusByType:(int)arg1 forBundle:(id)arg2;
+ (void)setAuthorizationStatusByType:(int)arg1 forBundleIdentifier:(id)arg2;
+ (void)setDefaultEffectiveBundle:(id)arg1;
+ (void)setDefaultEffectiveBundleIdentifier:(id)arg1;
+ (void)setEntityAuthorization:(unsigned long long)arg1 forLocationDictionary:(id)arg2;
+ (void)setEntityAuthorized:(BOOL)arg1 forLocationDictionary:(id)arg2;
+ (void)setLocationServicesEnabled:(BOOL)arg1;
+ (void)setStatusBarIconEnabled:(BOOL)arg1 forLocationEntityClass:(unsigned long long)arg2;
+ (id)sharedManager;
+ (BOOL)shutdownDaemon;
+ (BOOL)significantLocationChangeMonitoringAvailable;
- (void)allowDeferredLocationUpdatesUntilTraveled:(double)arg1 timeout:(double)arg2;
- (id)appsUsingLocation;
- (id)appsUsingLocationWithDetails;
- (void)dealloc;
- (void)disallowDeferredLocationUpdates;
- (void)dismissHeadingCalibrationDisplay;
- (id)init;
- (id)initWithEffectiveBundle:(id)arg1;
- (id)initWithEffectiveBundleIdentifier:(id)arg1;
- (id)initWithEffectiveBundleIdentifier:(id)arg1 bundle:(id)arg2;
- (void)markAsHavingReceivedLocation;
- (void)onClientEvent:(int)arg1 supportInfo:(id)arg2;
- (void)onClientEventAuthStatus:(id)arg1;
- (void)onClientEventAutopauseStatus:(id)arg1;
- (void)onClientEventBatch:(id)arg1;
- (void)onClientEventError:(id)arg1;
- (void)onClientEventHeading:(id)arg1;
- (void)onClientEventHeadingCalibration:(id)arg1;
- (void)onClientEventHistoricLocation:(id)arg1;
- (void)onClientEventInterrupted:(id)arg1;
- (void)onClientEventLocation:(id)arg1;
- (void)onClientEventLocationUnavailable:(id)arg1;
- (void)onClientEventRanging:(id)arg1;
- (void)onClientEventRangingError:(id)arg1;
- (void)onClientEventRegion:(id)arg1;
- (void)onClientEventRegionError:(id)arg1;
- (void)onClientEventRegionResponseDelayed:(id)arg1;
- (void)onClientEventRegionSetupCompleted:(id)arg1;
- (void)onClientEventRegionState:(id)arg1;
- (void)onClientEventSignificantLocationVisit:(id)arg1;
- (void)onClientEventVehicleHeading:(id)arg1;
- (void)onClientEventVehicleSpeed:(id)arg1;
- (void)onDidBecomeActive:(id)arg1;
- (void)onLocationRequestTimeout;
- (void)pauseLocationUpdates:(BOOL)arg1;
- (void)registerAsLocationClient;
- (void)requestAlwaysAuthorization;
- (void)requestLocation;
- (void)requestStateForRegion:(id)arg1;
- (void)requestWhenInUseAuthorization;
- (void)requestWhenInUseAuthorizationWithPrompt;
- (void)resetApps;
- (void)resumeLocationUpdates;
- (void)setIsActuallyAWatchKitExtension:(BOOL)arg1;
- (void)startAppStatusUpdates;
- (void)startMonitoringForRegion:(id)arg1;
- (void)startMonitoringForRegion:(id)arg1 desiredAccuracy:(double)arg2;
- (void)startMonitoringSignificantLocationChanges;
- (void)startMonitoringVisits;
- (void)startRangingBeaconsInRegion:(id)arg1;
- (void)startTechStatusUpdates;
- (void)startUpdatingHeading;
- (void)startUpdatingLocation;
- (void)startUpdatingLocationWithPrompt;
- (void)startUpdatingVehicleHeading;
- (void)startUpdatingVehicleSpeed;
- (void)stopAppStatusUpdates;
- (void)stopMonitoringForRegion:(id)arg1;
- (void)stopMonitoringSignificantLocationChanges;
- (void)stopMonitoringVisits;
- (void)stopRangingBeaconsInRegion:(id)arg1;
- (void)stopTechStatusUpdates;
- (void)stopUpdatingHeading;
- (void)stopUpdatingLocation;
- (void)stopUpdatingVehicleHeading;
- (void)stopUpdatingVehicleSpeed;
- (id)technologiesInUse;

@end

