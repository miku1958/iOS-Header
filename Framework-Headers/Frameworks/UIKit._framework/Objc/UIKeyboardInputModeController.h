//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSArray, NSString, UIKeyboardInputMode;
@protocol UIKeyboardInputModeControllerDelegate;

@interface UIKeyboardInputModeController : NSObject
{
    UIKeyboardInputMode *_currentInputMode;
    NSArray *_inputModesWithoutHardwareSupport;
    NSArray *_allExtensions;
    NSArray *_allowedExtensions;
    BOOL _skipExtensionInputModes;
    BOOL _cacheNeedsRefresh;
    BOOL _allExtensionsNeedRefresh;
    int _notifyPasscodeChangedToken;
    BOOL _shouldRunContinuousDiscovery;
    NSArray *keyboardInputModes;
    NSArray *keyboardInputModeIdentifiers;
    NSArray *enabledInputModes;
    NSArray *normalizedInputModes;
    NSArray *defaultKeyboardInputModes;
    NSArray *defaultRawInputModes;
    NSArray *defaultInputModes;
    NSArray *defaultNormalizedInputModes;
    UIKeyboardInputMode *_lastUsedInputMode;
    NSString *_inputModeContextIdentifier;
    id<UIKeyboardInputModeControllerDelegate> _delegate;
    UIKeyboardInputMode *_nextInputModeToUse;
    UIKeyboardInputMode *_currentUsedInputMode;
    id _extensionMatchingContext;
}

@property (readonly) NSArray *activeInputModeIdentifiers;
@property (readonly, nonatomic) NSArray *allowedExtensions; // @synthesize allowedExtensions=_allowedExtensions;
@property (readonly, nonatomic) BOOL containsDictationSupportedInputMode;
@property (strong) UIKeyboardInputMode *currentInputMode;
@property (nonatomic) UIKeyboardInputMode *currentInputModeInPreference;
@property (readonly, nonatomic) UIKeyboardInputMode *currentLinguisticInputMode;
@property (readonly, nonatomic) UIKeyboardInputMode *currentPublicInputMode;
@property (readonly, nonatomic) UIKeyboardInputMode *currentSystemInputMode;
@property (strong, nonatomic) UIKeyboardInputMode *currentUsedInputMode; // @synthesize currentUsedInputMode=_currentUsedInputMode;
@property (strong) NSArray *defaultInputModes; // @synthesize defaultInputModes;
@property (strong) NSArray *defaultKeyboardInputModes; // @synthesize defaultKeyboardInputModes;
@property (strong) NSArray *defaultNormalizedInputModes; // @synthesize defaultNormalizedInputModes;
@property (copy, nonatomic) NSArray *defaultRawInputModes; // @synthesize defaultRawInputModes;
@property (nonatomic) id<UIKeyboardInputModeControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly) NSArray *enabledInputModeIdentifiers;
@property (readonly) NSArray *enabledInputModeLanguages;
@property (strong) NSArray *enabledInputModes; // @synthesize enabledInputModes;
@property (strong, nonatomic) id extensionMatchingContext; // @synthesize extensionMatchingContext=_extensionMatchingContext;
@property (readonly, nonatomic) UIKeyboardInputMode *hardwareInputMode;
@property (copy, nonatomic) NSString *inputModeContextIdentifier; // @synthesize inputModeContextIdentifier=_inputModeContextIdentifier;
@property (readonly) NSArray *inputModesWithoutHardwareSupport;
@property (strong) NSArray *keyboardInputModeIdentifiers; // @synthesize keyboardInputModeIdentifiers;
@property (strong) NSArray *keyboardInputModes; // @synthesize keyboardInputModes;
@property (strong, nonatomic) UIKeyboardInputMode *lastUsedInputMode; // @synthesize lastUsedInputMode=_lastUsedInputMode;
@property (strong, nonatomic) UIKeyboardInputMode *nextInputModeToUse; // @synthesize nextInputModeToUse=_nextInputModeToUse;
@property (readonly) NSArray *normalizedEnabledInputModeIdentifiers;
@property (strong) NSArray *normalizedInputModes; // @synthesize normalizedInputModes;
@property (nonatomic) BOOL shouldRunContinuousDiscovery; // @synthesize shouldRunContinuousDiscovery=_shouldRunContinuousDiscovery;
@property (readonly) NSArray *supportedInputModeIdentifiers;

+ (id)sharedInputModeController;
- (id)_MCFilteredExtensionIdentifiers;
- (id)_allExtensionsFromMatchingExtensions:(id)arg1;
- (void)_beginContinuousDiscoveryIfNeeded;
- (void)_clearAllExtensionIfNeeded;
- (BOOL)_mayContainExtensionInputModes;
- (void)_removeExtensions:(id)arg1;
- (void)_setCurrentAndNextInputModePreference;
- (void)_setCurrentInputMode:(id)arg1 force:(BOOL)arg2;
- (id)_systemInputModePassingTest:(CDUnknownBlockType)arg1;
- (id)activeInputModes;
- (id)appendPasscodeInputModes:(id)arg1;
- (BOOL)currentLocaleRequiresExtendedSetup;
- (void)dealloc;
- (id)defaultEnabledInputModesForCurrentLocale:(BOOL)arg1;
- (BOOL)deviceStateIsLocked;
- (void)didEnterBackground:(id)arg1;
- (id)enabledInputModeIdentifiers:(BOOL)arg1;
- (id)extensionInputModes;
- (id)filteredTVInputModesFromInputModes:(id)arg1;
- (BOOL)identifierIsValidSystemInputMode:(id)arg1;
- (id)identifiersFromInputModes:(id)arg1;
- (id)init;
- (id)inputModeWithIdentifier:(id)arg1;
- (id)inputModesFromIdentifiers:(id)arg1;
- (void)keyboardsPreferencesChanged:(id)arg1;
- (id)nextInputModeFromList:(id)arg1 withFilter:(unsigned long long)arg2 withTraits:(id)arg3;
- (id)nextInputModeInPreferenceListForTraits:(id)arg1;
- (id)nextInputModeInPreferenceListForTraits:(id)arg1 updatePreference:(BOOL)arg2;
- (id)nextInputModeToUseForTraits:(id)arg1;
- (id)nextInputModeToUseForTraits:(id)arg1 updatePreference:(BOOL)arg2;
- (void)performWithForcedExtensionInputModes:(CDUnknownBlockType)arg1;
- (void)performWithoutExtensionInputModes:(CDUnknownBlockType)arg1;
- (void)saveDeviceUnlockPasscodeInputModes;
- (void)startConnectionForFileAtURL:(id)arg1 forInputModeIdentifier:(id)arg2;
- (void)startDictationConnectionForFileAtURL:(id)arg1 forInputModeIdentifier:(id)arg2;
- (id)suggestedInputModesForCurrentLocale;
- (id)suggestedInputModesForCurrentLocale:(BOOL)arg1 fallbackToDefaultInputModes:(BOOL)arg2;
- (id)suggestedInputModesForPreferredLanguages;
- (void)switchToCurrentSystemInputMode;
- (void)updateCurrentAndNextInputModes;
- (void)updateCurrentInputMode:(id)arg1;
- (void)updateDefaultInputModesIfNecessaryForIdiom;
- (void)updateLastUsedInputMode:(id)arg1;
- (BOOL)verifyKeyboardExtensionsWithApp;
- (void)willEnterForeground:(id)arg1;

@end

