//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKitCore/UICollectionViewLayoutAttributes.h>

#import <UIKitCore/UICollectionViewTableAllRowAttributes-Protocol.h>
#import <UIKitCore/UICollectionViewTableSectionHeaderFooterAttributes-Protocol.h>

@class UIColor, UIVisualEffect;

@interface UICollectionViewTableLayoutAttributes : UICollectionViewLayoutAttributes <UICollectionViewTableSectionHeaderFooterAttributes, UICollectionViewTableAllRowAttributes>
{
    BOOL _separatorInsetIsRelativeToCellEdges;
    BOOL _shouldIndentWhileEditing;
    BOOL _showsReorderControl;
    BOOL _layoutMarginsFollowReadableWidth;
    BOOL _insetsContentViewsToSafeArea;
    BOOL _drawsSeparatorAtTopOfSection;
    BOOL _drawsSeparatorAtBottomOfSection;
    BOOL _isHeader;
    BOOL _floating;
    int _sectionLocation;
    long long _separatorStyle;
    UIColor *_separatorColor;
    UIVisualEffect *_separatorEffect;
    UIColor *_backgroundColor;
    long long _accessoryType;
    long long _editingStyle;
    double _defaultLeadingCellMarginWidth;
    double _defaultTrailingCellMarginWidth;
    double _indexBarExtentFromEdge;
    double _sectionBorderWidth;
    long long _indentationLevel;
    double _maxTitleWidth;
    long long _textAlignment;
    struct UIEdgeInsets _separatorInset;
    struct UIEdgeInsets _backgroundInset;
    struct UIEdgeInsets _margins;
}

@property (nonatomic) long long accessoryType; // @synthesize accessoryType=_accessoryType;
@property (copy, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property (nonatomic) struct UIEdgeInsets backgroundInset; // @synthesize backgroundInset=_backgroundInset;
@property (nonatomic) double defaultLeadingCellMarginWidth; // @synthesize defaultLeadingCellMarginWidth=_defaultLeadingCellMarginWidth;
@property (nonatomic) double defaultTrailingCellMarginWidth; // @synthesize defaultTrailingCellMarginWidth=_defaultTrailingCellMarginWidth;
@property (nonatomic) BOOL drawsSeparatorAtBottomOfSection; // @synthesize drawsSeparatorAtBottomOfSection=_drawsSeparatorAtBottomOfSection;
@property (nonatomic) BOOL drawsSeparatorAtTopOfSection; // @synthesize drawsSeparatorAtTopOfSection=_drawsSeparatorAtTopOfSection;
@property (nonatomic) long long editingStyle; // @synthesize editingStyle=_editingStyle;
@property (nonatomic) BOOL floating; // @synthesize floating=_floating;
@property (nonatomic) long long indentationLevel; // @synthesize indentationLevel=_indentationLevel;
@property (nonatomic) double indexBarExtentFromEdge; // @synthesize indexBarExtentFromEdge=_indexBarExtentFromEdge;
@property (nonatomic) BOOL insetsContentViewsToSafeArea; // @synthesize insetsContentViewsToSafeArea=_insetsContentViewsToSafeArea;
@property (nonatomic) BOOL isHeader; // @synthesize isHeader=_isHeader;
@property (nonatomic) BOOL layoutMarginsFollowReadableWidth; // @synthesize layoutMarginsFollowReadableWidth=_layoutMarginsFollowReadableWidth;
@property (nonatomic) struct UIEdgeInsets margins; // @synthesize margins=_margins;
@property (nonatomic) double maxTitleWidth; // @synthesize maxTitleWidth=_maxTitleWidth;
@property (nonatomic) double sectionBorderWidth; // @synthesize sectionBorderWidth=_sectionBorderWidth;
@property (nonatomic) int sectionLocation; // @synthesize sectionLocation=_sectionLocation;
@property (copy, nonatomic) UIColor *separatorColor; // @synthesize separatorColor=_separatorColor;
@property (strong, nonatomic) UIVisualEffect *separatorEffect; // @synthesize separatorEffect=_separatorEffect;
@property (nonatomic) struct UIEdgeInsets separatorInset; // @synthesize separatorInset=_separatorInset;
@property (nonatomic) BOOL separatorInsetIsRelativeToCellEdges; // @synthesize separatorInsetIsRelativeToCellEdges=_separatorInsetIsRelativeToCellEdges;
@property (nonatomic) long long separatorStyle; // @synthesize separatorStyle=_separatorStyle;
@property (nonatomic) BOOL shouldIndentWhileEditing; // @synthesize shouldIndentWhileEditing=_shouldIndentWhileEditing;
@property (nonatomic) BOOL showsReorderControl; // @synthesize showsReorderControl=_showsReorderControl;
@property (nonatomic) long long textAlignment; // @synthesize textAlignment=_textAlignment;

+ (void)applyValuesFromAttributes:(id)arg1 toAttributes:(id)arg2 valueOptions:(long long)arg3;
+ (long long)automaticValueOptionsForRepresentedElementCategory:(unsigned long long)arg1;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqual:(id)arg1;

@end

