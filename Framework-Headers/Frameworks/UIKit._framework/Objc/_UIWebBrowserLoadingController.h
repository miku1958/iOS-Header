//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <UIKitCore/WebFrameLoadDelegate-Protocol.h>

@class NSArray, NSError, NSString, NSURL, UIWebBrowserView, WebDataSource;
@protocol _UIWebBrowserLoadingControllerDelegate;

__attribute__((visibility("hidden")))
@interface _UIWebBrowserLoadingController : NSObject <WebFrameLoadDelegate>
{
    NSURL *_backURL;
    NSURL *_forwardURL;
    NSArray *_fallbackURLs;
    BOOL _securePageHasInsecureContent;
    NSString *_lastSuccessfulURLString;
    BOOL _loadEndedWithError;
    BOOL _loadStoppedFromAPI;
    NSError *_errorThatCausedLoadToEnd;
    WebDataSource *_dataSourceWithError;
    unsigned int _pendingFrameLoadMessages;
    NSString *_userTypedAddress;
    BOOL _canGoBack;
    BOOL _canGoForward;
    BOOL _loading;
    float _estimatedProgress;
    id<_UIWebBrowserLoadingControllerDelegate> _delegate;
    UIWebBrowserView *_browserView;
    NSString *_title;
    NSString *_URLString;
    NSURL *_URL;
    long long _loadingState;
}

@property (strong, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property (readonly, nonatomic) NSString *URLString; // @synthesize URLString=_URLString;
@property (strong, nonatomic) UIWebBrowserView *browserView; // @synthesize browserView=_browserView;
@property (readonly, nonatomic) BOOL canGoBack; // @synthesize canGoBack=_canGoBack;
@property (readonly, nonatomic) BOOL canGoForward; // @synthesize canGoForward=_canGoForward;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) id<_UIWebBrowserLoadingControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) float estimatedProgress; // @synthesize estimatedProgress=_estimatedProgress;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic, getter=isLoading) BOOL loading; // @synthesize loading=_loading;
@property (nonatomic) long long loadingState; // @synthesize loadingState=_loadingState;
@property (readonly, nonatomic, getter=isSecure) BOOL secure;
@property (readonly) Class superclass;
@property (copy, nonatomic) NSString *title; // @synthesize title=_title;

- (BOOL)_URLMayStartLoad:(id)arg1;
- (void)_attemptTransitionToLoadingState:(long long)arg1;
- (id)_dataSourceURL;
- (void)_didNotLoadURL;
- (id)_getDataSourceURL:(id)arg1;
- (void)_loadRequest:(id)arg1 userDriven:(BOOL)arg2;
- (void)_performWebViewLoadSelector:(SEL)arg1 forceProgress:(BOOL)arg2;
- (void)_progressChanged:(id)arg1;
- (void)_setBackURL:(id)arg1;
- (void)_setFallbackURLs:(id)arg1;
- (void)_setForwardURL:(id)arg1;
- (void)_setLoading:(BOOL)arg1 withError:(BOOL)arg2;
- (void)_setLoading:(BOOL)arg1 withError:(BOOL)arg2 fromDelegate:(BOOL)arg3 fromFragmentLoad:(BOOL)arg4;
- (void)_setLoading:(BOOL)arg1 withError:(BOOL)arg2 fromFragmentLoad:(BOOL)arg3;
- (void)_setLoadingFromDelegate:(BOOL)arg1 withError:(id)arg2 dataSource:(id)arg3;
- (void)_setSecurePageHasInsecureContent:(BOOL)arg1;
- (void)_setUserTypedAddress:(id)arg1;
- (void)_tryMultipleURLs:(id)arg1;
- (void)_updateAfterHistoryChange;
- (void)_updateBackForward;
- (void)_updateURL;
- (void)_updateURLString;
- (void)dealloc;
- (void)goBack;
- (void)goForward;
- (void)loadUserTypedAddress:(id)arg1;
- (void)reload;
- (void)stopLoading;
- (void)webView:(id)arg1 didCancelClientRedirectForFrame:(id)arg2;
- (void)webView:(id)arg1 didChangeLocationWithinPageForFrame:(id)arg2;
- (void)webView:(id)arg1 didCommitLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didFailProvisionalLoadWithError:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didPopStateWithinPageForFrame:(id)arg2;
- (void)webView:(id)arg1 didPushStateWithinPageForFrame:(id)arg2;
- (void)webView:(id)arg1 didReceiveServerRedirectForProvisionalLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didReceiveTitle:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didReplaceStateWithinPageForFrame:(id)arg2;
- (void)webView:(id)arg1 didRunInsecureContent:(id)arg2;
- (void)webView:(id)arg1 didStartProvisionalLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 willPerformClientRedirectToURL:(id)arg2 delay:(double)arg3 fireDate:(id)arg4 forFrame:(id)arg5;
- (void)webViewDidDisplayInsecureContent:(id)arg1;

@end

