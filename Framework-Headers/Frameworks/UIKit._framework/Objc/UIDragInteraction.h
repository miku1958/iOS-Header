//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <UIKitCore/UIGestureRecognizerDelegate-Protocol.h>
#import <UIKitCore/UIInteraction-Protocol.h>
#import <UIKitCore/_UIDragInteractionDriverDelegate-Protocol.h>
#import <UIKitCore/_UIViewInternalDraggingSourceDelegate-Protocol.h>

@class NSArray, NSString, UIDragInteractionContextImpl, UIView, _UIDragAddItemsGesture, _UIDragSessionImpl;
@protocol UIDragInteractionDelegate, UIDragInteractionEffect, _UIDragInteractionDriving, _UIDragInteractionPresentationDelegate;

@interface UIDragInteraction : NSObject <UIGestureRecognizerDelegate, _UIViewInternalDraggingSourceDelegate, _UIDragInteractionDriverDelegate, UIInteraction>
{
    BOOL _didSetEnabled;
    BOOL _enabled;
    _UIDragSessionImpl *_preliminarySession;
    _UIDragSessionImpl *_sessionForAddingItems;
    UIDragInteractionContextImpl *_interactionContext;
    _UIDragAddItemsGesture *_gestureRecognizerForAddingItems;
    BOOL _allowsSimultaneousRecognitionDuringLift;
    BOOL _cancellationTimerEnabled;
    BOOL _competingLongPressOnLift;
    BOOL _acceleratedDragGestureEnabled;
    BOOL _automaticallyAddsFailureRelationships;
    BOOL _allowsMultipleSessions;
    BOOL _additionalTouchesCancelLift;
    id<UIDragInteractionDelegate> _delegate;
    UIView *_view;
    id<_UIDragInteractionDriving> _initiationDriver;
    id<_UIDragInteractionPresentationDelegate> _presentationDelegate;
    id<UIDragInteractionEffect> _interactionEffect;
    double _liftDelay;
    double _cancellationDelay;
    double _competingLongPressDelay;
    double _liftMoveHysteresis;
    long long _addItemsGestureConfiguration;
    NSArray *_allowedTouchTypes;
}

@property (nonatomic, getter=_isAcceleratedDragGestureEnabled, setter=_setAcceleratedDragGestureEnabled:) BOOL acceleratedDragGestureEnabled; // @synthesize acceleratedDragGestureEnabled=_acceleratedDragGestureEnabled;
@property (nonatomic, getter=_addItemsGestureConfiguration, setter=_setAddItemsGestureConfiguration:) long long addItemsGestureConfiguration; // @synthesize addItemsGestureConfiguration=_addItemsGestureConfiguration;
@property (nonatomic, getter=_additionalTouchesCancelLift, setter=_setAdditionalTouchesCancelLift:) BOOL additionalTouchesCancelLift; // @synthesize additionalTouchesCancelLift=_additionalTouchesCancelLift;
@property (copy, nonatomic, getter=_allowedTouchTypes, setter=_setAllowedTouchTypes:) NSArray *allowedTouchTypes; // @synthesize allowedTouchTypes=_allowedTouchTypes;
@property (nonatomic, getter=_allowsMultipleSessions, setter=_setAllowsMultipleSessions:) BOOL allowsMultipleSessions; // @synthesize allowsMultipleSessions=_allowsMultipleSessions;
@property (nonatomic) BOOL allowsSimultaneousRecognitionDuringLift; // @synthesize allowsSimultaneousRecognitionDuringLift=_allowsSimultaneousRecognitionDuringLift;
@property (nonatomic, getter=_automaticallyAddsFailureRelationships, setter=_setAutomaticallyAddsFailureRelationships:) BOOL automaticallyAddsFailureRelationships; // @synthesize automaticallyAddsFailureRelationships=_automaticallyAddsFailureRelationships;
@property (nonatomic, getter=_cancellationDelay, setter=_setCancellationDelay:) double cancellationDelay; // @synthesize cancellationDelay=_cancellationDelay;
@property (nonatomic, getter=_isCancellationTimerEnabled, setter=_setCancellationTimerEnabled:) BOOL cancellationTimerEnabled; // @synthesize cancellationTimerEnabled=_cancellationTimerEnabled;
@property (nonatomic, getter=_competingLongPressDelay, setter=_setCompetingLongPressDelay:) double competingLongPressDelay; // @synthesize competingLongPressDelay=_competingLongPressDelay;
@property (nonatomic, getter=_competingLongPressOnLift, setter=_setCompetingLongPressOnLift:) BOOL competingLongPressOnLift; // @synthesize competingLongPressOnLift=_competingLongPressOnLift;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, weak, nonatomic) id<UIDragInteractionDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, getter=isEnabled) BOOL enabled;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic, getter=_initiationDriver, setter=_setInitiationDriver:) id<_UIDragInteractionDriving> initiationDriver; // @synthesize initiationDriver=_initiationDriver;
@property (strong, nonatomic) id<UIDragInteractionEffect> interactionEffect; // @synthesize interactionEffect=_interactionEffect;
@property (nonatomic, getter=_liftDelay, setter=_setLiftDelay:) double liftDelay; // @synthesize liftDelay=_liftDelay;
@property (nonatomic, getter=_liftMoveHysteresis, setter=_setLiftMoveHysteresis:) double liftMoveHysteresis; // @synthesize liftMoveHysteresis=_liftMoveHysteresis;
@property (weak, nonatomic, getter=_presentationDelegate, setter=_setPresentationDelegate:) id<_UIDragInteractionPresentationDelegate> presentationDelegate; // @synthesize presentationDelegate=_presentationDelegate;
@property (readonly) Class superclass;
@property (weak, nonatomic) UIView *view; // @synthesize view=_view;

+ (void)_cancelAllDrags;
+ (BOOL)isEnabledByDefault;
- (void).cxx_destruct;
- (BOOL)_accessibilityAddItemsToDragSessionAtPoint:(struct CGPoint)arg1;
- (BOOL)_accessibilityCanAddItemsToDragSession;
- (void)_accessibilityPrepareForDragAtPoint:(struct CGPoint)arg1 completion:(CDUnknownBlockType)arg2;
- (BOOL)_addItemsWithTouchPoint:(struct CGPoint)arg1;
- (void)_beginDragWithTouches:(id)arg1 itemUpdater:(CDUnknownBlockType)arg2;
- (BOOL)_beginLiftForItems:(id)arg1 session:(id)arg2 animated:(BOOL)arg3;
- (BOOL)_canDragFromView:(id)arg1;
- (void)_cancelDrag;
- (void)_cancelLift;
- (long long)_dataOwnerOfDragFromView:(id)arg1;
- (void)_endLiftWithoutDragging;
- (void)_finalizeLiftCancellation;
- (void)_gestureRecognizerFailed:(id)arg1;
- (void)_handoffSession:(id)arg1;
- (void)_immediatelyBeginDragWithTouch:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (BOOL)_isActive;
- (id)_itemsToDragFromView:(id)arg1;
- (struct CGPoint)_locationInView:(id)arg1;
- (BOOL)_prepareForLiftAtPoint:(struct CGPoint)arg1 invocationType:(long long)arg2 completion:(CDUnknownBlockType)arg3;
- (BOOL)_queryDelegate:(id)arg1 forItemsForAddingToSession:(id)arg2 atPoint:(struct CGPoint)arg3 completion:(CDUnknownBlockType)arg4;
- (id)_queryDelegate:(id)arg1 forItemsForBeginningSession:(id)arg2;
- (void)_queryDelegate:(id)arg1 forLiftPreviewsUsingItems:(id)arg2 session:(id)arg3;
- (id)_requiredContextIDsForDragSessionInView:(id)arg1;
- (BOOL)_session:(id)arg1 item:(id)arg2 shouldDelaySetDownAnimationWithCompletion:(CDUnknownBlockType)arg3;
- (void)_session:(id)arg1 item:(id)arg2 willCancelWithAnimator:(id)arg3;
- (unsigned long long)_session:(id)arg1 sourceOperationMaskForDraggingWithinApp:(BOOL)arg2;
- (id)_session:(id)arg1 targetedPreviewForCancellingItem:(id)arg2 duiPreview:(id)arg3 snapshotView:(id)arg4 window:(id)arg5;
- (void)_session:(id)arg1 willAddItems:(id)arg2 forInteraction:(id)arg3;
- (void)_sessionDidEnd:(id)arg1 withOperation:(unsigned long long)arg2;
- (void)_sessionDidMove:(id)arg1;
- (void)_sessionDidTransferItems:(id)arg1;
- (BOOL)_sessionDynamicallyUpdatesPrefersFullSizePreviews:(id)arg1;
- (void)_sessionHandedOffDragImage:(id)arg1;
- (BOOL)_sessionPrefersFullSizePreviews:(id)arg1;
- (void)_sessionWillBegin:(id)arg1;
- (void)_sessionWillEnd:(id)arg1 withOperation:(unsigned long long)arg2;
- (void)_updateDriverParameters;
- (void)_updateInteractionEffectWithContext:(id)arg1 notifyDelegate:(BOOL)arg2;
- (void)_view:(id)arg1 willBeginDraggingWithSession:(id)arg2;
- (void)_viewFailedToDrag:(id)arg1;
- (BOOL)_viewSupportsSystemDrag:(id)arg1;
- (void)didMoveToView:(id)arg1;
- (void)dragDriver:(id)arg1 beginDragWithTouches:(id)arg2 itemUpdater:(CDUnknownBlockType)arg3 beginningSessionHandler:(CDUnknownBlockType)arg4;
- (BOOL)dragDriver:(id)arg1 canExcludeCompetingGestureRecognizer:(id)arg2;
- (BOOL)dragDriver:(id)arg1 competingGestureRecognizerShouldDelayLift:(id)arg2;
- (BOOL)dragDriver:(id)arg1 prepareToLiftWithCompletion:(CDUnknownBlockType)arg2;
- (BOOL)dragDriver:(id)arg1 shouldBeginAtLocation:(struct CGPoint)arg2;
- (BOOL)dragDriver:(id)arg1 shouldDelayCompetingGestureRecognizer:(id)arg2;
- (BOOL)dragDriverBeginLift:(id)arg1;
- (void)dragDriverCancelAddItemsGesture:(id)arg1;
- (void)dragDriverCancelLift:(id)arg1;
- (BOOL)dragDriverWantsExclusionOverride:(id)arg1;
- (BOOL)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;
- (BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (BOOL)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;
- (BOOL)gestureRecognizerShouldBegin:(id)arg1;
- (id)initWithDelegate:(id)arg1;
- (double)liftDelay;
- (void)setDragCancellationDelay:(double)arg1;
- (void)setLiftDelay:(double)arg1;
- (void)willMoveToView:(id)arg1;

@end

