//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <UIKitCore/NSSecureCoding-Protocol.h>

@class NSArray, NSMutableArray, NSMutableSet, NSSet;
@protocol UITapRecognizerDelegate;

__attribute__((visibility("hidden")))
@interface UITapRecognizer : NSObject <NSSecureCoding>
{
    unsigned long long _numberOfTouchesRequired;
    unsigned long long _numberOfTapsRequired;
    long long _buttonMaskRequired;
    BOOL _continuousTapRecognition;
    NSMutableSet *_activeTouches;
    int _currentNumberOfTouches;
    int _currentNumberOfTaps;
    int _numberOfTouchesForCurrentTap;
    struct CGPoint _location;
    struct CGPoint _startPoint;
    struct CGPoint _digitizerLocation;
    double _allowableMovement;
    double _allowableSeparation;
    double _allowableTouchTimeSeparation;
    double _maximumSingleTapDuration;
    double _maximumTapDuration;
    double _minimumTapDuration;
    double _startTime;
    double _maximumIntervalBetweenSuccessiveTaps;
    NSMutableArray *_touches;
    long long _strongestDirectionalAxis;
    double _strongestDirectionalForce;
    unsigned int _timerOn:1;
    unsigned int _multitouchTimerOn:1;
    unsigned int _noNewTouches:1;
    unsigned int _hasPointerTouch:1;
    BOOL _countsOnlyActiveTouches;
    id<UITapRecognizerDelegate> _delegate;
    long long _exclusiveDirectionalAxis;
}

@property (readonly, nonatomic) NSSet *activeTouches;
@property (nonatomic) double allowableMovement;
@property (nonatomic) double allowableSeparation;
@property (nonatomic) double allowableTouchTimeSeparation; // @synthesize allowableTouchTimeSeparation=_allowableTouchTimeSeparation;
@property (nonatomic) long long buttonMaskRequired; // @synthesize buttonMaskRequired=_buttonMaskRequired;
@property (nonatomic) BOOL continuousTapRecognition;
@property (nonatomic) BOOL countsOnlyActiveTouches; // @synthesize countsOnlyActiveTouches=_countsOnlyActiveTouches;
@property (weak, nonatomic) id<UITapRecognizerDelegate> delegate; // @synthesize delegate=_delegate;
@property (nonatomic) long long exclusiveDirectionalAxis; // @synthesize exclusiveDirectionalAxis=_exclusiveDirectionalAxis;
@property (nonatomic) double maximumIntervalBetweenSuccessiveTaps;
@property (nonatomic) double maximumSingleTapDuration;
@property (nonatomic) double maximumTapDuration; // @synthesize maximumTapDuration=_maximumTapDuration;
@property (nonatomic) double minimumTapDuration; // @synthesize minimumTapDuration=_minimumTapDuration;
@property (nonatomic) unsigned long long numberOfTapsRequired; // @synthesize numberOfTapsRequired=_numberOfTapsRequired;
@property (nonatomic) unsigned long long numberOfTouchesRequired; // @synthesize numberOfTouchesRequired=_numberOfTouchesRequired;
@property (readonly, nonatomic) NSArray *touches; // @synthesize touches=_touches;

+ (BOOL)supportsSecureCoding;
- (void).cxx_destruct;
- (void)_beginInteraction;
- (struct CGPoint)_digitizerLocation;
- (double)_effectiveAllowableMovement;
- (void)_interactionEndedTouch:(BOOL)arg1;
- (struct CGPoint)_locationInSceneReferenceSpace;
- (void)_reset;
- (void)_updateDigitizerLocationForEvent:(id)arg1;
- (BOOL)activeTouchesExceedAllowableSeparation;
- (void)clearMultitouchTimer;
- (void)clearTapTimer;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (struct CGPoint)locationInView:(id)arg1;
- (struct CGPoint)locationInView:(id)arg1 focusSystem:(id)arg2;
- (void)multitouchExpired:(id)arg1;
- (void)pressesBegan:(id)arg1 withEvent:(id)arg2;
- (void)pressesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)pressesChanged:(id)arg1 withEvent:(id)arg2;
- (void)pressesEnded:(id)arg1 withEvent:(id)arg2;
- (void)startMultitouchTimer:(double)arg1;
- (void)startTapTimer:(double)arg1;
- (void)tooSlow:(id)arg1;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;

@end

