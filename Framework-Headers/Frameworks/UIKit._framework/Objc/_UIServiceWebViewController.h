//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import <UIKit/_UIServiceWebViewControllerProtocol-Protocol.h>
#import <UIKit/_UIWebBrowserLoadingControllerDelegate-Protocol.h>

@class NSString, _UIServiceWebView, _UIWebBrowserLoadingController;

__attribute__((visibility("hidden")))
@interface _UIServiceWebViewController : UIViewController <_UIServiceWebViewControllerProtocol, _UIWebBrowserLoadingControllerDelegate>
{
    _UIServiceWebView *_uiWebView;
    _UIWebBrowserLoadingController *_loadingController;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

+ (id)_exportedInterface;
+ (id)_remoteViewControllerInterface;
- (BOOL)_isInternalInstall;
- (id)_makeAlertView;
- (void)_remotelyDecidePolicyForRequest:(id)arg1 inMainFrame:(BOOL)arg2 navigationType:(id)arg3 decisionHandler:(CDUnknownBlockType)arg4;
- (void)_remotelyDispatchDidDismissViewController;
- (void)_remotelyDispatchWillPresentViewControllerWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_webContentSizeWithReplyHandler:(CDUnknownBlockType)arg1;
- (void)_willAppearInRemoteViewController;
- (void)browserLoadingController:(id)arg1 didFinishLoadingWithError:(id)arg2 dataSource:(id)arg3;
- (void)browserLoadingControllerDidStartLoading:(id)arg1;
- (void)browserLoadingControllerDidUpdateBackForward:(id)arg1;
- (void)browserLoadingControllerDidUpdateEstimatedProgress:(id)arg1;
- (void)browserLoadingControllerDidUpdateTitle:(id)arg1;
- (void)browserLoadingControllerDidUpdateURLString:(id)arg1;
- (void)configureWithEncodedSettings:(id)arg1;
- (void)dealloc;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)goBack;
- (void)goForward;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)loadEncodedRequest:(id)arg1;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (void)loadUserTypedAddress:(id)arg1;
- (void)loadView;
- (void)reload;
- (void)setShouldDecidePolicyRemotely:(BOOL)arg1;
- (BOOL)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)stopLoading;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;

@end

