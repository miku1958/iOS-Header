//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIView.h>

#import <UIKit/UIAccessibilityHUDGestureHosting-Protocol.h>
#import <UIKit/UIBarPositioning-Protocol.h>
#import <UIKit/UIGestureRecognizerDelegatePrivate-Protocol.h>
#import <UIKit/_UIBarPositioningInternal-Protocol.h>

@class NSArray, NSString, UIAccessibilityHUDGestureManager, UIColor, _UIToolbarVisualProvider;
@protocol UIToolbarDelegate;

@interface UIToolbar : UIView <UIAccessibilityHUDGestureHosting, _UIBarPositioningInternal, UIGestureRecognizerDelegatePrivate, UIBarPositioning>
{
    id<UIToolbarDelegate> _delegate;
    NSArray *_items;
    UIColor *_barTintColor;
    struct {
        unsigned int barStyle:3;
        unsigned int barTranslucence:3;
        unsigned int isLocked:1;
        unsigned int linkedBeforeWhitetailAndInitializedFromCoder:1;
        unsigned int disableBlurTinting:1;
    } _toolbarFlags;
    id __appearanceStorage;
    _UIToolbarVisualProvider *_visualProvider;
    UIAccessibilityHUDGestureManager *_axHUDGestureManager;
    unsigned long long _disableAutolayoutWarnings;
    BOOL __wantsLetterpressContent;
    BOOL _centerTextButtons;
    UIView *_shadowView;
    long long _barPosition;
    NSArray *_backgroundEffects;
}

@property (strong, nonatomic, getter=_backdropViewLayerGroupName, setter=_setBackdropViewLayerGroupName:) NSString *_backdropViewLayerGroupName;
@property (strong, nonatomic, setter=_setBackgroundView:) UIView *_backgroundView;
@property (readonly, nonatomic) long long _barTranslucence;
@property (nonatomic, setter=_setDisableBlurTinting:) BOOL _disableBlurTinting;
@property (nonatomic, setter=_setHidesShadow:) BOOL _hidesShadow;
@property (nonatomic, getter=_isLocked, setter=_setLocked:) BOOL _locked;
@property (strong, nonatomic, setter=_setShadowView:) UIView *_shadowView; // @synthesize _shadowView;
@property (readonly, nonatomic) BOOL _shouldStretchDuringCrossfadeTransition;
@property (nonatomic, setter=_setWantsLetterpressContent:) BOOL _wantsLetterpressContent; // @synthesize _wantsLetterpressContent=__wantsLetterpressContent;
@property (copy, nonatomic) NSArray *backgroundEffects; // @synthesize backgroundEffects=_backgroundEffects;
@property (readonly, nonatomic) long long barPosition; // @synthesize barPosition=_barPosition;
@property (nonatomic) long long barStyle;
@property (strong, nonatomic) UIColor *barTintColor; // @synthesize barTintColor=_barTintColor;
@property (nonatomic) BOOL centerTextButtons; // @synthesize centerTextButtons=_centerTextButtons;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<UIToolbarDelegate> delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (copy, nonatomic) NSArray *items; // @synthesize items=_items;
@property (readonly, nonatomic, getter=isMinibar) BOOL minibar;
@property (readonly) Class superclass;
@property (strong, nonatomic) UIColor *tintColor; // @dynamic tintColor;
@property (nonatomic, getter=isTranslucent) BOOL translucent;

+ (id)defaultButtonFont;
+ (double)defaultHeight;
+ (double)defaultHeightForBarSize:(int)arg1;
- (void).cxx_destruct;
- (id)__appearanceStorage;
- (id)_accessibilityHUDGestureManager:(id)arg1 HUDItemForPoint:(struct CGPoint)arg2;
- (void)_accessibilityHUDGestureManager:(id)arg1 gestureLiftedAtPoint:(struct CGPoint)arg2;
- (BOOL)_accessibilityHUDGestureManager:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (double)_autolayoutSpacingAtEdge:(int)arg1 forAttribute:(long long)arg2 inContainer:(id)arg3 isGuide:(BOOL)arg4;
- (long long)_barPosition;
- (BOOL)_contentHuggingDefault_isUsuallyFixedHeight;
- (void)_customViewChangedForButtonItem:(id)arg1;
- (double)_defaultAutolayoutSpacing;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (void)_doCommonToolbarInit;
- (id)_effectiveBarTintColor;
- (void)_effectiveBarTintColorDidChangeWithPreviousColor:(id)arg1;
- (struct CGRect)_frameOfBarButtonItem:(id)arg1;
- (void)_frameOrBoundsChangedWithVisibleSizeChange:(BOOL)arg1 wasMinibar:(BOOL)arg2;
- (void)_frameOrCenterChanged;
- (BOOL)_hasCustomAutolayoutNeighborSpacingForAttribute:(long long *)arg1;
- (BOOL)_hostsLayoutEngineAllowsTAMIC_NO;
- (id)_itemAtPoint:(struct CGPoint)arg1;
- (BOOL)_linkedBeforeWhitetailAndInitializedFromCoder;
- (void)_populateArchivedSubviews:(id)arg1;
- (void)_positionToolbarButtonsAndResetFontScaleAdjustment:(BOOL)arg1;
- (void)_sendAction:(id)arg1 withEvent:(id)arg2;
- (void)_setBarPosition:(long long)arg1;
- (void)_setButtonBackgroundImage:(id)arg1 mini:(id)arg2 forStates:(unsigned long long)arg3;
- (void)_setForceTopBarAppearance:(BOOL)arg1;
- (void)_setNeedsBackgroundViewUpdate;
- (void)_setVisualAltitude:(double)arg1;
- (void)_setVisualAltitudeBias:(struct CGSize)arg1;
- (void)_setupAXHUDGestureIfNecessary;
- (BOOL)_subclassImplementsDrawRect;
- (void)_updateBackgroundView;
- (void)_updateBarForStyle;
- (void)addConstraint:(id)arg1;
- (void)backdropView:(id)arg1 didChangeToGraphicsQuality:(long long)arg2;
- (id)backgroundImageForToolbarPosition:(long long)arg1 barMetrics:(long long)arg2;
- (void)dealloc;
- (struct CGSize)defaultSizeForOrientation:(long long)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initInView:(id)arg1 withFrame:(struct CGRect)arg2 withItemList:(id)arg3;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (struct CGSize)intrinsicContentSize;
- (void)invalidateIntrinsicContentSize;
- (BOOL)isElementAccessibilityExposedToInterfaceBuilder;
- (void)layoutSubviews;
- (BOOL)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)removeConstraint:(id)arg1;
- (void)setBackgroundImage:(id)arg1 forToolbarPosition:(long long)arg2 barMetrics:(long long)arg3;
- (void)setBounds:(struct CGRect)arg1;
- (void)setCenter:(struct CGPoint)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)setItems:(id)arg1 animated:(BOOL)arg2;
- (void)setShadowImage:(id)arg1 forToolbarPosition:(long long)arg2;
- (void)setTranslatesAutoresizingMaskIntoConstraints:(BOOL)arg1;
- (id)shadowImageForToolbarPosition:(long long)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)traitCollectionDidChange:(id)arg1;

@end

