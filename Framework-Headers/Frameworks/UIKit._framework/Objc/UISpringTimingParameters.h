//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <UIKitCore/NSSecureCoding-Protocol.h>
#import <UIKitCore/UITimingCurveProvider-Protocol.h>

@class UICubicTimingParameters;

@interface UISpringTimingParameters : NSObject <NSSecureCoding, UITimingCurveProvider>
{
    BOOL _implicitDuration;
    double _dampingRatio;
    double _mass;
    double _stiffness;
    double _damping;
    struct CGVector _initialVelocity;
}

@property (readonly, nonatomic) UICubicTimingParameters *cubicTimingParameters;
@property (nonatomic) double damping; // @synthesize damping=_damping;
@property (readonly, nonatomic) double dampingRatio; // @synthesize dampingRatio=_dampingRatio;
@property (nonatomic) BOOL implicitDuration; // @synthesize implicitDuration=_implicitDuration;
@property (readonly, nonatomic) struct CGVector initialVelocity; // @synthesize initialVelocity=_initialVelocity;
@property (nonatomic) double mass; // @synthesize mass=_mass;
@property (readonly, nonatomic) double settlingDuration;
@property (readonly, nonatomic) UISpringTimingParameters *springTimingParameters;
@property (nonatomic) double stiffness; // @synthesize stiffness=_stiffness;
@property (readonly, nonatomic) long long timingCurveType;

+ (void)_convertDampingRatio:(double)arg1 response:(double)arg2 toMass:(double *)arg3 stiffness:(double *)arg4 damping:(double *)arg5;
+ (void)_convertMass:(double)arg1 stiffness:(double)arg2 damping:(double)arg3 toDampingRatio:(double *)arg4 response:(double *)arg5;
+ (BOOL)supportsSecureCoding;
- (id)_mediaTimingFunction;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (id)effectiveTimingFunction;
- (void)encodeWithCoder:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithDampingRatio:(double)arg1;
- (id)initWithDampingRatio:(double)arg1 initialVelocity:(struct CGVector)arg2;
- (id)initWithDampingRatio:(double)arg1 response:(double)arg2;
- (id)initWithDampingRatio:(double)arg1 response:(double)arg2 initialVelocity:(struct CGVector)arg3;
- (id)initWithMass:(double)arg1 stiffness:(double)arg2 damping:(double)arg3 initialVelocity:(struct CGVector)arg4;
- (id)initWithVelocity:(struct CGVector)arg1;
- (BOOL)isEqual:(id)arg1;

@end

