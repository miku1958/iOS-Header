//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/NSObject.h>

#import <Security/NSURLSessionDelegate-Protocol.h>

@class NSArray, NSDictionary, NSString, NSURL, SFAnalyticsLoggerSQLiteStore;
@protocol OS_dispatch_queue;

@interface SFAnalyticsLogger : NSObject <NSURLSessionDelegate>
{
    SFAnalyticsLoggerSQLiteStore *_database;
    NSURL *_splunkUploadURL;
    NSString *_splunkTopicName;
    NSURL *_splunkBagURL;
    NSObject<OS_dispatch_queue> *_queue;
    long long _secondsBetweenUploads;
    NSDictionary *_metricsBase;
    NSArray *_blacklistedFields;
    NSArray *_blacklistedEvents;
    unsigned int _allowInsecureSplunkCert:1;
    unsigned int _disableLogging:1;
    unsigned int _disableUploads:1;
    unsigned int _ignoreServersMessagesTellingUsToGoAway:1;
}

@property (readonly) BOOL allowsInsecureSplunkCert;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property BOOL ignoreServerDisablingMessages;
@property (readonly) NSURL *splunkBagURL; // @synthesize splunkBagURL=_splunkBagURL;
@property (readonly) NSObject<OS_dispatch_queue> *splunkLoggingQueue; // @synthesize splunkLoggingQueue=_queue;
@property (readonly) NSString *splunkTopicName; // @synthesize splunkTopicName=_splunkTopicName;
@property (readonly) NSURL *splunkUploadURL; // @synthesize splunkUploadURL=_splunkUploadURL;
@property (readonly) Class superclass;

+ (id)databasePath;
+ (long long)fuzzyDaysSinceDate:(id)arg1;
+ (id)logger;
- (void).cxx_destruct;
- (void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (BOOL)_onQueuePostJSON:(id)arg1 error:(id *)arg2;
- (id)datePropertyForKey:(id)arg1;
- (id)eventDictForEventName:(id)arg1 withAttributes:(id)arg2 eventClass:(long long)arg3;
- (id)eventDictWithBlacklistedFieldsStrippedFrom:(id)arg1;
- (id)extraValuesToUploadToServer;
- (BOOL)forceUploadWithError:(id *)arg1;
- (id)getLoggingJSONWithError:(id *)arg1;
- (id)getSysdiagnoseDumpWithError:(id *)arg1;
- (id)init;
- (void)logEventNamed:(id)arg1 class:(long long)arg2 attributes:(id)arg3;
- (void)logHardFailureForEventNamed:(id)arg1 withAttributes:(id)arg2;
- (void)logSoftFailureForEventNamed:(id)arg1 withAttributes:(id)arg2;
- (void)logSuccessForEventNamed:(id)arg1;
- (void)noteEventNamed:(id)arg1;
- (void)resetUploadDate:(BOOL)arg1;
- (void)setAllowsInsecureSplunkCert:(BOOL)arg1;
- (void)setDateProperty:(id)arg1 forKey:(id)arg2;
- (id)stringForEventClass:(long long)arg1;
- (id)sysdiagnoseStringForEventRecord:(id)arg1;

@end

