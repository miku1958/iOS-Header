//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AlignedMemoryAllocator;

struct Allocator {
    struct LocalAllocator *_field1;
};

struct ArgList;

struct Array;

struct ArrayBuffer;

struct AtomStringTable;

struct Atomic<WTF::ConcurrentPtrHashSet::Table *> {
    struct atomic<WTF::ConcurrentPtrHashSet::Table *> _field1;
};

struct Atomic<bool> {
    struct atomic<bool> _field1;
};

struct Atomic<unsigned char> {
    struct atomic<unsigned char> value;
};

struct Atomic<unsigned int> {
    struct atomic<unsigned int> _field1;
};

struct AutomaticThread;

struct AutomaticThreadCondition;

struct AuxiliaryBarrier<JSC::Butterfly *> {
    struct Butterfly *_field1;
};

struct BasicRawSentinelNode<JSC::IsoCellSet, WTF::DumbPtrTraits<JSC::IsoCellSet>> {
    struct BasicRawSentinelNode<JSC::IsoCellSet, WTF::DumbPtrTraits<JSC::IsoCellSet>> *_field1;
    struct BasicRawSentinelNode<JSC::IsoCellSet, WTF::DumbPtrTraits<JSC::IsoCellSet>> *_field2;
};

struct BasicRawSentinelNode<JSC::LargeAllocation, WTF::DumbPtrTraits<JSC::LargeAllocation>> {
    struct BasicRawSentinelNode<JSC::LargeAllocation, WTF::DumbPtrTraits<JSC::LargeAllocation>> *_field1;
    struct BasicRawSentinelNode<JSC::LargeAllocation, WTF::DumbPtrTraits<JSC::LargeAllocation>> *_field2;
};

struct BasicRawSentinelNode<JSC::LocalAllocator, WTF::DumbPtrTraits<JSC::LocalAllocator>> {
    struct BasicRawSentinelNode<JSC::LocalAllocator, WTF::DumbPtrTraits<JSC::LocalAllocator>> *_field1;
    struct BasicRawSentinelNode<JSC::LocalAllocator, WTF::DumbPtrTraits<JSC::LocalAllocator>> *_field2;
};

struct BasicRawSentinelNode<JSC::WeakSet, WTF::DumbPtrTraits<JSC::WeakSet>> {
    struct BasicRawSentinelNode<JSC::WeakSet, WTF::DumbPtrTraits<JSC::WeakSet>> *_field1;
    struct BasicRawSentinelNode<JSC::WeakSet, WTF::DumbPtrTraits<JSC::WeakSet>> *_field2;
};

struct BlockDirectory {
    struct Vector<JSC::MarkedBlock::Handle *, 0, WTF::CrashOnOverflow, 16> _field1;
    struct Vector<unsigned int, 0, WTF::CrashOnOverflow, 16> _field2;
    struct FastBitVector _field3;
    struct FastBitVector _field4;
    struct FastBitVector _field5;
    struct FastBitVector _field6;
    struct FastBitVector _field7;
    struct FastBitVector _field8;
    struct FastBitVector _field9;
    struct FastBitVector _field10;
    struct FastBitVector _field11;
    struct Lock _field12;
    struct Lock _field13;
    struct CellAttributes _field14;
    unsigned int _field15;
    unsigned long long _field16;
    unsigned long long _field17;
    struct Heap *_field18;
    struct Subspace *_field19;
    struct BlockDirectory *_field20;
    struct BlockDirectory *_field21;
    struct BlockDirectory *_field22;
    struct SentinelLinkedList<JSC::LocalAllocator, WTF::BasicRawSentinelNode<JSC::LocalAllocator, WTF::DumbPtrTraits<JSC::LocalAllocator>>> _field23;
};

struct Box<WTF::Lock> {
    struct RefPtr<WTF::Box<WTF::Lock>::Data, WTF::DumbPtrTraits<WTF::Box<WTF::Lock>::Data>> _field1;
};

struct BuiltinExecutables;

struct BumpPointerAllocator {
    struct BumpPointerPool *_field1;
};

struct BumpPointerPool;

struct Butterfly;

struct BytecodeIntrinsicRegistry;

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

struct CString {
    struct RefPtr<WTF::CStringBuffer, WTF::DumbPtrTraits<WTF::CStringBuffer>> _field1;
};

struct CStringBuffer;

struct CacheEntry {
    double _field1;
    struct RefPtr<JSC::DateInstanceData, WTF::DumbPtrTraits<JSC::DateInstanceData>> _field2;
};

struct CacheEntry<double> {
    double _field1;
    struct String _field2;
};

struct CacheEntry<int> {
    int _field1;
    struct String _field2;
};

struct CacheEntry<unsigned int> {
    unsigned int _field1;
    struct String _field2;
};

struct CachedBytecode;

struct CallableWrapperBase<void, JSC::VM &>;

struct CallbackData {
    struct CallbackData *_field1;
    id _field2;
    id _field3;
    struct OpaqueJSValue *_field4;
    struct OpaqueJSValue *_field5;
    unsigned long long _field6;
    struct OpaqueJSValue **_field7;
    id _field8;
};

struct CellAttributes {
    char _field1;
    char _field2;
};

struct ClassInfo;

struct ClientData;

struct CodeBlockSet;

struct CodeCache;

struct CommonIdentifiers;

struct CompactVariableMap;

struct CompleteSubspace {
    CDUnknownFunctionPointerType *_field1;
    struct MarkedSpace *_field2;
    struct HeapCellType *_field3;
    struct AlignedMemoryAllocator *_field4;
    struct BlockDirectory *_field5;
    struct BlockDirectory *_field6;
    struct SentinelLinkedList<JSC::LargeAllocation, WTF::BasicRawSentinelNode<JSC::LargeAllocation, WTF::DumbPtrTraits<JSC::LargeAllocation>>> _field7;
    struct Subspace *_field8;
    struct CString _field9;
    struct array<JSC::Allocator, 503> _field10;
    struct Vector<std::__1::unique_ptr<JSC::BlockDirectory, std::__1::default_delete<JSC::BlockDirectory>>, 0, WTF::CrashOnOverflow, 16> _field11;
    struct Vector<std::__1::unique_ptr<JSC::LocalAllocator, std::__1::default_delete<JSC::LocalAllocator>>, 0, WTF::CrashOnOverflow, 16> _field12;
};

struct ConcurrentBuffer<std::__1::unique_ptr<WTF::ConcurrentVector<std::__1::unique_ptr<WTF::Bitmap<1024, unsigned int>, std::__1::default_delete<WTF::Bitmap<1024, unsigned int>>>, 8>::Segment, std::__1::default_delete<WTF::ConcurrentVector<std::__1::unique_ptr<WTF::Bitmap<1024, unsigned int>, std::__1::default_delete<WTF::Bitmap<1024, unsigned int>>>, 8>::Segment>>> {
    struct Array *_field1;
    struct Vector<WTF::ConcurrentBuffer<std::__1::unique_ptr<WTF::ConcurrentVector<std::__1::unique_ptr<WTF::Bitmap<1024, unsigned int>, std::__1::default_delete<WTF::Bitmap<1024, unsigned int>>>, 8>::Segment, std::__1::default_delete<WTF::ConcurrentVector<std::__1::unique_ptr<WTF::Bitmap<1024, unsigned int>, std::__1::default_delete<WTF::Bitmap<1024, unsigned int>>>, 8>::Segment>>>::Array *, 0, WTF::CrashOnOverflow, 16> _field2;
};

struct ConcurrentPtrHashSet {
    struct Vector<std::__1::unique_ptr<WTF::ConcurrentPtrHashSet::Table, std::__1::default_delete<WTF::ConcurrentPtrHashSet::Table>>, 4, WTF::CrashOnOverflow, 16> _field1;
    struct Atomic<WTF::ConcurrentPtrHashSet::Table *> _field2;
    struct Lock _field3;
};

struct ConcurrentVector<std::__1::unique_ptr<WTF::Bitmap<1024, unsigned int>, std::__1::default_delete<WTF::Bitmap<1024, unsigned int>>>, 8> {
    unsigned long long _field1;
    struct ConcurrentBuffer<std::__1::unique_ptr<WTF::ConcurrentVector<std::__1::unique_ptr<WTF::Bitmap<1024, unsigned int>, std::__1::default_delete<WTF::Bitmap<1024, unsigned int>>>, 8>::Segment, std::__1::default_delete<WTF::ConcurrentVector<std::__1::unique_ptr<WTF::Bitmap<1024, unsigned int>, std::__1::default_delete<WTF::Bitmap<1024, unsigned int>>>, 8>::Segment>>> _field2;
    unsigned long long _field3;
};

struct Condition {
    struct Atomic<bool> _field1;
};

struct ControlFlowProfiler;

struct CurrentThreadState;

struct Data;

struct Database;

struct DateInstanceCache {
    struct array<JSC::DateInstanceCache::CacheEntry, 16> _field1;
};

struct DateInstanceData;

struct Deque<JSC::GCRequest, 0> {
    unsigned long long _field1;
    unsigned long long _field2;
    struct VectorBuffer<JSC::GCRequest, 0> _field3;
};

struct Deque<std::__1::unique_ptr<JSC::QueuedTask, std::__1::default_delete<JSC::QueuedTask>>, 0> {
    unsigned long long _field1;
    unsigned long long _field2;
    struct VectorBuffer<std::__1::unique_ptr<JSC::QueuedTask, std::__1::default_delete<JSC::QueuedTask>>, 0> _field3;
};

struct DoublyLinkedList<JSC::HandleBlock> {
    struct HandleBlock *_field1;
    struct HandleBlock *_field2;
};

struct EntryFrame;

struct Exception;

struct ExecState;

struct FastBitVector {
    struct FastBitVectorWordOwner _field1;
};

struct FastBitVectorWordOwner {
    unsigned int *_field1;
    unsigned long long _field2;
};

struct FastMallocAlignedMemoryAllocator;

struct FinalizerOwner {
    CDUnknownFunctionPointerType *_field1;
};

struct FreeList {
    unsigned long long _field1;
    unsigned long long _field2;
    char *_field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct FullGCActivityCallback;

struct Function<void (JSC::VM &)> {
    struct unique_ptr<WTF::Detail::CallableWrapperBase<void, JSC::VM &>, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, JSC::VM &>>> _field1;
};

struct FunctionHasExecutedCache {
    struct unordered_map<long, std::__1::unordered_map<JSC::FunctionHasExecutedCache::FunctionRange, bool, WTF::HashMethod<JSC::FunctionHasExecutedCache::FunctionRange>, std::__1::equal_to<JSC::FunctionHasExecutedCache::FunctionRange>, WTF::FastAllocator<std::__1::pair<const JSC::FunctionHasExecutedCache::FunctionRange, bool>>>, std::__1::hash<long>, std::__1::equal_to<long>, WTF::FastAllocator<std::__1::pair<const long, std::__1::unordered_map<JSC::FunctionHasExecutedCache::FunctionRange, bool, WTF::HashMethod<JSC::FunctionHasExecutedCache::FunctionRange>, std::__1::equal_to<JSC::FunctionHasExecutedCache::FunctionRange>, WTF::FastAllocator<std::__1::pair<const JSC::FunctionHasExecutedCache::FunctionRange, bool>>>>>> _field1;
};

struct FuzzerAgent;

struct GCActivityCallback;

struct GCIncomingRefCountedSet<JSC::ArrayBuffer> {
    struct Vector<JSC::ArrayBuffer *, 0, WTF::CrashOnOverflow, 16> _field1;
    unsigned long long _field2;
};

struct GCRequest {
    struct Optional<JSC::CollectionScope> _field1;
    struct RefPtr<WTF::SharedTask<void ()>, WTF::DumbPtrTraits<WTF::SharedTask<void ()>>> _field2;
};

struct GigacageAlignedMemoryAllocator;

struct Handle;

struct HandleBlock;

struct HandleNode {
    struct JSValue _field1;
    struct HandleNode *_field2;
    struct HandleNode *_field3;
};

struct HandleSet {
    struct VM *_field1;
    struct DoublyLinkedList<JSC::HandleBlock> _field2;
    struct SentinelLinkedList<JSC::HandleNode, JSC::HandleNode> _field3;
    struct SentinelLinkedList<JSC::HandleNode, JSC::HandleNode> _field4;
    struct SinglyLinkedList<JSC::HandleNode> _field5;
};

struct HasOwnPropertyCache;

struct HashCountedSet<JSC::JSCell *, WTF::PtrHash<JSC::JSCell *>, WTF::HashTraits<JSC::JSCell *>> {
    struct HashMap<JSC::JSCell *, unsigned int, WTF::PtrHash<JSC::JSCell *>, WTF::HashTraits<JSC::JSCell *>, WTF::HashTraits<unsigned int>> _field1;
};

struct HashMap<JSC::JSCell *, unsigned int, WTF::PtrHash<JSC::JSCell *>, WTF::HashTraits<JSC::JSCell *>, WTF::HashTraits<unsigned int>> {
    struct HashTable<JSC::JSCell *, WTF::KeyValuePair<JSC::JSCell *, unsigned int>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<JSC::JSCell *, unsigned int>>, WTF::PtrHash<JSC::JSCell *>, WTF::HashMap<JSC::JSCell *, unsigned int, WTF::PtrHash<JSC::JSCell *>, WTF::HashTraits<JSC::JSCell *>, WTF::HashTraits<unsigned int>>::KeyValuePairTraits, WTF::HashTraits<JSC::JSCell *>> _field1;
};

struct HashMap<JSC::JSImmutableButterfly *, JSC::JSString *, WTF::PtrHash<JSC::JSImmutableButterfly *>, WTF::HashTraits<JSC::JSImmutableButterfly *>, WTF::HashTraits<JSC::JSString *>> {
    struct HashTable<JSC::JSImmutableButterfly *, WTF::KeyValuePair<JSC::JSImmutableButterfly *, JSC::JSString *>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<JSC::JSImmutableButterfly *, JSC::JSString *>>, WTF::PtrHash<JSC::JSImmutableButterfly *>, WTF::HashMap<JSC::JSImmutableButterfly *, JSC::JSString *, WTF::PtrHash<JSC::JSImmutableButterfly *>, WTF::HashTraits<JSC::JSImmutableButterfly *>, WTF::HashTraits<JSC::JSString *>>::KeyValuePairTraits, WTF::HashTraits<JSC::JSImmutableButterfly *>> _field1;
};

struct HashMap<JSC::PrototypeKey, JSC::Weak<JSC::Structure>, JSC::PrototypeKeyHash, WTF::HashTraits<JSC::PrototypeKey>, WTF::HashTraits<JSC::Weak<JSC::Structure>>> {
    struct HashTable<JSC::PrototypeKey, WTF::KeyValuePair<JSC::PrototypeKey, JSC::Weak<JSC::Structure>>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<JSC::PrototypeKey, JSC::Weak<JSC::Structure>>>, JSC::PrototypeKeyHash, WTF::HashMap<JSC::PrototypeKey, JSC::Weak<JSC::Structure>, JSC::PrototypeKeyHash, WTF::HashTraits<JSC::PrototypeKey>, WTF::HashTraits<JSC::Weak<JSC::Structure>>>::KeyValuePairTraits, WTF::HashTraits<JSC::PrototypeKey>> _field1;
};

struct HashMap<WTF::RefPtr<JSC::SourceProvider, WTF::DumbPtrTraits<JSC::SourceProvider>>, WTF::RefPtr<JSC::SourceProviderCache, WTF::DumbPtrTraits<JSC::SourceProviderCache>>, WTF::PtrHash<WTF::RefPtr<JSC::SourceProvider, WTF::DumbPtrTraits<JSC::SourceProvider>>>, WTF::HashTraits<WTF::RefPtr<JSC::SourceProvider, WTF::DumbPtrTraits<JSC::SourceProvider>>>, WTF::HashTraits<WTF::RefPtr<JSC::SourceProviderCache, WTF::DumbPtrTraits<JSC::SourceProviderCache>>>> {
    struct HashTable<WTF::RefPtr<JSC::SourceProvider, WTF::DumbPtrTraits<JSC::SourceProvider>>, WTF::KeyValuePair<WTF::RefPtr<JSC::SourceProvider, WTF::DumbPtrTraits<JSC::SourceProvider>>, WTF::RefPtr<JSC::SourceProviderCache, WTF::DumbPtrTraits<JSC::SourceProviderCache>>>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::RefPtr<JSC::SourceProvider, WTF::DumbPtrTraits<JSC::SourceProvider>>, WTF::RefPtr<JSC::SourceProviderCache, WTF::DumbPtrTraits<JSC::SourceProviderCache>>>>, WTF::PtrHash<WTF::RefPtr<JSC::SourceProvider, WTF::DumbPtrTraits<JSC::SourceProvider>>>, WTF::HashMap<WTF::RefPtr<JSC::SourceProvider, WTF::DumbPtrTraits<JSC::SourceProvider>>, WTF::RefPtr<JSC::SourceProviderCache, WTF::DumbPtrTraits<JSC::SourceProviderCache>>, WTF::PtrHash<WTF::RefPtr<JSC::SourceProvider, WTF::DumbPtrTraits<JSC::SourceProvider>>>, WTF::HashTraits<WTF::RefPtr<JSC::SourceProvider, WTF::DumbPtrTraits<JSC::SourceProvider>>>, WTF::HashTraits<WTF::RefPtr<JSC::SourceProviderCache, WTF::DumbPtrTraits<JSC::SourceProviderCache>>>>::KeyValuePairTraits, WTF::HashTraits<WTF::RefPtr<JSC::SourceProvider, WTF::DumbPtrTraits<JSC::SourceProvider>>>> _field1;
};

struct HashMap<WTF::RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>>, std::__1::unique_ptr<StaticFunctionEntry, std::__1::default_delete<StaticFunctionEntry>>, WTF::StringHash, WTF::HashTraits<WTF::RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>>>, WTF::HashTraits<std::__1::unique_ptr<StaticFunctionEntry, std::__1::default_delete<StaticFunctionEntry>>>>;

struct HashMap<WTF::RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>>, std::__1::unique_ptr<StaticValueEntry, std::__1::default_delete<StaticValueEntry>>, WTF::StringHash, WTF::HashTraits<WTF::RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>>>, WTF::HashTraits<std::__1::unique_ptr<StaticValueEntry, std::__1::default_delete<StaticValueEntry>>>>;

struct HashMap<WTF::String, WTF::RefPtr<JSC::WatchpointSet, WTF::DumbPtrTraits<JSC::WatchpointSet>>, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::RefPtr<JSC::WatchpointSet, WTF::DumbPtrTraits<JSC::WatchpointSet>>>> {
    struct HashTable<WTF::String, WTF::KeyValuePair<WTF::String, WTF::RefPtr<JSC::WatchpointSet, WTF::DumbPtrTraits<JSC::WatchpointSet>>>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String, WTF::RefPtr<JSC::WatchpointSet, WTF::DumbPtrTraits<JSC::WatchpointSet>>>>, WTF::StringHash, WTF::HashMap<WTF::String, WTF::RefPtr<JSC::WatchpointSet, WTF::DumbPtrTraits<JSC::WatchpointSet>>, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::RefPtr<JSC::WatchpointSet, WTF::DumbPtrTraits<JSC::WatchpointSet>>>>::KeyValuePairTraits, WTF::HashTraits<WTF::String>> _field1;
};

struct HashMap<WTF::StringImpl *, JSC::Weak<JSC::JSString>, WTF::PtrHash<WTF::StringImpl *>, WTF::HashTraits<WTF::StringImpl *>, WTF::HashTraits<JSC::Weak<JSC::JSString>>> {
    struct HashTable<WTF::StringImpl *, WTF::KeyValuePair<WTF::StringImpl *, JSC::Weak<JSC::JSString>>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::StringImpl *, JSC::Weak<JSC::JSString>>>, WTF::PtrHash<WTF::StringImpl *>, WTF::HashMap<WTF::StringImpl *, JSC::Weak<JSC::JSString>, WTF::PtrHash<WTF::StringImpl *>, WTF::HashTraits<WTF::StringImpl *>, WTF::HashTraits<JSC::Weak<JSC::JSString>>>::KeyValuePairTraits, WTF::HashTraits<WTF::StringImpl *>> _field1;
};

struct HashMap<WTF::SymbolImpl *, JSC::Weak<JSC::Symbol>, WTF::PtrHash<WTF::SymbolImpl *>, WTF::HashTraits<WTF::SymbolImpl *>, WTF::HashTraits<JSC::Weak<JSC::Symbol>>> {
    struct HashTable<WTF::SymbolImpl *, WTF::KeyValuePair<WTF::SymbolImpl *, JSC::Weak<JSC::Symbol>>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::SymbolImpl *, JSC::Weak<JSC::Symbol>>>, WTF::PtrHash<WTF::SymbolImpl *>, WTF::HashMap<WTF::SymbolImpl *, JSC::Weak<JSC::Symbol>, WTF::PtrHash<WTF::SymbolImpl *>, WTF::HashTraits<WTF::SymbolImpl *>, WTF::HashTraits<JSC::Weak<JSC::Symbol>>>::KeyValuePairTraits, WTF::HashTraits<WTF::SymbolImpl *>> _field1;
};

struct HashMap<std::__1::pair<JSC::CustomGetterSetter *, int>, JSC::Weak<JSC::JSCustomGetterSetterFunction>, WTF::PairHash<JSC::CustomGetterSetter *, int>, WTF::HashTraits<std::__1::pair<JSC::CustomGetterSetter *, int>>, WTF::HashTraits<JSC::Weak<JSC::JSCustomGetterSetterFunction>>> {
    struct HashTable<std::__1::pair<JSC::CustomGetterSetter *, int>, WTF::KeyValuePair<std::__1::pair<JSC::CustomGetterSetter *, int>, JSC::Weak<JSC::JSCustomGetterSetterFunction>>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<std::__1::pair<JSC::CustomGetterSetter *, int>, JSC::Weak<JSC::JSCustomGetterSetterFunction>>>, WTF::PairHash<JSC::CustomGetterSetter *, int>, WTF::HashMap<std::__1::pair<JSC::CustomGetterSetter *, int>, JSC::Weak<JSC::JSCustomGetterSetterFunction>, WTF::PairHash<JSC::CustomGetterSetter *, int>, WTF::HashTraits<std::__1::pair<JSC::CustomGetterSetter *, int>>, WTF::HashTraits<JSC::Weak<JSC::JSCustomGetterSetterFunction>>>::KeyValuePairTraits, WTF::HashTraits<std::__1::pair<JSC::CustomGetterSetter *, int>>> _field1;
};

struct HashSet<JSC::JSObject *, WTF::PtrHash<JSC::JSObject *>, WTF::HashTraits<JSC::JSObject *>> {
    struct HashTable<JSC::JSObject *, JSC::JSObject *, WTF::IdentityExtractor, WTF::PtrHash<JSC::JSObject *>, WTF::HashTraits<JSC::JSObject *>, WTF::HashTraits<JSC::JSObject *>> _field1;
};

struct HashSet<JSC::MarkedArgumentBuffer *, WTF::PtrHash<JSC::MarkedArgumentBuffer *>, WTF::HashTraits<JSC::MarkedArgumentBuffer *>>;

struct HashSet<JSC::MarkedBlock *, WTF::MarkedBlockHash, WTF::HashTraits<JSC::MarkedBlock *>> {
    struct HashTable<JSC::MarkedBlock *, JSC::MarkedBlock *, WTF::IdentityExtractor, WTF::MarkedBlockHash, WTF::HashTraits<JSC::MarkedBlock *>, WTF::HashTraits<JSC::MarkedBlock *>> _field1;
};

struct HashSet<JSC::WeakGCMapBase *, WTF::PtrHash<JSC::WeakGCMapBase *>, WTF::HashTraits<JSC::WeakGCMapBase *>> {
    struct HashTable<JSC::WeakGCMapBase *, JSC::WeakGCMapBase *, WTF::IdentityExtractor, WTF::PtrHash<JSC::WeakGCMapBase *>, WTF::HashTraits<JSC::WeakGCMapBase *>, WTF::HashTraits<JSC::WeakGCMapBase *>> _field1;
};

struct HashSet<WTF::SymbolRegistryKey, WTF::DefaultHash<WTF::SymbolRegistryKey>::Hash, WTF::HashTraits<WTF::SymbolRegistryKey>> {
    struct HashTable<WTF::SymbolRegistryKey, WTF::SymbolRegistryKey, WTF::IdentityExtractor, WTF::DefaultHash<WTF::SymbolRegistryKey>::Hash, WTF::HashTraits<WTF::SymbolRegistryKey>, WTF::HashTraits<WTF::SymbolRegistryKey>> _field1;
};

struct HashSet<const JSC::JSCell *, WTF::PtrHash<const JSC::JSCell *>, WTF::HashTraits<const JSC::JSCell *>> {
    struct HashTable<const JSC::JSCell *, const JSC::JSCell *, WTF::IdentityExtractor, WTF::PtrHash<const JSC::JSCell *>, WTF::HashTraits<const JSC::JSCell *>, WTF::HashTraits<const JSC::JSCell *>> _field1;
};

struct HashTable<JSC::JSCell *, WTF::KeyValuePair<JSC::JSCell *, unsigned int>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<JSC::JSCell *, unsigned int>>, WTF::PtrHash<JSC::JSCell *>, WTF::HashMap<JSC::JSCell *, unsigned int, WTF::PtrHash<JSC::JSCell *>, WTF::HashTraits<JSC::JSCell *>, WTF::HashTraits<unsigned int>>::KeyValuePairTraits, WTF::HashTraits<JSC::JSCell *>> {
    struct KeyValuePair<JSC::JSCell *, unsigned int> *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct HashTable<JSC::JSImmutableButterfly *, WTF::KeyValuePair<JSC::JSImmutableButterfly *, JSC::JSString *>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<JSC::JSImmutableButterfly *, JSC::JSString *>>, WTF::PtrHash<JSC::JSImmutableButterfly *>, WTF::HashMap<JSC::JSImmutableButterfly *, JSC::JSString *, WTF::PtrHash<JSC::JSImmutableButterfly *>, WTF::HashTraits<JSC::JSImmutableButterfly *>, WTF::HashTraits<JSC::JSString *>>::KeyValuePairTraits, WTF::HashTraits<JSC::JSImmutableButterfly *>> {
    struct KeyValuePair<JSC::JSImmutableButterfly *, JSC::JSString *> *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct HashTable<JSC::JSObject *, JSC::JSObject *, WTF::IdentityExtractor, WTF::PtrHash<JSC::JSObject *>, WTF::HashTraits<JSC::JSObject *>, WTF::HashTraits<JSC::JSObject *>> {
    struct JSObject **_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct HashTable<JSC::MarkedBlock *, JSC::MarkedBlock *, WTF::IdentityExtractor, WTF::MarkedBlockHash, WTF::HashTraits<JSC::MarkedBlock *>, WTF::HashTraits<JSC::MarkedBlock *>> {
    struct MarkedBlock **_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct HashTable<JSC::PrototypeKey, WTF::KeyValuePair<JSC::PrototypeKey, JSC::Weak<JSC::Structure>>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<JSC::PrototypeKey, JSC::Weak<JSC::Structure>>>, JSC::PrototypeKeyHash, WTF::HashMap<JSC::PrototypeKey, JSC::Weak<JSC::Structure>, JSC::PrototypeKeyHash, WTF::HashTraits<JSC::PrototypeKey>, WTF::HashTraits<JSC::Weak<JSC::Structure>>>::KeyValuePairTraits, WTF::HashTraits<JSC::PrototypeKey>> {
    struct KeyValuePair<JSC::PrototypeKey, JSC::Weak<JSC::Structure>> *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct HashTable<JSC::WeakGCMapBase *, JSC::WeakGCMapBase *, WTF::IdentityExtractor, WTF::PtrHash<JSC::WeakGCMapBase *>, WTF::HashTraits<JSC::WeakGCMapBase *>, WTF::HashTraits<JSC::WeakGCMapBase *>> {
    struct WeakGCMapBase **_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct HashTable<WTF::RefPtr<JSC::SourceProvider, WTF::DumbPtrTraits<JSC::SourceProvider>>, WTF::KeyValuePair<WTF::RefPtr<JSC::SourceProvider, WTF::DumbPtrTraits<JSC::SourceProvider>>, WTF::RefPtr<JSC::SourceProviderCache, WTF::DumbPtrTraits<JSC::SourceProviderCache>>>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::RefPtr<JSC::SourceProvider, WTF::DumbPtrTraits<JSC::SourceProvider>>, WTF::RefPtr<JSC::SourceProviderCache, WTF::DumbPtrTraits<JSC::SourceProviderCache>>>>, WTF::PtrHash<WTF::RefPtr<JSC::SourceProvider, WTF::DumbPtrTraits<JSC::SourceProvider>>>, WTF::HashMap<WTF::RefPtr<JSC::SourceProvider, WTF::DumbPtrTraits<JSC::SourceProvider>>, WTF::RefPtr<JSC::SourceProviderCache, WTF::DumbPtrTraits<JSC::SourceProviderCache>>, WTF::PtrHash<WTF::RefPtr<JSC::SourceProvider, WTF::DumbPtrTraits<JSC::SourceProvider>>>, WTF::HashTraits<WTF::RefPtr<JSC::SourceProvider, WTF::DumbPtrTraits<JSC::SourceProvider>>>, WTF::HashTraits<WTF::RefPtr<JSC::SourceProviderCache, WTF::DumbPtrTraits<JSC::SourceProviderCache>>>>::KeyValuePairTraits, WTF::HashTraits<WTF::RefPtr<JSC::SourceProvider, WTF::DumbPtrTraits<JSC::SourceProvider>>>> {
    struct KeyValuePair<WTF::RefPtr<JSC::SourceProvider, WTF::DumbPtrTraits<JSC::SourceProvider>>, WTF::RefPtr<JSC::SourceProviderCache, WTF::DumbPtrTraits<JSC::SourceProviderCache>>> *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct HashTable<WTF::String, WTF::KeyValuePair<WTF::String, WTF::RefPtr<JSC::WatchpointSet, WTF::DumbPtrTraits<JSC::WatchpointSet>>>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::String, WTF::RefPtr<JSC::WatchpointSet, WTF::DumbPtrTraits<JSC::WatchpointSet>>>>, WTF::StringHash, WTF::HashMap<WTF::String, WTF::RefPtr<JSC::WatchpointSet, WTF::DumbPtrTraits<JSC::WatchpointSet>>, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::RefPtr<JSC::WatchpointSet, WTF::DumbPtrTraits<JSC::WatchpointSet>>>>::KeyValuePairTraits, WTF::HashTraits<WTF::String>> {
    struct KeyValuePair<WTF::String, WTF::RefPtr<JSC::WatchpointSet, WTF::DumbPtrTraits<JSC::WatchpointSet>>> *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct HashTable<WTF::StringImpl *, WTF::KeyValuePair<WTF::StringImpl *, JSC::Weak<JSC::JSString>>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::StringImpl *, JSC::Weak<JSC::JSString>>>, WTF::PtrHash<WTF::StringImpl *>, WTF::HashMap<WTF::StringImpl *, JSC::Weak<JSC::JSString>, WTF::PtrHash<WTF::StringImpl *>, WTF::HashTraits<WTF::StringImpl *>, WTF::HashTraits<JSC::Weak<JSC::JSString>>>::KeyValuePairTraits, WTF::HashTraits<WTF::StringImpl *>> {
    struct KeyValuePair<WTF::StringImpl *, JSC::Weak<JSC::JSString>> *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct HashTable<WTF::SymbolImpl *, WTF::KeyValuePair<WTF::SymbolImpl *, JSC::Weak<JSC::Symbol>>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::SymbolImpl *, JSC::Weak<JSC::Symbol>>>, WTF::PtrHash<WTF::SymbolImpl *>, WTF::HashMap<WTF::SymbolImpl *, JSC::Weak<JSC::Symbol>, WTF::PtrHash<WTF::SymbolImpl *>, WTF::HashTraits<WTF::SymbolImpl *>, WTF::HashTraits<JSC::Weak<JSC::Symbol>>>::KeyValuePairTraits, WTF::HashTraits<WTF::SymbolImpl *>> {
    struct KeyValuePair<WTF::SymbolImpl *, JSC::Weak<JSC::Symbol>> *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct HashTable<WTF::SymbolRegistryKey, WTF::SymbolRegistryKey, WTF::IdentityExtractor, WTF::DefaultHash<WTF::SymbolRegistryKey>::Hash, WTF::HashTraits<WTF::SymbolRegistryKey>, WTF::HashTraits<WTF::SymbolRegistryKey>> {
    struct SymbolRegistryKey *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct HashTable<const JSC::JSCell *, const JSC::JSCell *, WTF::IdentityExtractor, WTF::PtrHash<const JSC::JSCell *>, WTF::HashTraits<const JSC::JSCell *>, WTF::HashTraits<const JSC::JSCell *>> {
    struct JSCell **_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct HashTable<std::__1::pair<JSC::CustomGetterSetter *, int>, WTF::KeyValuePair<std::__1::pair<JSC::CustomGetterSetter *, int>, JSC::Weak<JSC::JSCustomGetterSetterFunction>>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<std::__1::pair<JSC::CustomGetterSetter *, int>, JSC::Weak<JSC::JSCustomGetterSetterFunction>>>, WTF::PairHash<JSC::CustomGetterSetter *, int>, WTF::HashMap<std::__1::pair<JSC::CustomGetterSetter *, int>, JSC::Weak<JSC::JSCustomGetterSetterFunction>, WTF::PairHash<JSC::CustomGetterSetter *, int>, WTF::HashTraits<std::__1::pair<JSC::CustomGetterSetter *, int>>, WTF::HashTraits<JSC::Weak<JSC::JSCustomGetterSetterFunction>>>::KeyValuePairTraits, WTF::HashTraits<std::__1::pair<JSC::CustomGetterSetter *, int>>> {
    struct KeyValuePair<std::__1::pair<JSC::CustomGetterSetter *, int>, JSC::Weak<JSC::JSCustomGetterSetterFunction>> *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct Heap {
    struct HashMap<JSC::JSImmutableButterfly *, JSC::JSString *, WTF::PtrHash<JSC::JSImmutableButterfly *>, WTF::HashTraits<JSC::JSImmutableButterfly *>, WTF::HashTraits<JSC::JSString *>> _field1;
    int _field2;
    int _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    unsigned long long _field9;
    unsigned long long _field10;
    unsigned long long _field11;
    unsigned long long _field12;
    unsigned long long _field13;
    unsigned long long _field14;
    unsigned long long _field15;
    unsigned long long _field16;
    unsigned long long _field17;
    double _field18;
    BOOL _field19;
    struct Markable<JSC::CollectionScope, WTF::EnumMarkableTraits<JSC::CollectionScope, '\xFF'>> _field20;
    struct Markable<JSC::CollectionScope, WTF::EnumMarkableTraits<JSC::CollectionScope, '\xFF'>> _field21;
    struct Lock _field22;
    struct StructureIDTable _field23;
    struct MarkedSpace _field24;
    struct GCIncomingRefCountedSet<JSC::ArrayBuffer> _field25;
    unsigned long long _field26;
    unsigned long long _field27;
    struct HashSet<const JSC::JSCell *, WTF::PtrHash<const JSC::JSCell *>, WTF::HashTraits<const JSC::JSCell *>> _field28;
    struct HashCountedSet<JSC::JSCell *, WTF::PtrHash<JSC::JSCell *>, WTF::HashTraits<JSC::JSCell *>> _field29;
    struct unique_ptr<WTF::HashSet<JSC::MarkedArgumentBuffer *, WTF::PtrHash<JSC::MarkedArgumentBuffer *>, WTF::HashTraits<JSC::MarkedArgumentBuffer *>>, std::__1::default_delete<WTF::HashSet<JSC::MarkedArgumentBuffer *, WTF::PtrHash<JSC::MarkedArgumentBuffer *>, WTF::HashTraits<JSC::MarkedArgumentBuffer *>>>> _field30;
    struct unique_ptr<JSC::MachineThreads, std::__1::default_delete<JSC::MachineThreads>> _field31;
    struct unique_ptr<JSC::SlotVisitor, std::__1::default_delete<JSC::SlotVisitor>> _field32;
    struct unique_ptr<JSC::SlotVisitor, std::__1::default_delete<JSC::SlotVisitor>> _field33;
    struct unique_ptr<JSC::MarkStackArray, std::__1::default_delete<JSC::MarkStackArray>> _field34;
    struct unique_ptr<JSC::MarkStackArray, std::__1::default_delete<JSC::MarkStackArray>> _field35;
    struct unique_ptr<JSC::MarkingConstraintSet, std::__1::default_delete<JSC::MarkingConstraintSet>> _field36;
    struct Vector<std::__1::unique_ptr<JSC::SlotVisitor, std::__1::default_delete<JSC::SlotVisitor>>, 0, WTF::CrashOnOverflow, 16> _field37;
    struct Vector<JSC::SlotVisitor *, 0, WTF::CrashOnOverflow, 16> _field38;
    struct HandleSet _field39;
    struct unique_ptr<JSC::CodeBlockSet, std::__1::default_delete<JSC::CodeBlockSet>> _field40;
    struct unique_ptr<JSC::JITStubRoutineSet, std::__1::default_delete<JSC::JITStubRoutineSet>> _field41;
    struct FinalizerOwner _field42;
    struct Lock _field43;
    BOOL _field44;
    BOOL _field45;
    BOOL _field46;
    unsigned int _field47;
    struct VM *_field48;
    struct Seconds _field49;
    struct Seconds _field50;
    struct Vector<JSC::WeakBlock *, 0, WTF::CrashOnOverflow, 16> _field51;
    unsigned long long _field52;
    struct RefPtr<JSC::FullGCActivityCallback, WTF::DumbPtrTraits<JSC::FullGCActivityCallback>> _field53;
    struct RefPtr<JSC::GCActivityCallback, WTF::DumbPtrTraits<JSC::GCActivityCallback>> _field54;
    struct Ref<JSC::IncrementalSweeper, WTF::DumbPtrTraits<JSC::IncrementalSweeper>> _field55;
    struct Ref<JSC::StopIfNecessaryTimer, WTF::DumbPtrTraits<JSC::StopIfNecessaryTimer>> _field56;
    struct Vector<JSC::HeapObserver *, 0, WTF::CrashOnOverflow, 16> _field57;
    struct Vector<JSC::HeapFinalizerCallback, 0, WTF::CrashOnOverflow, 16> _field58;
    struct unique_ptr<JSC::HeapVerifier, std::__1::default_delete<JSC::HeapVerifier>> _field59;
    struct Vector<WTF::RetainPtr<const void *>, 0, WTF::CrashOnOverflow, 16> _field60;
    unsigned int _field61;
    unsigned int _field62;
    struct HashSet<JSC::WeakGCMapBase *, WTF::PtrHash<JSC::WeakGCMapBase *>, WTF::HashTraits<JSC::WeakGCMapBase *>> _field63;
    struct unique_ptr<JSC::MarkStackArray, std::__1::default_delete<JSC::MarkStackArray>> _field64;
    struct unique_ptr<JSC::MarkStackArray, std::__1::default_delete<JSC::MarkStackArray>> _field65;
    unsigned int _field66;
    unsigned int _field67;
    struct ConcurrentPtrHashSet _field68;
    struct ParallelHelperClient _field69;
    struct RefPtr<WTF::SharedTask<void (JSC::SlotVisitor &)>, WTF::DumbPtrTraits<WTF::SharedTask<void (JSC::SlotVisitor &)>>> _field70;
    unsigned long long _field71;
    unsigned long long _field72;
    struct unique_ptr<JSC::MutatorScheduler, std::__1::default_delete<JSC::MutatorScheduler>> _field73;
    struct Atomic<unsigned int> _field74;
    BOOL _field75;
    struct Lock _field76;
    struct Lock _field77;
    struct Condition _field78;
    struct MonotonicTime _field79;
    struct MonotonicTime _field80;
    struct MonotonicTime _field81;
    struct Deque<JSC::GCRequest, 0> _field82;
    struct GCRequest _field83;
    unsigned long long _field84;
    unsigned long long _field85;
    unsigned char _field86;
    unsigned char _field87;
    unsigned char _field88;
    BOOL _field89;
    BOOL _field90;
    BOOL _field91;
    BOOL _field92;
    BOOL _field93;
    BOOL _field94;
    unsigned long long _field95;
    unsigned long long _field96;
    struct Box<WTF::Lock> _field97;
    struct Ref<WTF::AutomaticThreadCondition, WTF::DumbPtrTraits<WTF::AutomaticThreadCondition>> _field98;
    struct RefPtr<WTF::AutomaticThread, WTF::DumbPtrTraits<WTF::AutomaticThread>> _field99;
    struct RefPtr<WTF::Thread, WTF::DumbPtrTraits<WTF::Thread>> _field100;
    struct MonotonicTime _field101;
    struct MonotonicTime _field102;
    struct MonotonicTime _field103;
    struct Seconds _field104;
    unsigned long long _field105;
    struct CurrentThreadState *_field106;
    struct Thread *_field107;
    unsigned int _field108;
    BOOL _field109;
    BOOL _field110;
    struct Lock _field111;
    struct Condition _field112;
};

struct HeapCellType;

struct HeapFinalizerCallback;

struct HeapObserver;

struct HeapProfiler;

struct HeapVerifier;

struct IncrementalSweeper;

struct InlineWatchpointSet {
    unsigned long long _field1;
};

struct Instruction;

struct Interpreter;

struct IsoAlignedMemoryAllocator;

struct IsoCellSet {
    struct BasicRawSentinelNode<JSC::IsoCellSet, WTF::DumbPtrTraits<JSC::IsoCellSet>> *_field1;
    struct BasicRawSentinelNode<JSC::IsoCellSet, WTF::DumbPtrTraits<JSC::IsoCellSet>> *_field2;
    struct IsoSubspace *_field3;
    struct FastBitVector _field4;
    struct ConcurrentVector<std::__1::unique_ptr<WTF::Bitmap<1024, unsigned int>, std::__1::default_delete<WTF::Bitmap<1024, unsigned int>>>, 8> _field5;
};

struct IsoSubspace {
    CDUnknownFunctionPointerType *_field1;
    struct MarkedSpace *_field2;
    struct HeapCellType *_field3;
    struct AlignedMemoryAllocator *_field4;
    struct BlockDirectory *_field5;
    struct BlockDirectory *_field6;
    struct SentinelLinkedList<JSC::LargeAllocation, WTF::BasicRawSentinelNode<JSC::LargeAllocation, WTF::DumbPtrTraits<JSC::LargeAllocation>>> _field7;
    struct Subspace *_field8;
    struct CString _field9;
    unsigned long long _field10;
    struct BlockDirectory _field11;
    struct LocalAllocator _field12;
    struct unique_ptr<JSC::IsoAlignedMemoryAllocator, std::__1::default_delete<JSC::IsoAlignedMemoryAllocator>> _field13;
    struct SentinelLinkedList<JSC::IsoCellSet, WTF::BasicRawSentinelNode<JSC::IsoCellSet, WTF::DumbPtrTraits<JSC::IsoCellSet>>> _field14;
};

struct JITStubRoutineSet;

struct JITThunks;

struct JSCell;

struct JSDestructibleObjectHeapCellType;

struct JSGlobalObject;

struct JSLock;

struct JSObject {
    unsigned int _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
    unsigned char _field5;
    struct AuxiliaryBarrier<JSC::Butterfly *> _field6;
};

struct JSSourceCode {
    unsigned int _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
    unsigned char _field5;
    struct SourceCode _field6;
};

struct JSString;

struct JSStringHeapCellType;

struct JSValue {
    union EncodedValueDescriptor u;
};

struct JSWeakValue {
    int m_tag;
    union WeakValueUnion m_value;
};

struct KeyValuePair<JSC::JSCell *, unsigned int>;

struct KeyValuePair<JSC::JSImmutableButterfly *, JSC::JSString *>;

struct KeyValuePair<JSC::PrototypeKey, JSC::Weak<JSC::Structure>>;

struct KeyValuePair<WTF::RefPtr<JSC::SourceProvider, WTF::DumbPtrTraits<JSC::SourceProvider>>, WTF::RefPtr<JSC::SourceProviderCache, WTF::DumbPtrTraits<JSC::SourceProviderCache>>>;

struct KeyValuePair<WTF::String, WTF::RefPtr<JSC::WatchpointSet, WTF::DumbPtrTraits<JSC::WatchpointSet>>>;

struct KeyValuePair<WTF::StringImpl *, JSC::Weak<JSC::JSString>>;

struct KeyValuePair<WTF::SymbolImpl *, JSC::Weak<JSC::Symbol>>;

struct KeyValuePair<std::__1::pair<JSC::CustomGetterSetter *, int>, JSC::Weak<JSC::JSCustomGetterSetterFunction>>;

struct LargeAllocation;

struct LocalAllocator {
    struct BasicRawSentinelNode<JSC::LocalAllocator, WTF::DumbPtrTraits<JSC::LocalAllocator>> *_field1;
    struct BasicRawSentinelNode<JSC::LocalAllocator, WTF::DumbPtrTraits<JSC::LocalAllocator>> *_field2;
    struct BlockDirectory *_field3;
    struct FreeList _field4;
    struct Handle *_field5;
    struct Handle *_field6;
    unsigned long long _field7;
};

struct LocalTimeOffset {
    BOOL _field1;
    int _field2;
};

struct LocalTimeOffsetCache {
    struct LocalTimeOffset _field1;
    double _field2;
    double _field3;
    double _field4;
    int _field5;
};

struct Lock {
    struct Atomic<unsigned char> m_byte;
};

struct MachineThreads;

struct MallocPtr<long long, WTF::FastMalloc> {
    long long *_field1;
};

struct MappedFileData {
    void *m_fileData;
    unsigned int m_fileSize;
};

struct MarkStackArray;

struct Markable<JSC::CollectionScope, WTF::EnumMarkableTraits<JSC::CollectionScope, '\xFF'>> {
    unsigned char _field1;
};

struct MarkedBlock;

struct MarkedBlockSet {
    struct TinyBloomFilter _field1;
    struct HashSet<JSC::MarkedBlock *, WTF::MarkedBlockHash, WTF::HashTraits<JSC::MarkedBlock *>> _field2;
};

struct MarkedSpace {
    struct Vector<JSC::Subspace *, 0, WTF::CrashOnOverflow, 16> _field1;
    struct Vector<JSC::LargeAllocation *, 0, WTF::CrashOnOverflow, 16> _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    struct LargeAllocation **_field7;
    struct LargeAllocation **_field8;
    struct Heap *_field9;
    unsigned long long _field10;
    unsigned int _field11;
    unsigned int _field12;
    BOOL _field13;
    BOOL _field14;
    struct Lock _field15;
    struct MarkedBlockSet _field16;
    struct SentinelLinkedList<JSC::WeakSet, WTF::BasicRawSentinelNode<JSC::WeakSet, WTF::DumbPtrTraits<JSC::WeakSet>>> _field17;
    struct SentinelLinkedList<JSC::WeakSet, WTF::BasicRawSentinelNode<JSC::WeakSet, WTF::DumbPtrTraits<JSC::WeakSet>>> _field18;
    struct SinglyLinkedListWithTail<JSC::BlockDirectory> _field19;
};

struct MarkingConstraintSet;

struct MonotonicTime {
    double _field1;
};

struct MutatorScheduler;

struct NumericStrings {
    struct array<JSC::NumericStrings::CacheEntry<double>, 64> _field1;
    struct array<JSC::NumericStrings::CacheEntry<int>, 64> _field2;
    struct array<JSC::NumericStrings::CacheEntry<unsigned int>, 64> _field3;
    struct array<WTF::String, 64> _field4;
};

struct OpaqueJSClass {
    struct atomic<unsigned int> _field1;
    struct OpaqueJSClass *_field2;
    struct OpaqueJSClass *_field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownFunctionPointerType _field13;
    CDUnknownFunctionPointerType _field14;
    struct String _field15;
    struct unique_ptr<WTF::HashMap<WTF::RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>>, std::__1::unique_ptr<StaticValueEntry, std::__1::default_delete<StaticValueEntry>>, WTF::StringHash, WTF::HashTraits<WTF::RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>>>, WTF::HashTraits<std::__1::unique_ptr<StaticValueEntry, std::__1::default_delete<StaticValueEntry>>>>, std::__1::default_delete<WTF::HashMap<WTF::RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>>, std::__1::unique_ptr<StaticValueEntry, std::__1::default_delete<StaticValueEntry>>, WTF::StringHash, WTF::HashTraits<WTF::RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>>>, WTF::HashTraits<std::__1::unique_ptr<StaticValueEntry, std::__1::default_delete<StaticValueEntry>>>>>> _field16;
    struct unique_ptr<WTF::HashMap<WTF::RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>>, std::__1::unique_ptr<StaticFunctionEntry, std::__1::default_delete<StaticFunctionEntry>>, WTF::StringHash, WTF::HashTraits<WTF::RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>>>, WTF::HashTraits<std::__1::unique_ptr<StaticFunctionEntry, std::__1::default_delete<StaticFunctionEntry>>>>, std::__1::default_delete<WTF::HashMap<WTF::RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>>, std::__1::unique_ptr<StaticFunctionEntry, std::__1::default_delete<StaticFunctionEntry>>, WTF::StringHash, WTF::HashTraits<WTF::RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>>>, WTF::HashTraits<std::__1::unique_ptr<StaticFunctionEntry, std::__1::default_delete<StaticFunctionEntry>>>>>> _field17;
};

struct OpaqueJSValue;

struct Optional<JSC::CollectionScope> {
    BOOL _field1;
    union constexpr_storage_t<JSC::CollectionScope> _field2;
};

struct OrdinalNumber {
    int _field1;
};

struct ParallelHelperClient {
    struct RefPtr<WTF::ParallelHelperPool, WTF::DumbPtrTraits<WTF::ParallelHelperPool>> _field1;
    struct RefPtr<WTF::SharedTask<void ()>, WTF::DumbPtrTraits<WTF::SharedTask<void ()>>> _field2;
    unsigned int _field3;
};

struct ParallelHelperPool;

struct PromiseDeferredTimer;

struct PropertyTable;

struct Ref<JSC::CompactVariableMap, WTF::DumbPtrTraits<JSC::CompactVariableMap>> {
    struct CompactVariableMap *_field1;
};

struct Ref<JSC::IncrementalSweeper, WTF::DumbPtrTraits<JSC::IncrementalSweeper>> {
    struct IncrementalSweeper *_field1;
};

struct Ref<JSC::StopIfNecessaryTimer, WTF::DumbPtrTraits<JSC::StopIfNecessaryTimer>> {
    struct StopIfNecessaryTimer *_field1;
};

struct Ref<WTF::AutomaticThreadCondition, WTF::DumbPtrTraits<WTF::AutomaticThreadCondition>> {
    struct AutomaticThreadCondition *_field1;
};

struct RefPtr<JSC::CachedBytecode, WTF::DumbPtrTraits<JSC::CachedBytecode>> {
    struct CachedBytecode *m_ptr;
};

struct RefPtr<JSC::DateInstanceData, WTF::DumbPtrTraits<JSC::DateInstanceData>> {
    struct DateInstanceData *_field1;
};

struct RefPtr<JSC::FullGCActivityCallback, WTF::DumbPtrTraits<JSC::FullGCActivityCallback>> {
    struct FullGCActivityCallback *_field1;
};

struct RefPtr<JSC::GCActivityCallback, WTF::DumbPtrTraits<JSC::GCActivityCallback>> {
    struct GCActivityCallback *_field1;
};

struct RefPtr<JSC::JSLock, WTF::DumbPtrTraits<JSC::JSLock>> {
    struct JSLock *m_ptr;
};

struct RefPtr<JSC::SamplingProfiler, WTF::DumbPtrTraits<JSC::SamplingProfiler>> {
    struct SamplingProfiler *_field1;
};

struct RefPtr<JSC::SourceProvider, WTF::DumbPtrTraits<JSC::SourceProvider>> {
    struct SourceProvider *_field1;
};

struct RefPtr<JSC::TypedArrayController, WTF::DumbPtrTraits<JSC::TypedArrayController>> {
    struct TypedArrayController *_field1;
};

struct RefPtr<JSC::VMTraps::SignalSender, WTF::DumbPtrTraits<JSC::VMTraps::SignalSender>> {
    struct SignalSender *_field1;
};

struct RefPtr<JSC::Watchdog, WTF::DumbPtrTraits<JSC::Watchdog>> {
    struct Watchdog *_field1;
};

struct RefPtr<WTF::AutomaticThread, WTF::DumbPtrTraits<WTF::AutomaticThread>> {
    struct AutomaticThread *_field1;
};

struct RefPtr<WTF::Box<WTF::Lock>::Data, WTF::DumbPtrTraits<WTF::Box<WTF::Lock>::Data>> {
    struct Data *_field1;
};

struct RefPtr<WTF::CStringBuffer, WTF::DumbPtrTraits<WTF::CStringBuffer>> {
    struct CStringBuffer *_field1;
};

struct RefPtr<WTF::ParallelHelperPool, WTF::DumbPtrTraits<WTF::ParallelHelperPool>> {
    struct ParallelHelperPool *_field1;
};

struct RefPtr<WTF::SharedTask<void ()>, WTF::DumbPtrTraits<WTF::SharedTask<void ()>>> {
    struct SharedTask<void ()> *_field1;
};

struct RefPtr<WTF::SharedTask<void (JSC::SlotVisitor &)>, WTF::DumbPtrTraits<WTF::SharedTask<void (JSC::SlotVisitor &)>>> {
    struct SharedTask<void (JSC::SlotVisitor &)> *_field1;
};

struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>> {
    struct StringImpl *m_ptr;
};

struct RefPtr<WTF::Thread, WTF::DumbPtrTraits<WTF::Thread>> {
    struct Thread *_field1;
};

struct RefPtr<WTF::UniquedStringImpl, WTF::DumbPtrTraits<WTF::UniquedStringImpl>> {
    struct UniquedStringImpl *_field1;
};

struct RegExpCache;

struct RetainPtr<NSURL> {
    void *m_ptr;
};

struct RetainPtr<__CFRunLoop *> {
    void *_field1;
};

struct RetainPtr<const void *>;

struct SamplingProfiler;

struct ScratchBuffer;

struct Seconds {
    double _field1;
};

struct SentinelLinkedList<JSC::HandleNode, JSC::HandleNode> {
    struct HandleNode _field1;
    struct HandleNode _field2;
};

struct SentinelLinkedList<JSC::IsoCellSet, WTF::BasicRawSentinelNode<JSC::IsoCellSet, WTF::DumbPtrTraits<JSC::IsoCellSet>>> {
    struct BasicRawSentinelNode<JSC::IsoCellSet, WTF::DumbPtrTraits<JSC::IsoCellSet>> _field1;
    struct BasicRawSentinelNode<JSC::IsoCellSet, WTF::DumbPtrTraits<JSC::IsoCellSet>> _field2;
};

struct SentinelLinkedList<JSC::LargeAllocation, WTF::BasicRawSentinelNode<JSC::LargeAllocation, WTF::DumbPtrTraits<JSC::LargeAllocation>>> {
    struct BasicRawSentinelNode<JSC::LargeAllocation, WTF::DumbPtrTraits<JSC::LargeAllocation>> _field1;
    struct BasicRawSentinelNode<JSC::LargeAllocation, WTF::DumbPtrTraits<JSC::LargeAllocation>> _field2;
};

struct SentinelLinkedList<JSC::LocalAllocator, WTF::BasicRawSentinelNode<JSC::LocalAllocator, WTF::DumbPtrTraits<JSC::LocalAllocator>>> {
    struct BasicRawSentinelNode<JSC::LocalAllocator, WTF::DumbPtrTraits<JSC::LocalAllocator>> _field1;
    struct BasicRawSentinelNode<JSC::LocalAllocator, WTF::DumbPtrTraits<JSC::LocalAllocator>> _field2;
};

struct SentinelLinkedList<JSC::WeakSet, WTF::BasicRawSentinelNode<JSC::WeakSet, WTF::DumbPtrTraits<JSC::WeakSet>>> {
    struct BasicRawSentinelNode<JSC::WeakSet, WTF::DumbPtrTraits<JSC::WeakSet>> _field1;
    struct BasicRawSentinelNode<JSC::WeakSet, WTF::DumbPtrTraits<JSC::WeakSet>> _field2;
};

struct ShadowChicken;

struct SharedTask<void ()>;

struct SharedTask<void (JSC::SlotVisitor &)>;

struct SignalSender;

struct SimpleStats;

struct SinglyLinkedList<JSC::HandleNode> {
    struct HandleNode *_field1;
};

struct SinglyLinkedListWithTail<JSC::BlockDirectory> {
    struct BlockDirectory *_field1;
    struct BlockDirectory *_field2;
};

struct SlotVisitor;

struct SmallStrings {
    struct JSString *_field1;
    struct JSString *_field2;
    struct JSString *_field3;
    struct JSString *_field4;
    struct JSString *_field5;
    struct JSString *_field6;
    struct JSString *_field7;
    struct JSString *_field8;
    struct JSString *_field9;
    struct JSString *_field10;
    struct JSString *_field11;
    struct JSString *_field12;
    struct JSString *_field13;
    struct JSString *_field14;
    struct JSString *_field15;
    struct JSString *_field16;
    struct JSString *_field17[256];
    BOOL _field18;
    BOOL _field19;
};

struct SourceCode {
    struct RefPtr<JSC::SourceProvider, WTF::DumbPtrTraits<JSC::SourceProvider>> _field1;
    int _field2;
    int _field3;
    struct OrdinalNumber _field4;
    struct OrdinalNumber _field5;
};

struct SourceProvider;

struct SpaceAndSet {
    struct IsoSubspace _field1;
    struct IsoCellSet _field2;
};

struct StopIfNecessaryTimer;

struct String {
    struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>> m_impl;
};

struct StringImpl;

struct Strong<JSC::JSCell> {
    struct JSValue *_field1;
};

struct Strong<JSC::JSObject> {
    struct JSValue *m_slot;
};

struct Strong<JSC::JSString> {
    struct JSValue *_field1;
};

struct Strong<JSC::Structure> {
    struct JSValue *_field1;
};

struct Structure {
    unsigned int _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
    unsigned char _field5;
    struct StructureIDBlob _field6;
    unsigned short _field7;
    unsigned char _field8;
    struct Lock _field9;
    unsigned int _field10;
    struct WriteBarrier<JSC::JSGlobalObject, WTF::DumbPtrTraits<JSC::JSGlobalObject>> _field11;
    struct WriteBarrier<JSC::Unknown, WTF::DumbValueTraits<JSC::Unknown>> _field12;
    struct WriteBarrier<JSC::StructureChain, WTF::DumbPtrTraits<JSC::StructureChain>> _field13;
    struct WriteBarrier<JSC::JSCell, WTF::DumbPtrTraits<JSC::JSCell>> _field14;
    struct RefPtr<WTF::UniquedStringImpl, WTF::DumbPtrTraits<WTF::UniquedStringImpl>> _field15;
    struct ClassInfo *_field16;
    struct StructureTransitionTable _field17;
    struct WriteBarrier<JSC::PropertyTable, WTF::DumbPtrTraits<JSC::PropertyTable>> _field18;
    struct InlineWatchpointSet _field19;
    int _field20;
    unsigned int _field21;
};

struct StructureCache {
    struct WeakGCMap<JSC::PrototypeKey, JSC::Structure, JSC::PrototypeKeyHash, WTF::HashTraits<JSC::PrototypeKey>> _field1;
    struct Lock _field2;
};

struct StructureChain;

struct StructureIDBlob {
    union {
        struct {
            unsigned int _field1;
            unsigned char _field2;
            unsigned char _field3;
            unsigned char _field4;
            unsigned char _field5;
        } _field1;
        CDStruct_c10b32d8 _field2;
        long long _field3;
    } _field1;
};

struct StructureIDTable {
    struct Vector<std::__1::unique_ptr<JSC::StructureIDTable::StructureOrOffset [], WTF::FastFree<JSC::StructureIDTable::StructureOrOffset []>>, 0, WTF::CrashOnOverflow, 16> _field1;
    unsigned int _field2;
    unsigned int _field3;
    struct unique_ptr<JSC::StructureIDTable::StructureOrOffset [], WTF::FastFree<JSC::StructureIDTable::StructureOrOffset []>> _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    struct WeakRandom _field7;
};

struct StructureTransitionTable {
    long long _field1;
};

struct Subspace;

struct SymbolRegistry {
    struct HashSet<WTF::SymbolRegistryKey, WTF::DefaultHash<WTF::SymbolRegistryKey>::Hash, WTF::HashTraits<WTF::SymbolRegistryKey>> _field1;
};

struct SymbolRegistryKey;

struct Table;

struct Thread;

struct TinyBloomFilter {
    unsigned long long _field1;
};

struct TypeProfiler;

struct TypeProfilerLog;

struct TypedArrayController;

struct UniquedStringImpl;

struct VM {
    struct atomic<unsigned int> _field1;
    unsigned int _field2;
    struct RefPtr<JSC::JSLock, WTF::DumbPtrTraits<JSC::JSLock>> _field3;
    struct RetainPtr<__CFRunLoop *> _field4;
    struct Heap _field5;
    struct unique_ptr<JSC::FastMallocAlignedMemoryAllocator, std::__1::default_delete<JSC::FastMallocAlignedMemoryAllocator>> _field6;
    struct unique_ptr<JSC::GigacageAlignedMemoryAllocator, std::__1::default_delete<JSC::GigacageAlignedMemoryAllocator>> _field7;
    struct unique_ptr<JSC::GigacageAlignedMemoryAllocator, std::__1::default_delete<JSC::GigacageAlignedMemoryAllocator>> _field8;
    struct unique_ptr<JSC::HeapCellType, std::__1::default_delete<JSC::HeapCellType>> _field9;
    struct unique_ptr<JSC::HeapCellType, std::__1::default_delete<JSC::HeapCellType>> _field10;
    struct unique_ptr<JSC::HeapCellType, std::__1::default_delete<JSC::HeapCellType>> _field11;
    struct unique_ptr<JSC::HeapCellType, std::__1::default_delete<JSC::HeapCellType>> _field12;
    struct unique_ptr<JSC::JSStringHeapCellType, std::__1::default_delete<JSC::JSStringHeapCellType>> _field13;
    struct unique_ptr<JSC::JSDestructibleObjectHeapCellType, std::__1::default_delete<JSC::JSDestructibleObjectHeapCellType>> _field14;
    struct CompleteSubspace _field15;
    struct CompleteSubspace _field16;
    struct CompleteSubspace _field17;
    struct CompleteSubspace _field18;
    struct CompleteSubspace _field19;
    struct CompleteSubspace _field20;
    struct CompleteSubspace _field21;
    struct CompleteSubspace _field22;
    struct CompleteSubspace _field23;
    struct IsoSubspace _field24;
    struct IsoSubspace _field25;
    struct IsoSubspace _field26;
    struct IsoSubspace _field27;
    struct IsoSubspace _field28;
    struct IsoSubspace _field29;
    struct IsoSubspace _field30;
    struct IsoSubspace _field31;
    struct unique_ptr<JSC::IsoSubspace, std::__1::default_delete<JSC::IsoSubspace>> _field32;
    struct unique_ptr<JSC::IsoSubspace, std::__1::default_delete<JSC::IsoSubspace>> _field33;
    struct unique_ptr<JSC::IsoSubspace, std::__1::default_delete<JSC::IsoSubspace>> _field34;
    struct unique_ptr<JSC::IsoSubspace, std::__1::default_delete<JSC::IsoSubspace>> _field35;
    struct unique_ptr<JSC::IsoSubspace, std::__1::default_delete<JSC::IsoSubspace>> _field36;
    struct unique_ptr<JSC::IsoSubspace, std::__1::default_delete<JSC::IsoSubspace>> _field37;
    struct unique_ptr<JSC::IsoSubspace, std::__1::default_delete<JSC::IsoSubspace>> _field38;
    struct unique_ptr<JSC::IsoSubspace, std::__1::default_delete<JSC::IsoSubspace>> _field39;
    struct unique_ptr<JSC::IsoSubspace, std::__1::default_delete<JSC::IsoSubspace>> _field40;
    struct unique_ptr<JSC::IsoSubspace, std::__1::default_delete<JSC::IsoSubspace>> _field41;
    struct IsoCellSet _field42;
    struct IsoCellSet _field43;
    struct SpaceAndSet _field44;
    struct unique_ptr<JSC::VM::SpaceAndSet, std::__1::default_delete<JSC::VM::SpaceAndSet>> _field45;
    struct unique_ptr<JSC::VM::SpaceAndSet, std::__1::default_delete<JSC::VM::SpaceAndSet>> _field46;
    struct SpaceAndSet _field47;
    struct SpaceAndSet _field48;
    struct SpaceAndSet _field49;
    int _field50;
    struct ClientData *_field51;
    struct EntryFrame *_field52;
    struct ExecState *_field53;
    struct Strong<JSC::Structure> _field54;
    struct Strong<JSC::Structure> _field55;
    struct Strong<JSC::Structure> _field56;
    struct Strong<JSC::Structure> _field57;
    struct Strong<JSC::Structure> _field58;
    struct Strong<JSC::Structure> _field59;
    struct Strong<JSC::Structure> _field60;
    struct Strong<JSC::Structure> _field61;
    struct Strong<JSC::Structure> _field62;
    struct Strong<JSC::Structure> _field63;
    struct Strong<JSC::Structure> _field64;
    struct Strong<JSC::Structure> _field65;
    struct Strong<JSC::Structure> _field66;
    struct Strong<JSC::Structure> _field67;
    struct Strong<JSC::Structure> _field68;
    struct Strong<JSC::Structure> _field69;
    struct Strong<JSC::Structure> _field70;
    struct Strong<JSC::Structure> _field71;
    struct Strong<JSC::Structure> _field72[3];
    struct Strong<JSC::Structure> _field73;
    struct Strong<JSC::Structure> _field74;
    struct Strong<JSC::Structure> _field75;
    struct Strong<JSC::Structure> _field76;
    struct Strong<JSC::Structure> _field77;
    struct Strong<JSC::Structure> _field78;
    struct Strong<JSC::Structure> _field79;
    struct Strong<JSC::Structure> _field80;
    struct Strong<JSC::Structure> _field81;
    struct Strong<JSC::Structure> _field82;
    struct Strong<JSC::Structure> _field83;
    struct Strong<JSC::Structure> _field84;
    struct Strong<JSC::Structure> _field85;
    struct Strong<JSC::Structure> _field86;
    struct Strong<JSC::Structure> _field87;
    struct Strong<JSC::Structure> _field88;
    struct Strong<JSC::Structure> _field89;
    struct Strong<JSC::Structure> _field90;
    struct Strong<JSC::Structure> _field91;
    struct Strong<JSC::Structure> _field92;
    struct Strong<JSC::Structure> _field93;
    struct Strong<JSC::Structure> _field94;
    struct Strong<JSC::Structure> _field95;
    struct Strong<JSC::Structure> _field96;
    struct Strong<JSC::Structure> _field97;
    struct Strong<JSC::Structure> _field98;
    struct Strong<JSC::Structure> _field99;
    struct Strong<JSC::Structure> _field100;
    struct Strong<JSC::JSCell> _field101;
    struct Strong<JSC::JSCell> _field102;
    struct Strong<JSC::JSCell> _field103;
    struct unique_ptr<JSC::PromiseDeferredTimer, std::__1::default_delete<JSC::PromiseDeferredTimer>> _field104;
    struct JSCell *_field105;
    struct ClassInfo *_field106;
    struct AtomStringTable *_field107;
    struct SymbolRegistry _field108;
    struct CommonIdentifiers *_field109;
    struct ArgList *_field110;
    struct SmallStrings _field111;
    struct NumericStrings _field112;
    struct DateInstanceCache _field113;
    struct unique_ptr<WTF::SimpleStats, std::__1::default_delete<WTF::SimpleStats>> _field114;
    struct WeakGCMap<std::__1::pair<JSC::CustomGetterSetter *, int>, JSC::JSCustomGetterSetterFunction, WTF::PairHash<JSC::CustomGetterSetter *, int>, WTF::HashTraits<std::__1::pair<JSC::CustomGetterSetter *, int>>> _field115;
    struct WeakGCMap<WTF::StringImpl *, JSC::JSString, WTF::PtrHash<WTF::StringImpl *>, WTF::HashTraits<WTF::StringImpl *>> _field116;
    struct Strong<JSC::JSString> _field117;
    struct WeakGCMap<WTF::SymbolImpl *, JSC::Symbol, WTF::PtrHash<WTF::SymbolImpl *>, WTF::HashTraits<WTF::SymbolImpl *>> _field118;
    struct StructureCache _field119;
    struct HashMap<WTF::RefPtr<JSC::SourceProvider, WTF::DumbPtrTraits<JSC::SourceProvider>>, WTF::RefPtr<JSC::SourceProviderCache, WTF::DumbPtrTraits<JSC::SourceProviderCache>>, WTF::PtrHash<WTF::RefPtr<JSC::SourceProvider, WTF::DumbPtrTraits<JSC::SourceProvider>>>, WTF::HashTraits<WTF::RefPtr<JSC::SourceProvider, WTF::DumbPtrTraits<JSC::SourceProvider>>>, WTF::HashTraits<WTF::RefPtr<JSC::SourceProviderCache, WTF::DumbPtrTraits<JSC::SourceProviderCache>>>> _field120;
    struct Interpreter *_field121;
    struct unique_ptr<JSC::JITThunks, std::__1::default_delete<JSC::JITThunks>> _field122;
    struct JSValue _field123;
    unsigned int _field124;
    struct ExecState *_field125;
    struct ExecState *_field126;
    void *_field127;
    struct Instruction *_field128;
    unsigned int _field129;
    void *_field130;
    BOOL _field131;
    struct VMEntryScope *_field132;
    struct JSObject *_field133;
    struct HashSet<JSC::JSObject *, WTF::PtrHash<JSC::JSObject *>, WTF::HashTraits<JSC::JSObject *>> _field134;
    struct LocalTimeOffsetCache _field135;
    struct String _field136;
    double _field137;
    struct unique_ptr<JSC::Profiler::Database, std::__1::default_delete<JSC::Profiler::Database>> _field138;
    struct RefPtr<JSC::TypedArrayController, WTF::DumbPtrTraits<JSC::TypedArrayController>> _field139;
    struct RegExpCache *_field140;
    struct BumpPointerAllocator _field141;
    struct Lock _field142;
    struct unique_ptr<char [], WTF::FastFree<char []>> _field143;
    struct Lock _field144;
    struct Ref<JSC::CompactVariableMap, WTF::DumbPtrTraits<JSC::CompactVariableMap>> _field145;
    struct unique_ptr<JSC::HasOwnPropertyCache, std::__1::default_delete<JSC::HasOwnPropertyCache>> _field146;
    void *_field147;
    unsigned long long _field148;
    void *_field149;
    void *_field150;
    void *_field151;
    struct Exception *_field152;
    struct Exception *_field153;
    BOOL _field154;
    int _field155;
    BOOL _field156;
    BOOL _field157;
    struct unique_ptr<JSC::CodeCache, std::__1::default_delete<JSC::CodeCache>> _field158;
    struct unique_ptr<JSC::BuiltinExecutables, std::__1::default_delete<JSC::BuiltinExecutables>> _field159;
    struct HashMap<WTF::String, WTF::RefPtr<JSC::WatchpointSet, WTF::DumbPtrTraits<JSC::WatchpointSet>>, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<WTF::RefPtr<JSC::WatchpointSet, WTF::DumbPtrTraits<JSC::WatchpointSet>>>> _field160;
    struct unique_ptr<JSC::TypeProfiler, std::__1::default_delete<JSC::TypeProfiler>> _field161;
    struct unique_ptr<JSC::TypeProfilerLog, std::__1::default_delete<JSC::TypeProfilerLog>> _field162;
    unsigned int _field163;
    BOOL _field164;
    struct Lock _field165;
    struct Vector<JSC::ScratchBuffer *, 0, WTF::CrashOnOverflow, 16> _field166;
    unsigned long long _field167;
    struct InlineWatchpointSet _field168;
    struct FunctionHasExecutedCache _field169;
    struct unique_ptr<JSC::ControlFlowProfiler, std::__1::default_delete<JSC::ControlFlowProfiler>> _field170;
    unsigned int _field171;
    struct Deque<std::__1::unique_ptr<JSC::QueuedTask, std::__1::default_delete<JSC::QueuedTask>>, 0> _field172;
    struct MallocPtr<long long, WTF::FastMalloc> _field173;
    struct VMTraps _field174;
    struct RefPtr<JSC::Watchdog, WTF::DumbPtrTraits<JSC::Watchdog>> _field175;
    struct unique_ptr<JSC::HeapProfiler, std::__1::default_delete<JSC::HeapProfiler>> _field176;
    struct RefPtr<JSC::SamplingProfiler, WTF::DumbPtrTraits<JSC::SamplingProfiler>> _field177;
    struct unique_ptr<JSC::FuzzerAgent, std::__1::default_delete<JSC::FuzzerAgent>> _field178;
    struct unique_ptr<JSC::ShadowChicken, std::__1::default_delete<JSC::ShadowChicken>> _field179;
    struct unique_ptr<JSC::BytecodeIntrinsicRegistry, std::__1::default_delete<JSC::BytecodeIntrinsicRegistry>> _field180;
    struct Function<void (JSC::VM &)> _field181;
    unsigned long long _field182;
    struct VM *_field183;
    struct VM *_field184;
};

struct VMEntryScope;

struct VMTraps {
    struct Box<WTF::Lock> _field1;
    struct Ref<WTF::AutomaticThreadCondition, WTF::DumbPtrTraits<WTF::AutomaticThreadCondition>> _field2;
    union {
        unsigned char _field1;
        unsigned char _field2;
    } _field3;
    BOOL _field4;
    BOOL _field5;
    struct RefPtr<JSC::VMTraps::SignalSender, WTF::DumbPtrTraits<JSC::VMTraps::SignalSender>> _field6;
};

struct Vector<JSC::ArrayBuffer *, 0, WTF::CrashOnOverflow, 16> {
    struct ArrayBuffer **_field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct Vector<JSC::HeapFinalizerCallback, 0, WTF::CrashOnOverflow, 16> {
    struct HeapFinalizerCallback *_field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct Vector<JSC::HeapObserver *, 0, WTF::CrashOnOverflow, 16> {
    struct HeapObserver **_field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct Vector<JSC::LargeAllocation *, 0, WTF::CrashOnOverflow, 16> {
    struct LargeAllocation **_field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct Vector<JSC::MarkedBlock::Handle *, 0, WTF::CrashOnOverflow, 16> {
    struct Handle **_field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct Vector<JSC::ScratchBuffer *, 0, WTF::CrashOnOverflow, 16> {
    struct ScratchBuffer **_field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct Vector<JSC::SlotVisitor *, 0, WTF::CrashOnOverflow, 16> {
    struct SlotVisitor **_field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct Vector<JSC::Subspace *, 0, WTF::CrashOnOverflow, 16> {
    struct Subspace **_field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct Vector<JSC::WeakBlock *, 0, WTF::CrashOnOverflow, 16> {
    struct WeakBlock **_field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct Vector<WTF::ConcurrentBuffer<std::__1::unique_ptr<WTF::ConcurrentVector<std::__1::unique_ptr<WTF::Bitmap<1024, unsigned int>, std::__1::default_delete<WTF::Bitmap<1024, unsigned int>>>, 8>::Segment, std::__1::default_delete<WTF::ConcurrentVector<std::__1::unique_ptr<WTF::Bitmap<1024, unsigned int>, std::__1::default_delete<WTF::Bitmap<1024, unsigned int>>>, 8>::Segment>>>::Array *, 0, WTF::CrashOnOverflow, 16> {
    struct Array **_field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct Vector<WTF::RetainPtr<const void *>, 0, WTF::CrashOnOverflow, 16> {
    struct RetainPtr<const void *> *_field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct Vector<std::__1::unique_ptr<JSC::BlockDirectory, std::__1::default_delete<JSC::BlockDirectory>>, 0, WTF::CrashOnOverflow, 16> {
    struct unique_ptr<JSC::BlockDirectory, std::__1::default_delete<JSC::BlockDirectory>> *_field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct Vector<std::__1::unique_ptr<JSC::LocalAllocator, std::__1::default_delete<JSC::LocalAllocator>>, 0, WTF::CrashOnOverflow, 16> {
    struct unique_ptr<JSC::LocalAllocator, std::__1::default_delete<JSC::LocalAllocator>> *_field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct Vector<std::__1::unique_ptr<JSC::SlotVisitor, std::__1::default_delete<JSC::SlotVisitor>>, 0, WTF::CrashOnOverflow, 16> {
    struct unique_ptr<JSC::SlotVisitor, std::__1::default_delete<JSC::SlotVisitor>> *_field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct Vector<std::__1::unique_ptr<JSC::StructureIDTable::StructureOrOffset [], WTF::FastFree<JSC::StructureIDTable::StructureOrOffset []>>, 0, WTF::CrashOnOverflow, 16> {
    struct unique_ptr<JSC::StructureIDTable::StructureOrOffset [], WTF::FastFree<JSC::StructureIDTable::StructureOrOffset []>> *_field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct Vector<std::__1::unique_ptr<WTF::ConcurrentPtrHashSet::Table, std::__1::default_delete<WTF::ConcurrentPtrHashSet::Table>>, 4, WTF::CrashOnOverflow, 16> {
    struct unique_ptr<WTF::ConcurrentPtrHashSet::Table, std::__1::default_delete<WTF::ConcurrentPtrHashSet::Table>> *_field1;
    unsigned int _field2;
    unsigned int _field3;
    struct type _field4[4];
};

struct Vector<unsigned int, 0, WTF::CrashOnOverflow, 16> {
    unsigned int *_field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct VectorBuffer<JSC::GCRequest, 0> {
    struct GCRequest *_field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct VectorBuffer<std::__1::unique_ptr<JSC::QueuedTask, std::__1::default_delete<JSC::QueuedTask>>, 0> {
    struct unique_ptr<JSC::QueuedTask, std::__1::default_delete<JSC::QueuedTask>> *_field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct Watchdog;

struct Weak<JSC::JSGlobalObject> {
    struct WeakImpl *m_impl;
};

struct Weak<JSC::JSObject> {
    struct WeakImpl *m_impl;
};

struct Weak<JSC::JSString> {
    struct WeakImpl *m_impl;
};

struct Weak<JSC::Structure> {
    struct WeakImpl *m_impl;
};

struct WeakBlock;

struct WeakGCMap<JSC::PrototypeKey, JSC::Structure, JSC::PrototypeKeyHash, WTF::HashTraits<JSC::PrototypeKey>> {
    CDUnknownFunctionPointerType *_field1;
    struct HashMap<JSC::PrototypeKey, JSC::Weak<JSC::Structure>, JSC::PrototypeKeyHash, WTF::HashTraits<JSC::PrototypeKey>, WTF::HashTraits<JSC::Weak<JSC::Structure>>> _field2;
    struct VM *_field3;
};

struct WeakGCMap<WTF::StringImpl *, JSC::JSString, WTF::PtrHash<WTF::StringImpl *>, WTF::HashTraits<WTF::StringImpl *>> {
    CDUnknownFunctionPointerType *_field1;
    struct HashMap<WTF::StringImpl *, JSC::Weak<JSC::JSString>, WTF::PtrHash<WTF::StringImpl *>, WTF::HashTraits<WTF::StringImpl *>, WTF::HashTraits<JSC::Weak<JSC::JSString>>> _field2;
    struct VM *_field3;
};

struct WeakGCMap<WTF::SymbolImpl *, JSC::Symbol, WTF::PtrHash<WTF::SymbolImpl *>, WTF::HashTraits<WTF::SymbolImpl *>> {
    CDUnknownFunctionPointerType *_field1;
    struct HashMap<WTF::SymbolImpl *, JSC::Weak<JSC::Symbol>, WTF::PtrHash<WTF::SymbolImpl *>, WTF::HashTraits<WTF::SymbolImpl *>, WTF::HashTraits<JSC::Weak<JSC::Symbol>>> _field2;
    struct VM *_field3;
};

struct WeakGCMap<id, JSC::JSObject, WTF::PtrHash<id>, WTF::HashTraits<id>>;

struct WeakGCMap<std::__1::pair<JSC::CustomGetterSetter *, int>, JSC::JSCustomGetterSetterFunction, WTF::PairHash<JSC::CustomGetterSetter *, int>, WTF::HashTraits<std::__1::pair<JSC::CustomGetterSetter *, int>>> {
    CDUnknownFunctionPointerType *_field1;
    struct HashMap<std::__1::pair<JSC::CustomGetterSetter *, int>, JSC::Weak<JSC::JSCustomGetterSetterFunction>, WTF::PairHash<JSC::CustomGetterSetter *, int>, WTF::HashTraits<std::__1::pair<JSC::CustomGetterSetter *, int>>, WTF::HashTraits<JSC::Weak<JSC::JSCustomGetterSetterFunction>>> _field2;
    struct VM *_field3;
};

struct WeakGCMapBase;

struct WeakImpl;

struct WeakObjCPtr<JSVirtualMachine> {
    id m_weakReference;
};

struct WeakObjCPtr<id<JSModuleLoaderDelegate>> {
    id m_weakReference;
};

struct WeakRandom {
    unsigned int _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WriteBarrier<JSC::JSCell, WTF::DumbPtrTraits<JSC::JSCell>> {
    struct JSCell *_field1;
};

struct WriteBarrier<JSC::JSGlobalObject, WTF::DumbPtrTraits<JSC::JSGlobalObject>> {
    struct JSGlobalObject *_field1;
};

struct WriteBarrier<JSC::PropertyTable, WTF::DumbPtrTraits<JSC::PropertyTable>> {
    struct PropertyTable *_field1;
};

struct WriteBarrier<JSC::StructureChain, WTF::DumbPtrTraits<JSC::StructureChain>> {
    struct StructureChain *_field1;
};

struct WriteBarrier<JSC::Unknown, WTF::DumbValueTraits<JSC::Unknown>> {
    long long _field1;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<JSC::FunctionHasExecutedCache::FunctionRange, bool, WTF::HashMethod<JSC::FunctionHasExecutedCache::FunctionRange>, std::__1::equal_to<JSC::FunctionHasExecutedCache::FunctionRange>, WTF::FastAllocator<std::__1::pair<const JSC::FunctionHasExecutedCache::FunctionRange, bool>>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<JSC::FunctionHasExecutedCache::FunctionRange, bool, WTF::HashMethod<JSC::FunctionHasExecutedCache::FunctionRange>, std::__1::equal_to<JSC::FunctionHasExecutedCache::FunctionRange>, WTF::FastAllocator<std::__1::pair<const JSC::FunctionHasExecutedCache::FunctionRange, bool>>>>, void *>*> *_field1;
};

struct array<JSC::Allocator, 503> {
    struct Allocator _field1[503];
};

struct array<JSC::DateInstanceCache::CacheEntry, 16> {
    struct CacheEntry _field1[16];
};

struct array<JSC::NumericStrings::CacheEntry<double>, 64> {
    struct CacheEntry<double> _field1[64];
};

struct array<JSC::NumericStrings::CacheEntry<int>, 64> {
    struct CacheEntry<int> _field1[64];
};

struct array<JSC::NumericStrings::CacheEntry<unsigned int>, 64> {
    struct CacheEntry<unsigned int> _field1[64];
};

struct array<WTF::String, 64> {
    struct String _field1[64];
};

struct atomic<WTF::ConcurrentPtrHashSet::Table *> {
    _Atomic struct Table *_field1;
};

struct atomic<bool> {
    _Atomic BOOL _field1;
};

struct atomic<unsigned char> {
    _Atomic unsigned char __a_;
};

struct atomic<unsigned int> {
    _Atomic unsigned int _field1;
};

struct pair<JSC::JSObject *, JSC::JSObject *> {
    struct JSObject *_field1;
    struct JSObject *_field2;
};

struct type {
    unsigned char _field1[8];
};

struct unique_ptr<JSC::BlockDirectory, std::__1::default_delete<JSC::BlockDirectory>>;

struct unique_ptr<JSC::BuiltinExecutables, std::__1::default_delete<JSC::BuiltinExecutables>> {
    struct __compressed_pair<JSC::BuiltinExecutables *, std::__1::default_delete<JSC::BuiltinExecutables>> {
        struct BuiltinExecutables *_field1;
    } _field1;
};

struct unique_ptr<JSC::BytecodeIntrinsicRegistry, std::__1::default_delete<JSC::BytecodeIntrinsicRegistry>> {
    struct __compressed_pair<JSC::BytecodeIntrinsicRegistry *, std::__1::default_delete<JSC::BytecodeIntrinsicRegistry>> {
        struct BytecodeIntrinsicRegistry *_field1;
    } _field1;
};

struct unique_ptr<JSC::CodeBlockSet, std::__1::default_delete<JSC::CodeBlockSet>> {
    struct __compressed_pair<JSC::CodeBlockSet *, std::__1::default_delete<JSC::CodeBlockSet>> {
        struct CodeBlockSet *_field1;
    } _field1;
};

struct unique_ptr<JSC::CodeCache, std::__1::default_delete<JSC::CodeCache>> {
    struct __compressed_pair<JSC::CodeCache *, std::__1::default_delete<JSC::CodeCache>> {
        struct CodeCache *_field1;
    } _field1;
};

struct unique_ptr<JSC::ControlFlowProfiler, std::__1::default_delete<JSC::ControlFlowProfiler>> {
    struct __compressed_pair<JSC::ControlFlowProfiler *, std::__1::default_delete<JSC::ControlFlowProfiler>> {
        struct ControlFlowProfiler *_field1;
    } _field1;
};

struct unique_ptr<JSC::FastMallocAlignedMemoryAllocator, std::__1::default_delete<JSC::FastMallocAlignedMemoryAllocator>> {
    struct __compressed_pair<JSC::FastMallocAlignedMemoryAllocator *, std::__1::default_delete<JSC::FastMallocAlignedMemoryAllocator>> {
        struct FastMallocAlignedMemoryAllocator *_field1;
    } _field1;
};

struct unique_ptr<JSC::FuzzerAgent, std::__1::default_delete<JSC::FuzzerAgent>> {
    struct __compressed_pair<JSC::FuzzerAgent *, std::__1::default_delete<JSC::FuzzerAgent>> {
        struct FuzzerAgent *_field1;
    } _field1;
};

struct unique_ptr<JSC::GigacageAlignedMemoryAllocator, std::__1::default_delete<JSC::GigacageAlignedMemoryAllocator>> {
    struct __compressed_pair<JSC::GigacageAlignedMemoryAllocator *, std::__1::default_delete<JSC::GigacageAlignedMemoryAllocator>> {
        struct GigacageAlignedMemoryAllocator *_field1;
    } _field1;
};

struct unique_ptr<JSC::HasOwnPropertyCache, std::__1::default_delete<JSC::HasOwnPropertyCache>> {
    struct __compressed_pair<JSC::HasOwnPropertyCache *, std::__1::default_delete<JSC::HasOwnPropertyCache>> {
        struct HasOwnPropertyCache *_field1;
    } _field1;
};

struct unique_ptr<JSC::HeapCellType, std::__1::default_delete<JSC::HeapCellType>> {
    struct __compressed_pair<JSC::HeapCellType *, std::__1::default_delete<JSC::HeapCellType>> {
        struct HeapCellType *_field1;
    } _field1;
};

struct unique_ptr<JSC::HeapProfiler, std::__1::default_delete<JSC::HeapProfiler>> {
    struct __compressed_pair<JSC::HeapProfiler *, std::__1::default_delete<JSC::HeapProfiler>> {
        struct HeapProfiler *_field1;
    } _field1;
};

struct unique_ptr<JSC::HeapVerifier, std::__1::default_delete<JSC::HeapVerifier>> {
    struct __compressed_pair<JSC::HeapVerifier *, std::__1::default_delete<JSC::HeapVerifier>> {
        struct HeapVerifier *_field1;
    } _field1;
};

struct unique_ptr<JSC::IsoAlignedMemoryAllocator, std::__1::default_delete<JSC::IsoAlignedMemoryAllocator>> {
    struct __compressed_pair<JSC::IsoAlignedMemoryAllocator *, std::__1::default_delete<JSC::IsoAlignedMemoryAllocator>> {
        struct IsoAlignedMemoryAllocator *_field1;
    } _field1;
};

struct unique_ptr<JSC::IsoSubspace, std::__1::default_delete<JSC::IsoSubspace>> {
    struct __compressed_pair<JSC::IsoSubspace *, std::__1::default_delete<JSC::IsoSubspace>> {
        struct IsoSubspace *_field1;
    } _field1;
};

struct unique_ptr<JSC::JITStubRoutineSet, std::__1::default_delete<JSC::JITStubRoutineSet>> {
    struct __compressed_pair<JSC::JITStubRoutineSet *, std::__1::default_delete<JSC::JITStubRoutineSet>> {
        struct JITStubRoutineSet *_field1;
    } _field1;
};

struct unique_ptr<JSC::JITThunks, std::__1::default_delete<JSC::JITThunks>> {
    struct __compressed_pair<JSC::JITThunks *, std::__1::default_delete<JSC::JITThunks>> {
        struct JITThunks *_field1;
    } _field1;
};

struct unique_ptr<JSC::JSDestructibleObjectHeapCellType, std::__1::default_delete<JSC::JSDestructibleObjectHeapCellType>> {
    struct __compressed_pair<JSC::JSDestructibleObjectHeapCellType *, std::__1::default_delete<JSC::JSDestructibleObjectHeapCellType>> {
        struct JSDestructibleObjectHeapCellType *_field1;
    } _field1;
};

struct unique_ptr<JSC::JSStringHeapCellType, std::__1::default_delete<JSC::JSStringHeapCellType>> {
    struct __compressed_pair<JSC::JSStringHeapCellType *, std::__1::default_delete<JSC::JSStringHeapCellType>> {
        struct JSStringHeapCellType *_field1;
    } _field1;
};

struct unique_ptr<JSC::LocalAllocator, std::__1::default_delete<JSC::LocalAllocator>>;

struct unique_ptr<JSC::MachineThreads, std::__1::default_delete<JSC::MachineThreads>> {
    struct __compressed_pair<JSC::MachineThreads *, std::__1::default_delete<JSC::MachineThreads>> {
        struct MachineThreads *_field1;
    } _field1;
};

struct unique_ptr<JSC::MarkStackArray, std::__1::default_delete<JSC::MarkStackArray>> {
    struct __compressed_pair<JSC::MarkStackArray *, std::__1::default_delete<JSC::MarkStackArray>> {
        struct MarkStackArray *_field1;
    } _field1;
};

struct unique_ptr<JSC::MarkingConstraintSet, std::__1::default_delete<JSC::MarkingConstraintSet>> {
    struct __compressed_pair<JSC::MarkingConstraintSet *, std::__1::default_delete<JSC::MarkingConstraintSet>> {
        struct MarkingConstraintSet *_field1;
    } _field1;
};

struct unique_ptr<JSC::MutatorScheduler, std::__1::default_delete<JSC::MutatorScheduler>> {
    struct __compressed_pair<JSC::MutatorScheduler *, std::__1::default_delete<JSC::MutatorScheduler>> {
        struct MutatorScheduler *_field1;
    } _field1;
};

struct unique_ptr<JSC::Profiler::Database, std::__1::default_delete<JSC::Profiler::Database>> {
    struct __compressed_pair<JSC::Profiler::Database *, std::__1::default_delete<JSC::Profiler::Database>> {
        struct Database *_field1;
    } _field1;
};

struct unique_ptr<JSC::PromiseDeferredTimer, std::__1::default_delete<JSC::PromiseDeferredTimer>> {
    struct __compressed_pair<JSC::PromiseDeferredTimer *, std::__1::default_delete<JSC::PromiseDeferredTimer>> {
        struct PromiseDeferredTimer *_field1;
    } _field1;
};

struct unique_ptr<JSC::QueuedTask, std::__1::default_delete<JSC::QueuedTask>>;

struct unique_ptr<JSC::ShadowChicken, std::__1::default_delete<JSC::ShadowChicken>> {
    struct __compressed_pair<JSC::ShadowChicken *, std::__1::default_delete<JSC::ShadowChicken>> {
        struct ShadowChicken *_field1;
    } _field1;
};

struct unique_ptr<JSC::SlotVisitor, std::__1::default_delete<JSC::SlotVisitor>> {
    struct __compressed_pair<JSC::SlotVisitor *, std::__1::default_delete<JSC::SlotVisitor>> {
        struct SlotVisitor *_field1;
    } _field1;
};

struct unique_ptr<JSC::StructureIDTable::StructureOrOffset [], WTF::FastFree<JSC::StructureIDTable::StructureOrOffset []>> {
    struct __compressed_pair<JSC::StructureIDTable::StructureOrOffset *, WTF::FastFree<JSC::StructureIDTable::StructureOrOffset []>> {
        union StructureOrOffset *_field1;
    } _field1;
};

struct unique_ptr<JSC::TypeProfiler, std::__1::default_delete<JSC::TypeProfiler>> {
    struct __compressed_pair<JSC::TypeProfiler *, std::__1::default_delete<JSC::TypeProfiler>> {
        struct TypeProfiler *_field1;
    } _field1;
};

struct unique_ptr<JSC::TypeProfilerLog, std::__1::default_delete<JSC::TypeProfilerLog>> {
    struct __compressed_pair<JSC::TypeProfilerLog *, std::__1::default_delete<JSC::TypeProfilerLog>> {
        struct TypeProfilerLog *_field1;
    } _field1;
};

struct unique_ptr<JSC::VM::SpaceAndSet, std::__1::default_delete<JSC::VM::SpaceAndSet>> {
    struct __compressed_pair<JSC::VM::SpaceAndSet *, std::__1::default_delete<JSC::VM::SpaceAndSet>> {
        struct SpaceAndSet *_field1;
    } _field1;
};

struct unique_ptr<JSC::WeakGCMap<id, JSC::JSObject, WTF::PtrHash<id>, WTF::HashTraits<id>>, std::__1::default_delete<JSC::WeakGCMap<id, JSC::JSObject, WTF::PtrHash<id>, WTF::HashTraits<id>>>> {
    struct __compressed_pair<JSC::WeakGCMap<id, JSC::JSObject, WTF::PtrHash<id>, WTF::HashTraits<id>>*, std::__1::default_delete<JSC::WeakGCMap<id, JSC::JSObject, WTF::PtrHash<id>, WTF::HashTraits<id>>>> {
        struct WeakGCMap<id, JSC::JSObject, WTF::PtrHash<id>, WTF::HashTraits<id>> *__value_;
    } __ptr_;
};

struct unique_ptr<WTF::ConcurrentPtrHashSet::Table, std::__1::default_delete<WTF::ConcurrentPtrHashSet::Table>>;

struct unique_ptr<WTF::Detail::CallableWrapperBase<void, JSC::VM &>, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, JSC::VM &>>> {
    struct __compressed_pair<WTF::Detail::CallableWrapperBase<void, JSC::VM &>*, std::__1::default_delete<WTF::Detail::CallableWrapperBase<void, JSC::VM &>>> {
        struct CallableWrapperBase<void, JSC::VM &> *_field1;
    } _field1;
};

struct unique_ptr<WTF::HashMap<WTF::RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>>, std::__1::unique_ptr<StaticFunctionEntry, std::__1::default_delete<StaticFunctionEntry>>, WTF::StringHash, WTF::HashTraits<WTF::RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>>>, WTF::HashTraits<std::__1::unique_ptr<StaticFunctionEntry, std::__1::default_delete<StaticFunctionEntry>>>>, std::__1::default_delete<WTF::HashMap<WTF::RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>>, std::__1::unique_ptr<StaticFunctionEntry, std::__1::default_delete<StaticFunctionEntry>>, WTF::StringHash, WTF::HashTraits<WTF::RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>>>, WTF::HashTraits<std::__1::unique_ptr<StaticFunctionEntry, std::__1::default_delete<StaticFunctionEntry>>>>>> {
    struct __compressed_pair<WTF::HashMap<WTF::RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>>, std::__1::unique_ptr<StaticFunctionEntry, std::__1::default_delete<StaticFunctionEntry>>, WTF::StringHash, WTF::HashTraits<WTF::RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>>>, WTF::HashTraits<std::__1::unique_ptr<StaticFunctionEntry, std::__1::default_delete<StaticFunctionEntry>>>>*, std::__1::default_delete<WTF::HashMap<WTF::RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>>, std::__1::unique_ptr<StaticFunctionEntry, std::__1::default_delete<StaticFunctionEntry>>, WTF::StringHash, WTF::HashTraits<WTF::RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>>>, WTF::HashTraits<std::__1::unique_ptr<StaticFunctionEntry, std::__1::default_delete<StaticFunctionEntry>>>>>> {
        struct HashMap<WTF::RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>>, std::__1::unique_ptr<StaticFunctionEntry, std::__1::default_delete<StaticFunctionEntry>>, WTF::StringHash, WTF::HashTraits<WTF::RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>>>, WTF::HashTraits<std::__1::unique_ptr<StaticFunctionEntry, std::__1::default_delete<StaticFunctionEntry>>>> *_field1;
    } _field1;
};

struct unique_ptr<WTF::HashMap<WTF::RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>>, std::__1::unique_ptr<StaticValueEntry, std::__1::default_delete<StaticValueEntry>>, WTF::StringHash, WTF::HashTraits<WTF::RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>>>, WTF::HashTraits<std::__1::unique_ptr<StaticValueEntry, std::__1::default_delete<StaticValueEntry>>>>, std::__1::default_delete<WTF::HashMap<WTF::RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>>, std::__1::unique_ptr<StaticValueEntry, std::__1::default_delete<StaticValueEntry>>, WTF::StringHash, WTF::HashTraits<WTF::RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>>>, WTF::HashTraits<std::__1::unique_ptr<StaticValueEntry, std::__1::default_delete<StaticValueEntry>>>>>> {
    struct __compressed_pair<WTF::HashMap<WTF::RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>>, std::__1::unique_ptr<StaticValueEntry, std::__1::default_delete<StaticValueEntry>>, WTF::StringHash, WTF::HashTraits<WTF::RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>>>, WTF::HashTraits<std::__1::unique_ptr<StaticValueEntry, std::__1::default_delete<StaticValueEntry>>>>*, std::__1::default_delete<WTF::HashMap<WTF::RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>>, std::__1::unique_ptr<StaticValueEntry, std::__1::default_delete<StaticValueEntry>>, WTF::StringHash, WTF::HashTraits<WTF::RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>>>, WTF::HashTraits<std::__1::unique_ptr<StaticValueEntry, std::__1::default_delete<StaticValueEntry>>>>>> {
        struct HashMap<WTF::RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>>, std::__1::unique_ptr<StaticValueEntry, std::__1::default_delete<StaticValueEntry>>, WTF::StringHash, WTF::HashTraits<WTF::RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>>>, WTF::HashTraits<std::__1::unique_ptr<StaticValueEntry, std::__1::default_delete<StaticValueEntry>>>> *_field1;
    } _field1;
};

struct unique_ptr<WTF::HashSet<JSC::MarkedArgumentBuffer *, WTF::PtrHash<JSC::MarkedArgumentBuffer *>, WTF::HashTraits<JSC::MarkedArgumentBuffer *>>, std::__1::default_delete<WTF::HashSet<JSC::MarkedArgumentBuffer *, WTF::PtrHash<JSC::MarkedArgumentBuffer *>, WTF::HashTraits<JSC::MarkedArgumentBuffer *>>>> {
    struct __compressed_pair<WTF::HashSet<JSC::MarkedArgumentBuffer *, WTF::PtrHash<JSC::MarkedArgumentBuffer *>, WTF::HashTraits<JSC::MarkedArgumentBuffer *>>*, std::__1::default_delete<WTF::HashSet<JSC::MarkedArgumentBuffer *, WTF::PtrHash<JSC::MarkedArgumentBuffer *>, WTF::HashTraits<JSC::MarkedArgumentBuffer *>>>> {
        struct HashSet<JSC::MarkedArgumentBuffer *, WTF::PtrHash<JSC::MarkedArgumentBuffer *>, WTF::HashTraits<JSC::MarkedArgumentBuffer *>> *_field1;
    } _field1;
};

struct unique_ptr<WTF::SimpleStats, std::__1::default_delete<WTF::SimpleStats>> {
    struct __compressed_pair<WTF::SimpleStats *, std::__1::default_delete<WTF::SimpleStats>> {
        struct SimpleStats *_field1;
    } _field1;
};

struct unique_ptr<char [], WTF::FastFree<char []>> {
    struct __compressed_pair<char *, WTF::FastFree<char []>> {
        char *_field1;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<JSC::FunctionHasExecutedCache::FunctionRange, bool, WTF::HashMethod<JSC::FunctionHasExecutedCache::FunctionRange>, std::__1::equal_to<JSC::FunctionHasExecutedCache::FunctionRange>, WTF::FastAllocator<std::__1::pair<const JSC::FunctionHasExecutedCache::FunctionRange, bool>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<WTF::FastAllocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<JSC::FunctionHasExecutedCache::FunctionRange, bool, WTF::HashMethod<JSC::FunctionHasExecutedCache::FunctionRange>, std::__1::equal_to<JSC::FunctionHasExecutedCache::FunctionRange>, WTF::FastAllocator<std::__1::pair<const JSC::FunctionHasExecutedCache::FunctionRange, bool>>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<JSC::FunctionHasExecutedCache::FunctionRange, bool, WTF::HashMethod<JSC::FunctionHasExecutedCache::FunctionRange>, std::__1::equal_to<JSC::FunctionHasExecutedCache::FunctionRange>, WTF::FastAllocator<std::__1::pair<const JSC::FunctionHasExecutedCache::FunctionRange, bool>>>>, void *>*>**, std::__1::__bucket_list_deallocator<WTF::FastAllocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<JSC::FunctionHasExecutedCache::FunctionRange, bool, WTF::HashMethod<JSC::FunctionHasExecutedCache::FunctionRange>, std::__1::equal_to<JSC::FunctionHasExecutedCache::FunctionRange>, WTF::FastAllocator<std::__1::pair<const JSC::FunctionHasExecutedCache::FunctionRange, bool>>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<JSC::FunctionHasExecutedCache::FunctionRange, bool, WTF::HashMethod<JSC::FunctionHasExecutedCache::FunctionRange>, std::__1::equal_to<JSC::FunctionHasExecutedCache::FunctionRange>, WTF::FastAllocator<std::__1::pair<const JSC::FunctionHasExecutedCache::FunctionRange, bool>>>>, void *>*> **_field1;
        struct __bucket_list_deallocator<WTF::FastAllocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<JSC::FunctionHasExecutedCache::FunctionRange, bool, WTF::HashMethod<JSC::FunctionHasExecutedCache::FunctionRange>, std::__1::equal_to<JSC::FunctionHasExecutedCache::FunctionRange>, WTF::FastAllocator<std::__1::pair<const JSC::FunctionHasExecutedCache::FunctionRange, bool>>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, WTF::FastAllocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<JSC::FunctionHasExecutedCache::FunctionRange, bool, WTF::HashMethod<JSC::FunctionHasExecutedCache::FunctionRange>, std::__1::equal_to<JSC::FunctionHasExecutedCache::FunctionRange>, WTF::FastAllocator<std::__1::pair<const JSC::FunctionHasExecutedCache::FunctionRange, bool>>>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unordered_map<long, std::__1::unordered_map<JSC::FunctionHasExecutedCache::FunctionRange, bool, WTF::HashMethod<JSC::FunctionHasExecutedCache::FunctionRange>, std::__1::equal_to<JSC::FunctionHasExecutedCache::FunctionRange>, WTF::FastAllocator<std::__1::pair<const JSC::FunctionHasExecutedCache::FunctionRange, bool>>>, std::__1::hash<long>, std::__1::equal_to<long>, WTF::FastAllocator<std::__1::pair<const long, std::__1::unordered_map<JSC::FunctionHasExecutedCache::FunctionRange, bool, WTF::HashMethod<JSC::FunctionHasExecutedCache::FunctionRange>, std::__1::equal_to<JSC::FunctionHasExecutedCache::FunctionRange>, WTF::FastAllocator<std::__1::pair<const JSC::FunctionHasExecutedCache::FunctionRange, bool>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<long, std::__1::unordered_map<JSC::FunctionHasExecutedCache::FunctionRange, bool, WTF::HashMethod<JSC::FunctionHasExecutedCache::FunctionRange>, std::__1::equal_to<JSC::FunctionHasExecutedCache::FunctionRange>, WTF::FastAllocator<std::__1::pair<const JSC::FunctionHasExecutedCache::FunctionRange, bool>>>>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, std::__1::unordered_map<JSC::FunctionHasExecutedCache::FunctionRange, bool, WTF::HashMethod<JSC::FunctionHasExecutedCache::FunctionRange>, std::__1::equal_to<JSC::FunctionHasExecutedCache::FunctionRange>, WTF::FastAllocator<std::__1::pair<const JSC::FunctionHasExecutedCache::FunctionRange, bool>>>>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, std::__1::unordered_map<JSC::FunctionHasExecutedCache::FunctionRange, bool, WTF::HashMethod<JSC::FunctionHasExecutedCache::FunctionRange>, std::__1::equal_to<JSC::FunctionHasExecutedCache::FunctionRange>, WTF::FastAllocator<std::__1::pair<const JSC::FunctionHasExecutedCache::FunctionRange, bool>>>>, std::__1::equal_to<long>, true>, WTF::FastAllocator<std::__1::__hash_value_type<long, std::__1::unordered_map<JSC::FunctionHasExecutedCache::FunctionRange, bool, WTF::HashMethod<JSC::FunctionHasExecutedCache::FunctionRange>, std::__1::equal_to<JSC::FunctionHasExecutedCache::FunctionRange>, WTF::FastAllocator<std::__1::pair<const JSC::FunctionHasExecutedCache::FunctionRange, bool>>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<JSC::FunctionHasExecutedCache::FunctionRange, bool, WTF::HashMethod<JSC::FunctionHasExecutedCache::FunctionRange>, std::__1::equal_to<JSC::FunctionHasExecutedCache::FunctionRange>, WTF::FastAllocator<std::__1::pair<const JSC::FunctionHasExecutedCache::FunctionRange, bool>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<WTF::FastAllocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<JSC::FunctionHasExecutedCache::FunctionRange, bool, WTF::HashMethod<JSC::FunctionHasExecutedCache::FunctionRange>, std::__1::equal_to<JSC::FunctionHasExecutedCache::FunctionRange>, WTF::FastAllocator<std::__1::pair<const JSC::FunctionHasExecutedCache::FunctionRange, bool>>>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<JSC::FunctionHasExecutedCache::FunctionRange, bool, WTF::HashMethod<JSC::FunctionHasExecutedCache::FunctionRange>, std::__1::equal_to<JSC::FunctionHasExecutedCache::FunctionRange>, WTF::FastAllocator<std::__1::pair<const JSC::FunctionHasExecutedCache::FunctionRange, bool>>>>, void *>*>, WTF::FastAllocator<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<JSC::FunctionHasExecutedCache::FunctionRange, bool, WTF::HashMethod<JSC::FunctionHasExecutedCache::FunctionRange>, std::__1::equal_to<JSC::FunctionHasExecutedCache::FunctionRange>, WTF::FastAllocator<std::__1::pair<const JSC::FunctionHasExecutedCache::FunctionRange, bool>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<JSC::FunctionHasExecutedCache::FunctionRange, bool, WTF::HashMethod<JSC::FunctionHasExecutedCache::FunctionRange>, std::__1::equal_to<JSC::FunctionHasExecutedCache::FunctionRange>, WTF::FastAllocator<std::__1::pair<const JSC::FunctionHasExecutedCache::FunctionRange, bool>>>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, std::__1::unordered_map<JSC::FunctionHasExecutedCache::FunctionRange, bool, WTF::HashMethod<JSC::FunctionHasExecutedCache::FunctionRange>, std::__1::equal_to<JSC::FunctionHasExecutedCache::FunctionRange>, WTF::FastAllocator<std::__1::pair<const JSC::FunctionHasExecutedCache::FunctionRange, bool>>>>, std::__1::hash<long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, std::__1::unordered_map<JSC::FunctionHasExecutedCache::FunctionRange, bool, WTF::HashMethod<JSC::FunctionHasExecutedCache::FunctionRange>, std::__1::equal_to<JSC::FunctionHasExecutedCache::FunctionRange>, WTF::FastAllocator<std::__1::pair<const JSC::FunctionHasExecutedCache::FunctionRange, bool>>>>, std::__1::equal_to<long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

#pragma mark Typedef'd Structures

typedef struct {
    int payload;
    int tag;
} CDStruct_c10b32d8;

// Template types
typedef struct RefPtr<JSC::CachedBytecode, WTF::DumbPtrTraits<JSC::CachedBytecode>> {
    struct CachedBytecode *m_ptr;
} RefPtr_cd332c91;

typedef struct pair<JSC::JSObject *, JSC::JSObject *> {
    struct JSObject *_field1;
    struct JSObject *_field2;
} pair_bfa3637f;

#pragma mark Named Unions

union EncodedValueDescriptor {
    long long asInt64;
    struct JSCell *ptr;
    CDStruct_c10b32d8 asBits;
};

union StructureOrOffset;

union WeakValueUnion {
    struct JSValue primitive;
    struct Weak<JSC::JSObject> object;
    struct Weak<JSC::JSString> string;
};

union constexpr_storage_t<JSC::CollectionScope> {
    unsigned char _field1;
    unsigned char _field2;
};

