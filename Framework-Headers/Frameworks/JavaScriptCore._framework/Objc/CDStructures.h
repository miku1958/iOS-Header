//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct Atomic<unsigned char> {
    struct atomic<unsigned char> value;
};

struct AuxiliaryBarrier<JSC::Butterfly *> {
    struct Butterfly *_field1;
};

struct Butterfly;

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

struct CachedBytecode;

struct CallbackData {
    struct CallbackData *_field1;
    id _field2;
    id _field3;
    struct OpaqueJSValue *_field4;
    struct OpaqueJSValue *_field5;
    unsigned long long _field6;
    struct OpaqueJSValue **_field7;
    id _field8;
};

struct ClassInfo;

struct InlineWatchpointSet {
    unsigned long long _field1;
};

struct JSCell;

struct JSGlobalObject;

struct JSLock;

struct JSObject {
    unsigned int _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
    unsigned char _field5;
    struct AuxiliaryBarrier<JSC::Butterfly *> _field6;
};

struct JSSourceCode {
    unsigned int _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
    unsigned char _field5;
    struct SourceCode _field6;
};

struct JSValue {
    union EncodedValueDescriptor u;
};

struct JSWeakValue {
    int m_tag;
    union WeakValueUnion m_value;
};

struct Lock {
    struct Atomic<unsigned char> m_byte;
};

struct MappedFileData {
    void *m_fileData;
    unsigned int m_fileSize;
};

struct NakedPtr<OpaqueJSClass> {
    struct OpaqueJSClass *m_ptr;
};

struct OpaqueJSClass;

struct OpaqueJSValue;

struct OrdinalNumber {
    int _field1;
};

struct PropertyTable;

struct RefPtr<JSC::CachedBytecode, WTF::DumbPtrTraits<JSC::CachedBytecode>> {
    struct CachedBytecode *m_ptr;
};

struct RefPtr<JSC::JSLock, WTF::DumbPtrTraits<JSC::JSLock>> {
    struct JSLock *m_ptr;
};

struct RefPtr<JSC::SourceProvider, WTF::DumbPtrTraits<JSC::SourceProvider>> {
    struct SourceProvider *_field1;
};

struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>> {
    struct StringImpl *m_ptr;
};

struct RefPtr<WTF::UniquedStringImpl, WTF::DumbPtrTraits<WTF::UniquedStringImpl>> {
    struct UniquedStringImpl *_field1;
};

struct RetainPtr<NSURL> {
    void *m_ptr;
};

struct SourceCode {
    struct RefPtr<JSC::SourceProvider, WTF::DumbPtrTraits<JSC::SourceProvider>> _field1;
    int _field2;
    int _field3;
    struct OrdinalNumber _field4;
    struct OrdinalNumber _field5;
};

struct SourceProvider;

struct String {
    struct RefPtr<WTF::StringImpl, WTF::DumbPtrTraits<WTF::StringImpl>> m_impl;
};

struct StringImpl;

struct Strong<JSC::JSObject, JSC::ShouldStrongDestructorGrabLock::No> {
    struct JSValue *m_slot;
};

struct Structure {
    unsigned int _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
    unsigned char _field5;
    struct StructureIDBlob _field6;
    unsigned short _field7;
    unsigned char _field8;
    struct Lock _field9;
    unsigned int _field10;
    struct WriteBarrier<JSC::JSGlobalObject, WTF::DumbPtrTraits<JSC::JSGlobalObject>> _field11;
    struct WriteBarrier<JSC::Unknown, WTF::DumbValueTraits<JSC::Unknown>> _field12;
    struct WriteBarrier<JSC::StructureChain, WTF::DumbPtrTraits<JSC::StructureChain>> _field13;
    struct WriteBarrier<JSC::JSCell, WTF::DumbPtrTraits<JSC::JSCell>> _field14;
    struct RefPtr<WTF::UniquedStringImpl, WTF::DumbPtrTraits<WTF::UniquedStringImpl>> _field15;
    struct ClassInfo *_field16;
    struct StructureTransitionTable _field17;
    struct WriteBarrier<JSC::PropertyTable, WTF::DumbPtrTraits<JSC::PropertyTable>> _field18;
    struct InlineWatchpointSet _field19;
    unsigned short _field20;
    unsigned short _field21;
    unsigned int _field22;
    struct TinyBloomFilter _field23;
};

struct StructureChain;

struct StructureIDBlob {
    union {
        struct {
            unsigned int _field1;
            unsigned char _field2;
            unsigned char _field3;
            unsigned char _field4;
            unsigned char _field5;
        } _field1;
        CDStruct_c10b32d8 _field2;
        long long _field3;
    } _field1;
};

struct StructureTransitionTable {
    long long _field1;
};

struct TinyBloomFilter {
    unsigned long long _field1;
};

struct UniquedStringImpl;

struct Weak<JSC::JSGlobalObject> {
    struct WeakImpl *m_impl;
};

struct Weak<JSC::JSObject> {
    struct WeakImpl *m_impl;
};

struct Weak<JSC::JSString> {
    struct WeakImpl *m_impl;
};

struct Weak<JSC::Structure> {
    struct WeakImpl *m_impl;
};

struct WeakGCMap<id, JSC::JSObject, WTF::DefaultHash<id>, WTF::HashTraits<id>>;

struct WeakImpl;

struct WeakObjCPtr<JSVirtualMachine> {
    id m_weakReference;
};

struct WeakObjCPtr<id<JSModuleLoaderDelegate>> {
    id m_weakReference;
};

struct WriteBarrier<JSC::JSCell, WTF::DumbPtrTraits<JSC::JSCell>> {
    struct JSCell *_field1;
};

struct WriteBarrier<JSC::JSGlobalObject, WTF::DumbPtrTraits<JSC::JSGlobalObject>> {
    struct JSGlobalObject *_field1;
};

struct WriteBarrier<JSC::PropertyTable, WTF::DumbPtrTraits<JSC::PropertyTable>> {
    struct PropertyTable *_field1;
};

struct WriteBarrier<JSC::StructureChain, WTF::DumbPtrTraits<JSC::StructureChain>> {
    struct StructureChain *_field1;
};

struct WriteBarrier<JSC::Unknown, WTF::DumbValueTraits<JSC::Unknown>> {
    long long _field1;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct atomic<unsigned char> {
    struct __cxx_atomic_impl<unsigned char, std::__1::__cxx_atomic_base_impl<unsigned char>> {
        _Atomic unsigned char __a_value;
    } __a_;
};

struct pair<JSC::JSObject *, JSC::JSObject *> {
    struct JSObject *_field1;
    struct JSObject *_field2;
};

struct unique_ptr<JSC::WeakGCMap<id, JSC::JSObject, WTF::DefaultHash<id>, WTF::HashTraits<id>>, std::__1::default_delete<JSC::WeakGCMap<id, JSC::JSObject, WTF::DefaultHash<id>, WTF::HashTraits<id>>>> {
    struct __compressed_pair<JSC::WeakGCMap<id, JSC::JSObject, WTF::DefaultHash<id>, WTF::HashTraits<id>>*, std::__1::default_delete<JSC::WeakGCMap<id, JSC::JSObject, WTF::DefaultHash<id>, WTF::HashTraits<id>>>> {
        struct WeakGCMap<id, JSC::JSObject, WTF::DefaultHash<id>, WTF::HashTraits<id>> *__value_;
    } __ptr_;
};

#pragma mark Typedef'd Structures

typedef struct {
    int payload;
    int tag;
} CDStruct_c10b32d8;

// Template types
typedef struct RefPtr<JSC::CachedBytecode, WTF::DumbPtrTraits<JSC::CachedBytecode>> {
    struct CachedBytecode *m_ptr;
} RefPtr_cd332c91;

typedef struct pair<JSC::JSObject *, JSC::JSObject *> {
    struct JSObject *_field1;
    struct JSObject *_field2;
} pair_bfa3637f;

#pragma mark Named Unions

union EncodedValueDescriptor {
    long long asInt64;
    struct JSCell *ptr;
    CDStruct_c10b32d8 asBits;
};

union WeakValueUnion {
    struct JSValue primitive;
    struct Weak<JSC::JSObject> object;
    struct Weak<JSC::JSString> string;
};

