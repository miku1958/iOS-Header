//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <ClockKit/CLKComplicationTemplate.h>

@class CLKImageProvider, CLKTextProvider;

@interface CLKComplicationTemplateModularLargeColumns : CLKComplicationTemplate
{
    BOOL _useNoColumnPadding;
    CLKImageProvider *_row1ImageProvider;
    CLKTextProvider *_row1Column1TextProvider;
    CLKTextProvider *_row1Column2TextProvider;
    CLKImageProvider *_row2ImageProvider;
    CLKTextProvider *_row2Column1TextProvider;
    CLKTextProvider *_row2Column2TextProvider;
    CLKImageProvider *_row3ImageProvider;
    CLKTextProvider *_row3Column1TextProvider;
    CLKTextProvider *_row3Column2TextProvider;
    long long _column2Alignment;
}

@property (nonatomic) long long column2Alignment; // @synthesize column2Alignment=_column2Alignment;
@property (copy, nonatomic) CLKTextProvider *row1Column1TextProvider; // @synthesize row1Column1TextProvider=_row1Column1TextProvider;
@property (copy, nonatomic) CLKTextProvider *row1Column2TextProvider; // @synthesize row1Column2TextProvider=_row1Column2TextProvider;
@property (copy, nonatomic) CLKImageProvider *row1ImageProvider; // @synthesize row1ImageProvider=_row1ImageProvider;
@property (copy, nonatomic) CLKTextProvider *row2Column1TextProvider; // @synthesize row2Column1TextProvider=_row2Column1TextProvider;
@property (copy, nonatomic) CLKTextProvider *row2Column2TextProvider; // @synthesize row2Column2TextProvider=_row2Column2TextProvider;
@property (copy, nonatomic) CLKImageProvider *row2ImageProvider; // @synthesize row2ImageProvider=_row2ImageProvider;
@property (copy, nonatomic) CLKTextProvider *row3Column1TextProvider; // @synthesize row3Column1TextProvider=_row3Column1TextProvider;
@property (copy, nonatomic) CLKTextProvider *row3Column2TextProvider; // @synthesize row3Column2TextProvider=_row3Column2TextProvider;
@property (copy, nonatomic) CLKImageProvider *row3ImageProvider; // @synthesize row3ImageProvider=_row3ImageProvider;
@property (nonatomic) BOOL useNoColumnPadding; // @synthesize useNoColumnPadding=_useNoColumnPadding;

+ (id)templateWithRow1Column1TextProvider:(id)arg1 row1Column2TextProvider:(id)arg2 row2Column1TextProvider:(id)arg3 row2Column2TextProvider:(id)arg4 row3Column1TextProvider:(id)arg5 row3Column2TextProvider:(id)arg6;
+ (id)templateWithRow1ImageProvider:(id)arg1 row1Column1TextProvider:(id)arg2 row1Column2TextProvider:(id)arg3 row2ImageProvider:(id)arg4 row2Column1TextProvider:(id)arg5 row2Column2TextProvider:(id)arg6 row3ImageProvider:(id)arg7 row3Column1TextProvider:(id)arg8 row3Column2TextProvider:(id)arg9;
- (void).cxx_destruct;
- (void)_enumerateImageProviderKeysWithBlock:(CDUnknownBlockType)arg1;
- (void)_enumerateIntegerKeysWithBlock:(CDUnknownBlockType)arg1;
- (void)_enumerateTextProviderKeysWithBlock:(CDUnknownBlockType)arg1;
- (long long)compatibleFamily;
- (id)initWithRow1Column1TextProvider:(id)arg1 row1Column2TextProvider:(id)arg2 row2Column1TextProvider:(id)arg3 row2Column2TextProvider:(id)arg4 row3Column1TextProvider:(id)arg5 row3Column2TextProvider:(id)arg6;
- (id)initWithRow1ImageProvider:(id)arg1 row1Column1TextProvider:(id)arg2 row1Column2TextProvider:(id)arg3 row2ImageProvider:(id)arg4 row2Column1TextProvider:(id)arg5 row2Column2TextProvider:(id)arg6 row3ImageProvider:(id)arg7 row3Column1TextProvider:(id)arg8 row3Column2TextProvider:(id)arg9;

@end

