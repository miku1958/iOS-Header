//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class CADisplayLink, NSCalendar, NSDate, NSHashTable;
@protocol OS_dispatch_source;

@interface CLKClockTimer : NSObject
{
    CADisplayLink *_displayLink;
    NSHashTable *_handlersByUpdateFrequency[5];
    NSHashTable *_allHandlers;
    unsigned long long _nextToken;
    NSDate *_lastNow;
    long long _lastHour;
    long long _lastMinute;
    long long _lastSecond;
    long long _last15fps;
    long long _last30fps;
    long long _last60fps;
    BOOL _paused;
    BOOL _isForeground;
    BOOL _backlightOn;
    BOOL _permittedToRun;
    NSObject<OS_dispatch_source> *_signalSource;
    NSDate *_waitTimerScheduledFireTime;
    NSObject<OS_dispatch_source> *_waitForNextEventTimer;
    NSCalendar *_calendar;
}

+ (void)_forceDate:(id)arg1;
+ (id)now;
+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)_cancelWaitTimer;
- (void)_createDisplayLinkIfNeeded;
- (void)_dumpIndentificationLogs;
- (void)_handleTimePassed;
- (BOOL)_hasHandlers;
- (void)_maybeClearLastSeenTimeComponents;
- (long long)_minimumPossibleUpdateFrequency;
- (id)_nextTokenWithUpdateFrequency:(long long)arg1 wantsCommit:(BOOL)arg2 wantsHighAccuracy:(BOOL)arg3 identificationLog:(CDUnknownBlockType)arg4 handler:(CDUnknownBlockType)arg5;
- (void)_onDisplayLink:(id)arg1;
- (void)_setDisplayLinkFrameInterval:(long long)arg1;
- (double)_timeUntilNextHighAccuracyEventFromHour:(long long)arg1 minute:(long long)arg2 second:(long long)arg3 nanosecond:(long long)arg4;
- (double)_timeUntilNextHighAccuracyEventFromNow;
- (void)_updateDisplayLink;
- (void)_updateDisplayLinkWithTimeUntilNextHighAccuracyEvent:(double)arg1 withMinimumUpdateFrequency:(long long)arg2;
- (void)_updateIsPermittedToRun;
- (void)dealloc;
- (id)init;
- (void)pause;
- (void)setHandler:(id)arg1 wantsCommit:(BOOL)arg2;
- (id)start15fpsUpdatesWithHandler:(CDUnknownBlockType)arg1;
- (id)start15fpsUpdatesWithHandler:(CDUnknownBlockType)arg1 identificationLog:(CDUnknownBlockType)arg2;
- (id)start30fpsUpdatesWithHandler:(CDUnknownBlockType)arg1 identificationLog:(CDUnknownBlockType)arg2;
- (id)start60fpsUpdatesWithHandler:(CDUnknownBlockType)arg1 identificationLog:(CDUnknownBlockType)arg2;
- (id)startMinuteUpdatesWithHandler:(CDUnknownBlockType)arg1;
- (id)startMinuteUpdatesWithHandler:(CDUnknownBlockType)arg1 identificationLog:(CDUnknownBlockType)arg2;
- (id)startSecondUpdatesWithHandler:(CDUnknownBlockType)arg1;
- (id)startSecondUpdatesWithHandler:(CDUnknownBlockType)arg1 identificationLog:(CDUnknownBlockType)arg2;
- (id)startUpdatesWithUpdateFrequency:(long long)arg1 withHandler:(CDUnknownBlockType)arg2 identificationLog:(CDUnknownBlockType)arg3;
- (void)stopUpdatesForToken:(id)arg1;
- (void)unpause;

@end

