//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AudioObjectPropertyAddress {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct Client_Side_IO_Gateway;

struct Device_Token {
    unsigned int _field1;
};

struct HAL_Server_Lifetime_Events;

struct Listener_List {
    struct unique_ptr<HAL::Client::Listener_List::Listener_List_Impl, std::__1::default_delete<HAL::Client::Listener_List::Listener_List_Impl>> _field1;
};

struct Listener_List_Impl;

struct Object_ID_Map;

struct PropertyAddress {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct Property_Identity {
    unsigned int _field1;
    struct PropertyAddress _field2;
    struct Device_Token _field3;
    struct Server_Side_Client_Identity _field4;
};

struct Server_Side_Client_Identity {
    int _field1;
};

struct Transport_Token {
    unsigned int _field1;
};

struct __shared_weak_count;

struct shared_ptr<Client_Side_IO_Gateway> {
    struct Client_Side_IO_Gateway *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<HAL::Client::Object_ID_Map> {
    struct Object_ID_Map *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct unique_ptr<HAL::Client::Listener_List::Listener_List_Impl, std::__1::default_delete<HAL::Client::Listener_List::Listener_List_Impl>> {
    struct __compressed_pair<HAL::Client::Listener_List::Listener_List_Impl *, std::__1::default_delete<HAL::Client::Listener_List::Listener_List_Impl>> {
        struct Listener_List_Impl *_field1;
    } _field1;
};

struct vector<AudioObjectPropertyAddress, std::__1::allocator<AudioObjectPropertyAddress>> {
    struct AudioObjectPropertyAddress *_field1;
    struct AudioObjectPropertyAddress *_field2;
    struct __compressed_pair<AudioObjectPropertyAddress *, std::__1::allocator<AudioObjectPropertyAddress>> {
        struct AudioObjectPropertyAddress *_field1;
    } _field3;
};

struct weak_ptr<HAL_Server_Lifetime_Events> {
    struct HAL_Server_Lifetime_Events *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

#pragma mark Typedef'd Structures

// Template types
typedef struct shared_ptr<Client_Side_IO_Gateway> {
    struct Client_Side_IO_Gateway *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_6f98d2b6;

typedef struct shared_ptr<HAL::Client::Object_ID_Map> {
    struct Object_ID_Map *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_a1e71f47;

typedef struct vector<AudioObjectPropertyAddress, std::__1::allocator<AudioObjectPropertyAddress>> {
    struct AudioObjectPropertyAddress *_field1;
    struct AudioObjectPropertyAddress *_field2;
    struct __compressed_pair<AudioObjectPropertyAddress *, std::__1::allocator<AudioObjectPropertyAddress>> {
        struct AudioObjectPropertyAddress *_field1;
    } _field3;
} vector_9f82871d;

typedef struct weak_ptr<HAL_Server_Lifetime_Events> {
    struct HAL_Server_Lifetime_Events *__ptr_;
    struct __shared_weak_count *__cntrl_;
} weak_ptr_7745b585;

