//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class LPTheme, NSMutableDictionary, NSMutableSet;

__attribute__((visibility("hidden")))
@interface LPCSSResolver : NSObject
{
    BOOL _useInlineStyles;
    BOOL _useVariablesWhenUsingInlineStyles;
    BOOL _includeClassNamesWhenUsingInlineStyles;
    BOOL _includeDarkInterfaceInlineStyles;
    BOOL _generateEmailCompatibleMarkup;
    NSMutableDictionary *_localVariables;
    NSMutableSet *_pendingVariables;
    LPTheme *_theme;
}

@property (nonatomic) BOOL generateEmailCompatibleMarkup; // @synthesize generateEmailCompatibleMarkup=_generateEmailCompatibleMarkup;
@property (nonatomic) BOOL includeClassNamesWhenUsingInlineStyles; // @synthesize includeClassNamesWhenUsingInlineStyles=_includeClassNamesWhenUsingInlineStyles;
@property (nonatomic) BOOL includeDarkInterfaceInlineStyles; // @synthesize includeDarkInterfaceInlineStyles=_includeDarkInterfaceInlineStyles;
@property (readonly, nonatomic) NSMutableDictionary *localVariables; // @synthesize localVariables=_localVariables;
@property (readonly, nonatomic) NSMutableSet *pendingVariables; // @synthesize pendingVariables=_pendingVariables;
@property (readonly, nonatomic) LPTheme *theme; // @synthesize theme=_theme;
@property (readonly, nonatomic) BOOL useCSSVariables;
@property (nonatomic) BOOL useInlineStyles; // @synthesize useInlineStyles=_useInlineStyles;
@property (nonatomic) BOOL useVariablesWhenUsingInlineStyles; // @synthesize useVariablesWhenUsingInlineStyles=_useVariablesWhenUsingInlineStyles;

- (void).cxx_destruct;
- (void)addStyle:(id)arg1 toElement:(id)arg2 inComponent:(id)arg3;
- (void)buildCSSDeclarationsFromRuleDictionary:(id)arg1 withPrefix:(id)arg2 suffix:(id)arg3 spacer:(id)arg4 forBuffer:(id)arg5;
- (id)buildInlineStyleForRuleDictionary:(id)arg1;
- (void)buildPendingVariableSetForRuleDictionary:(id)arg1;
- (id)buildStyleSheet;
- (id)components;
- (void)enumerateResolvedRulesFromRuleDictionary:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)initWithTheme:(id)arg1;
- (id)localVariablesAsCSSVariables;
- (void)registerAlternateStyle:(id)arg1 inComponent:(id)arg2;
- (id)resolveCSSValue:(id)arg1;
- (id)ruleDictionaryForStyle:(id)arg1 forComponentClass:(Class)arg2 withDarkInterface:(BOOL)arg3;
- (void)setStyle:(id)arg1 toElement:(id)arg2 inComponent:(id)arg3;
- (id)themeVariablesAsCSSVariables;

@end

