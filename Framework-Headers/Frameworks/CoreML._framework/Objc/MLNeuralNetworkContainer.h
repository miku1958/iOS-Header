//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class MLModel, MLNeuralNetworksCompileTimeParams, MLVersionInfo, NSArray, NSDictionary, NSString;

@interface MLNeuralNetworkContainer : NSObject
{
    BOOL _hasBidirectionalLayer;
    BOOL _hasOptionalInputSequenceConcat;
    BOOL _hasDynamicLayer;
    BOOL _ndArrayInterpretation;
    BOOL _modelIsEncrypted;
    int _precision;
    int _engine;
    NSString *_modelFilePath;
    NSArray *_inputLayerNames;
    NSArray *_outputLayerNames;
    NSString *_name;
    NSDictionary *_inputDescription;
    NSDictionary *_outputDescription;
    NSDictionary *_imageParameters;
    NSArray *_configurationList;
    NSArray *_classLabels;
    NSString *_classScoreVectorName;
    MLModel *_transformDesc;
    NSDictionary *_imagePreprocessingParams;
    MLNeuralNetworksCompileTimeParams *_updatableModelCompiledParams;
    NSDictionary *_optionalInputDefaultValues;
    MLVersionInfo *_modelVersionInfo;
    map_7c549560 _optionalInputTypes;
}

@property (strong) NSArray *classLabels; // @synthesize classLabels=_classLabels;
@property (strong) NSString *classScoreVectorName; // @synthesize classScoreVectorName=_classScoreVectorName;
@property (strong, nonatomic) NSArray *configurationList; // @synthesize configurationList=_configurationList;
@property (nonatomic) int engine; // @synthesize engine=_engine;
@property (nonatomic) BOOL hasBidirectionalLayer; // @synthesize hasBidirectionalLayer=_hasBidirectionalLayer;
@property (nonatomic) BOOL hasDynamicLayer; // @synthesize hasDynamicLayer=_hasDynamicLayer;
@property (nonatomic) BOOL hasOptionalInputSequenceConcat; // @synthesize hasOptionalInputSequenceConcat=_hasOptionalInputSequenceConcat;
@property (strong, nonatomic) NSDictionary *imageParameters; // @synthesize imageParameters=_imageParameters;
@property (strong, nonatomic) NSDictionary *imagePreprocessingParams; // @synthesize imagePreprocessingParams=_imagePreprocessingParams;
@property (strong, nonatomic) NSDictionary *inputDescription; // @synthesize inputDescription=_inputDescription;
@property (readonly, strong, nonatomic) NSArray *inputLayerNames; // @synthesize inputLayerNames=_inputLayerNames;
@property (strong, nonatomic) NSString *modelFilePath; // @synthesize modelFilePath=_modelFilePath;
@property (nonatomic) BOOL modelIsEncrypted; // @synthesize modelIsEncrypted=_modelIsEncrypted;
@property (strong, nonatomic) MLVersionInfo *modelVersionInfo; // @synthesize modelVersionInfo=_modelVersionInfo;
@property (strong, nonatomic) NSString *name; // @synthesize name=_name;
@property BOOL ndArrayInterpretation; // @synthesize ndArrayInterpretation=_ndArrayInterpretation;
@property (strong, nonatomic) NSDictionary *optionalInputDefaultValues; // @synthesize optionalInputDefaultValues=_optionalInputDefaultValues;
@property (nonatomic) map_7c549560 optionalInputTypes; // @synthesize optionalInputTypes=_optionalInputTypes;
@property (strong, nonatomic) NSDictionary *outputDescription; // @synthesize outputDescription=_outputDescription;
@property (readonly, strong, nonatomic) NSArray *outputLayerNames; // @synthesize outputLayerNames=_outputLayerNames;
@property (nonatomic) int precision; // @synthesize precision=_precision;
@property (strong) MLModel *transformDesc; // @synthesize transformDesc=_transformDesc;
@property (strong, nonatomic) MLNeuralNetworksCompileTimeParams *updatableModelCompiledParams; // @synthesize updatableModelCompiledParams=_updatableModelCompiledParams;

+ (id)containerFromCompiledArchive:(struct _MLModelInputArchiver *)arg1 modelVersionInfo:(id)arg2 compilerVersionInfo:(id)arg3 configuration:(id)arg4 error:(id *)arg5;
+ (id)containerFromFilePath:(id)arg1 inputLayerNames:(id)arg2 outputLayerNames:(id)arg3 parameters:(id)arg4;
+ (BOOL)readIsClassifier:(struct IArchive *)arg1;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)initWithFeatureDescriptions:(id)arg1 transformDesc:(id)arg2 outputLayerNames:(id)arg3 parameters:(id)arg4 configurations:(id)arg5 classScoreVectorName:(id)arg6 classLabels:(id)arg7 hasBidirectionalLayer:(BOOL)arg8 hasOptionalInputSequenceConcat:(BOOL)arg9 hasDynamicLayer:(BOOL)arg10;
- (id)initWithFilePath:(id)arg1 inputLayerNames:(id)arg2 outputLayerNames:(id)arg3 parameters:(id)arg4;

@end

