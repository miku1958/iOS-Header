//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

__attribute__((visibility("hidden")))
@interface _MLNLPFrameworkHandle : NSObject
{
    BOOL _valid;
    CDUnknownFunctionPointerType _NLPSequenceModelCopyPredictedTokensAndLabelsForTextImpl;
    CDUnknownFunctionPointerType _NLPSequenceModelCreateWithDataImpl;
    CDUnknownFunctionPointerType _NLPSequenceModelGetRevisionImpl;
    CDUnknownFunctionPointerType _NLPSequenceModelIsRevisionSupportedImpl;
    CDUnknownFunctionPointerType _NLPSequenceModelGetCurrentRevisionImpl;
    CDUnknownFunctionPointerType _NLPClassifierModelCopyPredictedLabelForTextImpl;
    CDUnknownFunctionPointerType _NLPClassifierModelCreateWithDataImpl;
    CDUnknownFunctionPointerType _NLPClassifierModelGetRevisionImpl;
    CDUnknownFunctionPointerType _NLPClassifierModelIsRevisionSupportedImpl;
    CDUnknownFunctionPointerType _NLPClassifierModelGetCurrentRevisionImpl;
    CDUnknownFunctionPointerType _NLPGazetteerModelCopyLabelForStringImpl;
    CDUnknownFunctionPointerType _NLPGazetteerModelCreateWithDataImpl;
    CDUnknownFunctionPointerType _NLPGazetteerModelGetRevisionImpl;
    CDUnknownFunctionPointerType _NLPGazetteerModelIsRevisionSupportedImpl;
    CDUnknownFunctionPointerType _NLPGazetteerModelGetCurrentRevisionImpl;
    CDUnknownFunctionPointerType _NLPEmbeddingModelCopyVectorForStringImpl;
    CDUnknownFunctionPointerType _NLPEmbeddingModelCreateWithDataImpl;
    CDUnknownFunctionPointerType _NLPEmbeddingModelGetRevisionImpl;
    CDUnknownFunctionPointerType _NLPEmbeddingModelIsRevisionSupportedImpl;
    CDUnknownFunctionPointerType _NLPEmbeddingModelGetCurrentRevisionImpl;
}

@property (readonly, nonatomic) CDUnknownFunctionPointerType NLPClassifierModelCopyPredictedLabelForTextImpl; // @synthesize NLPClassifierModelCopyPredictedLabelForTextImpl=_NLPClassifierModelCopyPredictedLabelForTextImpl;
@property (readonly, nonatomic) CDUnknownFunctionPointerType NLPClassifierModelCreateWithDataImpl; // @synthesize NLPClassifierModelCreateWithDataImpl=_NLPClassifierModelCreateWithDataImpl;
@property (readonly, nonatomic) CDUnknownFunctionPointerType NLPClassifierModelGetCurrentRevisionImpl; // @synthesize NLPClassifierModelGetCurrentRevisionImpl=_NLPClassifierModelGetCurrentRevisionImpl;
@property (readonly, nonatomic) CDUnknownFunctionPointerType NLPClassifierModelGetRevisionImpl; // @synthesize NLPClassifierModelGetRevisionImpl=_NLPClassifierModelGetRevisionImpl;
@property (readonly, nonatomic) CDUnknownFunctionPointerType NLPClassifierModelIsRevisionSupportedImpl; // @synthesize NLPClassifierModelIsRevisionSupportedImpl=_NLPClassifierModelIsRevisionSupportedImpl;
@property (readonly, nonatomic) CDUnknownFunctionPointerType NLPEmbeddingModelCopyVectorForStringImpl; // @synthesize NLPEmbeddingModelCopyVectorForStringImpl=_NLPEmbeddingModelCopyVectorForStringImpl;
@property (readonly, nonatomic) CDUnknownFunctionPointerType NLPEmbeddingModelCreateWithDataImpl; // @synthesize NLPEmbeddingModelCreateWithDataImpl=_NLPEmbeddingModelCreateWithDataImpl;
@property (readonly, nonatomic) CDUnknownFunctionPointerType NLPEmbeddingModelGetCurrentRevisionImpl; // @synthesize NLPEmbeddingModelGetCurrentRevisionImpl=_NLPEmbeddingModelGetCurrentRevisionImpl;
@property (readonly, nonatomic) CDUnknownFunctionPointerType NLPEmbeddingModelGetRevisionImpl; // @synthesize NLPEmbeddingModelGetRevisionImpl=_NLPEmbeddingModelGetRevisionImpl;
@property (readonly, nonatomic) CDUnknownFunctionPointerType NLPEmbeddingModelIsRevisionSupportedImpl; // @synthesize NLPEmbeddingModelIsRevisionSupportedImpl=_NLPEmbeddingModelIsRevisionSupportedImpl;
@property (readonly, nonatomic) CDUnknownFunctionPointerType NLPGazetteerModelCopyLabelForStringImpl; // @synthesize NLPGazetteerModelCopyLabelForStringImpl=_NLPGazetteerModelCopyLabelForStringImpl;
@property (readonly, nonatomic) CDUnknownFunctionPointerType NLPGazetteerModelCreateWithDataImpl; // @synthesize NLPGazetteerModelCreateWithDataImpl=_NLPGazetteerModelCreateWithDataImpl;
@property (readonly, nonatomic) CDUnknownFunctionPointerType NLPGazetteerModelGetCurrentRevisionImpl; // @synthesize NLPGazetteerModelGetCurrentRevisionImpl=_NLPGazetteerModelGetCurrentRevisionImpl;
@property (readonly, nonatomic) CDUnknownFunctionPointerType NLPGazetteerModelGetRevisionImpl; // @synthesize NLPGazetteerModelGetRevisionImpl=_NLPGazetteerModelGetRevisionImpl;
@property (readonly, nonatomic) CDUnknownFunctionPointerType NLPGazetteerModelIsRevisionSupportedImpl; // @synthesize NLPGazetteerModelIsRevisionSupportedImpl=_NLPGazetteerModelIsRevisionSupportedImpl;
@property (readonly, nonatomic) CDUnknownFunctionPointerType NLPSequenceModelCopyPredictedTokensAndLabelsForTextImpl; // @synthesize NLPSequenceModelCopyPredictedTokensAndLabelsForTextImpl=_NLPSequenceModelCopyPredictedTokensAndLabelsForTextImpl;
@property (readonly, nonatomic) CDUnknownFunctionPointerType NLPSequenceModelCreateWithDataImpl; // @synthesize NLPSequenceModelCreateWithDataImpl=_NLPSequenceModelCreateWithDataImpl;
@property (readonly, nonatomic) CDUnknownFunctionPointerType NLPSequenceModelGetCurrentRevisionImpl; // @synthesize NLPSequenceModelGetCurrentRevisionImpl=_NLPSequenceModelGetCurrentRevisionImpl;
@property (readonly, nonatomic) CDUnknownFunctionPointerType NLPSequenceModelGetRevisionImpl; // @synthesize NLPSequenceModelGetRevisionImpl=_NLPSequenceModelGetRevisionImpl;
@property (readonly, nonatomic) CDUnknownFunctionPointerType NLPSequenceModelIsRevisionSupportedImpl; // @synthesize NLPSequenceModelIsRevisionSupportedImpl=_NLPSequenceModelIsRevisionSupportedImpl;
@property (readonly, nonatomic, getter=isValid) BOOL valid; // @synthesize valid=_valid;

+ (id)sharedHandle;
- (id)init;
- (const void *)initializeEmbeddingModelWithData:(id)arg1 error:(id *)arg2;
- (const void *)initializeGazetteerModelWithData:(id)arg1 error:(id *)arg2;
- (const void *)initializeSentenceClassifierModelWithData:(id)arg1 error:(id *)arg2;
- (const void *)initializeWordTaggingModelWithData:(id)arg1 error:(id *)arg2;
- (id)predictLabelForWordString:(void *)arg1 inputString:(id)arg2 error:(id *)arg3;
- (id)predictLabelsForSentenceString:(void *)arg1 inputString:(id)arg2 error:(id *)arg3;
- (id)predictTokensLabelsLocationsLengthsForString:(void *)arg1 inputString:(id)arg2 error:(id *)arg3;
- (id)predictVectorForString:(void *)arg1 inputString:(id)arg2 error:(id *)arg3;

@end

