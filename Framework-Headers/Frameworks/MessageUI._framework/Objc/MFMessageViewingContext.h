//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/NSObject.h>

@class MFActivityMonitor, MFAttachmentManager, MFError, MFLock, MFMailMessage, MFMessageBody, MFMimePart, NSArray, NSConditionLock, NSError, SGSuggestionsService;
@protocol MFMessageViewingContextDelegate, OS_dispatch_queue;

@interface MFMessageViewingContext : NSObject
{
    NSObject<MFMessageViewingContextDelegate> *_delegate;
    MFMailMessage *_message;
    MFMessageBody *_body;
    id _content;
    MFLock *_contentLock;
    MFActivityMonitor *_loadTask;
    MFMimePart *_loadedPart;
    NSArray *_signers;
    MFError *_secureMIMEError;
    MFAttachmentManager *_attachmentManager;
    unsigned long long _contentOffset;
    unsigned int _loadIncrement;
    unsigned int _loadedFullData:1;
    unsigned int _hasNoContent:1;
    unsigned int _failedToLoad:1;
    unsigned int _isOutgoingMessage:1;
    unsigned int _isDraftMessage:1;
    unsigned int _isEditableMessage:1;
    unsigned int _showMailboxName:1;
    unsigned int _shouldAnalyzeMessage:1;
    NSObject<OS_dispatch_queue> *_suggestionsQueue;
    SGSuggestionsService *_suggestionsService;
    NSConditionLock *_suggestionsLock;
    NSArray *_suggestions;
    BOOL _isReload;
    long long _loadAlternative;
    NSError *_messageAnalysisError;
}

@property (readonly, strong, nonatomic) MFAttachmentManager *attachmentManager; // @synthesize attachmentManager=_attachmentManager;
@property (strong, nonatomic) id content;
@property (nonatomic) unsigned long long contentOffset; // @synthesize contentOffset=_contentOffset;
@property (nonatomic) id<MFMessageViewingContextDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, nonatomic) BOOL failedToLoad;
@property (readonly, nonatomic) BOOL hasAnalyzedMessage;
@property (readonly, nonatomic) BOOL hasLoaded;
@property (readonly, nonatomic) BOOL hasNoContent;
@property (nonatomic) BOOL isDraftMessage;
@property (nonatomic) BOOL isEditableMessage;
@property (readonly, nonatomic) BOOL isMessageEncrypted;
@property (readonly, nonatomic) BOOL isMessageSigned;
@property (nonatomic) BOOL isOutgoingMessage;
@property (readonly, nonatomic) BOOL isPartial;
@property (readonly, strong, nonatomic) MFActivityMonitor *loadTask; // @synthesize loadTask=_loadTask;
@property (strong, nonatomic) MFMimePart *loadedPart; // @synthesize loadedPart=_loadedPart;
@property (readonly, strong, nonatomic) MFMailMessage *message; // @synthesize message=_message;
@property (strong, nonatomic) NSError *messageAnalysisError; // @synthesize messageAnalysisError=_messageAnalysisError;
@property (strong, nonatomic) MFMessageBody *messageBody; // @synthesize messageBody=_body;
@property (strong, nonatomic) MFError *secureMimeError; // @synthesize secureMimeError=_secureMIMEError;
@property (nonatomic) BOOL shouldAnalyzeMessage;
@property (nonatomic) BOOL showMailboxName;
@property (copy, nonatomic) NSArray *signers; // @synthesize signers=_signers;
@property (copy, nonatomic) NSArray *suggestions;

+ (BOOL)isAttachmentTooLargeToDownload:(id)arg1;
+ (unsigned long long)nextOffsetForOffset:(unsigned long long)arg1 totalLength:(unsigned long long)arg2 requestedAmount:(unsigned long long)arg3;
- (void)_notifyAttachmentComplete:(id)arg1 data:(id)arg2;
- (void)_notifyCompletelyComplete;
- (void)_notifyFullMessageLoadFailed;
- (void)_notifyInitialLoadComplete;
- (void)_notifyMessageAnalysisComplete;
- (void)_setContent:(id)arg1;
- (void)_setContentOffset:(unsigned long long)arg1;
- (void)_setLoadedPart:(id)arg1;
- (void)_setMessageAnalysisError:(id)arg1;
- (void)_setMessageBody:(id)arg1;
- (void)_setSecureMIMEError:(id)arg1;
- (void)_setSigners:(id)arg1;
- (void)_setSuggestions:(id)arg1;
- (void)analyzeMessageContent:(id)arg1;
- (id)attachments;
- (void)cancelLoad;
- (void)dealloc;
- (void)forceReload;
- (BOOL)hasAnalyzedMessageWithTimeout:(id)arg1;
- (id)initWithMessage:(id)arg1 attachmentManager:(id)arg2;
- (void)load;
- (void)loadAsPlainText:(BOOL)arg1 asHTML:(BOOL)arg2 downloadIfNecessary:(BOOL)arg3;
- (void)loadBestAlternative;
- (void)loadFull;
- (void)loadMore;
- (void)loadWithPriority:(int)arg1;
- (void)setLoadTask:(id)arg1;
- (id)uniqueID;
- (void)unload;

@end

