//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <SceneKit/JSExport-Protocol.h>

@class SCNPhysicsShape;

@protocol SCNPhysicsBodyJSExport <JSExport>

@property (nonatomic, getter=isAffectedByGravity) BOOL affectedByGravity;
@property (nonatomic) BOOL allowsResting;
@property (nonatomic) double angularDamping;
@property (nonatomic) struct SCNVector4 angularVelocity;
@property (nonatomic) struct SCNVector3 angularVelocityFactor;
@property (nonatomic) unsigned long long categoryBitMask;
@property (nonatomic) double charge;
@property (nonatomic) unsigned long long collisionBitMask;
@property (nonatomic) unsigned long long contactTestBitMask;
@property (nonatomic) double damping;
@property (nonatomic) double friction;
@property (readonly, nonatomic) BOOL isResting;
@property (nonatomic) double mass;
@property (nonatomic) struct SCNVector3 momentOfInertia;
@property (strong, nonatomic) SCNPhysicsShape *physicsShape;
@property (nonatomic) double restitution;
@property (nonatomic) double rollingFriction;
@property (nonatomic) long long type;
@property (nonatomic) BOOL usesDefaultMomentOfInertia;
@property (nonatomic) struct SCNVector3 velocity;
@property (nonatomic) struct SCNVector3 velocityFactor;

+ (id)bodyWithType:(long long)arg1 shape:(SCNPhysicsShape *)arg2;
+ (id)dynamicBody;
+ (id)kinematicBody;
+ (id)staticBody;
- (void)applyForce:(struct SCNVector3)arg1 atPosition:(struct SCNVector3)arg2 impulse:(BOOL)arg3;
- (void)applyForce:(struct SCNVector3)arg1 impulse:(BOOL)arg2;
- (void)applyTorque:(struct SCNVector4)arg1 impulse:(BOOL)arg2;
- (void)clearAllForces;
- (id)copy;
- (void)resetTransform;
@end

