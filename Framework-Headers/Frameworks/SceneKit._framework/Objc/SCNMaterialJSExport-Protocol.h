//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <SceneKit/JSExport-Protocol.h>

@class CAAnimation, NSArray, NSString, SCNMaterial, SCNMaterialProperty, SCNProgram;

@protocol SCNMaterialJSExport <JSExport>

@property (readonly, nonatomic) SCNMaterialProperty *ambient;
@property (nonatomic) BOOL avoidsOverLighting;
@property (nonatomic) long long cullMode;
@property (readonly, nonatomic) SCNMaterialProperty *diffuse;
@property (nonatomic, getter=isDoubleSided) BOOL doubleSided;
@property (readonly, nonatomic) SCNMaterialProperty *emission;
@property (nonatomic) long long fillMode;
@property (nonatomic) double fresnelExponent;
@property (nonatomic) double indexOfRefraction;
@property (copy, nonatomic) NSString *lightingModelName;
@property (nonatomic, getter=isLitPerPixel) BOOL litPerPixel;
@property (nonatomic) BOOL locksAmbientWithDiffuse;
@property (readonly, nonatomic) SCNMaterialProperty *multiply;
@property (copy, nonatomic) NSString *name;
@property (readonly, nonatomic) SCNMaterialProperty *normal;
@property (readonly, nonatomic) SCNMaterial *presentationMaterial;
@property (strong, nonatomic) SCNProgram *program;
@property (nonatomic) BOOL readsFromDepthBuffer;
@property (readonly, nonatomic) SCNMaterialProperty *reflective;
@property (nonatomic) double shininess;
@property (readonly, nonatomic) SCNMaterialProperty *specular;
@property (nonatomic) double transparency;
@property (nonatomic) long long transparencyMode;
@property (readonly, nonatomic) SCNMaterialProperty *transparent;
@property (nonatomic) BOOL writesToDepthBuffer;

+ (id)material;
- (void)addAnimation:(CAAnimation *)arg1 forKey:(NSString *)arg2;
- (CAAnimation *)animationForKey:(NSString *)arg1;
- (NSArray *)animationKeys;
- (id)copy;
- (void)pauseAnimationForKey:(NSString *)arg1;
- (void)removeAllAnimations;
- (void)removeAnimationForKey:(NSString *)arg1;
- (void)resumeAnimationForKey:(NSString *)arg1;
- (void)setValue:(id)arg1 forKey:(NSString *)arg2;
- (void)setValue:(id)arg1 forKeyPath:(NSString *)arg2;
- (id)valueForKey:(NSString *)arg1;
- (id)valueForKeyPath:(NSString *)arg1;
@end

