//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSDictionary, NSString, NSURL, _SFSearchRequest;

@interface SFSpeechRecognitionRequest : NSObject
{
    BOOL _forceOfflineRecognition;
    BOOL _shouldReportPartialResults;
    BOOL _detectMultipleUtterances;
    double _maximumRecognitionDuration;
    _SFSearchRequest *_searchRequest;
    NSDictionary *_voiceTriggerEventInfo;
    NSDictionary *_recognitionOverrides;
    NSURL *_modelOverrideURL;
    long long _taskHint;
    NSArray *_contextualStrings;
    NSString *_interactionIdentifier;
}

@property (nonatomic, getter=_forceOfflineRecognition, setter=_setForceOfflineRecognition:) BOOL _forceOfflineRecognition; // @synthesize _forceOfflineRecognition;
@property (nonatomic, getter=_maximumRecognitionDuration, setter=_setMaximumRecognitionDuration:) double _maximumRecognitionDuration; // @synthesize _maximumRecognitionDuration;
@property (strong, nonatomic, getter=_modelOverrideURL, setter=_setModelOverrideURL:) NSURL *_modelOverrideURL; // @synthesize _modelOverrideURL;
@property (strong, nonatomic, getter=_recognitionOverrides, setter=_setRecognitionOverrides:) NSDictionary *_recognitionOverrides; // @synthesize _recognitionOverrides;
@property (strong, nonatomic, getter=_searchRequest, setter=_setSearchRequest:) _SFSearchRequest *_searchRequest; // @synthesize _searchRequest;
@property (strong, nonatomic, getter=_voiceTriggerEventInfo, setter=_setVoiceTriggerEventInfo:) NSDictionary *_voiceTriggerEventInfo; // @synthesize _voiceTriggerEventInfo;
@property (copy, nonatomic) NSArray *contextualStrings; // @synthesize contextualStrings=_contextualStrings;
@property (nonatomic) BOOL detectMultipleUtterances; // @synthesize detectMultipleUtterances=_detectMultipleUtterances;
@property (copy, nonatomic) NSString *interactionIdentifier; // @synthesize interactionIdentifier=_interactionIdentifier;
@property (nonatomic) BOOL requiresOnDeviceRecognition;
@property (nonatomic) BOOL shouldReportPartialResults; // @synthesize shouldReportPartialResults=_shouldReportPartialResults;
@property (nonatomic) long long taskHint; // @synthesize taskHint=_taskHint;

- (void).cxx_destruct;
- (id)_dictationOptionsWithTaskHint:(long long)arg1 requestIdentifier:(id)arg2;
- (BOOL)_powerMeteringAvailable;
- (id)_searchRequests;
- (void)_setSearchRequests:(id)arg1;
- (id)_speechRequestOptions;
- (id)_startedConnectionWithLanguageCode:(id)arg1 delegate:(id)arg2 taskHint:(long long)arg3 requestIdentifier:(id)arg4;
- (BOOL)automaticallyEndpoint;
- (id)init;

@end

