//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSMutableArray, NSString;

@interface CSAttributeEvaluator : NSObject
{
    BOOL _matchOncePerTerm;
    BOOL _fuzzyMatching;
    NSString *_queryString;
    unsigned long long _options;
    unsigned long long _matcherCount;
    const void **_matchers;
    unsigned long long _queryTermCount;
    unsigned long long _matchersPerTerm;
    void *_tokenizer;
    NSMutableArray *_tokenizedQueryTerms;
    NSString *_language;
}

@property (nonatomic) BOOL fuzzyMatching; // @synthesize fuzzyMatching=_fuzzyMatching;
@property (strong, nonatomic) NSString *language; // @synthesize language=_language;
@property (nonatomic) BOOL matchOncePerTerm; // @synthesize matchOncePerTerm=_matchOncePerTerm;
@property (nonatomic) unsigned long long matcherCount; // @synthesize matcherCount=_matcherCount;
@property (nonatomic) const void **matchers; // @synthesize matchers=_matchers;
@property (nonatomic) unsigned long long matchersPerTerm; // @synthesize matchersPerTerm=_matchersPerTerm;
@property (nonatomic) unsigned long long options; // @synthesize options=_options;
@property (readonly, nonatomic) NSString *queryString; // @synthesize queryString=_queryString;
@property (nonatomic) unsigned long long queryTermCount; // @synthesize queryTermCount=_queryTermCount;
@property (readonly, nonatomic) NSArray *queryTerms;
@property (strong, nonatomic) NSMutableArray *tokenizedQueryTerms; // @synthesize tokenizedQueryTerms=_tokenizedQueryTerms;
@property (nonatomic) void *tokenizer; // @synthesize tokenizer=_tokenizer;

+ (void)enumerateTokensForString:(id)arg1 locale:(id)arg2 options:(unsigned long long)arg3 withHandler:(CDUnknownBlockType)arg4;
- (void).cxx_destruct;
- (void)dealloc;
- (unsigned long long)evaluateAttribute:(id)arg1 ignoreSubtokens:(BOOL)arg2 skipTranscriptions:(BOOL)arg3 withFuzzyHandler:(CDUnknownBlockType)arg4;
- (unsigned long long)evaluateAttribute:(id)arg1 ignoreSubtokens:(BOOL)arg2 skipTranscriptions:(BOOL)arg3 withHandler:(CDUnknownBlockType)arg4;
- (unsigned long long)evaluateAttribute:(id)arg1 ignoreSubtokens:(BOOL)arg2 strongCompounds:(BOOL)arg3 skipTranscriptions:(BOOL)arg4 withFuzzyHandler:(CDUnknownBlockType)arg5;
- (unsigned long long)evaluateAttribute:(id)arg1 ignoreSubtokens:(BOOL)arg2 strongCompounds:(BOOL)arg3 skipTranscriptions:(BOOL)arg4 withHandler:(CDUnknownBlockType)arg5;
- (unsigned long long)evaluateAttribute:(id)arg1 ignoreSubtokens:(BOOL)arg2 strongCompounds:(BOOL)arg3 withHandler:(CDUnknownBlockType)arg4;
- (unsigned long long)evaluateAttribute:(id)arg1 ignoreSubtokens:(BOOL)arg2 withHandler:(CDUnknownBlockType)arg3;
- (id)initWithQuery:(id)arg1 language:(id)arg2 fuzzyThreshold:(unsigned char)arg3 options:(unsigned long long)arg4;
- (BOOL)processPropertyToken:(const unsigned short *)arg1 length:(long long)arg2 tokenType:(int)arg3 range:(CDStruct_912cb5d2)arg4 index:(long long)arg5 evaluationHandler:(CDUnknownBlockType)arg6;
- (void)processTranscriptionTokens:(struct CSAttributeEvaluatorContext *)arg1;

@end

