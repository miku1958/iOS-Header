//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <QuickLook/NSSecureCoding-Protocol.h>
#import <QuickLook/QLPreviewItemPrivateProtocol-Protocol.h>

@class FPItem, NSData, NSItemProvider, NSNumber, NSString, NSURL, NSUUID, QLItemFetcher, QLUTIAnalyzer, UIColor, UIDocumentInteractionController;
@protocol QLItemThumbnailGeneratorProtocolInternal, QLPreviewItemDataProvider, QLPreviewItemPrivateProtocol;

@interface QLItem : NSObject <QLPreviewItemPrivateProtocol, NSSecureCoding>
{
    long long _editedFileExtensionHandle;
    BOOL _useAVPlayerViewController;
    BOOL _useFullPDFTransition;
    BOOL _wantsPreviewInDebugViewController;
    BOOL _isPromisedItem;
    BOOL _canBeEdited;
    BOOL _canBeShared;
    BOOL _hasDeterminedShouldUseExtensionPreview;
    BOOL _shouldUseExtensionPreview;
    BOOL _hasDeterminedShouldUseExtensionThumbnail;
    BOOL _shouldUseExtensionThumbnail;
    NSNumber *_previewItemProviderProgress;
    NSURL *_editedFileURL;
    FPItem *_fpItem;
    id<QLPreviewItemPrivateProtocol> _originalPreviewItem;
    NSURL *_previewItemURL;
    NSData *_previewItemData;
    id<QLPreviewItemDataProvider> _previewItemDataProvider;
    NSString *_searchableItemIdentifier;
    NSString *_spotlightQueryString;
    NSString *_searchableItemApplicationBundleIdentifier;
    NSString *_relativePath;
    UIDocumentInteractionController *_archiveController;
    NSItemProvider *_previewItemProvider;
    NSNumber *_itemSize;
    QLItemFetcher *_fetcher;
    id<QLItemThumbnailGeneratorProtocolInternal> _thumbnailGenerator;
    QLUTIAnalyzer *_UTIAnalyzer;
    NSString *_previewItemContentType;
    UIColor *_backgroundColorOverride;
    NSString *_previewItemTitle;
    NSString *_password;
    NSUUID *_uuid;
    unsigned long long _previewItemType;
    unsigned long long _thumbnailItemType;
    long long _processIdentifier;
}

@property (readonly) NSString *MIMEType;
@property (strong, nonatomic) QLUTIAnalyzer *UTIAnalyzer; // @synthesize UTIAnalyzer=_UTIAnalyzer;
@property (strong) UIDocumentInteractionController *archiveController; // @synthesize archiveController=_archiveController;
@property (readonly) double autoPlaybackPosition;
@property (strong, nonatomic) UIColor *backgroundColorOverride; // @synthesize backgroundColorOverride=_backgroundColorOverride;
@property (nonatomic) BOOL canBeEdited; // @synthesize canBeEdited=_canBeEdited;
@property (nonatomic) BOOL canBeShared; // @synthesize canBeShared=_canBeShared;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (strong, nonatomic) NSURL *editedFileURL; // @synthesize editedFileURL=_editedFileURL;
@property (strong, nonatomic) QLItemFetcher *fetcher; // @synthesize fetcher=_fetcher;
@property (strong) FPItem *fpItem; // @synthesize fpItem=_fpItem;
@property (nonatomic) BOOL hasDeterminedShouldUseExtensionPreview; // @dynamic hasDeterminedShouldUseExtensionPreview;
@property (nonatomic) BOOL hasDeterminedShouldUseExtensionPreview; // @synthesize hasDeterminedShouldUseExtensionPreview=_hasDeterminedShouldUseExtensionPreview;
@property (nonatomic) BOOL hasDeterminedShouldUseExtensionThumbnail; // @dynamic hasDeterminedShouldUseExtensionThumbnail;
@property (nonatomic) BOOL hasDeterminedShouldUseExtensionThumbnail; // @synthesize hasDeterminedShouldUseExtensionThumbnail=_hasDeterminedShouldUseExtensionThumbnail;
@property (readonly) unsigned long long hash;
@property (nonatomic) BOOL isPromisedItem; // @synthesize isPromisedItem=_isPromisedItem;
@property (strong, nonatomic) NSNumber *itemSize; // @synthesize itemSize=_itemSize;
@property (strong, nonatomic) id<QLPreviewItemPrivateProtocol> originalPreviewItem; // @synthesize originalPreviewItem=_originalPreviewItem;
@property (strong) NSString *password; // @synthesize password=_password;
@property (strong, nonatomic) NSString *previewItemContentType; // @synthesize previewItemContentType=_previewItemContentType;
@property (strong) NSData *previewItemData; // @synthesize previewItemData=_previewItemData;
@property (strong) id<QLPreviewItemDataProvider> previewItemDataProvider; // @synthesize previewItemDataProvider=_previewItemDataProvider;
@property (strong) NSItemProvider *previewItemProvider; // @synthesize previewItemProvider=_previewItemProvider;
@property (strong, nonatomic) NSNumber *previewItemProviderProgress; // @synthesize previewItemProviderProgress=_previewItemProviderProgress;
@property (strong, nonatomic) NSString *previewItemTitle; // @synthesize previewItemTitle=_previewItemTitle;
@property (nonatomic) unsigned long long previewItemType; // @synthesize previewItemType=_previewItemType;
@property (strong, nonatomic) NSURL *previewItemURL; // @synthesize previewItemURL=_previewItemURL;
@property (readonly) NSURL *previewItemURLForDisplay;
@property long long processIdentifier; // @synthesize processIdentifier=_processIdentifier;
@property (strong) NSString *relativePath; // @synthesize relativePath=_relativePath;
@property (strong) NSString *searchableItemApplicationBundleIdentifier; // @synthesize searchableItemApplicationBundleIdentifier=_searchableItemApplicationBundleIdentifier;
@property (strong) NSString *searchableItemIdentifier; // @synthesize searchableItemIdentifier=_searchableItemIdentifier;
@property (nonatomic) BOOL shouldUseExtensionPreview; // @dynamic shouldUseExtensionPreview;
@property (nonatomic) BOOL shouldUseExtensionPreview; // @synthesize shouldUseExtensionPreview=_shouldUseExtensionPreview;
@property (nonatomic) BOOL shouldUseExtensionThumbnail; // @dynamic shouldUseExtensionThumbnail;
@property (nonatomic) BOOL shouldUseExtensionThumbnail; // @synthesize shouldUseExtensionThumbnail=_shouldUseExtensionThumbnail;
@property (strong) NSString *spotlightQueryString; // @synthesize spotlightQueryString=_spotlightQueryString;
@property (readonly) Class superclass;
@property (strong, nonatomic) id<QLItemThumbnailGeneratorProtocolInternal> thumbnailGenerator; // @synthesize thumbnailGenerator=_thumbnailGenerator;
@property (nonatomic) unsigned long long thumbnailItemType; // @synthesize thumbnailItemType=_thumbnailItemType;
@property BOOL useAVPlayerViewController; // @synthesize useAVPlayerViewController=_useAVPlayerViewController;
@property (nonatomic) BOOL useFullPDFTransition; // @synthesize useFullPDFTransition=_useFullPDFTransition;
@property (strong, nonatomic) NSUUID *uuid; // @synthesize uuid=_uuid;
@property (readonly) BOOL wantsDefaultMediaPlayer;
@property BOOL wantsPreviewInDebugViewController; // @synthesize wantsPreviewInDebugViewController=_wantsPreviewInDebugViewController;

+ (id)_allPreviewClasses;
+ (id)_newEditedFileURLForItem:(id)arg1;
+ (unsigned long long)_previewItemTypeForPreviewClass:(Class)arg1;
+ (id)contentTypesToPreviewTypes;
+ (id)encodedClasses;
+ (id)itemWithPreviewItem:(id)arg1;
+ (BOOL)shouldUseRemoteCollection:(id)arg1;
+ (id)supportedContentTypes;
+ (BOOL)supportsSecureCoding;
- (void).cxx_destruct;
- (void)_commonInit;
- (unsigned long long)_getPreviewItemType;
- (unsigned long long)_getThumbnailItemType;
- (void)_setURLFromFPItem;
- (BOOL)canBePreviewed;
- (BOOL)canBePrintedWithCustomPrinter;
- (id)createPreviewContext;
- (void)dealloc;
- (long long)defaultWhitePointAdaptivityStyle;
- (void)encodeWithCoder:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithData:(id)arg1 contentType:(id)arg2 previewTitle:(id)arg3;
- (id)initWithDataProvider:(id)arg1 contentType:(id)arg2 previewTitle:(id)arg3;
- (id)initWithFPItem:(id)arg1;
- (id)initWithPreviewItemProvider:(id)arg1 contentType:(id)arg2 previewTitle:(id)arg3 fileSize:(id)arg4;
- (id)initWithRelativePath:(id)arg1 archiveController:(id)arg2;
- (id)initWithSearchableItemUniqueIdentifier:(id)arg1 applicationBundleIdentifier:(id)arg2;
- (id)initWithSearchableItemUniqueIdentifier:(id)arg1 queryString:(id)arg2 applicationBundleIdentifier:(id)arg3 previewTitle:(id)arg4;
- (id)initWithURL:(id)arg1;
- (id)initWithURL:(id)arg1 MIMEType:(id)arg2;
- (id)internalCopy;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isStandardQuickLookType;
- (unsigned long long)maximumNumberOfCachedPreviews;
- (Class)previewItemViewControllerClass;
- (struct CGSize)previewSizeForItemViewControllerSize:(struct CGSize)arg1;
- (void)setEditedFileURL:(id)arg1 withSandboxExtension:(id)arg2;
- (BOOL)useExtensionPreview;
- (BOOL)useExtensionThumbnail;

@end

