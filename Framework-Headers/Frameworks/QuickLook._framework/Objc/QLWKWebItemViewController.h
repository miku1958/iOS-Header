//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <QuickLook/QLItemViewController.h>

#import <QuickLook/QLPrintingProtocol-Protocol.h>
#import <QuickLook/QLScrubViewDataSource-Protocol.h>
#import <QuickLook/QLScrubViewDelegate-Protocol.h>
#import <QuickLook/UIScrollViewDelegate-Protocol.h>
#import <QuickLook/WKNavigationDelegate-Protocol.h>

@class NSCache, NSLayoutConstraint, NSOperationQueue, NSString, QLScrubView, WBUPrintPageRenderer, WKWebView;
@protocol QLWebKitPaginator, QLWebKitThumbnailGenerator;

__attribute__((visibility("hidden")))
@interface QLWKWebItemViewController : QLItemViewController <WKNavigationDelegate, QLPrintingProtocol, QLScrubViewDataSource, QLScrubViewDelegate, UIScrollViewDelegate>
{
    NSString *_previewContentType;
    struct CGPoint _scrollViewTopOffset;
    CDUnknownBlockType _completionHandler;
    WBUPrintPageRenderer *_renderer;
    BOOL _fullScreen;
    id<QLWebKitThumbnailGenerator> _thumbnailGenerator;
    id<QLWebKitPaginator> _paginator;
    struct CGSize _pageSize;
    QLScrubView *_scrubView;
    long long _thumbnailCount;
    struct CGSize _thumbnailSize;
    NSLayoutConstraint *_scrubberRightConstraint;
    NSLayoutConstraint *_leftConstraint;
    NSLayoutConstraint *_rightConstraint;
    NSOperationQueue *_operationQueue;
    NSCache *_indexToThumbnailsCache;
    WKWebView *_webView;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) NSCache *indexToThumbnailsCache; // @synthesize indexToThumbnailsCache=_indexToThumbnailsCache;
@property (strong, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property (readonly) Class superclass;
@property (strong, nonatomic) WKWebView *webView; // @synthesize webView=_webView;

+ (BOOL)providesCustomPrinter;
+ (Class)transformerClass;
- (void).cxx_destruct;
- (void)_addThumbnailToCache:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)_hideScrubberIfNeeded:(BOOL)arg1;
- (void)_prepareThumbnailView;
- (void)_registerRemoteProxy;
- (id)_renderer;
- (void)_scrollToPage:(long long)arg1;
- (void)_showScrubberIfNeeded:(BOOL)arg1 reloadThumbnails:(BOOL)arg2;
- (id)_thumbnailAtIndex:(unsigned long long)arg1;
- (void)_updateConstraintConstants:(BOOL)arg1;
- (void)_updateScrubberForTraitCollection:(id)arg1 animated:(BOOL)arg2 reloadThumbnailsIfNeeded:(BOOL)arg3;
- (void)_updateScrubberVisibilityAnimated:(BOOL)arg1;
- (void)_updateScrubberVisibilityAnimated:(BOOL)arg1 reloadThumbnailsIfNeeded:(BOOL)arg2;
- (void)_webViewDidRequestPasswordForQuickLookDocument:(id)arg1;
- (BOOL)automaticallyUpdateScrollViewContentInset;
- (BOOL)automaticallyUpdateScrollViewContentOffset;
- (BOOL)automaticallyUpdateScrollViewIndicatorInset;
- (BOOL)canPinchToDismiss;
- (BOOL)canSwipeToDismiss;
- (unsigned long long)currentPageNumber;
- (void)loadPreviewControllerWithContents:(id)arg1 context:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)loadView;
- (long long)numberOfPagesInScrubView:(id)arg1;
- (void)numberOfPagesWithSize:(struct CGSize)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)pdfDataForPageAtIndex:(long long)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (long long)preferredWhitePointAdaptivityStyle;
- (void)prepareForDrawingPages:(struct _NSRange)arg1 ofSize:(struct CGSize)arg2;
- (void)previewBecameFullScreen:(BOOL)arg1 animated:(BOOL)arg2;
- (void)previewDidAppear:(BOOL)arg1;
- (void)previewWillAppear:(BOOL)arg1;
- (id)printer;
- (id)scrollView;
- (void)scrollViewDidScroll:(id)arg1;
- (id)scrubView;
- (void)scrubView:(id)arg1 didSelectPageAtIndex:(unsigned long long)arg2;
- (struct CGSize)scrubView:(id)arg1 pageSizeAtIndex:(unsigned long long)arg2;
- (void)scrubView:(id)arg1 thumbnailForPage:(long long)arg2 size:(struct CGSize)arg3 withCompletionBlock:(CDUnknownBlockType)arg4;
- (void)setAppearance:(id)arg1 animated:(BOOL)arg2;
- (BOOL)shouldAcceptTouch:(id)arg1 ofGestureRecognizer:(id)arg2;
- (void)transitionDidStart:(BOOL)arg1;
- (void)transitionWillFinish:(BOOL)arg1 didComplete:(BOOL)arg2;
- (id)transitioningView;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (void)webViewWebContentProcessDidTerminate:(id)arg1;

@end

