//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <MediaPlayer/_MPStateDumpPropertyListTransformable-Protocol.h>

@class MPAVRoute, MPAVRoutingControllerSelectionQueue, MPAVRoutingDataSource, NSArray, NSSet, NSString;
@protocol MPAVOutputDevicePlaybackDataSource, MPAVRoutingControllerDelegate;

@interface MPAVRoutingController : NSObject <_MPStateDumpPropertyListTransformable>
{
    NSArray *_cachedRoutes;
    NSArray *_cachedPickedRoutes;
    long long _externalScreenType;
    BOOL _hasExternalScreenType;
    BOOL _scheduledSendDelegateRoutesChanged;
    long long _volumeControlStateForPickedRoute;
    MPAVRoutingControllerSelectionQueue *_routingControllerSelectionQueue;
    int _deviceAvailabilityNotifyToken;
    BOOL _deviceAvailabilityOverrideState;
    BOOL _fetchAvailableRoutesSynchronously;
    BOOL _representsLongFormVideoContent;
    id<MPAVRoutingControllerDelegate> _delegate;
    MPAVRoutingDataSource *_dataSource;
    NSString *_name;
    long long _discoveryMode;
    NSString *_category;
    long long _routeTypes;
    MPAVRoute *_legacyCachedRoute;
    id<MPAVOutputDevicePlaybackDataSource> _playbackDataSource;
    NSString *_presentedBundleID;
    NSString *_representedBundleID;
}

@property (readonly, copy, nonatomic) NSArray *availableRoutes;
@property (copy, nonatomic) NSString *category; // @synthesize category=_category;
@property (readonly, nonatomic) MPAVRoutingDataSource *dataSource; // @synthesize dataSource=_dataSource;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<MPAVRoutingControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) long long discoveryMode; // @synthesize discoveryMode=_discoveryMode;
@property (readonly, nonatomic) long long externalScreenType;
@property (nonatomic) BOOL fetchAvailableRoutesSynchronously; // @synthesize fetchAvailableRoutesSynchronously=_fetchAvailableRoutesSynchronously;
@property (readonly, nonatomic) BOOL hasPendingPickedRoutes;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) MPAVRoute *legacyCachedRoute; // @synthesize legacyCachedRoute=_legacyCachedRoute;
@property (copy, nonatomic) NSString *name; // @synthesize name=_name;
@property (readonly, nonatomic) MPAVRoute *pendingPickedRoute;
@property (readonly, nonatomic) NSSet *pendingPickedRoutes;
@property (readonly, nonatomic) MPAVRoute *pickedRoute;
@property (readonly, nonatomic) NSArray *pickedRoutes;
@property (weak, nonatomic) id<MPAVOutputDevicePlaybackDataSource> playbackDataSource; // @synthesize playbackDataSource=_playbackDataSource;
@property (copy, nonatomic) NSString *presentedBundleID; // @synthesize presentedBundleID=_presentedBundleID;
@property (copy, nonatomic) NSString *representedBundleID; // @synthesize representedBundleID=_representedBundleID;
@property (readonly, nonatomic) BOOL representsLongFormVideoContent; // @synthesize representsLongFormVideoContent=_representsLongFormVideoContent;
@property (nonatomic) long long routeTypes; // @synthesize routeTypes=_routeTypes;
@property (readonly) Class superclass;
@property (readonly, nonatomic) BOOL supportsMultipleSelection;
@property (readonly, nonatomic) BOOL volumeControlIsAvailable;

+ (id)_currentDeviceRoutingIconImage;
+ (id)_currentDeviceRoutingIconImageName;
+ (void)_getActiveRouteWithTimeout:(double)arg1 discoveredRoutes:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (id)_iconImageForIdentifier:(id)arg1;
+ (id)_iconImageForRoute:(id)arg1;
+ (id)_iconImageForRoutes:(id)arg1;
+ (id)_iconImageNameForClusterRoute:(id)arg1;
+ (id)_iconImageNameForDeviceSubtypes:(id)arg1 route:(id)arg2;
+ (id)_iconNameForRoute:(id)arg1;
+ (id)_sharedSerialQueue;
+ (BOOL)bundleIdRepresentsLongFormVideoContent:(id)arg1;
+ (void)getActiveRouteWithCompletion:(CDUnknownBlockType)arg1;
+ (void)getActiveRouteWithTimeout:(double)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)setActiveRoute:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)setActiveRoute:(id)arg1 reason:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (id)systemRoute;
+ (id)systemRouteWithContextUID:(id)arg1;
- (void).cxx_destruct;
- (void)_activeAudioRouteDidChangeNotification:(id)arg1;
- (void)_clearLegacyCachedRoute;
- (BOOL)_deviceAvailabilityOverrideState;
- (long long)_externalScreenType:(BOOL *)arg1;
- (void)_externalScreenTypeDidChangeNotification:(id)arg1;
- (void)_mediaServerDiedNotification:(id)arg1;
- (void)_onQueueSetExternalScreenType:(long long)arg1;
- (BOOL)_pickRoute:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_pickableRoutesDidChangeNotification:(id)arg1;
- (id)_pickedRouteInArray:(id)arg1;
- (id)_pickedRoutesInArray:(id)arg1;
- (void)_promptForHijackIfNeeded:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)_registerNotifications;
- (void)_routeStatusDidChangeNotification:(id)arg1;
- (void)_scheduleSendDelegateRoutesChanged;
- (void)_sendDelegateFailedToPickRouteWithError:(id)arg1;
- (void)_sendDelegatePickedRoutesChanged;
- (void)_setExternalScreenType:(long long)arg1;
- (void)_setVolumeControlStateForPickedRoute:(long long)arg1;
- (id)_stateDumpObject;
- (void)_syncUpdateRoutes;
- (void)_unregisterNotifications;
- (void)_updateCachedRoutes;
- (void)_volumeControlAvailabilityDidChangeNotification:(id)arg1;
- (long long)_volumeControlStateForPickedRoute;
- (BOOL)addPickedRoute:(id)arg1;
- (BOOL)addPickedRoute:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (BOOL)airtunesRouteIsPicked;
- (id)cachedPickedRoutes;
- (id)cachedRoutes;
- (void)clearCachedRoutes;
- (void)dealloc;
- (void)fetchAvailableRoutesWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)fetchAvailableRoutesWithCompletionQueue:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)getActiveRouteWithTimeout:(double)arg1 completion:(CDUnknownBlockType)arg2;
- (BOOL)handsetRouteIsPicked;
- (id)init;
- (id)initWithDataSource:(id)arg1 name:(id)arg2;
- (id)initWithName:(id)arg1;
- (BOOL)pickBestDeviceRoute;
- (BOOL)pickHandsetRoute;
- (BOOL)pickRoute:(id)arg1;
- (BOOL)pickRoute:(id)arg1 withPassword:(id)arg2;
- (BOOL)pickRoute:(id)arg1 withPassword:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (BOOL)pickSpeakerRoute;
- (BOOL)receiverRouteIsPicked;
- (BOOL)removePickedRoute:(id)arg1;
- (BOOL)removePickedRoute:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (BOOL)routeIsLeaderOfEndpoint:(id)arg1;
- (BOOL)routeIsPendingPick:(id)arg1;
- (BOOL)routeOtherThanHandsetAndSpeakerAvailable;
- (BOOL)routeOtherThanHandsetAvailable;
- (void)selectRoute:(id)arg1 operation:(long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)selectRoutes:(id)arg1 operation:(long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)setCachedRoutes:(id)arg1;
- (BOOL)speakerRouteIsPicked;
- (void)unpickAirPlayScreenRouteWithCompletion:(CDUnknownBlockType)arg1;
- (void)unpickTVRoutes;
- (id)updateAvailableRoutes;
- (id)updatePickedRoutes;
- (id)videoRouteForRoute:(id)arg1;
- (BOOL)wirelessDisplayRouteIsPicked;
- (BOOL)wirelessDisplayRoutesAvailable;

@end

