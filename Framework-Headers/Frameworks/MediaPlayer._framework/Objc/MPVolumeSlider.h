//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UISlider.h>

#import <MediaPlayer/MPVolumeControllerDelegate-Protocol.h>
#import <MediaPlayer/MPVolumeDisplaying-Protocol.h>

@class MPAVController, MPAVEndpointRoute, MPAVOutputDeviceRoute, MPAVRoute, MPVolumeController, NSString, NSTimer, UIImage, UIImageView, UILabel, UILayoutGuide, UIView;

@interface MPVolumeSlider : UISlider <MPVolumeControllerDelegate, MPVolumeDisplaying>
{
    NSTimer *_commitTimer;
    UILabel *_routeNameLabel;
    long long _style;
    UIImageView *_thumbImageView;
    BOOL _isOffScreen;
    BOOL _forcingOffscreenVisibility;
    BOOL _thumbIsDefault;
    BOOL _configuredLayoutGuide;
    UIView *_volumeWarningView;
    BOOL _volumeWarningBlinking;
    UIImage *_volumeWarningTrackImage;
    BOOL _beganTrackingFromEUVolumeLimit;
    double _originalMinTrackViewAlphaOverride;
    double _originalMinValueViewAlphaOverride;
    double _originalMaxValueViewAlphaOverride;
    BOOL _isCurrentlyTracking;
    float _setVolumeStartValue;
    int _coalescedVolumeDidChangeLogCount;
    BOOL _optimisticState;
    float _optimisticValue;
    UILayoutGuide *_trackLayoutGuide;
    MPVolumeController *_volumeController;
    MPAVController *_player;
    MPAVEndpointRoute *_groupRoute;
    MPAVOutputDeviceRoute *_outputDeviceRoute;
    struct UIEdgeInsets _hitRectInsets;
}

@property (nonatomic, setter=_setIsOffScreen:) BOOL _isOffScreen;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (strong, nonatomic) MPAVEndpointRoute *groupRoute; // @synthesize groupRoute=_groupRoute;
@property (readonly) unsigned long long hash;
@property (nonatomic) struct UIEdgeInsets hitRectInsets; // @synthesize hitRectInsets=_hitRectInsets;
@property (readonly, nonatomic, getter=isOnScreen) BOOL onScreen;
@property (readonly, nonatomic, getter=isOnScreenForVolumeDisplay) BOOL onScreenForVolumeDisplay;
@property (nonatomic, getter=isInOptimisticState) BOOL optimisticState; // @synthesize optimisticState=_optimisticState;
@property (nonatomic) float optimisticValue; // @synthesize optimisticValue=_optimisticValue;
@property (strong, nonatomic) MPAVOutputDeviceRoute *outputDeviceRoute; // @synthesize outputDeviceRoute=_outputDeviceRoute;
@property (strong, nonatomic) MPAVController *player; // @synthesize player=_player;
@property (strong, nonatomic) MPAVRoute *route;
@property (readonly, nonatomic) long long style; // @synthesize style=_style;
@property (readonly) Class superclass;
@property (readonly, weak, nonatomic) UIView *thumbView;
@property (readonly, nonatomic) UILayoutGuide *trackLayoutGuide; // @synthesize trackLayoutGuide=_trackLayoutGuide;
@property (readonly, nonatomic) NSString *volumeAudioCategory;
@property (readonly, copy, nonatomic) NSString *volumeControlLabel;
@property (strong, nonatomic) MPVolumeController *volumeController; // @synthesize volumeController=_volumeController;
@property (strong, nonatomic) UIImage *volumeWarningTrackImage; // @synthesize volumeWarningTrackImage=_volumeWarningTrackImage;

- (void).cxx_destruct;
- (void)_applicationDidEnterBackgroundNotification:(id)arg1;
- (void)_applicationWillEnterForegroundNotification:(id)arg1;
- (void)_beginBlinkingWarningView;
- (void)_blinkWarningView;
- (void)_commitVolumeChange;
- (void)_endBlinkingWarningView;
- (void)_endTracking;
- (void)_layoutForAvailableRoutes;
- (void)_layoutVolumeWarningView;
- (void)_logVolumeValueDidChange:(float)arg1;
- (id)_maxTrackImageForStyle:(long long)arg1;
- (id)_minTrackImageForStyle:(long long)arg1;
- (id)_newVolumeWarningView;
- (void)_resetThumbImageForState:(unsigned long long)arg1;
- (id)_routeName;
- (id)_thumbImageForStyle:(long long)arg1;
- (BOOL)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)cancelTrackingWithEvent:(id)arg1;
- (BOOL)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (id)createThumbView;
- (void)dealloc;
- (void)didMoveToSuperview;
- (void)didMoveToWindow;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (struct CGRect)hitRect;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 style:(long long)arg2;
- (id)initWithFrame:(struct CGRect)arg1 style:(long long)arg2 endpointRoute:(id)arg3 outputDeviceRoute:(id)arg4;
- (void)layoutSubviews;
- (float)maximumValue;
- (float)minimumValue;
- (BOOL)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)setAlpha:(double)arg1;
- (void)setHidden:(BOOL)arg1;
- (void)setThumbImage:(id)arg1 forState:(unsigned long long)arg2;
- (void)setUserInteractionEnabled:(BOOL)arg1;
- (void)setValue:(float)arg1 animated:(BOOL)arg2;
- (void)setVolumeDataSource:(id)arg1;
- (struct CGRect)thumbRectForBounds:(struct CGRect)arg1 trackRect:(struct CGRect)arg2 value:(float)arg3;
- (struct CGRect)trackRectForBounds:(struct CGRect)arg1;
- (void)volumeController:(id)arg1 EUVolumeLimitDidChange:(float)arg2;
- (void)volumeController:(id)arg1 EUVolumeLimitEnforcedDidChange:(BOOL)arg2;
- (void)volumeController:(id)arg1 volumeControlAvailableDidChange:(BOOL)arg2;
- (void)volumeController:(id)arg1 volumeControlCapabilitiesDidChange:(unsigned int)arg2;
- (void)volumeController:(id)arg1 volumeControlLabelDidChange:(id)arg2;
- (void)volumeController:(id)arg1 volumeValueDidChange:(float)arg2;
- (void)volumeController:(id)arg1 volumeWarningStateDidChange:(long long)arg2;

@end

