//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import <MediaPlayer/MPAVRoutingControllerDelegate-Protocol.h>
#import <MediaPlayer/MPAVRoutingTableViewCellDelegate-Protocol.h>
#import <MediaPlayer/UITableViewDataSource-Protocol.h>
#import <MediaPlayer/UITableViewDelegate-Protocol.h>

@class MPAVEndpointRoute, MPAVRoute, MPAVRoutingController, MPAVRoutingEmptyStateView, MPAVRoutingTableHeaderView, MPAVRoutingViewControllerUpdate, MPVolumeGroupSliderCoordinator, MPWeakTimer, NSArray, NSMapTable, NSNumber, NSString, UIColor, UITableView, UIView;
@protocol MPAVRoutingViewControllerDelegate, MPAVRoutingViewControllerThemeDelegate;

@interface MPAVRoutingViewController : UIViewController <MPAVRoutingControllerDelegate, MPAVRoutingTableViewCellDelegate, UITableViewDataSource, UITableViewDelegate>
{
    UITableView *_tableView;
    UIView *_tableBackgroundView;
    MPAVRoutingTableHeaderView *_tableHeaderView;
    MPAVRoutingEmptyStateView *_emptyStateView;
    MPAVRoutingViewControllerUpdate *_pendingUpdate;
    BOOL _isAnimatingUpdate;
    MPAVRoute *_displayedEndpointRoute;
    NSArray *_cachedRoutes;
    NSArray *_cachedPickedRoutes;
    NSArray *_cachedPendingPickedRoutes;
    NSArray *_cachedDisplayAsPickedRoutes;
    NSArray *_cachedVolumeCapableRoutes;
    MPWeakTimer *_updateTimer;
    MPAVRoutingController *_routingController;
    long long _routeDiscoveryMode;
    UIColor *_tableCellsBackgroundColor;
    UIColor *_tableCellsContentColor;
    int _airPlayPasswordAlertDidAppearToken;
    int _airPlayPasswordAlertDidCancelToken;
    BOOL _airPlayPasswordAlertDidAppearTokenIsValid;
    BOOL _needsDisplayedRoutesUpdate;
    BOOL _suspendedDiscoveryModeDueToApplicationState;
    BOOL _shouldAutomaticallyUpdateRoutesList;
    BOOL _shouldPickRouteOnSelection;
    BOOL _onScreen;
    BOOL _hasUserSelections;
    unsigned long long _updatesSincePresentation;
    long long _discoveryModeBeforeEnteringBackground;
    unsigned long long _style;
    id<MPAVRoutingViewControllerDelegate> _delegate;
    long long _avItemType;
    unsigned long long _mirroringStyle;
    unsigned long long _iconStyle;
    NSNumber *_discoveryModeOverride;
    id<MPAVRoutingViewControllerThemeDelegate> _themeDelegate;
    MPAVEndpointRoute *_endpointRoute;
    NSMapTable *_outputDeviceVolumeSliders;
    MPVolumeGroupSliderCoordinator *_groupSliderCoordinator;
}

@property (readonly, nonatomic) double _expandedCellHeight;
@property (readonly, nonatomic) double _normalCellHeight;
@property (readonly, nonatomic) MPAVRoutingController *_routingController;
@property (nonatomic, setter=_setShouldAutomaticallyUpdateRoutesList:) BOOL _shouldAutomaticallyUpdateRoutesList;
@property (nonatomic, setter=_setShouldPickRouteOnSelection:) BOOL _shouldPickRouteOnSelection;
@property (strong, nonatomic, setter=_setTableCellsBackgroundColor:) UIColor *_tableCellsBackgroundColor;
@property (strong, nonatomic, setter=_setTableCellsContentColor:) UIColor *_tableCellsContentColor;
@property (readonly, nonatomic) UITableView *_tableView;
@property (nonatomic) BOOL allowMirroring;
@property (nonatomic, setter=setAVItemType:) long long avItemType; // @synthesize avItemType=_avItemType;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<MPAVRoutingViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (copy, nonatomic) NSNumber *discoveryModeOverride; // @synthesize discoveryModeOverride=_discoveryModeOverride;
@property (strong, nonatomic) MPAVEndpointRoute *endpointRoute; // @synthesize endpointRoute=_endpointRoute;
@property (strong, nonatomic) MPVolumeGroupSliderCoordinator *groupSliderCoordinator; // @synthesize groupSliderCoordinator=_groupSliderCoordinator;
@property (readonly) unsigned long long hash;
@property (nonatomic) unsigned long long iconStyle; // @synthesize iconStyle=_iconStyle;
@property (nonatomic) unsigned long long mirroringStyle; // @synthesize mirroringStyle=_mirroringStyle;
@property (strong, nonatomic) NSMapTable *outputDeviceVolumeSliders; // @synthesize outputDeviceVolumeSliders=_outputDeviceVolumeSliders;
@property (readonly, nonatomic) unsigned long long style; // @synthesize style=_style;
@property (readonly) Class superclass;
@property (weak, nonatomic) id<MPAVRoutingViewControllerThemeDelegate> themeDelegate; // @synthesize themeDelegate=_themeDelegate;

- (void).cxx_destruct;
- (id)_alertControllerForUpdateDisplayedRoutesCrashWithLogFileURL:(id)arg1 exception:(id)arg2;
- (void)_applicationDidEnterBackgroundNotification:(id)arg1;
- (void)_applicationWillEnterForegroundNotification:(id)arg1;
- (void)_applyUpdate:(id)arg1;
- (void)_beginRouteDiscovery;
- (void)_configureCell:(id)arg1 forIndexPath:(id)arg2 withDisplayedRoutes:(id)arg3;
- (id)_crashLogDateFormatter;
- (id)_createReloadUpdate;
- (id)_createVolumeSlider;
- (id)_displayAsPickedRoutesInRoutes:(id)arg1;
- (id)_displayableRoutesInRoutes:(id)arg1;
- (id)_displayedRoutes;
- (void)_endRouteDiscovery;
- (void)_enqueueUpdate:(id)arg1;
- (id)_generatePropertyListFromUpdateDisplayedRoutesState:(id)arg1 exception:(id)arg2;
- (void)_initWithStyle:(unsigned long long)arg1 routingController:(id)arg2;
- (void)_registerNotifications;
- (void)_reloadEmptyStateVisibility;
- (void)_setNeedsDisplayedRoutesUpdate;
- (void)_setNeedsRouteDiscoveryModeUpdate;
- (void)_setRouteDiscoveryMode:(long long)arg1;
- (void)_setupUpdateTimerIfNecessary;
- (BOOL)_shouldDisplayRouteAsPicked:(id)arg1;
- (id)_tableHeaderView;
- (double)_tableViewFooterViewHeight;
- (double)_tableViewHeaderViewHeight;
- (double)_tableViewHeightAccordingToDataSource;
- (unsigned long long)_tableViewNumberOfRows;
- (void)_unregisterNotifications;
- (void)_updateDisplayedRoutes;
- (id)_volumeCapableRoutesInRoutes:(id)arg1;
- (void)_volumeSliderVolumeControlAvailabilityDidChangeNotification:(id)arg1;
- (id)_writeToDiskWithUpdateDisplayedRoutesStatePropertyList:(id)arg1 error:(id *)arg2;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithStyle:(unsigned long long)arg1;
- (id)initWithStyle:(unsigned long long)arg1 routingController:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (struct CGSize)preferredContentSize;
- (void)resetDisplayedRoutes;
- (void)resetScrollPosition;
- (void)routingCell:(id)arg1 mirroringSwitchValueDidChange:(BOOL)arg2;
- (void)routingController:(id)arg1 didFailToPickRouteWithError:(id)arg2;
- (void)routingController:(id)arg1 pickedRoutesDidChange:(id)arg2;
- (void)routingController:(id)arg1 shouldHijackRoute:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)routingControllerAvailableRoutesDidChange:(id)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewDidDisappear:(BOOL)arg1;
- (void)viewDidLoad;
- (void)viewDidMoveToWindow:(id)arg1 shouldAppearOrDisappear:(BOOL)arg2;
- (void)viewWillAppear:(BOOL)arg1;
- (void)viewWillLayoutSubviews;

@end

