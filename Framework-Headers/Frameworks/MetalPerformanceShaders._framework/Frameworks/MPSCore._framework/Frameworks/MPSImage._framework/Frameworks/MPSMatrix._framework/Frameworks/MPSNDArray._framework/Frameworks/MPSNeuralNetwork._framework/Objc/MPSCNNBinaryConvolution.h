//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <MPSNeuralNetwork/MPSCNNKernel.h>

@class MPSCNNPoolingAverage;
@protocol MTLBuffer;

@interface MPSCNNBinaryConvolution : MPSCNNKernel
{
    unsigned long long _inputFeatureChannels;
    unsigned long long _outputFeatureChannels;
    struct NeuronInfo _neuronInfo;
    unsigned long long _filterStride;
    id<MTLBuffer> _weights;
    id<MTLBuffer> _outputbias;
    id<MTLBuffer> _outputScale;
    id<MTLBuffer> _inputbias;
    id<MTLBuffer> _inputScale;
    unsigned long long _flags;
    unsigned long long _convType;
    MPSCNNPoolingAverage *_poolingFilter;
    BOOL _fullyConnected;
    float _outputScaleValue;
}

@property (readonly, nonatomic) unsigned long long inputFeatureChannels; // @synthesize inputFeatureChannels=_inputFeatureChannels;
@property (readonly, nonatomic) unsigned long long outputFeatureChannels; // @synthesize outputFeatureChannels=_outputFeatureChannels;

+ (const struct MPSLibraryInfo *)libraryInfo:(struct MPSDevice *)arg1;
- (id)copyBuffer:(id)arg1 device:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1 device:(id)arg2;
- (void)createBuffersFromkernelWeights:(const unsigned int *)arg1 inputBiasTerms:(const float *)arg2 inputScaleTerms:(const float *)arg3 outputBiasTerms:(const float *)arg4 outputScaleTerms:(const float *)arg5 useHalfPrecision:(BOOL)arg6;
- (void)dealloc;
- (id)debugDescription;
- (id)destinationImageDescriptorForSourceImages:(id)arg1 sourceStates:(id)arg2 paddingMethod:(unsigned long long)arg3 sourceOffset:(CDStruct_d6af7fc0 *)arg4;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1 device:(id)arg2;
- (id)initWithDevice:(id)arg1;
- (id)initWithDevice:(id)arg1 convolutionData:(id)arg2 outputBiasTerms:(const float *)arg3 outputScaleTerms:(const float *)arg4 inputBiasTerms:(const float *)arg5 inputScaleTerms:(const float *)arg6 type:(unsigned long long)arg7 flags:(unsigned long long)arg8;
- (id)initWithDevice:(id)arg1 convolutionData:(id)arg2 scaleValue:(float)arg3 type:(unsigned long long)arg4 flags:(unsigned long long)arg5;
- (id)initWithDeviceImpl:(id)arg1 convolutionDescriptor:(id)arg2 kernelWeights:(const unsigned int *)arg3 biasTerms:(const float *)arg4 scaleValue:(float)arg5 type:(unsigned long long)arg6 flags:(unsigned long long)arg7;
- (id)initWithDeviceImpl:(id)arg1 convolutionDescriptor:(id)arg2 kernelWeights:(const unsigned int *)arg3 outputBiasTerms:(const float *)arg4 outputScaleTerms:(const float *)arg5 inputBiasTerms:(const float *)arg6 inputScaleTerms:(const float *)arg7 type:(unsigned long long)arg8 flags:(unsigned long long)arg9;

@end

