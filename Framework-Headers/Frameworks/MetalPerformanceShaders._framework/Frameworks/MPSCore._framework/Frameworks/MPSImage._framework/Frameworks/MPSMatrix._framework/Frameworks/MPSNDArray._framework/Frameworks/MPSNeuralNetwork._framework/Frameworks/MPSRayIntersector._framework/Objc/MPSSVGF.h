//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <MPSCore/MPSKernel.h>

#import <MPSRayIntersector/NSCopying-Protocol.h>
#import <MPSRayIntersector/NSSecureCoding-Protocol.h>

@interface MPSSVGF : MPSKernel <NSSecureCoding, NSCopying>
{
    float _variancePrefilterSigma;
    float _bilateralFilterSigma;
    unsigned long long _temporalWeighting;
    float _temporalReprojectionBlendFactor;
    float _depthWeight;
    float _normalWeight;
    float _luminanceWeight;
    float _reprojectionThreshold;
    float _varianceEstimationSigma;
    unsigned long long _channelCount;
    unsigned long long _channelCount2;
    unsigned long long _minimumFramesForVarianceEstimation;
    unsigned long long _varianceEstimationRadius;
    unsigned long long _variancePrefilterRadius;
    unsigned long long _bilateralFilterRadius;
}

@property (nonatomic) unsigned long long bilateralFilterRadius; // @synthesize bilateralFilterRadius=_bilateralFilterRadius;
@property (nonatomic) float bilateralFilterSigma;
@property (nonatomic) unsigned long long channelCount;
@property (nonatomic) unsigned long long channelCount2;
@property (nonatomic) float depthWeight;
@property (nonatomic) float luminanceWeight;
@property (nonatomic) unsigned long long minimumFramesForVarianceEstimation; // @synthesize minimumFramesForVarianceEstimation=_minimumFramesForVarianceEstimation;
@property (nonatomic) float normalWeight;
@property (nonatomic) float reprojectionThreshold;
@property (nonatomic) float temporalReprojectionBlendFactor;
@property (nonatomic) unsigned long long temporalWeighting;
@property (nonatomic) unsigned long long varianceEstimationRadius; // @synthesize varianceEstimationRadius=_varianceEstimationRadius;
@property (nonatomic) float varianceEstimationSigma;
@property (nonatomic) unsigned long long variancePrefilterRadius; // @synthesize variancePrefilterRadius=_variancePrefilterRadius;
@property (nonatomic) float variancePrefilterSigma;

+ (const struct MPSLibraryInfo *)libraryInfo;
+ (BOOL)supportsSecureCoding;
- (unsigned long long)channelCount:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1 device:(id)arg2;
- (void)dealloc;
- (id)description;
- (void)encodeBilateralFilterToCommandBuffer:(id)arg1 stepDistance:(unsigned long long)arg2 sourceTexture:(id)arg3 destinationTexture:(id)arg4 depthNormalTexture:(id)arg5;
- (void)encodeBilateralFilterToCommandBuffer:(id)arg1 stepDistance:(unsigned long long)arg2 sourceTexture:(id)arg3 destinationTexture:(id)arg4 sourceTexture2:(id)arg5 destinationTexture2:(id)arg6 depthNormalTexture:(id)arg7;
- (void)encodeReprojectionToCommandBuffer:(id)arg1 sourceTexture:(id)arg2 previousTexture:(id)arg3 destinationTexture:(id)arg4 previousLuminanceMomentsTexture:(id)arg5 destinationLuminanceMomentsTexture:(id)arg6 previousFrameCountTexture:(id)arg7 destinationFrameCountTexture:(id)arg8 motionVectorTexture:(id)arg9 depthNormalTexture:(id)arg10 previousDepthNormalTexture:(id)arg11;
- (void)encodeReprojectionToCommandBuffer:(id)arg1 sourceTexture:(id)arg2 previousTexture:(id)arg3 destinationTexture:(id)arg4 previousLuminanceMomentsTexture:(id)arg5 destinationLuminanceMomentsTexture:(id)arg6 sourceTexture2:(id)arg7 previousTexture2:(id)arg8 destinationTexture2:(id)arg9 previousLuminanceMomentsTexture2:(id)arg10 destinationLuminanceMomentsTexture2:(id)arg11 previousFrameCountTexture:(id)arg12 destinationFrameCountTexture:(id)arg13 motionVectorTexture:(id)arg14 depthNormalTexture:(id)arg15 previousDepthNormalTexture:(id)arg16;
- (void)encodeVarianceEstimationToCommandBuffer:(id)arg1 sourceTexture:(id)arg2 luminanceMomentsTexture:(id)arg3 destinationTexture:(id)arg4 frameCountTexture:(id)arg5 depthNormalTexture:(id)arg6;
- (void)encodeVarianceEstimationToCommandBuffer:(id)arg1 sourceTexture:(id)arg2 luminanceMomentsTexture:(id)arg3 destinationTexture:(id)arg4 sourceTexture2:(id)arg5 luminanceMomentsTexture2:(id)arg6 destinationTexture2:(id)arg7 frameCountTexture:(id)arg8 depthNormalTexture:(id)arg9;
- (void)encodeWithCoder:(id)arg1;
- (struct MPSSVGFFunctionHash)getHashForKernelID:(unsigned long long)arg1 haveMotionVectorTexture:(BOOL)arg2 haveDepthNormalTexture:(BOOL)arg3 haveSecondTexture:(BOOL)arg4;
- (id)getPipelineForFunctionName:(id)arg1 kernelID:(unsigned long long)arg2 haveMotionVectorTexture:(BOOL)arg3 haveDepthNormalTexture:(BOOL)arg4 haveSecondTexture:(BOOL)arg5;
- (id)initWithCoder:(id)arg1 device:(id)arg2;
- (id)initWithDevice:(id)arg1;
- (struct MPSSVGFParams)params;

@end

