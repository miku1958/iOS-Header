//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <MPSNeuralNetwork/MPSCNNConvolutionDataSource-Protocol.h>

@class MISSING_TYPE, MPSCNNConvolutionDescriptor, MPSNNNeuronDescriptor, NSString;
@protocol MPSCNNConvolutionDataSource;

@interface MPSConvolutionDataSourceWrapper : NSObject <MPSCNNConvolutionDataSource>
{
    id<MPSCNNConvolutionDataSource> _dataSource;
    MPSCNNConvolutionDescriptor *_convolution;
    NSObject *_batchNorm;
    MPSNNNeuronDescriptor *_neuron;
    struct atomic<long> _loadCount;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

+ (id)wrapperForDataSource:(id)arg1;
- (BOOL)appendBatchNorm:(id)arg1;
- (BOOL)appendNeuron:(const struct NeuronInfo *)arg1;
- (BOOL)appendNeuronDescriptor:(id)arg1;
- (float *)biasTerms;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned int)dataType;
- (void)dealloc;
- (id)descriptor;
- (BOOL)hasBatchNorm;
- (id)initWithDataSource:(id)arg1;
- (void)initialize;
- (id)label;
- (BOOL)load;
- (float *)lookupTableForUInt8Kernel;
- (struct NeuronInfo)neuronInfo;
- (void)purge;
- (MISSING_TYPE **)rangesForUInt8Kernel;
- (BOOL)respondsToSelector:(SEL)arg1;
- (id)updateWithCommandBuffer:(id)arg1 gradientState:(id)arg2 sourceState:(id)arg3;
- (BOOL)updateWithGradientState:(id)arg1 sourceState:(id)arg2;
- (void *)weights;
- (unsigned int)weightsQuantizationType;

@end

