//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <GameController/GCDevice-Protocol.h>
#import <GameController/GCDeviceLegacy-Protocol.h>
#import <GameController/NSSecureCoding-Protocol.h>

@class GCController, GCMouseInput, GCPhysicalInputProfile, NSArray, NSString;
@protocol GCNamedProfile, OS_dispatch_queue;

@interface GCMouse : NSObject <NSSecureCoding, GCDeviceLegacy, GCDevice>
{
    GCController *_proxyController;
}

@property (nonatomic, getter=areAllHIDDevicesConnected) BOOL allHIDDevicesConnected;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *debugDescription;
@property (copy, nonatomic) NSString *debugName;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) unsigned long long deviceHash;
@property (nonatomic, getter=isForwarded) BOOL forwarded;
@property (strong, nonatomic) NSObject<OS_dispatch_queue> *handlerQueue;
@property (readonly) unsigned long long hash;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) NSArray *hidServices;
@property (readonly, nonatomic) GCMouseInput *mouseInput;
@property (strong, nonatomic) NSString *physicalDeviceUniqueID;
@property (readonly, nonatomic) GCPhysicalInputProfile *physicalInputProfile;
@property (readonly, nonatomic) NSString *productCategory;
@property (readonly, nonatomic) NSString *productCategory;
@property (strong, nonatomic) GCPhysicalInputProfile<GCNamedProfile> *profile;
@property (readonly, nonatomic) GCController *proxyController;
@property (strong, nonatomic) GCController *proxyController; // @synthesize proxyController=_proxyController;
@property (nonatomic, getter=isPublished) BOOL published;
@property (readonly, nonatomic) unsigned int service;
@property (readonly) Class superclass;
@property (readonly) Class superclass;
@property (strong, nonatomic) NSString *uniqueIdentifier;
@property (readonly, copy, nonatomic) NSString *vendorName;

+ (id)current;
+ (id)mice;
+ (BOOL)supportsSecureCoding;
- (void).cxx_destruct;
- (id)_legacy_description;
- (BOOL)_legacy_isAttachedToDevice;
- (BOOL)_legacy_isEqualToController:(id)arg1;
- (id)_legacy_physicalInputProfile;
- (id)_legacy_physicalInputProfileName;
- (long long)_legacy_playerIndex;
- (id)_legacy_productCategory;
- (void)_legacy_setPlayerIndex:(long long)arg1;
- (id)_legacy_vendorName;
- (void)addServiceRef:(id)arg1;
- (void)addServiceRefsWithDevice:(id)arg1;
- (void)clearServiceRef;
- (void *)createInputBufferForDevice:(struct __IOHIDDevice *)arg1 withSize:(unsigned long long)arg2;
- (void)encodeWithCoder:(id)arg1;
- (void)handleEvent:(struct __IOHIDEvent *)arg1;
- (BOOL)hasServiceRef:(struct __IOHIDServiceClient *)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithServiceRef:(struct __IOHIDServiceClient *)arg1;
- (void)removeServiceRef:(struct __IOHIDServiceClient *)arg1;
- (unsigned int)sampleRate;
- (void)setVendorName:(id)arg1;
- (BOOL)supportsMotionLite;

@end

