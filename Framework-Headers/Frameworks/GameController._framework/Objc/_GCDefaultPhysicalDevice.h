//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <GameController/GCBatteryServiceClientInterface-Protocol.h>
#import <GameController/_GCDeviceBatteryComponent-Protocol.h>
#import <GameController/_GCDeviceGamepadComponent-Protocol.h>
#import <GameController/_GCDeviceHapticCapabilitiesComponent-Protocol.h>
#import <GameController/_GCDeviceLightComponent-Protocol.h>
#import <GameController/_GCDeviceMotionComponent-Protocol.h>
#import <GameController/_GCDevicePlayerIndexIndicatorComponent-Protocol.h>
#import <GameController/_GCPhysicalDevice-Protocol.h>

@class GCDeviceBattery, GCDeviceLight, GCHapticCapabilityGraph, NSArray, NSSet, NSString, _GCCControllerHIDServiceInfo;
@protocol GCBatteryServiceServerInterface, GCLightServiceServerInterface, GCMotionServiceServerInterface, NSObject><NSCopying><NSSecureCoding, _GCDefaultPhysicalDeviceDelegate, _GCDeviceDriverConnection, _GCDeviceManager, _GCGamepadEventSourceDescription, _GCMotionEventSourceDescription;

__attribute__((visibility("hidden")))
@interface _GCDefaultPhysicalDevice : NSObject <_GCDeviceGamepadComponent, _GCDeviceMotionComponent, _GCDevicePlayerIndexIndicatorComponent, _GCDeviceLightComponent, _GCDeviceBatteryComponent, GCBatteryServiceClientInterface, _GCDeviceHapticCapabilitiesComponent, _GCPhysicalDevice>
{
    id<_GCDeviceDriverConnection> _driverConnection;
    id _driverConnectionInvalidationRegistration;
    CDUnknownBlockType _lightComponentServiceConnectedHandler;
    CDUnknownBlockType _motionComponentServiceConnectedHandler;
    CDUnknownBlockType _batteryComponentServiceConnectedHandler;
    CDUnknownBlockType _batteryComponentBatteryUpdatedHandler;
    id<NSObject><NSCopying><NSSecureCoding> _identifier;
    id<_GCDeviceManager> _manager;
    id<_GCDefaultPhysicalDeviceDelegate> _delegate;
    id<GCLightServiceServerInterface> _lightServiceServer;
    id<GCMotionServiceServerInterface> _motionServiceServer;
    id<GCBatteryServiceServerInterface> _batteryServiceServer;
    _GCCControllerHIDServiceInfo *_serviceInfo;
}

@property (readonly, nonatomic) GCDeviceBattery *battery;
@property (readonly, nonatomic) id<GCBatteryServiceServerInterface> batteryServiceServer; // @synthesize batteryServiceServer=_batteryServiceServer;
@property (readonly) NSSet *components;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<_GCDefaultPhysicalDeviceDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *description;
@property (copy, nonatomic) CDUnknownBlockType deviceBatteryComponentBatteryUpdatedHandler;
@property (copy, nonatomic) CDUnknownBlockType deviceBatteryServiceConnectedHandler;
@property (copy, nonatomic) CDUnknownBlockType deviceLightServiceConnectedHandler;
@property (copy, nonatomic) CDUnknownBlockType deviceMotionServiceConnectedHandler;
@property (readonly) id<_GCGamepadEventSourceDescription> gamepadEventSource;
@property (readonly, nonatomic) GCHapticCapabilityGraph *hapticCapabilityGraph;
@property (readonly, nonatomic) NSArray *hapticEngines;
@property (readonly) unsigned long long hash;
@property (readonly) unsigned long long hash;
@property (readonly) unsigned long long hash;
@property (readonly) unsigned long long hash;
@property (readonly) unsigned long long hash;
@property (readonly) unsigned long long hash;
@property (readonly) unsigned long long hash;
@property (readonly, copy) id<NSObject><NSCopying><NSSecureCoding> identifier; // @synthesize identifier=_identifier;
@property long long indicatedPlayerIndex;
@property (strong, nonatomic) GCDeviceLight *light;
@property (readonly, nonatomic) id<GCLightServiceServerInterface> lightServiceServer; // @synthesize lightServiceServer=_lightServiceServer;
@property (readonly, weak) id<_GCDeviceManager> manager; // @synthesize manager=_manager;
@property (readonly, nonatomic) id<_GCMotionEventSourceDescription> motionEventSource;
@property (readonly, nonatomic) id<GCMotionServiceServerInterface> motionServiceServer; // @synthesize motionServiceServer=_motionServiceServer;
@property (nonatomic) BOOL sensorsActive;
@property (readonly, nonatomic) _GCCControllerHIDServiceInfo *serviceInfo; // @synthesize serviceInfo=_serviceInfo;
@property (readonly) Class superclass;
@property (readonly) Class superclass;
@property (readonly) Class superclass;
@property (readonly) Class superclass;
@property (readonly) Class superclass;
@property (readonly) Class superclass;
@property (readonly) Class superclass;

+ (id)identifierForService:(id)arg1;
- (void).cxx_destruct;
- (BOOL)conformsToProtocol:(id)arg1;
- (id)driverConnection;
- (id)init;
- (id)initWithHIDDevice:(id)arg1 manager:(id)arg2;
- (id)propertyForKey:(id)arg1;
- (id)redactedDescription;
- (void)setDriverConnection:(id)arg1;
- (BOOL)supportsBattery;
- (BOOL)supportsGamepad;
- (BOOL)supportsHapticCapabilities;
- (BOOL)supportsLight;
- (BOOL)supportsMotion;
- (BOOL)supportsPlayerIndicator;
- (void)updateBattery:(unsigned char)arg1 isCharging:(BOOL)arg2;

@end

