//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <GameController/_GCControllerManager.h>

#import <GameController/GCBatteryXPCProxyServiceClient-Protocol.h>
#import <GameController/GCBatteryXPCProxyServiceRemoteClientInterface-Protocol.h>
#import <GameController/GCControllerServiceRemoteClientInterface-Protocol.h>
#import <GameController/GCLightXPCProxyServiceClient-Protocol.h>
#import <GameController/GCLightXPCProxyServiceRemoteClientInterface-Protocol.h>
#import <GameController/GCMotionXPCProxyServiceClient-Protocol.h>
#import <GameController/GCMotionXPCProxyServiceRemoteClientInterface-Protocol.h>
#import <GameController/GCPlayerIndicatorXPCProxyServiceClient-Protocol.h>
#import <GameController/GCPlayerIndicatorXPCProxyServiceRemoteClientInterface-Protocol.h>
#import <GameController/GCSettingsXPCProxyServiceClient-Protocol.h>
#import <GameController/GCSettingsXPCProxyServiceRemoteClientInterface-Protocol.h>
#import <GameController/_GCAppClientInterface-Protocol.h>

@class NSMutableDictionary, NSMutableSet, NSString;
@protocol GCBatteryXPCProxyServiceRemoteServerInterface, GCControllerServiceRemoteServerInterface, GCLightXPCProxyServiceRemoteServerInterface, GCMotionXPCProxyServiceRemoteServerInterface, GCPhotoVideoXPCProxyServiceRemoteServerInterface, GCPlayerIndicatorXPCProxyServiceRemoteServerInterface, GCSettingsXPCProxyServiceRemoteServerInterface, _GCIPCEndpointConnection, _GCIPCOutgoingConnection;

@interface _GCControllerManagerAppClient : _GCControllerManager <GCControllerServiceRemoteClientInterface, GCPlayerIndicatorXPCProxyServiceClient, GCPlayerIndicatorXPCProxyServiceRemoteClientInterface, GCLightXPCProxyServiceClient, GCLightXPCProxyServiceRemoteClientInterface, GCMotionXPCProxyServiceClient, GCMotionXPCProxyServiceRemoteClientInterface, GCBatteryXPCProxyServiceClient, GCBatteryXPCProxyServiceRemoteClientInterface, GCSettingsXPCProxyServiceClient, GCSettingsXPCProxyServiceRemoteClientInterface, _GCAppClientInterface>
{
    NSMutableSet *_knownHIDServices;
    NSMutableDictionary *_publishedControllers;
    NSMutableSet *_pendingControllers;
    NSMutableSet *_serverValidControllerIdentifiers;
    id<_GCIPCOutgoingConnection> _serverConnection;
    id _serverConnectionInvalidation;
    id _serverConnectionInterruption;
    id<GCControllerServiceRemoteServerInterface> _controllerService;
    id<GCPlayerIndicatorXPCProxyServiceRemoteServerInterface> _playerIndicatorXPCProxyService;
    id<GCLightXPCProxyServiceRemoteServerInterface> _lightXPCProxyService;
    id<GCSettingsXPCProxyServiceRemoteServerInterface> _settingsXPCProxyService;
    id<GCMotionXPCProxyServiceRemoteServerInterface> _motionXPCProxyService;
    id<GCBatteryXPCProxyServiceRemoteServerInterface> _batteryXPCProxyService;
    id<GCPhotoVideoXPCProxyServiceRemoteServerInterface> _photoVideoService;
    BOOL _shouldResumeDaemonConnectionOnForeground;
}

@property (readonly) id<_GCIPCEndpointConnection> batteryXPCProxyServiceConnection;
@property (readonly) id<GCBatteryXPCProxyServiceRemoteServerInterface> batteryXPCProxyServiceRemoteServer;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) unsigned long long hash;
@property (readonly) unsigned long long hash;
@property (readonly) unsigned long long hash;
@property (readonly) unsigned long long hash;
@property (readonly) id<_GCIPCEndpointConnection> lightXPCProxyServiceConnection;
@property (readonly) id<GCLightXPCProxyServiceRemoteServerInterface> lightXPCProxyServiceRemoteServer;
@property (readonly) id<_GCIPCEndpointConnection> motionXPCProxyServiceConnection;
@property (readonly) id<GCMotionXPCProxyServiceRemoteServerInterface> motionXPCProxyServiceRemoteServer;
@property (readonly) id<_GCIPCEndpointConnection> playerIndicatorXPCProxyServiceConnection;
@property (readonly) id<GCPlayerIndicatorXPCProxyServiceRemoteServerInterface> playerIndicatorXPCProxyServiceRemoteServer;
@property (readonly) id<_GCIPCEndpointConnection> settingsXPCProxyServiceConnection;
@property (readonly) id<GCSettingsXPCProxyServiceRemoteServerInterface> settingsXPCProxyServiceRemoteServer;
@property (readonly) Class superclass;
@property (readonly) Class superclass;
@property (readonly) Class superclass;
@property (readonly) Class superclass;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)CBApplicationDidBecomeActive;
- (void)_connectToDaemon;
- (BOOL)_containsPublishedController:(id)arg1;
- (id)_mostRecentlyActiveControllerIgnoring:(id)arg1;
- (id)_mostRecentlyActiveExtendedGamepadIgnoring:(id)arg1;
- (id)_mostRecentlyActiveMicroGamepadIgnoring:(id)arg1;
- (void)_onqueue_addPendingController:(id)arg1;
- (void)_onqueue_publishController:(id)arg1;
- (void)_onqueue_refreshPublishedControllers;
- (void)_onqueue_unpublishController:(id)arg1;
- (void)_resumeDaemonConnection;
- (void)_setCurrentController:(id)arg1;
- (void)_setCurrentExtendedGamepad:(id)arg1;
- (void)_setCurrentMicroGamepad:(id)arg1;
- (id)controllers;
- (id)currentController;
- (id)currentExtendedGamepad;
- (id)currentMicroGamepad;
- (void)handleKeyboardEventAsFrontmostApp:(id)arg1;
- (void)handleMouseEventAsFrontmostApp:(id)arg1;
- (id)init;
- (BOOL)isScreenShotAllowedForController:(id)arg1;
- (BOOL)isVideoRecordingAllowedForController:(id)arg1;
- (id)mice;
- (void)onHIDDeviceAdded:(struct __IOHIDServiceClient *)arg1;
- (void)onHIDDeviceRemoved:(struct __IOHIDServiceClient *)arg1;
- (void)onScreenshotTriggeredWithController:(id)arg1;
- (void)onVideoRecordingToggledWithController:(id)arg1;
- (void)open;
- (void)publishControllers:(id)arg1;
- (void)refreshControllers;
- (id)serviceClientForIPCService:(id)arg1;
- (void)setCurrentController:(id)arg1;
- (void)setCurrentExtendedGamepad:(id)arg1;
- (void)setCurrentMicroGamepad:(id)arg1;
- (void)setProperty:(id)arg1 forKey:(id)arg2 forHIDServiceClientWithRegistryID:(id)arg3;
- (void)unpublishControllersWithIdentifiers:(id)arg1;
- (void)updateCurrentControllerAndProfileForUnpublishedController:(id)arg1;

@end

