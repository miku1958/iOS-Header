//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <GameController/GCPhysicalInputProfile.h>

#import <GameController/NSSecureCoding-Protocol.h>
#import <GameController/_GCGamepadEventSink-Protocol.h>

@class GCController, GCControllerButtonInput, GCControllerDirectionPad, NSString;

@interface GCGamepad : GCPhysicalInputProfile <_GCGamepadEventSink, NSSecureCoding>
{
    CDUnknownBlockType _valueChangedHandler;
    GCControllerDirectionPad *_dpad;
    GCControllerButtonInput *_button0;
    GCControllerButtonInput *_button1;
    GCControllerButtonInput *_button2;
    GCControllerButtonInput *_button3;
    GCControllerButtonInput *_leftShoulder;
    GCControllerButtonInput *_rightShoulder;
    id _gamepadEventObservation;
    GCControllerButtonInput *_buttonMenu;
}

@property (readonly, nonatomic) GCControllerButtonInput *buttonA; // @synthesize buttonA=_button0;
@property (readonly, nonatomic) GCControllerButtonInput *buttonB; // @synthesize buttonB=_button1;
@property (strong, nonatomic) GCControllerButtonInput *buttonMenu; // @synthesize buttonMenu=_buttonMenu;
@property (readonly, nonatomic) GCControllerButtonInput *buttonX; // @synthesize buttonX=_button2;
@property (readonly, nonatomic) GCControllerButtonInput *buttonY; // @synthesize buttonY=_button3;
@property (readonly, weak, nonatomic) GCController *controller; // @dynamic controller;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) GCControllerDirectionPad *dpad; // @synthesize dpad=_dpad;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) GCControllerButtonInput *leftShoulder; // @synthesize leftShoulder=_leftShoulder;
@property (readonly, nonatomic) GCControllerButtonInput *rightShoulder; // @synthesize rightShoulder=_rightShoulder;
@property (readonly) Class superclass;
@property (copy, nonatomic) CDUnknownBlockType valueChangedHandler; // @synthesize valueChangedHandler=_valueChangedHandler;

+ (BOOL)supportsSecureCoding;
- (void).cxx_destruct;
- (void)_triggerValueChangedHandlerForElement:(id)arg1 queue:(id)arg2;
- (BOOL)allowsRotation;
- (id)button0;
- (id)button1;
- (id)button2;
- (id)button3;
- (void)encodeWithCoder:(id)arg1;
- (void)handleEvent:(struct __IOHIDEvent *)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithIdentifier:(id)arg1;
- (id)name;
- (id)productCategory;
- (BOOL)reportsAbsoluteDpadValues;
- (id)saveSnapshot;
- (void)setAllowsRotation:(BOOL)arg1;
- (void)setGamepadEventSource:(id)arg1;
- (void)setReportsAbsoluteDpadValues:(BOOL)arg1;

@end

