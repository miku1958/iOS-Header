//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <ARKit/ARImageBasedTechnique.h>

#import <ARKit/ARTechniqueBusyState-Protocol.h>

@class NSArray, NSObject, NSString;
@protocol OS_dispatch_queue, OS_dispatch_semaphore;

@interface ARMLImageProcessingTechnique : ARImageBasedTechnique <ARTechniqueBusyState>
{
    NSObject<OS_dispatch_queue> *_processingQueue;
    NSObject<OS_dispatch_semaphore> *_processingSemaphore;
    struct os_unfair_lock_s _prepLock;
    double _espressoInputBufferTimestamp;
    struct os_unfair_lock_s _espressoInputBufferLock;
    void *_espressoContext;
    void *_espressoPlan;
    CDStruct_2bc666a5 _espressoNetwork;
    struct vector<espresso_buffer_t, std::__1::allocator<espresso_buffer_t>> _espressoOutputTensors;
    struct vector<espresso_buffer_t, std::__1::allocator<espresso_buffer_t>> _espressoInputTensors;
    BOOL _hasBegunPrep;
    BOOL _failedToLoadNetwork;
    struct __CVPixelBufferPool *_bgraPixelBufferPool;
    NSString *_previous_network_configuration;
    int _lockedOrientation;
    BOOL _deterministic;
    BOOL _prepComplete;
    BOOL _networkHasConfigurations;
    NSString *_networkFilePath;
    NSArray *_inputTensorNames;
    NSArray *_outputTensorNames;
    struct CGSize _networkInputScaleBeforeRotation;
    struct CGSize _allowedResamplingImageSize;
}

@property (nonatomic) struct CGSize allowedResamplingImageSize; // @synthesize allowedResamplingImageSize=_allowedResamplingImageSize;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) BOOL failedToLoadNetwork; // @synthesize failedToLoadNetwork=_failedToLoadNetwork;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) NSArray *inputTensorNames; // @synthesize inputTensorNames=_inputTensorNames;
@property (readonly, nonatomic) BOOL isBusy;
@property (strong, nonatomic) NSString *networkFilePath; // @synthesize networkFilePath=_networkFilePath;
@property BOOL networkHasConfigurations; // @synthesize networkHasConfigurations=_networkHasConfigurations;
@property (readonly, nonatomic) struct CGSize networkInputScaleBeforeRotation; // @synthesize networkInputScaleBeforeRotation=_networkInputScaleBeforeRotation;
@property (readonly, nonatomic) NSString *networkVersionString;
@property (readonly, nonatomic) NSArray *outputTensorNames; // @synthesize outputTensorNames=_outputTensorNames;
@property BOOL prepComplete; // @synthesize prepComplete=_prepComplete;
@property (readonly) Class superclass;

+ (BOOL)isSupported;
- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)ARMLVerifyLoadedModelVersion:(id)arg1 deviceName:(id)arg2 major:(int)arg3 minor:(int)arg4;
- (void)_asynchronousProcessDownSampledImage:(id)arg1;
- (void)_asynchronousProcessEspressoTensor:(id)arg1;
- (void)_endLoadingMLModelSignpost;
- (void)_endMLCreateResultSignpostWithTimestamp:(double)arg1;
- (void)_endMLProcessingSignpostWithTimestamp:(double)arg1;
- (void)_endMLRunNetworkSignpostWithTimestamp:(double)arg1;
- (long long)_getDeviceOrientation;
- (id)_resampleImage:(id)arg1 rotationOfResultTensor:(long long)arg2 networkInputSize:(struct CGSize)arg3;
- (void)_runNeuralNetworkAndPushResult:(id)arg1 originalImageData:(id)arg2 regionOfInterest:(struct CGSize)arg3 rotationOfResultTensor:(long long)arg4;
- (void)_startLoadingMLModelSignpost;
- (void)_startMLCreateResultSignpostWithTimestamp:(double)arg1 orientation:(long long)arg2 outputSize:(struct CGSize)arg3;
- (void)_startMLProcessingSignpostWithTimestamp:(double)arg1;
- (void)_startMLRunNetworkSignpostWithTimestamp:(double)arg1;
- (int)bindInputBuffer:(unsigned long long)arg1 withImage:(id)arg2 andOriginalImageData:(id)arg3 rotationOfResultTensor:(long long)arg4;
- (long long)captureBehavior;
- (void)changeEspressoConfig:(id)arg1;
- (id)createResultDataFromTensors:(CDStruct_cf098810 *)arg1 numberOfOutputTensors:(unsigned long long)arg2 imageDataForNeuralNetwork:(id)arg3 inputImageData:(id)arg4 rotationNeeded:(long long)arg5 regionOfInterest:(struct CGSize)arg6;
- (void)dealloc;
- (int)defaultEngine;
- (id)defaultEngineName;
- (CDStruct_cf098810 *)espressoInputTensorsData;
- (unsigned long long)espressoInputTensorsSize;
- (CDStruct_2bc666a5)espressoNetwork;
- (CDStruct_cf098810 *)espressoOutputTensorsData;
- (unsigned long long)espressoOutputTensorsSize;
- (void *)espressoPlan;
- (id)initWithDispatchQueue:(id)arg1 inputTensorNames:(id)arg2 outputTensorNames:(id)arg3 networkInputScaleBeforeRotation:(struct CGSize)arg4 networkFilePath:(id)arg5;
- (BOOL)isLoadedModelVersionCorrect:(id)arg1;
- (void)loadMLWithPath:(id)arg1 networkMode:(id)arg2;
- (void)lockOrientation:(long long)arg1;
- (CDStruct_b527887c)networkInputParams;
- (void)networkModeDidChange:(id)arg1 toMode:(id)arg2;
- (id)networkModesForOrientation:(long long)arg1;
- (BOOL)networkProvidesConfigurationsForDeviceOrientation;
- (long long)numberOfInputChannelsToExpectInNetwork;
- (long long)orientationForInitializingEspresso;
- (BOOL)preProcessNetworkInputImage:(struct __CVBuffer *)arg1;
- (void)prepare:(BOOL)arg1;
- (int)prepareBindInputBuffer:(unsigned long long)arg1 withName:(id)arg2;
- (id)processData:(id)arg1;
- (id)processEspressoTensor:(id)arg1;
- (id)processImageDataThroughNeuralNetwork:(id)arg1 originalImageData:(id)arg2 regionOfInterest:(struct CGSize)arg3 rotationOfResultTensor:(long long)arg4;
- (id)processingSemaphore;
- (unsigned long long)requiredSensorDataTypes;
- (double)requiredTimeInterval;
- (id)resultDataClasses;
- (id)runNeuralNetworkWithImageData:(id)arg1 originalImageData:(id)arg2 regionOfInterest:(struct CGSize)arg3 rotationOfResultTensor:(long long)arg4;
- (BOOL)shouldUseSynchronizedUltraWide;
- (void)waitForProcessingCompleteInDeterministicMode;

@end

