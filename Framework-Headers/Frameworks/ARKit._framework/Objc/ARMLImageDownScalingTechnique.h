//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <ARKit/ARImageBasedTechnique.h>

@class ARImageCroppingTechnique, ARImageRotationTechnique, ARImageScalingTechnique, ARMLImageDownScalingResultData, ARMattingImageMetaData, NSObject;
@protocol OS_dispatch_queue;

@interface ARMLImageDownScalingTechnique : ARImageBasedTechnique
{
    ARImageScalingTechnique *_imageScalingTechnique;
    ARImageScalingTechnique *_mattingImageScalingTechnique;
    ARImageRotationTechnique *_imageRotationTechnique;
    ARImageCroppingTechnique *_imageCroppingTechnique;
    struct vImageCVImageFormat *_cvImageFormatRef;
    struct __CVPixelBufferPool *_bgraPixelBufferPool;
    struct __CVPixelBufferPool *_bgraMattingPixelBufferPool;
    int _lockedOrientation;
    ARMattingImageMetaData *_mattingImageData;
    ARMLImageDownScalingResultData *_downSamplingResultData;
    BOOL _enableDoubleMLResolutionForIPad;
    NSObject<OS_dispatch_queue> *_processingQueue;
    double _resultLatency;
    BOOL _deterministic;
    BOOL _centerCropImage;
    BOOL _generateMattingMetaData;
    BOOL _resizeUltraWideImage;
    CDUnknownBlockType _wideRotationStrategy;
    CDUnknownBlockType _ultrawideRotationStrategy;
    struct CGSize _imageSize;
}

@property (nonatomic) BOOL centerCropImage; // @synthesize centerCropImage=_centerCropImage;
@property (nonatomic) BOOL generateMattingMetaData; // @synthesize generateMattingMetaData=_generateMattingMetaData;
@property (readonly, nonatomic) struct CGSize imageSize; // @synthesize imageSize=_imageSize;
@property (nonatomic) BOOL resizeUltraWideImage; // @synthesize resizeUltraWideImage=_resizeUltraWideImage;
@property (copy, nonatomic) CDUnknownBlockType ultrawideRotationStrategy; // @synthesize ultrawideRotationStrategy=_ultrawideRotationStrategy;
@property (copy, nonatomic) CDUnknownBlockType wideRotationStrategy; // @synthesize wideRotationStrategy=_wideRotationStrategy;

- (void).cxx_destruct;
- (id)_convertImageColorSpace:(id)arg1 pPoolToUse:(struct __CVPixelBufferPool **)arg2;
- (id)_downscaledResultDataFromImageData:(id)arg1 croppedRect:(struct CGRect)arg2;
- (id)_fullDescription;
- (long long)_getDeviceOrientation;
- (id)_imageDataForNeuralNetwork:(id)arg1 scaledSize:(struct CGSize)arg2 deviceOrientation:(long long)arg3 pRegionOfInterest:(struct CGSize *)arg4 pRotationOfResultTensor:(long long *)arg5;
- (void)dealloc;
- (CDUnknownBlockType)defaultRotationStrategy;
- (id)initWithSize:(struct CGSize)arg1;
- (id)initWithSize:(struct CGSize)arg1 requiredTimeInterval:(double)arg2;
- (BOOL)isEqual:(id)arg1;
- (void)lockOrientation:(long long)arg1;
- (id)nodeName;
- (void)prepare:(BOOL)arg1;
- (id)processData:(id)arg1;
- (double)requiredTimeInterval;

@end

