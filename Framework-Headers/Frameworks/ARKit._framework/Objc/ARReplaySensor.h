//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <ARKit/ARInternalSessionObserver-Protocol.h>
#import <ARKit/ARReplaySensorProtocol-Protocol.h>
#import <ARKit/ARReplaySensorProtocolInternal-Protocol.h>

@class ARImageCroppingTechnique, AVAssetReader, AVAssetReaderOutputMetadataAdaptor, AVAssetReaderTrackOutput, AVURLAsset, NSArray, NSDictionary, NSMutableArray, NSSet, NSString, NSURL;
@protocol ARReplaySensorDelegate, ARSensorDelegate, OS_dispatch_queue, OS_dispatch_source;

@interface ARReplaySensor : NSObject <ARInternalSessionObserver, ARReplaySensorProtocolInternal, ARReplaySensorProtocol>
{
    BOOL _manualCommandLineMode;
    AVURLAsset *_asset;
    NSMutableArray *_arImageData;
    NSMutableArray *_arAccelerometerData;
    NSMutableArray *_arGyroData;
    NSMutableArray *_arDeviceOrientationData;
    NSMutableArray *_arLocationData;
    CDUnknownBlockType _customDataGetter;
    NSDictionary *_recordedResultGetters;
    double _originalToReplayTimestampDifference;
    NSObject<OS_dispatch_queue> *_replayQueue;
    id<ARReplaySensorDelegate> _traceReplaySensorDelegate;
    NSObject<OS_dispatch_source> *_timer;
    double _startTime;
    long long _tick;
    int _imageIndexForPreloading;
    int _accelDataIndex;
    int _gyroDataIndex;
    int _deviceOrientationDataIndex;
    int _locationDataIndex;
    BOOL _running;
    BOOL _metadataLoadedFromAsset;
    BOOL _interrupted;
    BOOL _replayStarted;
    _Atomic BOOL _finishedReplaying;
    struct opaqueCMSampleBuffer *_nextSampleBuffer;
    AVAssetReader *_assetReader;
    AVAssetReaderTrackOutput *_imageOutput;
    AVAssetReaderTrackOutput *_depthOutput;
    struct opaqueCMSampleBuffer *_nextDepthSampleBuffer;
    AVAssetReaderOutputMetadataAdaptor *_oldMotionOutputMetadataAdaptor;
    AVAssetReaderOutputMetadataAdaptor *_accelOutputMetadataAdaptor;
    AVAssetReaderOutputMetadataAdaptor *_gyroOutputMetadataAdaptor;
    AVAssetReaderOutputMetadataAdaptor *_imageOutputMetadataAdaptor;
    AVAssetReaderOutputMetadataAdaptor *_accelOutputMetadataAdaptor_CV3D;
    AVAssetReaderOutputMetadataAdaptor *_gyroOutputMetadataAdaptor_CV3D;
    AVAssetReaderOutputMetadataAdaptor *_deviceMotionOutputMetadataAdaptor_CV3D;
    AVAssetReaderOutputMetadataAdaptor *_locationMetadataAdaptor_CV3D;
    AVAssetReaderOutputMetadataAdaptor *_imageOutputMetadataAdaptor_CV3D;
    AVAssetReaderOutputMetadataAdaptor *_deviceOrientationOutputMetadataAdaptor;
    AVAssetReaderOutputMetadataAdaptor *_customDataOutputMetadataAdaptor;
    NSDictionary *_recordedResultAdaptors;
    BOOL _displaySynchronizationMarker;
    long long _displaySynchronizationMarkerFrames;
    struct __CVBuffer *_synchronizationMarker;
    struct __CVPixelBufferPool *_synchronizationMarkerPool;
    struct OpaqueVTPixelTransferSession *_synchronizationTransferSession;
    unsigned long long _sensorDataTypes;
    ARImageCroppingTechnique *_croppingTechnique;
    BOOL synchronousMode;
    BOOL _isReplayingManually;
    float _advanceFramesPerSecondMultiplier;
    int _imageIndex;
    id<ARSensorDelegate> _delegate;
    id<ARReplaySensorDelegate> _replaySensorDelegate;
    NSURL *_sequenceURL;
    NSString *_deviceModel;
    NSString *_osVersion;
    NSString *_arkitVersion;
    double _nominalFrameRate;
    unsigned long long _recordedSensorTypes;
    NSSet *_recordedResultClasses;
    long long _replayMode;
    long long _nextFrameIndex;
    NSSet *_customDataClasses;
    long long _targetFrameIndex;
    struct CGSize _imageResolution;
}

@property float advanceFramesPerSecondMultiplier; // @synthesize advanceFramesPerSecondMultiplier=_advanceFramesPerSecondMultiplier;
@property (readonly, nonatomic) NSString *arkitVersion; // @synthesize arkitVersion=_arkitVersion;
@property (copy, nonatomic) NSSet *customDataClasses; // @synthesize customDataClasses=_customDataClasses;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<ARSensorDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) NSString *deviceModel; // @synthesize deviceModel=_deviceModel;
@property (readonly, nonatomic) BOOL finishedReplaying;
@property (readonly) unsigned long long hash;
@property (nonatomic) int imageIndex; // @synthesize imageIndex=_imageIndex;
@property (readonly, nonatomic) struct CGSize imageResolution; // @synthesize imageResolution=_imageResolution;
@property (readonly, nonatomic) BOOL interrupted; // @synthesize interrupted=_interrupted;
@property (readonly, nonatomic) BOOL isReplayingManually; // @synthesize isReplayingManually=_isReplayingManually;
@property long long nextFrameIndex; // @synthesize nextFrameIndex=_nextFrameIndex;
@property (readonly, nonatomic) double nominalFrameRate; // @synthesize nominalFrameRate=_nominalFrameRate;
@property (readonly, nonatomic) NSString *osVersion; // @synthesize osVersion=_osVersion;
@property (nonatomic) unsigned long long powerUsage;
@property (readonly, nonatomic) NSArray *recordedResultClassList;
@property (readonly, nonatomic) NSSet *recordedResultClasses; // @synthesize recordedResultClasses=_recordedResultClasses;
@property (readonly, nonatomic) unsigned long long recordedSensorTypes; // @synthesize recordedSensorTypes=_recordedSensorTypes;
@property (readonly, nonatomic) long long replayMode; // @synthesize replayMode=_replayMode;
@property (weak) id<ARReplaySensorDelegate> replaySensorDelegate; // @synthesize replaySensorDelegate=_replaySensorDelegate;
@property (readonly, nonatomic) NSURL *sequenceURL; // @synthesize sequenceURL=_sequenceURL;
@property (readonly) Class superclass;
@property (readonly, nonatomic, getter=isSynchronousMode) BOOL synchronousMode; // @synthesize synchronousMode;
@property long long targetFrameIndex; // @synthesize targetFrameIndex=_targetFrameIndex;
@property (weak) id<ARReplaySensorDelegate> traceReplaySensorDelegate;

- (void).cxx_destruct;
- (void)_didOutputSensorData:(id)arg1;
- (void)advance;
- (void)advanceFrame;
- (void)advanceToFrameIndex:(long long)arg1;
- (id)createAndAddMetadataAdaptorForTrack:(id)arg1;
- (CDUnknownBlockType)createResultForTimestampGetterBlockFromTimestampedResults:(id)arg1;
- (double)currentTime;
- (id)customDataForTimestamp:(double)arg1;
- (void)dealloc;
- (void)endInterruption;
- (void)endReplay;
- (void)enumerateDataWithIdentifier:(id)arg1 inOutputAdaptor:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)failWithError:(id)arg1;
- (void)fastForwardIndexesToTime:(double)arg1;
- (id)getNextAccelerometerData;
- (id)getNextDeviceOrientationData;
- (id)getNextGyroData;
- (id)getNextImageData;
- (id)getNextLocationData;
- (id)getResultDataForClasses:(id)arg1 atTimestamp:(double)arg2;
- (BOOL)hasAccelerometerDataForTime:(double)arg1;
- (BOOL)hasDeviceOrientationDataForTime:(double)arg1;
- (BOOL)hasGyroDataForTime:(double)arg1;
- (BOOL)hasImageDataForTimestamp:(double)arg1;
- (BOOL)hasLocationDataForTime:(double)arg1;
- (BOOL)hasMoreData;
- (id)initWithDataFromFile:(id)arg1;
- (id)initWithSequenceURL:(id)arg1 manualReplay:(BOOL)arg2;
- (id)initWithSequenceURL:(id)arg1 manualReplay:(BOOL)arg2 synchronousMode:(BOOL)arg3;
- (id)initWithSequenceURL:(id)arg1 replayMode:(long long)arg2;
- (void)initializeAssetReaderWithAsset:(id)arg1 buffersOnly:(BOOL)arg2;
- (void)interrupt;
- (BOOL)isEqual:(id)arg1;
- (void)loadAllMetadata;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)preloadNextPixelBuffers:(int)arg1;
- (void)prepareForReplay;
- (unsigned long long)providedDataTypes;
- (void)readFileMetadataFromAsset:(id)arg1;
- (id)replayTechniqueForResultDataClasses:(id)arg1;
- (struct __CVBuffer *)requestNextDepthPixelBufferForTimestamp:(double)arg1;
- (struct __CVBuffer *)requestNextPixelBufferForTimestamp:(double)arg1;
- (void)start;
- (void)startReplayIfNeeded;
- (void)stop;
- (void)tick;
- (BOOL)track:(id)arg1 hasMetadataIdentifier:(id)arg2;
- (id)unpackItemsOfClass:(Class)arg1 withIdentifier:(id)arg2 inOutputAdaptor:(id)arg3;
- (id)unpackTimestampedCV3DDictionaryItemsOfClass:(Class)arg1 withIdentifier:(id)arg2 inOutputAdaptor:(id)arg3;
- (id)unpackTimestampedItemsOfClasses:(id)arg1 withIdentifier:(id)arg2 inOutputAdaptor:(id)arg3;

@end

