//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <Vision/VNDetectorProviding-Protocol.h>
#import <Vision/VNDetectorReleasing-Protocol.h>
#import <Vision/VNLegacyForcedCleanupImplementing-Protocol.h>
#import <Vision/VNRequestWarming-Protocol.h>
#import <Vision/VNTrackerProviding-Protocol.h>

@class NSMutableSet, NSString, VNDetectorCache, VNFrameworkManager;

@interface VNSession : NSObject <VNDetectorProviding, VNDetectorReleasing, VNTrackerProviding, VNLegacyForcedCleanupImplementing, VNRequestWarming>
{
    VNFrameworkManager *_frameworkManager;
    VNDetectorCache *_detectorCache_onlyAccessWithDetectorAccessingLock;
    struct os_unfair_lock_s _requestedTrackerUUIDsAccessLock;
    NSMutableSet *_requestedTrackerUUIDs;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

+ (id)globalSession;
- (void).cxx_destruct;
- (id)_cachedDetectorOfClass:(Class)arg1 configuredWithOptions:(id)arg2;
- (void)_enumerateDetectorsUsingBlock:(CDUnknownBlockType)arg1;
- (id)_locateDetectorOfClass:(Class)arg1 configuredWithOptions:(id)arg2 allowingCreation:(BOOL)arg3 error:(id *)arg4;
- (void)_releaseAllDetectors;
- (void)_releaseAllTrackers;
- (void)_releaseDetectorTypes:(id)arg1;
- (void)_releaseDetectorsOfClasses:(id)arg1;
- (void)_releaseDetectorsPassingTest:(CDUnknownBlockType)arg1;
- (void)_releaseDetectorsThatCanBeReplacedByDetectorOfClass:(Class)arg1 withConfiguration:(id)arg2;
- (void)dealloc;
- (id)detectorOfClass:(Class)arg1 configuredWithOptions:(id)arg2 error:(id *)arg3;
- (id)detectorOfType:(id)arg1 configuredWithOptions:(id)arg2 error:(id *)arg3;
- (id)init;
- (void)legacyForcedCleanupOfFacePipelineWithLevel:(id)arg1;
- (void)legacyForcedCleanupOfJunkPipelineWithLevel:(id)arg1;
- (void)legacyForcedCleanupOfScenePipelineWithLevel:(id)arg1;
- (void)legacyForcedCleanupOfSmartCamPipelineWithLevel:(id)arg1;
- (void)legacyForcedCleanupWithOptions:(id)arg1;
- (id)loadedDetectors;
- (BOOL)prepareForPerformingRequests:(id)arg1 error:(id *)arg2;
- (BOOL)prepareForPerformingRequestsOfClass:(id)arg1 error:(id *)arg2;
- (void)releaseCachedResources;
- (void)releaseDetectorsThatCanBeReplacedByDetectorOfClass:(Class)arg1 withConfiguration:(id)arg2;
- (void)releaseTracker:(id)arg1;
- (id)trackerWithOptions:(id)arg1 error:(id *)arg2;

@end

