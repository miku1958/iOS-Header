//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/NSObject.h>

@class MKQuadTrie, NSArray, NSMapTable, NSMutableSet, NSTimer;
@protocol MKAnnotation, MKAnnotationManagerDelegate, MKAnnotationMarkerContainer, MKAnnotationRepresentation;

__attribute__((visibility("hidden")))
@interface MKAnnotationManager : NSObject
{
    id<MKAnnotationMarkerContainer> _container;
    id<MKAnnotationManagerDelegate> _delegate;
    BOOL _annotationRepresentationsAreAddedImmediately;
    NSTimer *_updateVisibleTimer;
    MKQuadTrie *_annotations;
    NSMutableSet *_visibleAnnotations;
    NSMutableSet *_pendingAnnotations;
    NSMutableSet *_disallowAnimationAnnotations;
    NSMutableSet *_invalidCoordinateAnnotations;
    id<MKAnnotation> _selectedAnnotation;
    id<MKAnnotation> _draggedAnnotation;
    NSMapTable *_annotationsToRepresentations;
    NSMutableSet *_annotationRepresentations;
    NSMapTable *_reusableAnnotationRepresentations;
    NSMutableSet *_managedAnnotations;
    NSMutableSet *_managedAnnotationsObservingCoordinate;
    BOOL _isChangingCoordinate;
    BOOL _isDeferringContainerSelection;
    BOOL _deferredContainerSelectionAnimated;
}

@property (readonly, nonatomic) NSArray *annotationRepresentations;
@property (nonatomic) BOOL annotationRepresentationsAreAddedImmediately; // @synthesize annotationRepresentationsAreAddedImmediately=_annotationRepresentationsAreAddedImmediately;
@property (readonly, nonatomic) NSArray *annotations;
@property (weak, nonatomic) id<MKAnnotationMarkerContainer> container; // @synthesize container=_container;
@property (weak, nonatomic) id<MKAnnotationManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property (weak, nonatomic) id<MKAnnotation> draggedAnnotation; // @synthesize draggedAnnotation=_draggedAnnotation;
@property (readonly, weak, nonatomic) id<MKAnnotationRepresentation> selectedAnnotationRepresentation;

- (void).cxx_destruct;
- (void)_addAnnotation:(id)arg1 updateVisible:(BOOL)arg2;
- (id)_addRepresentationForAnnotation:(id)arg1;
- (void)_annotationDidChangeState:(id)arg1 animated:(BOOL)arg2 avoid:(struct CGRect)arg3;
- (void)_removeAnnotation:(id)arg1 updateVisible:(BOOL)arg2 removeFromContainer:(BOOL)arg3;
- (void)_removeRepresentationForAnnotation:(id)arg1 fromCull:(BOOL)arg2;
- (void)_setupUpdateVisibleAnnotationsTimer;
- (void)addAnnotation:(id)arg1;
- (void)addAnnotation:(id)arg1 allowAnimation:(BOOL)arg2;
- (void)addAnnotations:(id)arg1;
- (void)addManagedAnnotation:(id)arg1;
- (void)addManagedAnnotation:(id)arg1 observeCoordinateChanges:(BOOL)arg2;
- (id)addRepresentationForManagedAnnotation:(id)arg1 notifyDelegate:(BOOL)arg2;
- (void)addRepresentationsForAnnotations:(id)arg1;
- (BOOL)annotationIsInternal:(id)arg1;
- (id)annotationsInMapRect:(CDStruct_02837cd9)arg1;
- (void)cleanUpAnnotationRepresentationForRemoval:(id)arg1;
- (void)configureAnnotationRepresentation:(id)arg1 forAnnotation:(id)arg2;
- (void)configureDefaultAnnotationRepresentation:(id)arg1 forAnnotation:(id)arg2;
- (BOOL)containsAnnotation:(id)arg1;
- (void)dealloc;
- (id)dequeueReusableAnnotationRepresentationWithIdentifier:(id)arg1;
- (void)deselectAnnotation:(id)arg1 animated:(BOOL)arg2;
- (id)init;
- (BOOL)internalAnnotationAllowsCustomRepresentation:(id)arg1;
- (id)newDefaultAnnotationRepresentationForAnnotation:(id)arg1 reuseIdentifier:(id)arg2;
- (id)newInternalAnnotationRepresentationForInternalAnnotation:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)removeAnnotation:(id)arg1;
- (void)removeAnnotations:(id)arg1;
- (void)removeRepresentationForManagedAnnotation:(id)arg1;
- (void)replaceAnnotation:(id)arg1 withAnnotation:(id)arg2;
- (id)representationForAnnotation:(id)arg1;
- (void)selectAnnotation:(id)arg1 animated:(BOOL)arg2;
- (void)selectAnnotation:(id)arg1 animated:(BOOL)arg2 avoid:(struct CGRect)arg3;
- (void)showAnnotationsInMapRect:(CDStruct_02837cd9)arg1;
- (void)updateVisibleAnnotations;

@end

