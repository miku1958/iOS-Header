//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIView.h>

@class MKMultiPartAttributedString, NSDictionary, NSString, UIColor, UIFont, UITextView, _MKMultiPartLabelMetrics;

@interface MKMultiPartLabel : UIView
{
    UITextView *_textView;
    struct CGRect _previousBounds;
    NSDictionary *_cachedTextAttributes;
    NSDictionary *_lastAppliedNonColorAttributes;
    BOOL _highlighted;
    MKMultiPartAttributedString *_multiPartString;
    UIFont *_font;
    UIColor *_textColor;
    long long _textAlignment;
    UIColor *_highlightedTextColor;
    _MKMultiPartLabelMetrics *_data;
}

@property (strong, nonatomic) _MKMultiPartLabelMetrics *data; // @synthesize data=_data;
@property (strong, nonatomic) UIFont *font; // @synthesize font=_font;
@property (nonatomic, getter=isHighlighted) BOOL highlighted; // @synthesize highlighted=_highlighted;
@property (strong, nonatomic) UIColor *highlightedTextColor; // @synthesize highlightedTextColor=_highlightedTextColor;
@property (nonatomic) long long lineBreakMode;
@property (strong, nonatomic) MKMultiPartAttributedString *multiPartString; // @synthesize multiPartString=_multiPartString;
@property (nonatomic) unsigned long long numberOfLines;
@property (strong, nonatomic) NSString *text;
@property (nonatomic) long long textAlignment; // @synthesize textAlignment=_textAlignment;
@property (strong, nonatomic) UIColor *textColor; // @synthesize textColor=_textColor;
@property (nonatomic) struct UIEdgeInsets textInset;

+ (id)_formattedStringsCache;
- (void).cxx_destruct;
- (id)_addDefaultAttributesToAttributedString:(id)arg1;
- (id)_attributedAdjustedMultiPartStringFromString:(id)arg1;
- (void)_setupTextView;
- (id)_textAttributes;
- (void)_updateColorsForCurrentState;
- (void)_updateStrings;
- (void)_updateTextViewTextAndInvalidateLayout:(id)arg1;
- (void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (struct CGSize)intrinsicContentSize;
- (void)layoutSubviews;
- (void)setContentCompressionResistancePriority:(float)arg1 forAxis:(long long)arg2;
- (void)setContentHuggingPriority:(float)arg1 forAxis:(long long)arg2;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (id)viewForFirstBaselineLayout;
- (id)viewForLastBaselineLayout;

@end

