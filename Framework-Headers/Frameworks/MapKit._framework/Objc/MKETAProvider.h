//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <MapKit/MKLocationManagerObserver-Protocol.h>
#import <MapKit/MKQuickRouteConfigurableView-Protocol.h>
#import <MapKit/MKQuickRouteManagerDelegate-Protocol.h>
#import <MapKit/MKQuickRouteTransportTypeFinding-Protocol.h>

@class CLLocation, GEOAutomobileOptions, GEOTransitOptions, MKMapItem, NSHashTable, NSLock, NSNumber, NSString, NSTimer, _MKQuickRouteManager;
@protocol GEOTransitLineItem, MKETAProviderDelegate, _MKPlaceItem;

@interface MKETAProvider : NSObject <MKLocationManagerObserver, MKQuickRouteManagerDelegate, MKQuickRouteConfigurableView, MKQuickRouteTransportTypeFinding>
{
    _MKQuickRouteManager *_quickRouteManager;
    NSNumber *_lastTransportTypeFound;
    MKMapItem *_nearestStationItem;
    BOOL _distanceOrETAWasFound;
    NSString *_distanceTextItem;
    unsigned long long _etaTransportType;
    double _etaTravelTime;
    BOOL _active;
    BOOL _paused;
    BOOL _inactiveInBackground;
    NSTimer *_refreshTimer;
    CLLocation *_currentLocation;
    id<MKETAProviderDelegate> _delegate;
    GEOAutomobileOptions *_automobileOptions;
    GEOTransitOptions *_transitOptions;
    id<_MKPlaceItem> _placeItem;
    id<GEOTransitLineItem> _lineItem;
    NSHashTable *_observers;
    NSLock *_observersLock;
}

@property (strong, nonatomic) GEOAutomobileOptions *automobileOptions; // @synthesize automobileOptions=_automobileOptions;
@property (readonly, nonatomic) CLLocation *currentLocation; // @synthesize currentLocation=_currentLocation;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<MKETAProviderDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) NSString *distanceString;
@property (readonly, nonatomic) unsigned long long etaTransportType;
@property (readonly, nonatomic) double etaTravelTime;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) id<GEOTransitLineItem> lineItem; // @synthesize lineItem=_lineItem;
@property (strong, nonatomic) NSHashTable *observers; // @synthesize observers=_observers;
@property (strong, nonatomic) NSLock *observersLock; // @synthesize observersLock=_observersLock;
@property (readonly, nonatomic) id<_MKPlaceItem> placeItem; // @synthesize placeItem=_placeItem;
@property (readonly) Class superclass;
@property (strong, nonatomic) GEOTransitOptions *transitOptions; // @synthesize transitOptions=_transitOptions;
@property (readonly, nonatomic) NSNumber *transportTypePreferenceNumber;

- (void).cxx_destruct;
- (BOOL)_areDistanceAndETAInformationAvailable;
- (void)_cancelTimer;
- (void)_commonInit;
- (void)_configureETAForMapItem:(id)arg1;
- (void)_didEnterBackground;
- (void)_notifyETAAllObservers;
- (void)_notifyLocationAllObservers;
- (void)_refreshTimer;
- (BOOL)_shouldUpdateETAForMapView:(id)arg1;
- (void)_startTimer;
- (void)_updateETA;
- (void)_updateETADisplayWithTransportType:(unsigned long long)arg1 travelTime:(double)arg2 distance:(double)arg3;
- (void)_updateETAHandler:(id)arg1;
- (void)_willEnterForeground;
- (void)addObserver:(id)arg1;
- (void)cancel;
- (void)configureWithNearestStationMapItem:(id)arg1;
- (id)currentMapItem;
- (void)dealloc;
- (void)findDirectionsTypeForOriginCoordinate:(struct CLLocationCoordinate2D)arg1 destinationCoordinate:(struct CLLocationCoordinate2D)arg2 handler:(CDUnknownBlockType)arg3;
- (id)initWithLineItem:(id)arg1;
- (id)initWithPlaceItem:(id)arg1;
- (void)locationManager:(id)arg1 didUpdateVehicleHeading:(double)arg2 timestamp:(id)arg3;
- (void)locationManager:(id)arg1 didUpdateVehicleSpeed:(double)arg2 timestamp:(id)arg3;
- (void)locationManagerDidPauseLocationUpdates:(id)arg1;
- (void)locationManagerDidReset:(id)arg1;
- (void)locationManagerDidResumeLocationUpdates:(id)arg1;
- (void)locationManagerFailedToUpdateLocation:(id)arg1 withError:(id)arg2;
- (BOOL)locationManagerShouldPauseLocationUpdates:(id)arg1;
- (void)locationManagerUpdatedLocation:(id)arg1;
- (void)pause;
- (void)quickRouteManager:(id)arg1 didUpdateETA:(id)arg2 error:(id)arg3 animated:(BOOL)arg4;
- (BOOL)quickRouteShouldIncludeTransitWhenNotPreferredTransportType;
- (BOOL)quickRouteShouldOnlyUseAutomobile;
- (void)removeObserver:(id)arg1;
- (void)restart;
- (void)start;

@end

