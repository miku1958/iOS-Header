//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIView.h>

#import <MapKit/GEOConfigChangeListenerDelegate-Protocol.h>
#import <MapKit/GEOLogContextDelegate-Protocol.h>
#import <MapKit/GEOResourceManifestTileGroupObserver-Protocol.h>
#import <MapKit/MKAnnotationContainerViewDelegate-Protocol.h>
#import <MapKit/MKAnnotationManagerDelegate-Protocol.h>
#import <MapKit/MKAnnotationMarkerContainer-Protocol.h>
#import <MapKit/MKLocationManagerObserver-Protocol.h>
#import <MapKit/MKMapGestureControllerDelegate-Protocol.h>
#import <MapKit/MKOverlayContainerViewDelegate-Protocol.h>
#import <MapKit/MKRotationFilterDelegate-Protocol.h>
#import <MapKit/MKVariableDelayTapRecognizerDelegate-Protocol.h>
#import <MapKit/NSCoding-Protocol.h>
#import <MapKit/UIGestureRecognizerDelegate-Protocol.h>
#import <MapKit/VKMapViewCameraDelegate-Protocol.h>
#import <MapKit/VKMapViewDelegate-Protocol.h>

@class CLLocation, GEOMapRegion, MKAnnotationContainerView, MKAnnotationManager, MKAnnotationView, MKAppleLogoImageView, MKAttributionLabel, MKBasicMapView, MKCompassView, MKDebugLocationConsole, MKMapCamera, MKMapCameraBoundary, MKMapCameraZoomRange, MKMapGestureController, MKMapViewInternal, MKMapViewLabelMarkerState, MKOverlayContainerView, MKPointOfInterestFilter, MKRotationFilter, MKScaleView, MKUserLocation, NSArray, NSDictionary, NSLayoutConstraint, NSObject, NSString, NSTimer, UIGestureRecognizer, UIImageView, UILayoutGuide, UILongPressGestureRecognizer, UIPanGestureRecognizer, UIPinchGestureRecognizer, UIRotationGestureRecognizer, UITapGestureRecognizer, UITextView, UITraitCollection, VKLabelMarker, VKMapView, VKNavContext, VKRouteContext, VKVenueBuildingFeatureMarker, VKVenueFeatureMarker, _MKCustomFeatureStore, _MKEnvironmentLabel;
@protocol MKMapViewDelegate, MKMapViewDelegate><MKMapViewDelegatePrivate, OS_dispatch_group, OS_dispatch_queue;

@interface MKMapView : UIView <MKLocationManagerObserver, MKOverlayContainerViewDelegate, MKMapGestureControllerDelegate, UIGestureRecognizerDelegate, MKVariableDelayTapRecognizerDelegate, VKMapViewDelegate, VKMapViewCameraDelegate, MKAnnotationMarkerContainer, MKAnnotationManagerDelegate, GEOLogContextDelegate, MKRotationFilterDelegate, GEOConfigChangeListenerDelegate, GEOResourceManifestTileGroupObserver, MKAnnotationContainerViewDelegate, NSCoding>
{
    MKMapViewInternal *_internal;
    UIView *_contentView;
    MKAnnotationManager *_annotationManager;
    MKAnnotationContainerView *_annotationContainer;
    MKAttributionLabel *_attributionLabel;
    MKAppleLogoImageView *_appleLogoImageView;
    CDUnknownBlockType _annotationRectTest;
    CDUnknownBlockType _annotationCoordinateTest;
    UIImageView *_attributionBadgeView;
    NSTimer *_startEffectsTimer;
    id<MKMapViewDelegate><MKMapViewDelegatePrivate> _safeDelegate;
    id<MKMapViewDelegate><MKMapViewDelegatePrivate> _unsafeDelegate;
    unsigned long long _suspendedEffectsCount;
    unsigned long long _userInteractionDisabledCount;
    unsigned long long _mapType;
    MKDebugLocationConsole *_debugLocationConsole;
    CDUnknownBlockType _debugConsoleAdditionalInfoProvider;
    _MKEnvironmentLabel *_debugCurrentEnvironmentLabel;
    double _heading;
    UILongPressGestureRecognizer *_longPressGestureRecognizer;
    UITapGestureRecognizer *_selectingTapGestureRecognizer;
    UITapGestureRecognizer *_nonselectingTapGestureRecognizer;
    UIGestureRecognizer *_locationConsoleGesture;
    MKMapGestureController *_gestureController;
    MKOverlayContainerView *_overlayContainer;
    long long _userTrackingMode;
    MKBasicMapView *_basicMapView;
    VKMapView *_mapView;
    VKLabelMarker *_pressedLabelMarker;
    MKScaleView *_scaleView;
    MKCompassView *_compassView;
    BOOL _scaleVisible;
    BOOL _compassVisible;
    BOOL _showsScale;
    BOOL _showsCompass;
    BOOL _showsScaleDuringZoom;
    UIView *_scrollContainerView;
    CDUnknownBlockType _regionSetterWhenSized;
    MKUserLocation *_userLocation;
    VKRouteContext *_routeContext;
    VKNavContext *_navContext;
    MKMapCamera *_camera;
    CDUnknownBlockType _showCalloutAfterRegionChangeBlock;
    CDUnknownBlockType _selectAnnotationViewAfterRedrawBlock;
    UITextView *_vectorKitDebugView;
    UITextView *_geodHealthConsoleView;
    struct UIEdgeInsets _edgeInsets;
    UIPanGestureRecognizer *_vectorKitStyleDebugGestureRecognizer;
    double _verticalYawOverride;
    int _attributionCorner;
    long long _originalLoopRate;
    long long _preGesturingLoopRate;
    long long _annotationTrackingZoomStyle;
    id _topLayoutGuide;
    id _bottomLayoutGuide;
    NSObject<OS_dispatch_queue> *_lastEffectiveTraitCollectionIsolationQueue;
    UITraitCollection *_lastTraitCollection;
    MKRotationFilter *_rotationFilter;
    MKAnnotationView *_longPressedAnnotationView;
    struct {
        unsigned int changingRegion:1;
        unsigned int debugViewHeading:1;
        unsigned int draggingInterrupted:1;
        unsigned int didStartSmoothScrolling:1;
        unsigned int hasRenderedSomething:1;
        unsigned int hasSignaledWillStartRendering:1;
        unsigned int ignoreHeadingUpdates:1;
        unsigned int ignoreLocationUpdates:1;
        unsigned int isSuspended:1;
        unsigned int longPressing:1;
        unsigned int persistFixedUserLocation:1;
        unsigned int regionChangeIsAnimated:1;
        unsigned int rotationSupported:1;
        unsigned int scrollEnabled:1;
        unsigned int scrolling:1;
        unsigned int showHeadingIndicator:1;
        unsigned int alwaysShowHeadingIndicator:1;
        unsigned int showHeadingIndicatorForStepping:1;
        unsigned int useVehicleHeading:1;
        unsigned int showsUserLocation:1;
        unsigned int zoomEnabled:1;
        unsigned int zoomIsAnimated:1;
        unsigned int zooming:1;
        unsigned int isChangingViewSize:1;
        unsigned int isChangingEdgeInsets:1;
        unsigned int showsAttribution:1;
        unsigned int showsAppleLogo:1;
        unsigned int canShowAttributionBadge:1;
        unsigned int showsVenues:1;
        unsigned int rotating:1;
        unsigned int pitching:1;
        unsigned int rotateEnabled:1;
        unsigned int pitchEnabled:1;
        unsigned int showsBuildings:1;
        unsigned int showsPointsOfInterest:1;
        unsigned int showsTraffic:1;
        unsigned int hasPendingCameraChange:1;
        unsigned int currentRegionChangeShouldUpdateAnnotationsMidstream:1;
        unsigned int backdropViewQualityChangingDisabled:1;
        unsigned int canSelectPOIs:1;
        unsigned int canSelectAllLabels:1;
        unsigned int vectorKitConsoleEnabled:1;
        unsigned int edgeInsetsAreExplicit:1;
        unsigned int locationPropagationEnabled:1;
        unsigned int userInteractionPausesLocationUpdates:1;
        unsigned int locationPulseEnabled:1;
        unsigned int shouldSplitRouteLine:1;
        unsigned int shouldAnimatePositionWithRouteMatch:1;
        unsigned int clearUserLocationOnLocationReset:1;
        unsigned int showsCurrentEnvironmentName:1;
        unsigned int processingUserLocationUpdate:1;
        unsigned int changingMapType:1;
        unsigned int userRotatedAwayFromVerticalYaw:1;
        unsigned int goingToDefaultLocation:1;
        unsigned int isDraggingAnnotationView:1;
        unsigned int showsPressedLabelMarkerEffect:1;
        unsigned int shouldLoadFallbackTiles:1;
        unsigned int iconPixelAlignmentExplicitlyDisabled:1;
        unsigned int userDidRotateDuringCurrentRegionChange:1;
        unsigned int isTwoFingerLongPressing:1;
        unsigned int delegateShouldReceiveTouch:1;
        unsigned int delegateShouldDelayTapResponse:1;
        unsigned int delegateDidUpdateUserLocation:1;
        unsigned int delegateWillChangeRegion:1;
        unsigned int delegateDidChangeUserTrackingMode:1;
        unsigned int delegateDidChangeUserTrackingModeButton:1;
        unsigned int useTopBottomLayoutGuides:1;
        unsigned int useLayoutMargins:1;
        unsigned int geodHealthConsoleEnabled:1;
    } _flags;
    BOOL _hasSetLayoutMargins;
    UILayoutGuide *_edgeInsetsGuide;
    NSLayoutConstraint *_edgeInsetsTopConstraint;
    NSLayoutConstraint *_edgeInsetsLeftConstraint;
    NSLayoutConstraint *_edgeInsetsRightConstraint;
    NSLayoutConstraint *_edgeInsetsBottomConstraint;
    unsigned long long _suspendPropagatingEdgeInsetsCount;
    BOOL _automaticallySnapsToNorth;
    long long _cachedMuninAvailability;
    BOOL _forceLayoutOnBoundsChange;
    BOOL _hasPendingEdgeInsetsChange;
    NSObject<OS_dispatch_group> *_calloutShowAnimationGroup;
    _MKCustomFeatureStore *_annotationsCustomFeatureStore;
    double _lastYaw;
    BOOL _lastPossiblyVisible;
    unsigned long long _cachedVenueIDWithFocus;
    short _cachedDisplayedFloorOrdinalForVenueWithFocus;
    struct CLLocationCoordinate2D _oldCenterCoordinate;
    double _oldHeading;
    double _oldPitch;
    double _oldAltitude;
    struct UIEdgeInsets _attributionInsets;
    struct UIEdgeInsets _compassInsets;
    unsigned long long _compassInsetEdges;
    BOOL _explicitCompassInsetEdges;
    MKMapViewLabelMarkerState *_selectedLabelMarkerState;
    double _appleLogoImageWidth;
    BOOL _compassSuppressedForFloorPicker;
    BOOL _geodHealthConsoleEnabled;
    double _compassVisibleRotationThreshold;
    long long _interactionMode;
    unsigned long long _currentFlyoverAnimationID;
    MKMapCameraZoomRange *_cameraZoomRange;
    MKMapCameraBoundary *_cameraBoundary;
    MKPointOfInterestFilter *_pointOfInterestFilter;
    long long _compassViewSize;
    long long _compassViewStyle;
    CDUnknownBlockType _labelsDidLayoutCallback;
}

@property (nonatomic) BOOL _annotationViewsAreAddedImmediately;
@property (readonly, nonatomic) CDStruct_c3b9c2ee _centerMapPoint;
@property (readonly, nonatomic) long long _interfaceOrientation;
@property (weak, nonatomic, getter=_safeDelegate, setter=_setSafeDelegate:) id<MKMapViewDelegate> _safeDelegate;
@property (strong, nonatomic) NSTimer *_startEffectsTimer;
@property (readonly, nonatomic) double _zoomLevel;
@property (readonly, nonatomic) double _zoomScale;
@property (nonatomic, getter=_allowsPopoverWhenNotInWindow, setter=_setAllowsPopoverWhenNotInWindow:) BOOL allowsPopoverWhenNotInWindow;
@property (nonatomic, getter=_alwaysShowHeadingIndicator, setter=_setAlwaysShowHeadingIndicatorIfSupported:) BOOL alwaysShowHeadingIndicator;
@property (readonly, nonatomic, getter=_isAnimating) BOOL animating;
@property (nonatomic, getter=_annotationTrackingZoomStyle, setter=_setAnnotationTrackingZoomStyle:) long long annotationTrackingZoomStyle; // @synthesize annotationTrackingZoomStyle=_annotationTrackingZoomStyle;
@property (readonly, nonatomic, getter=_annotationViews) NSArray *annotationViews;
@property (readonly, nonatomic) struct CGRect annotationVisibleRect;
@property (readonly, nonatomic) NSArray *annotations;
@property (nonatomic, getter=_applicationState, setter=_setApplicationState:) int applicationState;
@property (readonly, nonatomic) struct CGRect attributionBadgeBounds;
@property (nonatomic) int attributionCorner; // @synthesize attributionCorner=_attributionCorner;
@property (nonatomic, getter=_attributionInsets, setter=_setAttributionInsets:) struct UIEdgeInsets attributionInsets; // @synthesize attributionInsets=_attributionInsets;
@property (nonatomic, getter=_automaticallySnapsToNorth, setter=_setAutomaticallySnapsToNorth:) BOOL automaticallySnapsToNorth;
@property (readonly, nonatomic, getter=_calloutShowAnimationGroup) NSObject<OS_dispatch_group> *calloutShowAnimationGroup; // @synthesize calloutShowAnimationGroup=_calloutShowAnimationGroup;
@property (copy, nonatomic) MKMapCamera *camera;
@property (copy, nonatomic) MKMapCameraBoundary *cameraBoundary; // @synthesize cameraBoundary=_cameraBoundary;
@property (copy, nonatomic) MKMapCameraZoomRange *cameraZoomRange; // @synthesize cameraZoomRange=_cameraZoomRange;
@property (readonly, nonatomic, getter=_canEnter3DMode) BOOL canEnter3DMode;
@property (readonly, nonatomic, getter=_canEnter3DModeFlyover) BOOL canEnter3DModeFlyover;
@property (readonly, nonatomic, getter=_canEnterNightMode) BOOL canEnterNightMode;
@property (readonly, nonatomic) BOOL canRotateForHeading;
@property (nonatomic, getter=_canSelectAllLabels, setter=_setCanSelectAllLabels:) BOOL canSelectAllLabels;
@property (nonatomic, getter=_canSelectPOIs, setter=_setCanSelectPOIs:) BOOL canSelectPOIs;
@property (nonatomic) BOOL canShowAttributionBadge;
@property (readonly, nonatomic, getter=_canShowControls) BOOL canShowControls;
@property (readonly, nonatomic, getter=_canShowFlyover) BOOL canShowFlyover;
@property (nonatomic) struct CLLocationCoordinate2D centerCoordinate;
@property (readonly, nonatomic, getter=_isChangingRegionForGesture) BOOL changingRegionForGesture;
@property (nonatomic, getter=isCompassEnabled) BOOL compassEnabled;
@property (nonatomic, getter=_compassInsetEdges, setter=_setCompassInsetEdges:) unsigned long long compassInsetEdges;
@property (nonatomic, getter=_compassInsets, setter=_setCompassInsets:) struct UIEdgeInsets compassInsets; // @synthesize compassInsets=_compassInsets;
@property (nonatomic, getter=_isCompassSuppressedForFloorPicker, setter=_setCompassSuppressedForFloorPicker:) BOOL compassSuppressedForFloorPicker; // @synthesize compassSuppressedForFloorPicker=_compassSuppressedForFloorPicker;
@property (readonly, nonatomic) long long compassViewSize; // @synthesize compassViewSize=_compassViewSize;
@property (readonly, nonatomic) long long compassViewStyle; // @synthesize compassViewStyle=_compassViewStyle;
@property (nonatomic, getter=_compassVisibleRotationThreshold, setter=_setCompassVisibleRotationThreshold:) double compassVisibleRotationThreshold; // @synthesize compassVisibleRotationThreshold=_compassVisibleRotationThreshold;
@property (readonly, nonatomic, getter=_currentEnvironmentLabelFrame) struct CGRect currentEnvironmentLabelFrame;
@property (nonatomic, getter=_currentFlyoverAnimationID, setter=_setCurrentFlyoverAnimationID:) unsigned long long currentFlyoverAnimationID; // @synthesize currentFlyoverAnimationID=_currentFlyoverAnimationID;
@property (readonly, nonatomic, getter=_debugConsole) MKDebugLocationConsole *debugConsole;
@property (copy, nonatomic, getter=_debugConsoleAdditionalInfoProvider, setter=_setDebugConsoleAdditionalInfoProvider:) CDUnknownBlockType debugConsoleAdditionalInfoProvider;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<MKMapViewDelegate> delegate; // @dynamic delegate;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic, getter=_detailedDescription) NSString *detailedDescription;
@property (readonly, nonatomic, getter=_detailedDescriptionDictionaryRepresentation) NSDictionary *detailedDescriptionDictionaryRepresentation;
@property (nonatomic, getter=_isDimmingOutsideVenueWithFocus) BOOL dimmingOutsideVenueWithFocus;
@property (nonatomic, getter=_displayedSearchResultsType, setter=_setDisplayedSearchResultsType:) long long displayedSearchResultsType;
@property (readonly, nonatomic, getter=_doubleTapGestureRecognizer) UITapGestureRecognizer *doubleTapGestureRecognizer;
@property (nonatomic, getter=_edgeInsets, setter=_setEdgeInsets:) struct UIEdgeInsets edgeInsets; // @synthesize edgeInsets=_edgeInsets;
@property (readonly, nonatomic, getter=_edgeInsetsLayoutGuide) UILayoutGuide *edgeInsetsLayoutGuide;
@property (readonly, nonatomic) BOOL effectsEnabled;
@property (nonatomic, getter=_isGeodHealthConsoleEnabled, setter=_setGeodHealthConsoleEnabled:) BOOL geodHealthConsoleEnabled; // @synthesize geodHealthConsoleEnabled=_geodHealthConsoleEnabled;
@property (readonly, nonatomic, getter=_isHandlingNonselectingTap) BOOL handlingNonselectingTap;
@property (readonly, nonatomic) BOOL hasRenderedSomething;
@property (readonly, nonatomic) BOOL hasUserLocation;
@property (readonly) unsigned long long hash;
@property (readonly) unsigned long long hash;
@property (readonly) unsigned long long hash;
@property (nonatomic) BOOL ignoreLocationUpdates;
@property (nonatomic, getter=_isInactive, setter=_setInactive:) BOOL inactive;
@property (nonatomic, getter=_interactionMode, setter=_setInteractionMode:) long long interactionMode; // @synthesize interactionMode=_interactionMode;
@property (nonatomic, getter=_labelEdgeInsets, setter=_setLabelEdgeInsets:) struct UIEdgeInsets labelEdgeInsets;
@property (copy, nonatomic, getter=_labelsDidLayoutCallback, setter=_setLabelsDidLayoutCallback:) CDUnknownBlockType labelsDidLayoutCallback; // @synthesize labelsDidLayoutCallback=_labelsDidLayoutCallback;
@property (nonatomic, getter=_loadMuninAvailability, setter=_setLoadMuninAvailability:) BOOL loadMuninAvailability;
@property (nonatomic, getter=_localizeLabels, setter=_setLocalizeLabels:) BOOL localizeLabels;
@property (nonatomic, getter=_isLocationPulseEnabled, setter=_setLocationPulseEnabled:) BOOL locationPulseEnabled;
@property (readonly, nonatomic, getter=_longPressGestureRecognizer) UILongPressGestureRecognizer *longPressGestureRecognizer;
@property (readonly, nonatomic, getter=_mapLayer) VKMapView *mapLayer;
@property (readonly, nonatomic) GEOMapRegion *mapRegion;
@property (nonatomic) unsigned long long mapType;
@property (readonly, nonatomic, getter=_maximumZoomLevel) double maximumZoomLevel;
@property (readonly, nonatomic, getter=_minimumZoomLevel) double minimumZoomLevel;
@property (readonly, nonatomic, getter=_muninAvailability) long long muninAvailability;
@property (readonly, nonatomic, getter=_nonselectingTapGestureRecognizer) UITapGestureRecognizer *nonselectingTapGestureRecognizer;
@property (readonly, nonatomic, getter=_oneHandedZoomGestureRecognizer) UIGestureRecognizer *oneHandedZoomGestureRecognizer;
@property (readonly, nonatomic) NSArray *overlays;
@property (nonatomic, getter=_panWithMomentum, setter=_setPanWithMomentum:) BOOL panWithMomentum;
@property (readonly, nonatomic, getter=_panningGestureRecognizer) UIPanGestureRecognizer *panningGestureRecognizer;
@property (readonly, nonatomic, getter=_pinchGestureRecognizer) UIPinchGestureRecognizer *pinchGestureRecognizer;
@property (nonatomic, getter=isPitchEnabled) BOOL pitchEnabled;
@property (readonly, nonatomic, getter=_isPitched) BOOL pitched;
@property (copy, nonatomic) MKPointOfInterestFilter *pointOfInterestFilter; // @synthesize pointOfInterestFilter=_pointOfInterestFilter;
@property (strong, nonatomic) CLLocation *predictedUserLocation;
@property (readonly, nonatomic) double presentationYaw;
@property (nonatomic) CDStruct_b7cb895d region;
@property (readonly, nonatomic, getter=isRegionChanging) BOOL regionChanging;
@property (nonatomic) BOOL rendersInBackground;
@property (nonatomic, getter=isRotateEnabled) BOOL rotateEnabled;
@property (readonly, nonatomic, getter=_rotationGestureRecognizer) UIRotationGestureRecognizer *rotationGestureRecognizer;
@property (nonatomic, getter=isScaleEnabled) BOOL scaleEnabled;
@property (nonatomic, getter=isScrollEnabled) BOOL scrollEnabled;
@property (copy, nonatomic) NSArray *selectedAnnotations;
@property (nonatomic, getter=_selectedFeatureID, setter=_setSelectedFeatureID:) unsigned long long selectedFeatureID;
@property (readonly, nonatomic, getter=_selectedLabelMarker) VKLabelMarker *selectedLabelMarker;
@property (readonly, nonatomic, getter=_selectingTapGestureRecognizer) UITapGestureRecognizer *selectingTapGestureRecognizer;
@property (nonatomic, getter=_shouldAnimatePositionWithRouteMatch, setter=_setShouldAnimatePositionWithRouteMatch:) BOOL shouldAnimatePositionWithRouteMatch;
@property (nonatomic, getter=_shouldLoadFallbackTiles, setter=_setShouldLoadFallbackTiles:) BOOL shouldLoadFallbackTiles;
@property (nonatomic, getter=_shouldSplitRouteLine, setter=_setShouldSplitRouteLine:) BOOL shouldSplitRouteLine;
@property (nonatomic, getter=_showHeadingIndicator, setter=_setShowHeadingIndicator:) BOOL showHeadingIndicator;
@property (nonatomic, getter=_showHeadingIndicatorForStepping, setter=_setShowHeadingIndicatorForStepping:) BOOL showHeadingIndicatorForStepping;
@property (readonly, nonatomic, getter=_isShowingAttributionBadge) BOOL showingAttributionBadge;
@property (readonly, nonatomic, getter=_isShowingFlyover) BOOL showingFlyover;
@property (nonatomic, getter=_showsAppleLogo, setter=_setShowsAppleLogo:) BOOL showsAppleLogo;
@property (nonatomic) BOOL showsAttribution;
@property (nonatomic) BOOL showsBuildings;
@property (nonatomic) BOOL showsCompass;
@property (nonatomic, getter=_showsCurrentEnvironmentName, setter=_setShowsCurrentEnvironmentName:) BOOL showsCurrentEnvironmentName;
@property (nonatomic, getter=_showsNightMode, setter=_setShowsNightMode:) BOOL showsNightMode;
@property (nonatomic) BOOL showsPointsOfInterest;
@property (nonatomic, getter=_showsPressedLabelMarkerEffect, setter=_setShowsPressedLabelMarkerEffect:) BOOL showsPressedLabelMarkerEffect;
@property (nonatomic) BOOL showsScale;
@property (nonatomic, getter=_showsScaleDuringZoom, setter=_setShowsScaleDuringZoom:) BOOL showsScaleDuringZoom;
@property (nonatomic) BOOL showsTraffic;
@property (nonatomic, getter=_showsTrafficIncidents, setter=_setShowsTrafficIncidents:) BOOL showsTrafficIncidents;
@property (nonatomic) BOOL showsUserLocation;
@property (nonatomic, getter=_showsVenues, setter=_setShowsVenues:) BOOL showsVenues;
@property (readonly) Class superclass;
@property (readonly) Class superclass;
@property (readonly) Class superclass;
@property (nonatomic, getter=isSuspended) BOOL suspended;
@property (readonly, nonatomic, getter=_transitLineMarkersInCurrentViewport) NSArray *transitLineMarkersInCurrentViewport;
@property (readonly, nonatomic, getter=_twoFingerTapGestureRecognizer) UITapGestureRecognizer *twoFingerTapGestureRecognizer;
@property (nonatomic, getter=_useBalloonCalloutsForLabels, setter=_setUseBalloonCalloutsForLabels:) BOOL useBalloonCalloutsForLabels;
@property (nonatomic, getter=_userInteractionPausesLocationUpdates, setter=_setUserInteractionPausesLocationUpdates:) BOOL userInteractionPausesLocationUpdates;
@property (readonly, nonatomic) MKUserLocation *userLocation;
@property (readonly, strong, nonatomic) MKAnnotationView *userLocationView;
@property (readonly, nonatomic, getter=isUserLocationVisible) BOOL userLocationVisible;
@property (nonatomic) long long userTrackingMode;
@property (nonatomic, getter=_userTrackingZoomStyle, setter=_setUserTrackingZoomStyle:) long long userTrackingZoomStyle;
@property (nonatomic, getter=_isVectorKitConsoleEnabled, setter=_setVectorKitConsoleEnabled:) BOOL vectorKitConsoleEnabled;
@property (readonly, nonatomic) VKVenueBuildingFeatureMarker *venueBuildingWithFocus;
@property (readonly, nonatomic) VKVenueFeatureMarker *venueWithFocus;
@property (nonatomic) CDStruct_02837cd9 visibleMapRect;
@property (readonly, nonatomic, getter=_visibleTileSets) NSArray *visibleTileSets;
@property (nonatomic, getter=isZoomEnabled) BOOL zoomEnabled;

+ (CDStruct_02837cd9)_mapRectThatFitsViewBounds:(struct CGRect)arg1 mapRect:(CDStruct_02837cd9)arg2 viewInsets:(struct UIEdgeInsets)arg3 edgePadding:(struct UIEdgeInsets)arg4 minZoomLevel:(double)arg5 maxZoomLevel:(double)arg6 snapToZoomLevel:(BOOL)arg7;
+ (CDStruct_b7cb895d)_regionThatFitsMapType:(unsigned long long)arg1 viewSize:(struct CGSize)arg2 viewInsets:(struct UIEdgeInsets)arg3 edgePadding:(struct UIEdgeInsets)arg4 region:(CDStruct_b7cb895d)arg5 minZoomLevel:(double)arg6 maxZoomLevel:(double)arg7 snapToZoomLevel:(BOOL)arg8;
+ (unsigned long long)minZoomLevelForMapType:(unsigned long long)arg1 viewSize:(struct CGSize)arg2;
+ (CDStruct_b7cb895d)regionThatFitsMapType:(unsigned long long)arg1 viewSize:(struct CGSize)arg2 edgeInsets:(struct UIEdgeInsets)arg3 region:(CDStruct_b7cb895d)arg4;
+ (CDStruct_b7cb895d)regionThatFitsMapType:(unsigned long long)arg1 viewSize:(struct CGSize)arg2 region:(CDStruct_b7cb895d)arg3;
+ (void)setRendersInBackgroundByDefault:(BOOL)arg1;
- (void).cxx_destruct;
- (void)_addAnnotation:(id)arg1 allowAnimation:(BOOL)arg2;
- (void)_addAnnotations:(id)arg1 allowAnimation:(BOOL)arg2;
- (void)_addAnnotationsCustomFeatureStoreIfNeeded;
- (void)_addCustomFeatureDataSource:(id)arg1;
- (void)_addDebugGesture;
- (void)_addPersistentVectorOverlay:(id)arg1;
- (void)_addSetRegionBlockWhenSized:(CDUnknownBlockType)arg1;
- (void)_addVectorOverlay:(id)arg1;
- (void)_addViewsForAnnotations:(id)arg1;
- (double)_animationDurationWhenSettingCameraBoundary:(id)arg1;
- (id)_annotationAtPoint:(struct CGPoint)arg1 avoidCurrent:(BOOL)arg2;
- (void)_annotationViewDragStateChanged:(id)arg1;
- (double)_boundedZoomLevel:(double)arg1;
- (id)_camera;
- (double)_cameraAltitudeClampedToZoomRange:(id)arg1;
- (BOOL)_canShowAppleLogo;
- (BOOL)_canZoomIn;
- (BOOL)_canZoomOut;
- (struct CGPoint)_centerPoint;
- (void)_clearFixedUserLocation;
- (void)_clearGestureRecognizers;
- (void)_clearGesturesAndAnimations;
- (void)_clearLayoutGuides;
- (void)_clearRouteContext;
- (BOOL)_clearUserLocationOnLocationReset;
- (id)_commonInitFromIB:(BOOL)arg1 gestureRecognizerHostView:(id)arg2 showsAttribution:(BOOL)arg3 showsAppleLogo:(BOOL)arg4;
- (void)_configureGestureRecognizers:(id)arg1;
- (struct CGPoint)_convertCoordinate:(struct CLLocationCoordinate2D)arg1 toPointToView:(id)arg2;
- (struct CGPoint)_convertMapPoint:(CDStruct_c3b9c2ee)arg1 toPointToView:(id)arg2;
- (struct CGRect)_convertMapRect:(CDStruct_02837cd9)arg1 toRectToView:(id)arg2;
- (struct CLLocationCoordinate2D)_convertPoint:(struct CGPoint)arg1 toCoordinateFromView:(id)arg2;
- (CDStruct_c3b9c2ee)_convertPoint:(struct CGPoint)arg1 toMapPointFromView:(id)arg2;
- (CDStruct_02837cd9)_convertRect:(struct CGRect)arg1 toMapRectFromView:(id)arg2;
- (CDStruct_b7cb895d)_convertRect:(struct CGRect)arg1 toRegionFromView:(id)arg2;
- (struct CGRect)_convertRegion:(CDStruct_b7cb895d)arg1 toRectToView:(id)arg2;
- (struct CGRect)_currentEnvironmentNameFrame;
- (double)_defaultAnimationDurationForMapRect:(CDStruct_02837cd9)arg1 edgePadding:(struct UIEdgeInsets)arg2;
- (void)_deselectLabelMarkerAnimated:(BOOL)arg1;
- (void)_deselectTransitLineMarker;
- (void)_didChangeRegionMidstream:(BOOL)arg1;
- (void)_didEndZoom;
- (void)_displayWorld;
- (double)_distanceFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 fromView:(id)arg3 withPrecision:(long long)arg4;
- (void)_dropDraggingAnnotationView:(BOOL)arg1;
- (double)_durationForCamera:(id)arg1;
- (void)_endZoomForExternalGesture;
- (void)_enter3DMode;
- (void)_enterARMode;
- (void)_enterARModeWithLocation:(id)arg1;
- (void)_exit3DMode;
- (void)_exitARMode;
- (void)_fixUserLocationFromPresentationValue;
- (id)_flattenedAnnotationsForAnnotationViews:(id)arg1 maxdisplayPriority:(float *)arg2;
- (void)_forceFrame;
- (void)_forceManifestUpdateIfNecessary;
- (double)_goToCenterCoordinate:(struct CLLocationCoordinate2D)arg1 zoomLevel:(double)arg2 animated:(BOOL)arg3;
- (void)_goToMapRegion:(id)arg1 duration:(double)arg2 animated:(BOOL)arg3;
- (void)_goToMapRegion:(id)arg1 duration:(double)arg2 animated:(BOOL)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_handleCompassTap:(id)arg1;
- (void)_handleLongPressGesture:(id)arg1;
- (void)_handleSelectGestureToDeselect:(id)arg1;
- (void)_handleSelectGestureToSelect:(id)arg1;
- (void)_handleSelectionAtPoint:(struct CGPoint)arg1;
- (BOOL)_hasSelectedTransitLines;
- (BOOL)_iconsShouldAlignToPixels;
- (id)_initWithFrame:(struct CGRect)arg1 gestureRecognizerHostView:(id)arg2 showsAttribution:(BOOL)arg3 showsAppleLogo:(BOOL)arg4;
- (void)_insertSubview:(id)arg1;
- (void)_insertSubviewBelowAnnotationContainerView:(id)arg1;
- (void)_invalidateAllOverlayRendererColors;
- (BOOL)_isHandlingUserEvent;
- (BOOL)_isLocationPropagationEnabled;
- (BOOL)_isUserLocationInView:(BOOL)arg1;
- (BOOL)_isUserLocationViewCentered:(double)arg1;
- (BOOL)_isUsingDevResourceStyleSheet;
- (BOOL)_isZooming;
- (void)_issueDatasetCheckinCall;
- (id)_labelMarkerAtPoint:(struct CGPoint)arg1;
- (id)_labelMarkerForCustomFeatureAnnotation:(id)arg1;
- (id)_labelMarkersInCurrentViewport;
- (id)_labelMarkersInCurrentViewportForType:(int)arg1;
- (void)_layoutAttribution;
- (void)_locationManager:(id)arg1 didUpdateVehicleHeading:(double)arg2 timestamp:(id)arg3;
- (CDStruct_80aa614a)_mapDisplayStyle;
- (double)_mapKitZoomLevelForVectorKitTileZoomLevel:(double)arg1;
- (CDStruct_02837cd9)_mapRectWithFraction:(double)arg1 ofVisible:(CDStruct_02837cd9)arg2;
- (id)_mapRegionWithCenterCoordinate:(struct CLLocationCoordinate2D)arg1 zoomScale:(double)arg2;
- (BOOL)_mapViewHasUpdatedCamera;
- (BOOL)_mustWaitUntilSized;
- (double)_panDurationFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;
- (void)_pauseFlyoverAnimation;
- (void)_pauseUserLocationUpdates;
- (void)_performFlyoverAnimation:(id)arg1;
- (void)_performFlyoverAnimation:(id)arg1 animateToStart:(BOOL)arg2;
- (void)_populateArchivedSubviews:(id)arg1;
- (void)_postDidUpdateYawNotification;
- (void)_prepareFlyoverAnimation:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_registerSceneLifecycleNotifications;
- (void)_removeCustomFeatureDataSource:(id)arg1;
- (void)_removePersistentVectorOverlay:(id)arg1;
- (void)_removeVectorOverlay:(id)arg1;
- (void)_replaceAnnotation:(id)arg1 withAnnotation:(id)arg2;
- (void)_resumeFlyoverAnimation;
- (void)_resumePropagatingEdgeInsets;
- (void)_resumeUserInteraction;
- (void)_resumeUserLocationUpdates:(BOOL)arg1;
- (BOOL)_roomForCompass;
- (BOOL)_rotationPossible;
- (long long)_roundedZoomLevel;
- (id)_routeInfoForRoute:(id)arg1;
- (void)_sceneWillEnterForeground:(id)arg1;
- (void)_selectAnnotation:(id)arg1 animated:(BOOL)arg2;
- (void)_selectLabelMarker:(id)arg1 animated:(BOOL)arg2;
- (void)_selectTransitLineMarker:(id)arg1;
- (void)_selectTransitLineMarkerWithIdentifier:(id)arg1;
- (void)_selectUserLocationTypeWithDeltaZoomLevel:(double)arg1;
- (id)_selectedTransitLineIDs;
- (void)_setAlternateRouteContextAnnotationETAComparison:(unsigned char)arg1 forRoute:(id)arg2;
- (void)_setCamera:(id)arg1;
- (void)_setCamera:(id)arg1 animated:(BOOL)arg2;
- (void)_setCamera:(id)arg1 animated:(BOOL)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_setCamera:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_setCamera:(id)arg1 duration:(double)arg2 springMass:(float)arg3 springStiffness:(float)arg4 springDamping:(float)arg5 springVelocity:(float)arg6 completionHandler:(CDUnknownBlockType)arg7;
- (void)_setCamera:(id)arg1 duration:(double)arg2 timing:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_setCamera:(id)arg1 duration:(double)arg2 timingCurve:(long long)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_setCamera:(id)arg1 springMass:(float)arg2 springStiffness:(float)arg3 springDamping:(float)arg4 springVelocity:(float)arg5;
- (void)_setCameraBoundary:(id)arg1 animated:(BOOL)arg2;
- (void)_setCameraZoomRange:(id)arg1 animated:(BOOL)arg2;
- (void)_setClearUserLocationOnLocationReset:(BOOL)arg1;
- (void)_setCompassViewSize:(long long)arg1 style:(long long)arg2;
- (void)_setCompassVisible:(BOOL)arg1 animated:(BOOL)arg2 force:(BOOL)arg3;
- (void)_setEdgeInsets:(struct UIEdgeInsets)arg1 explicit:(BOOL)arg2;
- (void)_setLocationPropagationEnabled:(BOOL)arg1;
- (void)_setMapDisplayStyle:(CDStruct_80aa614a)arg1;
- (void)_setMapType:(unsigned long long)arg1 animated:(BOOL)arg2;
- (void)_setMapType:(unsigned long long)arg1 onInit:(BOOL)arg2 animated:(BOOL)arg3;
- (void)_setMapType:(unsigned long long)arg1 onInit:(BOOL)arg2 animated:(BOOL)arg3 forceSetting:(BOOL)arg4;
- (void)_setRouteContextAnnotationFocus:(BOOL)arg1 forRoute:(id)arg2;
- (void)_setRouteContextAnnotationText:(id)arg1 tollCurrency:(unsigned char)arg2 forRoute:(id)arg3;
- (void)_setRouteContextForRoute:(id)arg1;
- (void)_setRouteContextForRoutes:(id)arg1 selectedRouteIndex:(unsigned long long)arg2;
- (void)_setRouteContextInspectedLegIndex:(unsigned long long)arg1 inspectedStepIndex:(unsigned long long)arg2;
- (void)_setTracePlaybackSpeedMultiplier:(double)arg1;
- (void)_setUseVehicleHeading:(BOOL)arg1;
- (void)_setUserTrackingMode:(long long)arg1 animated:(BOOL)arg2 fromTrackingButton:(BOOL)arg3;
- (void)_setVisibleMapRect:(CDStruct_02837cd9)arg1 animated:(BOOL)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_setVisibleMapRect:(CDStruct_02837cd9)arg1 duration:(double)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_setZoomScale:(double)arg1 centerCoordinate:(struct CLLocationCoordinate2D)arg2 duration:(double)arg3 animated:(BOOL)arg4;
- (void)_setZoomScale:(double)arg1 centerMapPoint:(CDStruct_c3b9c2ee)arg2 duration:(double)arg3 animated:(BOOL)arg4;
- (BOOL)_shouldAnimatePropertyWithKey:(id)arg1;
- (BOOL)_shouldDisplayScaleForCurrentRegion;
- (BOOL)_shouldSupportAlwaysShowHeadingIndicator;
- (void)_showOrHideScaleIfNecessary:(BOOL)arg1;
- (void)_sizeDidChangeWithCenterCoordinate:(struct CLLocationCoordinate2D)arg1;
- (void)_sizeWillChange;
- (void)_snapToNorthIfNecessary;
- (void)_snapToTrueNorthAndCallBack:(BOOL)arg1;
- (void)_startEffects;
- (void)_startFlyoverTourAnimation:(unsigned long long)arg1 duration:(double)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_startPanningAtPoint:(struct CGPoint)arg1;
- (void)_startTrackingHeading;
- (void)_startZoomForExternalGesture;
- (void)_stopEffects;
- (void)_stopFlyoverAnimation;
- (void)_stopPanningAtPoint:(struct CGPoint)arg1;
- (void)_stopTrackingHeading;
- (BOOL)_supportsVKMapType:(int)arg1;
- (void)_suspendPropagatingEdgeInsets;
- (void)_suspendUserInteraction;
- (id)_transitLineMarkerForIdentifier:(id)arg1;
- (id)_transitLineMarkersForSelectionAtPoint:(struct CGPoint)arg1;
- (void)_unregisterSceneLifecycleNotifications;
- (void)_updateAppearanceIfNeeded;
- (void)_updateAppleLogoVisibility;
- (void)_updateAttribution;
- (void)_updateCameraState;
- (void)_updateCompassPosition;
- (void)_updateCompassVisibility;
- (void)_updateContentBounds;
- (void)_updateCourseForMapViewHeading:(id)arg1;
- (void)_updateEffects;
- (void)_updateEnvironmentLabelText;
- (void)_updateFallbackTileLoading;
- (void)_updateFromCamera:(id)arg1;
- (void)_updateFromCamera:(id)arg1 duration:(double)arg2 timing:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_updateGeodHealthConsoleFrameWithEdgeInsets;
- (void)_updateHeading:(id)arg1 animated:(BOOL)arg2;
- (void)_updateHeadingIndicatorAnimated:(BOOL)arg1;
- (void)_updateHeadingOrientation;
- (void)_updateIconsShouldAlignToPixels;
- (void)_updateInsets;
- (void)_updateInsetsWithForce:(BOOL)arg1;
- (void)_updateLocationConsole;
- (void)_updatePanWithTranslation:(struct CGPoint)arg1;
- (void)_updateRotationAttributes;
- (BOOL)_updateRotationSupported;
- (void)_updateScale;
- (void)_updateScalePosition;
- (void)_updateScrollContainerView:(BOOL)arg1 forReason:(long long)arg2;
- (void)_updateScrollingAndGestures;
- (void)_updateShouldDisplayEffects;
- (void)_updateShowHeadingIndicator;
- (void)_updateUserLocation:(id)arg1 routeMatch:(id)arg2;
- (void)_updateUserLocationViewWithLocation:(id)arg1 hadUserLocation:(BOOL)arg2;
- (void)_updateVectorKitConsoleFrameWithEdgeInsets;
- (BOOL)_useVehicleHeading;
- (BOOL)_userLocationWithinVisibleMapBounds;
- (double)_vectorKitTileZoomLevelForMapKitZoomLevel:(double)arg1;
- (int)_viewIndexForSubview:(id)arg1;
- (CDUnknownBlockType)_vkTimingFunctionForUIViewAnimationCurve:(long long)arg1;
- (void)_willChangeRegionAnimated:(BOOL)arg1;
- (void)_willChangeStatusBarFrame:(id)arg1;
- (void)_willStartZoom:(BOOL)arg1;
- (void)_withEffectiveTraitCollection:(CDUnknownBlockType)arg1;
- (void)_zoomIn;
- (void)_zoomInWithCompletionHandler:(CDUnknownBlockType)arg1;
- (double)_zoomLevelForMapRect:(CDStruct_02837cd9)arg1 includeAccessoryPadding:(BOOL)arg2;
- (double)_zoomLevelForRegion:(CDStruct_b7cb895d)arg1 includeAccessoryPadding:(BOOL)arg2;
- (void)_zoomOut;
- (void)_zoomOutWithCompletionHandler:(CDUnknownBlockType)arg1;
- (CDStruct_c0a8b48f)_zoomRegionForMapRect:(CDStruct_02837cd9)arg1 edgePadding:(struct UIEdgeInsets)arg2 maxZoomLevel:(long long)arg3 minZoomLevel:(long long)arg4;
- (double)_zoomScaleForMapRegion:(id)arg1;
- (void)_zoomWithAmount:(double)arg1;
- (void)_zoomWithAmount:(double)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)addAnnotation:(id)arg1;
- (void)addAnnotationRepresentation:(id)arg1 allowAnimation:(BOOL)arg2;
- (void)addAnnotations:(id)arg1;
- (void)addOverlay:(id)arg1;
- (void)addOverlay:(id)arg1 level:(long long)arg2;
- (void)addOverlays:(id)arg1;
- (void)addOverlays:(id)arg1 level:(long long)arg2;
- (void)annotationContainer:(id)arg1 annotationView:(id)arg2 calloutAccessoryControlTapped:(id)arg3;
- (void)annotationContainer:(id)arg1 calloutPrimaryActionTriggeredForAnnotationView:(id)arg2;
- (BOOL)annotationContainer:(id)arg1 isAnnotationView:(id)arg2 validForDisplayAtPoint:(struct CGPoint)arg3;
- (double)annotationContainer:(id)arg1 pinDropDistanceForCoordinate:(struct CLLocationCoordinate2D)arg2 maxDistance:(double *)arg3;
- (id)annotationContainer:(id)arg1 requestAddingClusterForAnnotationViews:(id)arg2;
- (void)annotationContainer:(id)arg1 requestRemovingClusterAnnotationView:(id)arg2 updateVisible:(BOOL)arg3;
- (void)annotationContainer:(id)arg1 scrollToRevealCalloutWithOffset:(struct CGPoint)arg2 annotationCoordinate:(struct CLLocationCoordinate2D)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)annotationContainerDidAnimateBubble:(id)arg1;
- (void)annotationContainerDidDropPins:(id)arg1;
- (void)annotationContainerDidFinishMapsTransitionExpanding:(id)arg1;
- (BOOL)annotationContainerIsRotated:(id)arg1;
- (BOOL)annotationContainerShouldAlignToPixels:(id)arg1;
- (struct CGRect)annotationContainerVisibleRect:(id)arg1;
- (void)annotationContainerWillAnimateBubble:(id)arg1;
- (void)annotationContainerWillDropPins:(id)arg1;
- (double)annotationContainerZoomScale:(id)arg1;
- (CDUnknownBlockType)annotationCoordinateTest;
- (BOOL)annotationManager:(id)arg1 canSelectAnnotationRepresentation:(id)arg2;
- (void)annotationManager:(id)arg1 didAddAnnotationRepresentations:(id)arg2;
- (void)annotationManager:(id)arg1 didDeselectAnnotationRepresentation:(id)arg2;
- (void)annotationManager:(id)arg1 didRemoveAnnotationRepresentations:(id)arg2;
- (void)annotationManager:(id)arg1 didSelectAnnotationRepresentation:(id)arg2;
- (id)annotationManager:(id)arg1 representationForAnnotation:(id)arg2;
- (BOOL)annotationManager:(id)arg1 shouldAnimateDeselectionOfAnnotation:(id)arg2 forSelectionOfAnnotation:(id)arg3;
- (void)annotationManager:(id)arg1 willDeselectAnnotationRepresentation:(id)arg2;
- (void)annotationManagerDidChangeVisibleAnnotationRepresentations:(id)arg1;
- (CDUnknownBlockType)annotationRectTest;
- (id)annotationsInMapRect:(CDStruct_02837cd9)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)applicationDidFinishSuspensionSnapshot:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (struct CGRect)attributionFrame;
- (id)beginStoppingEffects;
- (void)calloutDidAppearForAnnotationView:(id)arg1 inContainer:(id)arg2;
- (BOOL)calloutViewContainsPoint:(struct CGPoint)arg1;
- (id)compassView;
- (id)compassVisibilityAnimation;
- (BOOL)compassVisible;
- (struct CGPoint)convertCoordinate:(struct CLLocationCoordinate2D)arg1 toPointToView:(id)arg2;
- (struct CGRect)convertMapRect:(CDStruct_02837cd9)arg1 toRectToView:(id)arg2;
- (struct CLLocationCoordinate2D)convertPoint:(struct CGPoint)arg1 toCoordinateFromView:(id)arg2;
- (CDStruct_02837cd9)convertRect:(struct CGRect)arg1 toMapRectFromView:(id)arg2;
- (CDStruct_b7cb895d)convertRect:(struct CGRect)arg1 toRegionFromView:(id)arg2;
- (struct CGRect)convertRegion:(CDStruct_b7cb895d)arg1 toRectToView:(id)arg2;
- (id)createDrawableForOverlay:(id)arg1;
- (int)currentMapViewTargetForAnalytics;
- (int)currentUITargetForAnalytics;
- (void)dealloc;
- (short)defaultFloorForBuildingsInVenue:(id)arg1;
- (id)dequeueReusableAnnotationViewWithIdentifier:(id)arg1;
- (id)dequeueReusableAnnotationViewWithIdentifier:(id)arg1 forAnnotation:(id)arg2;
- (void)deselectAnnotation:(id)arg1 animated:(BOOL)arg2;
- (void)deselectAnnotationRepresentation:(id)arg1 animated:(BOOL)arg2;
- (void)deselectVenuePoiFeatureId;
- (void)deviceOrientationDidChange:(id)arg1;
- (void)didMoveToSuperview;
- (void)didMoveToWindow;
- (BOOL)displayedFloorIsDefaultForBuildingsInVenue:(id)arg1;
- (short)displayedFloorOrdinalForBuildingsInVenue:(id)arg1;
- (void)drawRect:(struct CGRect)arg1 forViewPrintFormatter:(id)arg2;
- (void)enableMapRotationIfNeeded;
- (void)encodeWithCoder:(id)arg1;
- (void)exchangeOverlay:(id)arg1 withOverlay:(id)arg2;
- (void)exchangeOverlayAtIndex:(unsigned long long)arg1 withOverlayAtIndex:(unsigned long long)arg2;
- (struct CGPoint)gestureController:(id)arg1 focusPointForPoint:(struct CGPoint)arg2 gestureKind:(long long)arg3;
- (BOOL)gestureController:(id)arg1 shouldReceiveTouch:(id)arg2;
- (double)gestureController:(id)arg1 shouldWaitForNextTapForDuration:(double)arg2 afterTouch:(id)arg3;
- (void)gestureControllerDidStopPanning:(id)arg1 willDecelerate:(BOOL)arg2;
- (void)gestureControllerDidStopPanningDecelerating:(id)arg1;
- (void)gestureControllerDidStopRotating:(id)arg1 willDecelerate:(BOOL)arg2;
- (void)gestureControllerDidStopRotatingDecelerating:(id)arg1;
- (void)gestureControllerDidStopTilting:(id)arg1 willDecelerate:(BOOL)arg2 tiltDirection:(long long)arg3;
- (void)gestureControllerDidStopTiltingDecelerating:(id)arg1;
- (void)gestureControllerDidStopTwoFingerLongPress:(id)arg1;
- (void)gestureControllerDidStopUserInteraction:(id)arg1;
- (void)gestureControllerDidStopZooming:(id)arg1 direction:(long long)arg2 type:(long long)arg3 willDecelerate:(BOOL)arg4;
- (void)gestureControllerDidStopZooming:(id)arg1 direction:(long long)arg2 willDecelerate:(BOOL)arg3;
- (void)gestureControllerDidStopZoomingDecelerating:(id)arg1 direction:(long long)arg2;
- (void)gestureControllerDidStopZoomingDecelerating:(id)arg1 direction:(long long)arg2 type:(long long)arg3;
- (struct CGRect)gestureControllerSignificantViewFrame:(id)arg1;
- (void)gestureControllerWillStartPanning:(id)arg1;
- (void)gestureControllerWillStartRotating:(id)arg1;
- (void)gestureControllerWillStartTilting:(id)arg1;
- (void)gestureControllerWillStartTwoFingerLongPress:(id)arg1;
- (void)gestureControllerWillStartUserInteraction:(id)arg1;
- (void)gestureControllerWillStartZooming:(id)arg1 animated:(BOOL)arg2;
- (BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (BOOL)gestureRecognizerShouldBegin:(id)arg1;
- (void)goToDefaultLocation;
- (id)initFromIBWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)insertOverlay:(id)arg1 aboveOverlay:(id)arg2;
- (void)insertOverlay:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)insertOverlay:(id)arg1 atIndex:(unsigned long long)arg2 level:(long long)arg3;
- (void)insertOverlay:(id)arg1 belowOverlay:(id)arg2;
- (BOOL)isCurrentlyRotated;
- (BOOL)isLocationConsoleEnabled;
- (BOOL)isShowingNoDataPlaceholders;
- (void)layoutMarginsDidChange;
- (void)layoutSubviews;
- (void)locationManager:(id)arg1 didUpdateVehicleHeading:(double)arg2 timestamp:(id)arg3;
- (void)locationManager:(id)arg1 didUpdateVehicleSpeed:(double)arg2 timestamp:(id)arg3;
- (void)locationManagerDidPauseLocationUpdates:(id)arg1;
- (void)locationManagerDidReset:(id)arg1;
- (void)locationManagerDidResumeLocationUpdates:(id)arg1;
- (void)locationManagerFailedToUpdateHeading:(id)arg1 withError:(id)arg2;
- (void)locationManagerFailedToUpdateLocation:(id)arg1 withError:(id)arg2;
- (BOOL)locationManagerShouldPauseLocationUpdates:(id)arg1;
- (void)locationManagerUpdatedHeading:(id)arg1;
- (void)locationManagerUpdatedLocation:(id)arg1;
- (id)mapAttributionWithStringAttributes:(id)arg1;
- (id)mapAttributionWithStringAttributes:(id)arg1 allowMultiLine:(BOOL)arg2;
- (id)mapAttributionWithStringAttributes:(id)arg1 underlineText:(BOOL)arg2;
- (void)mapLayer:(id)arg1 arSessionWasInterrupted:(unsigned long long)arg2;
- (void)mapLayer:(id)arg1 arTrackingStateDidChange:(unsigned long long)arg2 reason:(unsigned long long)arg3;
- (void)mapLayer:(id)arg1 canShowFlyoverDidChange:(BOOL)arg2;
- (void)mapLayer:(id)arg1 didEncounterARError:(id)arg2;
- (void)mapLayer:(id)arg1 didStopFlyoverTourCompleted:(BOOL)arg2;
- (void)mapLayer:(id)arg1 didUpdateVerticalYawTo:(double)arg2;
- (void)mapLayer:(id)arg1 flyoverModeDidChange:(int)arg2;
- (void)mapLayer:(id)arg1 flyoverModeWillChange:(int)arg2;
- (void)mapLayer:(id)arg1 flyoverTourLabelDidChange:(id)arg2;
- (void)mapLayer:(id)arg1 selectedLabelMarkerDidChangeState:(id)arg2;
- (void)mapLayer:(id)arg1 selectedLabelMarkerWillDisappear:(id)arg2;
- (void)mapLayer:(id)arg1 showingFlyoverDidChange:(BOOL)arg2;
- (void)mapLayer:(id)arg1 venueWithFocusDidChange:(id)arg2 building:(id)arg3;
- (void)mapLayer:(id)arg1 willTransitionTo:(long long)arg2;
- (void)mapLayerARSessionInterruptionEnded:(id)arg1;
- (void)mapLayerCanEnter3DModeDidChange:(BOOL)arg1;
- (void)mapLayerCanZoomInDidChange:(BOOL)arg1;
- (void)mapLayerCanZoomOutDidChange:(BOOL)arg1;
- (void)mapLayerDidBecomePitched:(BOOL)arg1;
- (void)mapLayerDidChangeRegionAnimated:(BOOL)arg1;
- (void)mapLayerDidChangeSceneState:(id)arg1 withState:(unsigned long long)arg2;
- (void)mapLayerDidChangeVisibleRegion;
- (void)mapLayerDidDraw:(id)arg1;
- (void)mapLayerDidEnterAR:(id)arg1;
- (void)mapLayerDidExitAR:(id)arg1;
- (void)mapLayerDidFailLoadingTiles:(id)arg1 withError:(id)arg2;
- (void)mapLayerDidFinishInitialTrackingAnimation;
- (void)mapLayerDidFinishLoadingTiles:(id)arg1;
- (void)mapLayerDidStartLoadingTiles:(id)arg1;
- (void)mapLayerLabelsDidLayout:(id)arg1;
- (void)mapLayerMuninAvailabilityDidChange:(long long)arg1;
- (void)mapLayerNavigationCameraDidLeaveDefaultZoom;
- (void)mapLayerNavigationCameraDidReturnToDefaultZoom;
- (void)mapLayerNavigationCameraHasStartedPanning;
- (void)mapLayerNavigationCameraHasStoppedPanning;
- (id)mapLayerPresentationForAnnotation:(id)arg1;
- (void)mapLayerWillChangeRegionAnimated:(BOOL)arg1;
- (void)mapLayerWillEnterAR:(id)arg1;
- (void)mapLayerWillStartFlyoverTour:(id)arg1;
- (CDStruct_02837cd9)mapRectThatFits:(CDStruct_02837cd9)arg1;
- (CDStruct_02837cd9)mapRectThatFits:(CDStruct_02837cd9)arg1 edgePadding:(struct UIEdgeInsets)arg2;
- (void)moveAnnotationRepresentation:(id)arg1 fromCoordinate:(struct CLLocationCoordinate2D)arg2 animated:(BOOL)arg3 duration:(double)arg4;
- (void)navigationCameraReturnToPuck;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)overlayContainer;
- (void)overlayContainerAddedDrawables:(id)arg1;
- (id)overlaysInLevel:(long long)arg1;
- (void)pauseUserHeadingUpdates;
- (void)pauseUserLocationUpdates;
- (BOOL)postsMapViewInitialRenderingNotification;
- (CDStruct_b7cb895d)regionThatFits:(CDStruct_b7cb895d)arg1;
- (void)registerClass:(Class)arg1 forAnnotationViewWithReuseIdentifier:(id)arg2;
- (void)removeAnnotation:(id)arg1;
- (void)removeAnnotationRepresentation:(id)arg1;
- (void)removeAnnotations:(id)arg1;
- (void)removeOverlay:(id)arg1;
- (void)removeOverlays:(id)arg1;
- (void)removeUserLocation;
- (id)rendererForOverlay:(id)arg1;
- (void)resetDisplayedFloorOrdinalForAllVenues;
- (void)resourceManifestManagerDidChangeActiveTileGroup:(id)arg1;
- (void)resourceManifestManagerWillChangeActiveTileGroup:(id)arg1;
- (void)resumeUserHeadingUpdates;
- (void)resumeUserLocationUpdates;
- (void)rotationFilter:(id)arg1 didChangeSnapping:(BOOL)arg2;
- (void)safeAreaInsetsDidChange;
- (id)scaleView;
- (void)selectAnnotation:(id)arg1 animated:(BOOL)arg2;
- (void)selectAnnotationRepresentation:(id)arg1 animated:(BOOL)arg2;
- (void)setBackdropViewQualityChangingDisabled:(BOOL)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)setCamera:(id)arg1 animated:(BOOL)arg2;
- (void)setCamera:(id)arg1 animated:(BOOL)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)setCamera:(id)arg1 duration:(double)arg2 springMass:(float)arg3 springStiffness:(float)arg4 springDamping:(float)arg5 springVelocity:(float)arg6;
- (void)setCamera:(id)arg1 duration:(double)arg2 springMass:(float)arg3 springStiffness:(float)arg4 springDamping:(float)arg5 springVelocity:(float)arg6 completionHandler:(CDUnknownBlockType)arg7;
- (void)setCamera:(id)arg1 springMass:(float)arg2 springStiffness:(float)arg3 springDamping:(float)arg4 springVelocity:(float)arg5;
- (void)setCameraBoundary:(id)arg1 animated:(BOOL)arg2;
- (void)setCameraZoomRange:(id)arg1 animated:(BOOL)arg2;
- (void)setCenter:(struct CGPoint)arg1;
- (void)setCenterCoordinate:(struct CLLocationCoordinate2D)arg1 animated:(BOOL)arg2;
- (void)setCenterCoordinate:(struct CLLocationCoordinate2D)arg1 zoomLevel:(double)arg2 animated:(BOOL)arg3;
- (void)setDisplayedFloorOrdinal:(short)arg1 forBuildingsInVenue:(id)arg2;
- (void)setFlyoverMode:(int)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)setHidden:(BOOL)arg1;
- (void)setLayoutMargins:(struct UIEdgeInsets)arg1;
- (void)setLocationConsoleEnabled:(BOOL)arg1;
- (void)setRegion:(CDStruct_b7cb895d)arg1 animated:(BOOL)arg2;
- (void)setSelectedVenuePoiFeatureId:(unsigned long long)arg1;
- (void)setUserTrackingMode:(long long)arg1 animated:(BOOL)arg2;
- (void)setVehicleState:(CDStruct_b31ca263)arg1;
- (void)setVisibleMapRect:(CDStruct_02837cd9)arg1 animated:(BOOL)arg2;
- (void)setVisibleMapRect:(CDStruct_02837cd9)arg1 edgePadding:(struct UIEdgeInsets)arg2 animated:(BOOL)arg3;
- (BOOL)shouldHideOffscreenSelectedAnnotation;
- (void)showAnnotations:(id)arg1 animated:(BOOL)arg2;
- (void)snapToNorth:(id)arg1;
- (void)startLinearZoomIn:(BOOL)arg1;
- (void)startUpdatingUserLocation;
- (void)stopUpdatingUserLocation;
- (void)stopZoomingWithInertia;
- (void)toggleLocationConsole:(id)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (void)updateLayoutGuides;
- (id)urlForMapAttribution;
- (void)valueChangedForGEOConfigKey:(CDStruct_35640fce)arg1;
- (id)venueWithID:(unsigned long long)arg1;
- (id)viewForAnnotation:(id)arg1;
- (id)viewForOverlay:(id)arg1;
- (struct CGRect)visibleCenteringRectInView:(id)arg1;
- (struct CGRect)visibleRectInView:(id)arg1;
- (id)vk_mapLayer;
- (void)willMoveToWindow:(id)arg1;
- (double)zoomToFocusVenue:(id)arg1;
- (double)zoomToFocusVenueBuilding:(id)arg1;

@end

