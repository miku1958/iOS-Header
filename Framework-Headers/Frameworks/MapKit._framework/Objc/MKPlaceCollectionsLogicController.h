//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <MapKit/CollectionsAnalyticsProvider-Protocol.h>
#import <MapKit/MKCollectionDataProvider-Protocol.h>
#import <MapKit/MKCollectionUpdater-Protocol.h>
#import <MapKit/MKCollectionsFetcher-Protocol.h>
#import <MapKit/MKPlaceBatchGuideConsumer-Protocol.h>

@class MKPlaceBatchController, NSArray, NSDiffableDataSourceSnapshot, NSRelativeDateTimeFormatter, NSString, UICollectionView, UICollectionViewDiffableDataSource, UIFont;
@protocol MKCuratedCollectionsSyncCoordinator;

@interface MKPlaceCollectionsLogicController : NSObject <MKCollectionsFetcher, MKCollectionDataProvider, MKCollectionUpdater, CollectionsAnalyticsProvider, MKPlaceBatchGuideConsumer>
{
    long long _context;
    UIFont *_titleFont;
    NSRelativeDateTimeFormatter *_collectionDateFormatter;
    UICollectionView *_collectionView;
    NSArray *_collections;
    NSArray *_geoCollections;
    UICollectionViewDiffableDataSource *_dataSource;
    NSDiffableDataSourceSnapshot *_snapshot;
    id<MKCuratedCollectionsSyncCoordinator> _syncCoordinator;
    MKPlaceBatchController *_batchController;
}

@property (strong, nonatomic) MKPlaceBatchController *batchController; // @synthesize batchController=_batchController;
@property (weak, nonatomic) UICollectionView *collectionView; // @synthesize collectionView=_collectionView;
@property (strong, nonatomic) NSArray *collections; // @synthesize collections=_collections;
@property (strong, nonatomic) UICollectionViewDiffableDataSource *dataSource; // @synthesize dataSource=_dataSource;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (strong, nonatomic) NSArray *geoCollections; // @synthesize geoCollections=_geoCollections;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) NSDiffableDataSourceSnapshot *snapshot; // @synthesize snapshot=_snapshot;
@property (readonly) Class superclass;
@property (strong, nonatomic) id<MKCuratedCollectionsSyncCoordinator> syncCoordinator; // @synthesize syncCoordinator=_syncCoordinator;

- (void).cxx_destruct;
- (void)_dispatchOnManThread:(CDUnknownBlockType)arg1;
- (void)appendBatchOfCollections:(id)arg1;
- (void)applySnapShot:(id)arg1 animated:(BOOL)arg2;
- (id)buildCuratedCollectionsFrom:(id)arg1 shouldCancelImageDownloads:(BOOL)arg2;
- (void)clearPreviousModelImageDownloads;
- (void)clearSnapshotData;
- (id)collectionAtIndex:(long long)arg1;
- (void)createBatchControllerIfNeededUsingIdentifiers:(id)arg1 andPlaceCollections:(id)arg2 usingCollectionFetcher:(id)arg3 usingGuideConsumer:(id)arg4 usingBatchSize:(unsigned long long)arg5;
- (void)didStartFetchingBatch;
- (void)displayCollections;
- (void)endDisplayingCellAtIndexPath:(id)arg1;
- (id)geoCollectionAtIndex:(long long)arg1;
- (void)getCollections:(CDUnknownBlockType)arg1;
- (void)getCollectionsUsingDataSource:(id)arg1 onCompletion:(CDUnknownBlockType)arg2;
- (id)identifierForCollectionAtIndex:(long long)arg1;
- (id)initWithCollectionView:(id)arg1 withPlaceCollections:(id)arg2 usingCollectionIds:(id)arg3 usingCollectionFetcher:(id)arg4 usingGuideConsumer:(id)arg5 usingSyncCoordinator:(id)arg6 inContext:(long long)arg7 usingBatchSize:(unsigned long long)arg8;
- (id)initWithPlaceCollections:(id)arg1 usingSyncCoordinator:(id)arg2 inContext:(long long)arg3;
- (void)initializeFonts;
- (void)initializeFormatter;
- (BOOL)isCollectionSavedAtIndex:(long long)arg1;
- (long long)numberOfCollections;
- (long long)numberOfSections;
- (void)prepareSnapshot;
- (void)refreshCollections;
- (id)removeIdentifiers:(id)arg1 collidingWithPlaceCollections:(id)arg2;
- (void)shouldConsumeBatch:(BOOL)arg1 fetchedBatch:(id)arg2;
- (void)updateCollections:(id)arg1 usingBatchedIdentifiers:(id)arg2 usingCollectionFetcher:(id)arg3 usingBatchSize:(unsigned long long)arg4;
- (void)updateCollectionsWithoutPreparingSnapshot:(id)arg1 usingBatchedIdentifiers:(id)arg2 usingCollectionFetcher:(id)arg3 usingGuideConsumer:(id)arg4 usingBatchSize:(unsigned long long)arg5;
- (void)updateUsingBatchedIdentifiers:(id)arg1 usingCollectionFetcher:(id)arg2 usingBatchSize:(unsigned long long)arg3;
- (void)willDisplayCellAtIndexpath:(id)arg1;

@end

