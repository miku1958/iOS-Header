//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NUCropModel;
@protocol OS_dispatch_queue, OS_dispatch_source, PUCropGestureHandlerDelegate;

__attribute__((visibility("hidden")))
@interface PUCropGestureHandler : NSObject
{
    struct CGVector _panRubberBandDelta;
    struct CGVector _panSlideVelocity;
    NSObject<OS_dispatch_queue> *_animationQueue;
    NSObject<OS_dispatch_source> *_pitchYawRollAnimationTimer;
    NSObject<OS_dispatch_source> *_panAnimationTimer;
    NSObject<OS_dispatch_source> *_zoomAnimationTimer;
    struct {
        double scale;
        struct CGVector modelSpaceTranslation;
    } _panState;
    struct {
        double scale;
    } _pinchState;
    struct {
        struct CGRect startCropRect;
    } _pitchYawRollState;
    struct CGRect _panPinchStartRect;
    double _gestureStartPitch;
    double _gestureStartYaw;
    double _gestureStartRoll;
    int _pitchYawRollAnimationTimerCountdown;
    BOOL _inPanState;
    BOOL _inZoomState;
    BOOL _isDebugging;
    BOOL _isLogging;
    BOOL _delegateQueueIsMain;
    BOOL _animateEndGesture;
    id<PUCropGestureHandlerDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_delegateQueue;
    double _maximumZoomScale;
    NUCropModel *_cropModel;
    double _zoomOverflow;
    long long _gesture;
    struct CGVector _panRubberBandOffset;
}

@property (readonly, strong) NUCropModel *cropModel; // @synthesize cropModel=_cropModel;
@property (weak) id<PUCropGestureHandlerDelegate> delegate; // @synthesize delegate=_delegate;
@property (strong, nonatomic) NSObject<OS_dispatch_queue> *delegateQueue; // @synthesize delegateQueue=_delegateQueue;
@property (readonly) long long gesture; // @synthesize gesture=_gesture;
@property double maximumZoomScale; // @synthesize maximumZoomScale=_maximumZoomScale;
@property (readonly) struct CGVector panRubberBandOffset; // @synthesize panRubberBandOffset=_panRubberBandOffset;
@property (readonly) double zoomOverflow; // @synthesize zoomOverflow=_zoomOverflow;

- (void).cxx_destruct;
- (void)_clearGestureTypePan;
- (void)_clearGestureTypePinch;
- (void)_clearGestureTypePitchYawRoll;
- (void)_constrainedMoveCropRectBy:(struct CGVector)arg1 startRect:(struct CGRect)arg2 rubberband:(BOOL)arg3;
- (void)_didTrack;
- (void)_dispatchSyncOnDelegateQueue:(CDUnknownBlockType)arg1;
- (void)_setGestureType:(long long)arg1;
- (void)_setGestureTypePan;
- (void)_setGestureTypePinch;
- (void)_setZoomScale:(double)arg1;
- (void)_startPitchYawRollGestureTimeoutTimer;
- (void)_stopAnimatedPan;
- (void)_stopAnimatedPanTimer;
- (void)_stopAnimatedZoom;
- (void)_stopAnimatedZoomTimer;
- (double)_zoomScaleForCurrentCropRectAndModelRect;
- (double)_zoomScaleForModelCropRect:(struct CGRect)arg1;
- (void)_zoomWithScale:(double)arg1 startCropRect:(struct CGRect)arg2;
- (void)beginPan;
- (void)beginZoom;
- (id)delgateQueue;
- (void)endPanWithTranslation:(struct CGVector)arg1 velocity:(struct CGVector)arg2;
- (void)endZoomWithScale:(double)arg1;
- (id)initWithCropModel:(id)arg1;
- (struct CGSize)masterImageSize;
- (void)panWithTranslation:(struct CGVector)arg1 velocity:(struct CGVector)arg2;
- (void)reset;
- (void)setAnimateEndGestureEnabled:(BOOL)arg1;
- (void)setLoggingEnabled:(BOOL)arg1;
- (void)setPitchAngle:(double)arg1;
- (void)setRollAngle:(double)arg1;
- (void)setYawAngle:(double)arg1;
- (void)zoomWithScale:(double)arg1;
- (void)zoomWithScale:(double)arg1 rubberband:(BOOL)arg2;

@end

