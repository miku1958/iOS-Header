//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <PhotosUICore/PXDisplayThumbnailAsset-Protocol.h>

@class NSDate, NSNumber, NSString;
@protocol PXAssetdestinationAssetCopyProperties, PXDisplayAsset;

@protocol PXDisplayAsset <PXDisplayThumbnailAsset>

@property (readonly, nonatomic) double aspectRatio;
@property (readonly, nonatomic) unsigned long long burstSelectionTypes;
@property (readonly, nonatomic) NSDate *creationDate;
@property (readonly, nonatomic) Class defaultImageProviderClass;
@property (readonly, nonatomic) double duration;
@property (readonly, nonatomic, getter=isFavorite) BOOL favorite;
@property (readonly, nonatomic) NSNumber *hdrGain;
@property (readonly, nonatomic) NSDate *importDate;
@property (readonly, nonatomic) BOOL isAutoPlaybackEligibilityEstimated;
@property (readonly, nonatomic) BOOL isEligibleForAutoPlayback;
@property (readonly, nonatomic) BOOL isInCloud;
@property (readonly, nonatomic) NSDate *localCreationDate;
@property (readonly, nonatomic) NSString *localizedGeoDescription;
@property (readonly, nonatomic) unsigned long long mediaSubtypes;
@property (readonly, nonatomic) long long mediaType;
@property (readonly, nonatomic) unsigned long long pixelHeight;
@property (readonly, nonatomic) unsigned long long pixelWidth;
@property (readonly, nonatomic) long long playbackStyle;
@property (readonly, nonatomic) long long playbackVariation;
@property (readonly, nonatomic) BOOL representsBurst;
@property (readonly, nonatomic) unsigned long long thumbnailVersion;
@property (readonly, nonatomic) NSString *uuid;

- (long long)isContentEqualTo:(id<PXDisplayAsset>)arg1;

@optional
- (struct CGRect)bestCropRectForAspectRatio:(double)arg1;
- (struct CGRect)bestCropRectForAspectRatio:(double)arg1 verticalContentMode:(long long)arg2 cropMode:(long long)arg3;
- (id<PXAssetdestinationAssetCopyProperties>)destinationAssetCopyProperties;
- (NSString *)localizedDetailedGeoDescriptionForRTL:(BOOL)arg1;
- (struct CGRect)suggestedCropForTargetSize:(struct CGSize)arg1 withFocusRegion:(struct CGRect)arg2;
@end

