//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIView.h>

#import <PhotosUI/UIScrollViewDelegate-Protocol.h>

@class CADisplayLink, NSString, UIImage, UIScrollView;
@protocol PUUserTransformViewDelegate;

@interface PUUserTransformView : UIView <UIScrollViewDelegate>
{
    struct {
        BOOL respondsToShouldReceiveTouchAtPoint;
        BOOL respondsToDidChangeIsUserInteracting;
    } _delegateFlags;
    BOOL _isUserInteracting;
    BOOL __updatingScrollView;
    BOOL __isUserPanning;
    BOOL __isUserDeceleratingPan;
    BOOL __isUserZooming;
    BOOL __isUserEndingZoom;
    BOOL __isUserPanningOrDecelerating;
    BOOL __isUserZoomingOrBouncing;
    BOOL __shouldTrackContentAnimation;
    BOOL __isContentAnimating;
    BOOL __isAnimatingZoomEnd;
    BOOL __isUpdatingState;
    BOOL __wasUserInteractingBeforeStateUpdate;
    BOOL __needsUpdateUserPanningOrDecelerating;
    BOOL __needsUpdateUserZoomingOrBouncing;
    BOOL __needsUpdateUserInteracting;
    BOOL __needsUpdateShouldTrackContentAnimation;
    BOOL __needsUpdateUserAffineTransform;
    BOOL __needsUpdateContentState;
    BOOL __needsUpdateAnimatingZoomEnd;
    BOOL __needsUpdateZoomAndScroll;
    BOOL __needsUpdateScrollView;
    id<PUUserTransformViewDelegate> _delegate;
    unsigned long long _enabledInteractions;
    UIScrollView *__scrollView;
    UIView *__scrollContentView;
    double __doubleTapZoomScale;
    double __contentZoomScale;
    long long __numberOfNestedStateChanges;
    CADisplayLink *__displayLink;
    double __desiredZoomScale;
    double __preferredMinimumZoomScale;
    double __preferredMaximumZoomScale;
    long long __numberOfNestedZoomAndScrollChanges;
    UIImage *_debugScrollViewContentImage;
    struct CGSize _contentPixelSize;
    struct CGSize _scrollPadding;
    struct CGPoint __contentCenter;
    struct CGRect _untransformedContentFrame;
    struct CGAffineTransform _userAffineTransform;
}

@property (nonatomic, setter=_setContentCenter:) struct CGPoint _contentCenter; // @synthesize _contentCenter=__contentCenter;
@property (nonatomic, setter=_setContentZoomScale:) double _contentZoomScale; // @synthesize _contentZoomScale=__contentZoomScale;
@property (nonatomic, setter=_setDesiredZoomScale:) double _desiredZoomScale; // @synthesize _desiredZoomScale=__desiredZoomScale;
@property (strong, nonatomic, setter=_setDisplayLink:) CADisplayLink *_displayLink; // @synthesize _displayLink=__displayLink;
@property (nonatomic, setter=_setDoubleTapZoomScale:) double _doubleTapZoomScale; // @synthesize _doubleTapZoomScale=__doubleTapZoomScale;
@property (nonatomic, setter=_setAnimatingZoomEnd:) BOOL _isAnimatingZoomEnd; // @synthesize _isAnimatingZoomEnd=__isAnimatingZoomEnd;
@property (nonatomic, setter=_setContentAnimating:) BOOL _isContentAnimating; // @synthesize _isContentAnimating=__isContentAnimating;
@property (nonatomic, setter=_setUpdatingState:) BOOL _isUpdatingState; // @synthesize _isUpdatingState=__isUpdatingState;
@property (nonatomic, setter=_setUserDeceleratingPan:) BOOL _isUserDeceleratingPan; // @synthesize _isUserDeceleratingPan=__isUserDeceleratingPan;
@property (nonatomic, setter=_setUserEndingZoom:) BOOL _isUserEndingZoom; // @synthesize _isUserEndingZoom=__isUserEndingZoom;
@property (nonatomic, setter=_setUserPanning:) BOOL _isUserPanning; // @synthesize _isUserPanning=__isUserPanning;
@property (nonatomic, setter=_setUserPanningOrDecelerating:) BOOL _isUserPanningOrDecelerating; // @synthesize _isUserPanningOrDecelerating=__isUserPanningOrDecelerating;
@property (nonatomic, setter=_setUserZooming:) BOOL _isUserZooming; // @synthesize _isUserZooming=__isUserZooming;
@property (nonatomic, setter=_setUserZoomingOrBouncing:) BOOL _isUserZoomingOrBouncing; // @synthesize _isUserZoomingOrBouncing=__isUserZoomingOrBouncing;
@property (nonatomic, setter=_setNeedsUpdateAnimatingZoomEnd:) BOOL _needsUpdateAnimatingZoomEnd; // @synthesize _needsUpdateAnimatingZoomEnd=__needsUpdateAnimatingZoomEnd;
@property (nonatomic, setter=_setNeedsUpdateContentState:) BOOL _needsUpdateContentState; // @synthesize _needsUpdateContentState=__needsUpdateContentState;
@property (nonatomic, setter=_setNeedsUpdateScrollView:) BOOL _needsUpdateScrollView; // @synthesize _needsUpdateScrollView=__needsUpdateScrollView;
@property (nonatomic, setter=_setNeedsUpdateShouldTrackContentAnimation:) BOOL _needsUpdateShouldTrackContentAnimation; // @synthesize _needsUpdateShouldTrackContentAnimation=__needsUpdateShouldTrackContentAnimation;
@property (nonatomic, setter=_setNeedsUpdateUserAffineTransform:) BOOL _needsUpdateUserAffineTransform; // @synthesize _needsUpdateUserAffineTransform=__needsUpdateUserAffineTransform;
@property (nonatomic, setter=_setNeedsUpdateUserInteracting:) BOOL _needsUpdateUserInteracting; // @synthesize _needsUpdateUserInteracting=__needsUpdateUserInteracting;
@property (nonatomic, setter=_setNeedsUpdateUserPanningOrDecelerating:) BOOL _needsUpdateUserPanningOrDecelerating; // @synthesize _needsUpdateUserPanningOrDecelerating=__needsUpdateUserPanningOrDecelerating;
@property (nonatomic, setter=_setNeedsUpdateUserZoomingOrBouncing:) BOOL _needsUpdateUserZoomingOrBouncing; // @synthesize _needsUpdateUserZoomingOrBouncing=__needsUpdateUserZoomingOrBouncing;
@property (nonatomic, setter=_setNeedsUpdateZoomAndScroll:) BOOL _needsUpdateZoomAndScroll; // @synthesize _needsUpdateZoomAndScroll=__needsUpdateZoomAndScroll;
@property (nonatomic, setter=_setNumberOfNestedStateChanges:) long long _numberOfNestedStateChanges; // @synthesize _numberOfNestedStateChanges=__numberOfNestedStateChanges;
@property (nonatomic, setter=_setNumberOfNestedZoomAndScrollChanges:) long long _numberOfNestedZoomAndScrollChanges; // @synthesize _numberOfNestedZoomAndScrollChanges=__numberOfNestedZoomAndScrollChanges;
@property (nonatomic, setter=_setPreferredMaximumZoomScale:) double _preferredMaximumZoomScale; // @synthesize _preferredMaximumZoomScale=__preferredMaximumZoomScale;
@property (nonatomic, setter=_setPreferredMinimumZoomScale:) double _preferredMinimumZoomScale; // @synthesize _preferredMinimumZoomScale=__preferredMinimumZoomScale;
@property (readonly, nonatomic) UIView *_scrollContentView; // @synthesize _scrollContentView=__scrollContentView;
@property (readonly, nonatomic) UIScrollView *_scrollView; // @synthesize _scrollView=__scrollView;
@property (nonatomic, setter=_setShouldTrackContentAnimation:) BOOL _shouldTrackContentAnimation; // @synthesize _shouldTrackContentAnimation=__shouldTrackContentAnimation;
@property (nonatomic, getter=_isUpdatingScrollView, setter=_setUpdatingScrollView:) BOOL _updatingScrollView; // @synthesize _updatingScrollView=__updatingScrollView;
@property (nonatomic, setter=_setWasUserInteractingBeforeStateUpdate:) BOOL _wasUserInteractingBeforeStateUpdate; // @synthesize _wasUserInteractingBeforeStateUpdate=__wasUserInteractingBeforeStateUpdate;
@property (nonatomic) struct CGSize contentPixelSize; // @synthesize contentPixelSize=_contentPixelSize;
@property (readonly, copy) NSString *debugDescription;
@property (strong, nonatomic) UIImage *debugScrollViewContentImage; // @synthesize debugScrollViewContentImage=_debugScrollViewContentImage;
@property (weak, nonatomic) id<PUUserTransformViewDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) unsigned long long enabledInteractions; // @synthesize enabledInteractions=_enabledInteractions;
@property (readonly) unsigned long long hash;
@property (nonatomic, setter=_setUserInteracting:) BOOL isUserInteracting; // @synthesize isUserInteracting=_isUserInteracting;
@property (nonatomic) struct CGSize scrollPadding; // @synthesize scrollPadding=_scrollPadding;
@property (readonly) Class superclass;
@property (nonatomic) struct CGRect untransformedContentFrame; // @synthesize untransformedContentFrame=_untransformedContentFrame;
@property (nonatomic) struct CGAffineTransform userAffineTransform; // @synthesize userAffineTransform=_userAffineTransform;

- (void).cxx_destruct;
- (void)_assertInsideStateChangeBlock;
- (void)_assertInsideStateUpdate;
- (void)_assertInsideZoomAndScrollChangeBlock;
- (struct UIEdgeInsets)_contentInsetsForContentScale:(double)arg1;
- (struct CGPoint)_contentOffsetAdjustmentForContentInsets:(struct UIEdgeInsets)arg1;
- (void)_didChangeState;
- (void)_handleDisplayLink:(id)arg1;
- (void)_invalidateAnimatingZoomEnd;
- (void)_invalidateContentState;
- (void)_invalidateScrollView;
- (void)_invalidateShouldTrackContentAnimation;
- (void)_invalidateUserAffineTransform;
- (void)_invalidateUserInteracting;
- (void)_invalidateUserPanningOrDecelerating;
- (void)_invalidateUserZoomingOrBouncing;
- (void)_invalidateZoomAndScroll;
- (BOOL)_needsStateUpdate;
- (void)_performStateChanges:(CDUnknownBlockType)arg1;
- (void)_performZoomAndScrollChanges:(CDUnknownBlockType)arg1;
- (void)_setEnabledInteractions:(unsigned long long)arg1;
- (void)_setNeedsStateUpdate;
- (void)_setUserAffineTransform:(struct CGAffineTransform)arg1;
- (void)_updateAnimatingZoomEndIfNeeded;
- (void)_updateContentStateIfNeeded;
- (void)_updateDisplayLink;
- (void)_updateScrollViewIfNeeded;
- (void)_updateShouldTrackContentAnimationIfNeeded;
- (void)_updateStateIfNeeded;
- (void)_updateUserAffineTransformIfNeeded;
- (void)_updateUserInteractingIfNeeded;
- (void)_updateUserPanningOrDeceleratingIfNeeded;
- (void)_updateUserZoomingOrBouncingIfNeeded;
- (void)_updateZoomAndScrollIfNeeded;
- (void)_willChangeState;
- (BOOL)contentContainsLocationFromProvider:(id)arg1;
- (void)handleDoubleTapWithLocationProvider:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)layoutSubviews;
- (BOOL)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(BOOL)arg2;
- (void)scrollViewDidEndZooming:(id)arg1 withView:(id)arg2 atScale:(double)arg3;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewDidZoom:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewWillBeginZooming:(id)arg1 withView:(id)arg2;
- (id)viewForZoomingInScrollView:(id)arg1;

@end

