//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <PhotosUI/PUViewControllerSpec.h>

@class PUOneUpViewControllerSpecChange, UIColor;

__attribute__((visibility("hidden")))
@interface PUOneUpViewControllerSpec : PUViewControllerSpec
{
    BOOL _isChromeVisible;
    BOOL _isPresentedForPreview;
    BOOL _isShowingPlayPauseButtonInBars;
    BOOL _shouldPlaceButtonsInNavigationBar;
    BOOL _shouldUseCompactTitleView;
    BOOL _shouldUseContentGuideInsets;
    BOOL _shouldUseUserTransformTiles;
    BOOL _shouldDisplayBadges;
    BOOL _shouldDisplayAssetExplorerReviewScreenBadges;
    BOOL _shouldDisplayPlayButtons;
    BOOL _shouldDisplayProgressIndicators;
    BOOL _shouldAutoplayOnAppear;
    BOOL _shouldDisplayBufferingIndicators;
    BOOL _shouldDisplayLoadingIndicators;
    BOOL _shouldDisplayEmptyPlaceholder;
    BOOL _shouldUseCompactCommentsTitle;
    BOOL _shouldPinContentToTop;
    unsigned long long _options;
    double _maximumToolbarHeight;
    UIColor *_backgroundColorOverride;
    long long _tileInitialContentMode;
    struct CGSize _progressIndicatorSize;
    struct CGSize _bufferingIndicatorSize;
    struct CGSize _loadingIndicatorSize;
}

@property (readonly, nonatomic) BOOL allowAccessoryVisibility;
@property (readonly, nonatomic) BOOL allowDoneButton;
@property (readonly, nonatomic) BOOL allowTapOnTitle;
@property (readonly, nonatomic) struct CGSize assetExplorerReviewScreenProgressIndicatorSize;
@property (strong, nonatomic, setter=_setBackgroundColorOverride:) UIColor *backgroundColorOverride; // @synthesize backgroundColorOverride=_backgroundColorOverride;
@property (nonatomic, setter=_setBufferingIndicatorSize:) struct CGSize bufferingIndicatorSize; // @synthesize bufferingIndicatorSize=_bufferingIndicatorSize;
@property (readonly, nonatomic) PUOneUpViewControllerSpecChange *currentChange;
@property (nonatomic, setter=setChromeVisible:) BOOL isChromeVisible; // @synthesize isChromeVisible=_isChromeVisible;
@property (nonatomic, setter=setPresentedForPreview:) BOOL isPresentedForPreview; // @synthesize isPresentedForPreview=_isPresentedForPreview;
@property (nonatomic, setter=setShowingPlayPauseButtonInBars:) BOOL isShowingPlayPauseButtonInBars; // @synthesize isShowingPlayPauseButtonInBars=_isShowingPlayPauseButtonInBars;
@property (nonatomic, setter=_setLoadingIndicatorSize:) struct CGSize loadingIndicatorSize; // @synthesize loadingIndicatorSize=_loadingIndicatorSize;
@property (nonatomic, setter=_setMaximumToolbarHeight:) double maximumToolbarHeight; // @synthesize maximumToolbarHeight=_maximumToolbarHeight;
@property (readonly, nonatomic) unsigned long long options; // @synthesize options=_options;
@property (readonly, nonatomic) struct CGSize playButtonSize;
@property (nonatomic, setter=_setProgressIndicatorSize:) struct CGSize progressIndicatorSize; // @synthesize progressIndicatorSize=_progressIndicatorSize;
@property (nonatomic, setter=_setShouldAutoplayOnAppear:) BOOL shouldAutoplayOnAppear; // @synthesize shouldAutoplayOnAppear=_shouldAutoplayOnAppear;
@property (nonatomic, setter=_setShouldDisplayAssetExplorerReviewScreenBadges:) BOOL shouldDisplayAssetExplorerReviewScreenBadges; // @synthesize shouldDisplayAssetExplorerReviewScreenBadges=_shouldDisplayAssetExplorerReviewScreenBadges;
@property (readonly, nonatomic) BOOL shouldDisplayAssetExplorerReviewScreenProgressIndicators;
@property (readonly, nonatomic) BOOL shouldDisplayAssetExplorerReviewScreenSelectionIndicators;
@property (nonatomic, setter=_setShouldDisplayBadges:) BOOL shouldDisplayBadges; // @synthesize shouldDisplayBadges=_shouldDisplayBadges;
@property (nonatomic, setter=_setShouldDisplayBufferingIndicators:) BOOL shouldDisplayBufferingIndicators; // @synthesize shouldDisplayBufferingIndicators=_shouldDisplayBufferingIndicators;
@property (nonatomic, setter=_setShouldDisplayEmptyPlaceholder:) BOOL shouldDisplayEmptyPlaceholder; // @synthesize shouldDisplayEmptyPlaceholder=_shouldDisplayEmptyPlaceholder;
@property (nonatomic, setter=_setShouldDisplayLoadingIndicators:) BOOL shouldDisplayLoadingIndicators; // @synthesize shouldDisplayLoadingIndicators=_shouldDisplayLoadingIndicators;
@property (nonatomic, setter=_setShouldDisplayPlayButtons:) BOOL shouldDisplayPlayButtons; // @synthesize shouldDisplayPlayButtons=_shouldDisplayPlayButtons;
@property (nonatomic, setter=_setShouldDisplayProgressIndicators:) BOOL shouldDisplayProgressIndicators; // @synthesize shouldDisplayProgressIndicators=_shouldDisplayProgressIndicators;
@property (nonatomic, setter=_setShouldPinContentToTop:) BOOL shouldPinContentToTop; // @synthesize shouldPinContentToTop=_shouldPinContentToTop;
@property (nonatomic, setter=_setShouldPlaceButtonsInNavigationBar:) BOOL shouldPlaceButtonsInNavigationBar; // @synthesize shouldPlaceButtonsInNavigationBar=_shouldPlaceButtonsInNavigationBar;
@property (readonly, nonatomic) BOOL shouldShowTitleView;
@property (nonatomic, setter=_setShouldUseCompactCommentsTitle:) BOOL shouldUseCompactCommentsTitle; // @synthesize shouldUseCompactCommentsTitle=_shouldUseCompactCommentsTitle;
@property (nonatomic, setter=_setShouldUseCompactTitleView:) BOOL shouldUseCompactTitleView; // @synthesize shouldUseCompactTitleView=_shouldUseCompactTitleView;
@property (nonatomic, setter=_setShouldUseContentGuideInsets:) BOOL shouldUseContentGuideInsets; // @synthesize shouldUseContentGuideInsets=_shouldUseContentGuideInsets;
@property (nonatomic, setter=_setShouldUseUserTransformTiles:) BOOL shouldUseUserTransformTiles; // @synthesize shouldUseUserTransformTiles=_shouldUseUserTransformTiles;
@property (nonatomic, setter=_setTileInitialContentMode:) long long tileInitialContentMode; // @synthesize tileInitialContentMode=_tileInitialContentMode;

- (void).cxx_destruct;
- (BOOL)_isAssetExplorerReviewScreen;
- (id)initWithOptions:(unsigned long long)arg1;
- (id)newSpecChange;
- (void)updateIfNeeded;

@end

