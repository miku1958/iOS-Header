//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <PhotosUI/PUViewControllerSpec.h>

@class PUOneUpViewControllerSpecChange, UIColor;

__attribute__((visibility("hidden")))
@interface PUOneUpViewControllerSpec : PUViewControllerSpec
{
    BOOL _isChromeVisible;
    BOOL _isPresentedForPreview;
    BOOL _isShowingPlayPauseButtonInBars;
    BOOL _shouldPlaceButtonsInNavigationBar;
    BOOL _shouldUseCompactTitleView;
    BOOL _shouldUseContentGuideInsets;
    BOOL _shouldUseUserTransformTiles;
    BOOL _shouldDisplayBadges;
    BOOL _shouldDisplayPlayButtons;
    BOOL _shouldDisplayProgressIndicators;
    BOOL _shouldAutoplayOnAppear;
    BOOL _shouldDisplayBufferingIndicators;
    BOOL _shouldDisplayLoadingIndicators;
    BOOL _shouldDisplayEmptyPlaceholder;
    BOOL _shouldUseCompactCommentSeparator;
    BOOL _shouldUseCompactCommentsTitle;
    BOOL _shouldPinContentToTop;
    BOOL _shouldUseCommentTiles;
    double _maximumToolbarHeight;
    UIColor *_backgroundColorOverride;
    long long _tileInitialContentMode;
    struct CGSize _progressIndicatorSize;
    struct CGSize _bufferingIndicatorSize;
    struct CGSize _loadingIndicatorSize;
}

@property (strong, nonatomic) UIColor *backgroundColorOverride; // @synthesize backgroundColorOverride=_backgroundColorOverride;
@property (nonatomic) struct CGSize bufferingIndicatorSize; // @synthesize bufferingIndicatorSize=_bufferingIndicatorSize;
@property (readonly, nonatomic) PUOneUpViewControllerSpecChange *currentChange;
@property (nonatomic, setter=setChromeVisible:) BOOL isChromeVisible; // @synthesize isChromeVisible=_isChromeVisible;
@property (nonatomic, setter=setPresentedForPreview:) BOOL isPresentedForPreview; // @synthesize isPresentedForPreview=_isPresentedForPreview;
@property (nonatomic, setter=setShowingPlayPauseButtonInBars:) BOOL isShowingPlayPauseButtonInBars; // @synthesize isShowingPlayPauseButtonInBars=_isShowingPlayPauseButtonInBars;
@property (nonatomic) struct CGSize loadingIndicatorSize; // @synthesize loadingIndicatorSize=_loadingIndicatorSize;
@property (nonatomic) double maximumToolbarHeight; // @synthesize maximumToolbarHeight=_maximumToolbarHeight;
@property (readonly, nonatomic) struct CGSize playButtonSize;
@property (nonatomic) struct CGSize progressIndicatorSize; // @synthesize progressIndicatorSize=_progressIndicatorSize;
@property (nonatomic) BOOL shouldAutoplayOnAppear; // @synthesize shouldAutoplayOnAppear=_shouldAutoplayOnAppear;
@property (nonatomic) BOOL shouldDisplayBadges; // @synthesize shouldDisplayBadges=_shouldDisplayBadges;
@property (nonatomic) BOOL shouldDisplayBufferingIndicators; // @synthesize shouldDisplayBufferingIndicators=_shouldDisplayBufferingIndicators;
@property (nonatomic) BOOL shouldDisplayEmptyPlaceholder; // @synthesize shouldDisplayEmptyPlaceholder=_shouldDisplayEmptyPlaceholder;
@property (nonatomic) BOOL shouldDisplayLoadingIndicators; // @synthesize shouldDisplayLoadingIndicators=_shouldDisplayLoadingIndicators;
@property (nonatomic) BOOL shouldDisplayPlayButtons; // @synthesize shouldDisplayPlayButtons=_shouldDisplayPlayButtons;
@property (nonatomic) BOOL shouldDisplayProgressIndicators; // @synthesize shouldDisplayProgressIndicators=_shouldDisplayProgressIndicators;
@property (nonatomic) BOOL shouldPinContentToTop; // @synthesize shouldPinContentToTop=_shouldPinContentToTop;
@property (nonatomic) BOOL shouldPlaceButtonsInNavigationBar; // @synthesize shouldPlaceButtonsInNavigationBar=_shouldPlaceButtonsInNavigationBar;
@property (nonatomic) BOOL shouldUseCommentTiles; // @synthesize shouldUseCommentTiles=_shouldUseCommentTiles;
@property (nonatomic) BOOL shouldUseCompactCommentSeparator; // @synthesize shouldUseCompactCommentSeparator=_shouldUseCompactCommentSeparator;
@property (nonatomic) BOOL shouldUseCompactCommentsTitle; // @synthesize shouldUseCompactCommentsTitle=_shouldUseCompactCommentsTitle;
@property (nonatomic) BOOL shouldUseCompactTitleView; // @synthesize shouldUseCompactTitleView=_shouldUseCompactTitleView;
@property (nonatomic) BOOL shouldUseContentGuideInsets; // @synthesize shouldUseContentGuideInsets=_shouldUseContentGuideInsets;
@property (nonatomic) BOOL shouldUseUserTransformTiles; // @synthesize shouldUseUserTransformTiles=_shouldUseUserTransformTiles;
@property (nonatomic) long long tileInitialContentMode; // @synthesize tileInitialContentMode=_tileInitialContentMode;

- (void).cxx_destruct;
- (void)_setBackgroundColorOverride:(id)arg1;
- (void)_setBufferingIndicatorSize:(struct CGSize)arg1;
- (void)_setLoadingIndicatorSize:(struct CGSize)arg1;
- (void)_setMaximumToolbarHeight:(double)arg1;
- (void)_setProgressIndicatorSize:(struct CGSize)arg1;
- (void)_setShouldAutoplayOnAppear:(BOOL)arg1;
- (void)_setShouldDisplayBadges:(BOOL)arg1;
- (void)_setShouldDisplayBufferingIndicators:(BOOL)arg1;
- (void)_setShouldDisplayEmptyPlaceholder:(BOOL)arg1;
- (void)_setShouldDisplayLoadingIndicators:(BOOL)arg1;
- (void)_setShouldDisplayPlayButtons:(BOOL)arg1;
- (void)_setShouldDisplayProgressIndicators:(BOOL)arg1;
- (void)_setShouldPinContentToTop:(BOOL)arg1;
- (void)_setShouldPlaceButtonsInNavigationBar:(BOOL)arg1;
- (void)_setShouldUseCommentTiles:(BOOL)arg1;
- (void)_setShouldUseCompactCommentSeparator:(BOOL)arg1;
- (void)_setShouldUseCompactCommentsTitle:(BOOL)arg1;
- (void)_setShouldUseCompactTitleView:(BOOL)arg1;
- (void)_setShouldUseContentGuideInsets:(BOOL)arg1;
- (void)_setShouldUseUserTransformTiles:(BOOL)arg1;
- (void)_setTileInitialContentMode:(long long)arg1;
- (id)newSpecChange;
- (void)updateIfNeeded;

@end

