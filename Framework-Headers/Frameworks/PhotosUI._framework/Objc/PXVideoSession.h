//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <PhotosUICore/PXObservable.h>

#import <PhotosUICore/AVPlayerItemOutputPullDelegate-Protocol.h>
#import <PhotosUICore/ISChangeObserver-Protocol.h>
#import <PhotosUICore/ISWrappedAVPlayerDelegate-Protocol.h>
#import <PhotosUICore/PXChangeObserver-Protocol.h>

@class AVPlayerItem, AVPlayerItemVideoOutput, ISWrappedAVAudioSession, ISWrappedAVPlayer, NSError, NSMutableArray, NSMutableDictionary, NSMutableSet, NSObject, NSString, NSTimer, PXDisplayLink, PXNumberAnimator, PXVideoContentProvider;
@protocol OS_dispatch_queue, PXVideoSessionDelegate;

@interface PXVideoSession : PXObservable <ISChangeObserver, AVPlayerItemOutputPullDelegate, PXChangeObserver, ISWrappedAVPlayerDelegate>
{
    id _playerTimeObservationToken;
    NSTimer *_playerTimeAdvancementTimer;
    long long _tokenCounter;
    ISWrappedAVPlayer *_videoPlayer;
    void *_updateQueueIdentifier;
    NSObject<OS_dispatch_queue> *_audioSessionQueue;
    NSObject<OS_dispatch_queue> *_videoWorkQueue;
    NSObject<OS_dispatch_queue> *_stateQueue;
    NSObject<OS_dispatch_queue> *_updateQueue;
    NSMutableArray *_mainQueue_videoViewQueue;
    ISWrappedAVAudioSession *_audioSessionQueue_audioSession;
    NSMutableDictionary *_stateQueue_presentationStatesByContext;
    NSMutableSet *_stateQueue_pixelBufferOutputTokens;
    PXDisplayLink *_stateQueue_displayLink;
    id _stateQueue_playbackTimeRangeEndBoundaryObserver;
    long long _stateQueue_playState;
    NSString *_stateQueue_audioSessionCategory;
    unsigned long long _stateQueue_audioSessionCategoryOptions;
    NSString *_stateQueue_audioSessionMode;
    unsigned long long _stateQueue_audioSessionRouteSharingPolicy;
    BOOL _stateQueue_isUpdatingAudioSession;
    BOOL _stateQueue_buffering;
    long long _stateQueue_desiredPlayState;
    AVPlayerItemVideoOutput *_stateQueue_videoOutput;
    CDStruct_1b6d18a9 _stateQueue_videoDuration;
    AVPlayerItem *_stateQueue_currentPlayerItem;
    BOOL _stateQueue_isPlayerTimeAdvancing;
    long long _stateQueue_audioStatus;
    AVPlayerItem *_stateQueue_playerItem;
    BOOL _stateQueue_isPlayable;
    BOOL _stateQueue_isStalled;
    BOOL _stateQueue_isLoopingEnabled;
    CDStruct_e83c9415 _stateQueue_playbackTimeRange;
    float _stateQueue_volume;
    BOOL _stateQueue_shouldFadeVolumeChange;
    BOOL _stateQueue_seekToBeginningAtEnd;
    BOOL _stateQueue_isAtEnd;
    BOOL _stateQueue_isAtBeginning;
    struct CGAffineTransform _stateQueue_preferredTransform;
    struct __CVBuffer *_stateQueue_currentPixelBuffer;
    BOOL _stateQueue_readyForSeeking;
    CDStruct_d97c9657 _updateQueue_updateFlags;
    BOOL _updateQueue_didFinishInitializingAudioSession;
    CDStruct_1b6d18a9 _updateQueue_lastPlayerTime;
    long long _updateQueue_playRequestIntervalSignpost;
    PXNumberAnimator *_mainQueue_volumeAnimator;
    BOOL _allowsExternalPlayback;
    BOOL _isUpdatingAudioSession;
    id<PXVideoSessionDelegate> _delegate;
    PXVideoContentProvider *_contentProvider;
    NSError *_error;
    CDStruct_1b6d18a9 _currentTime;
}

@property (readonly, nonatomic) BOOL allowsExternalPlayback; // @synthesize allowsExternalPlayback=_allowsExternalPlayback;
@property (readonly, copy, nonatomic) NSString *audioSessionCategory;
@property (readonly, nonatomic) unsigned long long audioSessionCategoryOptions;
@property (readonly, nonatomic) NSString *audioSessionMode;
@property (readonly, nonatomic) unsigned long long audioSessionRouteSharingPolicy;
@property (nonatomic) long long audioStatus;
@property (nonatomic, getter=isBuffering) BOOL buffering;
@property (readonly, nonatomic) PXVideoContentProvider *contentProvider; // @synthesize contentProvider=_contentProvider;
@property (nonatomic) struct __CVBuffer *currentPixelBuffer;
@property (nonatomic) CDStruct_1b6d18a9 currentTime; // @synthesize currentTime=_currentTime;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSString *debugDetailedDescription;
@property (weak, nonatomic) id<PXVideoSessionDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) long long desiredPlayState;
@property (strong, nonatomic) PXDisplayLink *displayLink;
@property (readonly, nonatomic) NSError *error; // @synthesize error=_error;
@property (readonly) unsigned long long hash;
@property (nonatomic, setter=setAtBeginning:) BOOL isAtBeginning;
@property (nonatomic, setter=setAtEnd:) BOOL isAtEnd;
@property (readonly, nonatomic) BOOL isPlayable;
@property (readonly, nonatomic) BOOL isReadyForSeeking;
@property (nonatomic, setter=setStalled:) BOOL isStalled;
@property (nonatomic, setter=setUpdatingAudioSession:) BOOL isUpdatingAudioSession; // @synthesize isUpdatingAudioSession=_isUpdatingAudioSession;
@property (readonly, nonatomic, getter=isLoopingEnabled) BOOL loopingEnabled;
@property (readonly, nonatomic) long long playState;
@property (readonly, nonatomic) CDStruct_e83c9415 playbackTimeRange;
@property (strong, nonatomic) AVPlayerItem *playerItem;
@property (nonatomic) struct CGAffineTransform preferredTransform;
@property (readonly, nonatomic) BOOL preventsSleepDuringVideoPlayback;
@property (readonly, nonatomic) BOOL seekToBeginningAtEnd;
@property (readonly, nonatomic) NSString *statusDescription;
@property (readonly) Class superclass;
@property (nonatomic) CDStruct_1b6d18a9 videoDuration;
@property (readonly, nonatomic) float volume;

- (void).cxx_destruct;
- (void)_addOutput:(id)arg1 toPlayerItem:(id)arg2;
- (void)_assertOnUpdateQueue;
- (void)_audioSessionQueue_initializeAudioSession;
- (void)_audioSessionQueue_updateAudioSessionWithCategory:(id)arg1 mode:(id)arg2 routeSharingPolicy:(unsigned long long)arg3 options:(unsigned long long)arg4;
- (void)_avPlayerTimeDidChange:(CDStruct_1b6d18a9)arg1;
- (void)_didFinishInitializingAudioSession;
- (void)_handleAssetTracksDidLoadForAsset:(id)arg1;
- (void)_handleAudioSessionOutputVolumeDidChangeFromVolume:(float)arg1 toVolume:(float)arg2;
- (void)_handleContentLoadingResult:(id)arg1;
- (void)_handleDidReachPlaybackTimeRangeEnd;
- (void)_handleDisplayLink:(id)arg1;
- (void)_handlePlayabilityDidLoadForAsset:(id)arg1;
- (void)_handlePlayerTimeAdvancementTimer:(id)arg1;
- (void)_handlePreferredTransformDidLoad;
- (BOOL)_isAVPlayerPlayStateOutOfSync;
- (BOOL)_isOnUpdateQueue;
- (void)_loadAssetTracksIfNeeded;
- (void)_logPlaybackState;
- (void)_mainQueue_actuallyPrewarmVideoView;
- (id)_newVideoView;
- (void)_performBlockOnUpdateQueue:(CDUnknownBlockType)arg1;
- (void)_performChanges:(CDUnknownBlockType)arg1;
- (id)_playbackStateDescription;
- (void)_removeAllVideoOutputs;
- (void)_seekToPlaybackTimeRangeStartIfNeeded;
- (void)_setPlayabilityFromAsset:(id)arg1;
- (id)_stateQueue_newPresentationStateFromCurrentWithPresenter:(void *)arg1;
- (void)_updateAVPlayerPlayState;
- (void)_updateAtBeginningOrEnd;
- (void)_updateAtBeginningOrEndWithPlayerItemDuration:(CDStruct_1b6d18a9)arg1 success:(BOOL)arg2 error:(id)arg3;
- (void)_updateAudioStatus;
- (void)_updateBuffering;
- (void)_updateCurrentPixelBuffer;
- (void)_updateDisplayLinkState;
- (void)_updateDuration;
- (void)_updateFromCurrentPresentationState;
- (void)_updatePlayState;
- (void)_updatePlayability;
- (void)_updatePlayerItem;
- (void)_updatePlayerItemInPlayer;
- (void)_updatePlayerVolume;
- (void)_updatePreferredTransform;
- (void)_updateReadyForSeeking;
- (void)_updateStalled;
- (void)_updateVideoOutput;
- (void)_updateVolumeAnimator;
- (void)_videoWorkQueue_updateCurrentPixelBufferWithVideoOutput:(id)arg1 outputTime:(double)arg2;
- (void)avPlayer:(id)arg1 itemDidPlayToEnd:(id)arg2;
- (void)cancelLoading;
- (void)cancelPixelBufferOutputWithRequestIdentifier:(id)arg1;
- (id)currentPlayerItem;
- (void)dealloc;
- (id)dequeueVideoView;
- (void)didPerformChanges;
- (void)enterPresentationContext:(long long)arg1 presenter:(void *)arg2;
- (struct CGImage *)generateSnapshotImage;
- (id)init;
- (id)initWithContentProvider:(id)arg1;
- (BOOL)isPlayerTimeAdvancing;
- (void)leavePresentationContext:(long long)arg1 presenter:(void *)arg2;
- (void)loadIfNeededWithPriority:(long long)arg1;
- (id)mutableChangeObject;
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void *)arg3;
- (void)outputMediaDataWillChange:(id)arg1;
- (void)performChanges:(CDUnknownBlockType)arg1;
- (void)performChanges:(CDUnknownBlockType)arg1 withPresentationContext:(long long)arg2 presenter:(void *)arg3;
- (void)performFinalCleanup;
- (unsigned long long)pixelBufferOutputTokenCount;
- (id)playbackTimeRangeEndBoundaryObserver;
- (void)prewarmVideoView;
- (void)recycleVideoView:(id)arg1;
- (void)requestPixelBufferOutputWithRequestIdentifier:(id)arg1;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1 toleranceBefore:(CDStruct_1b6d18a9)arg2 toleranceAfter:(CDStruct_1b6d18a9)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)setAllowsExternalPlayback:(BOOL)arg1;
- (void)setAudioSessionCategory:(id)arg1 mode:(id)arg2 routeSharingPolicy:(unsigned long long)arg3 options:(unsigned long long)arg4;
- (void)setCurrentPlayerItem:(id)arg1;
- (void)setDesiredPlayState:(long long)arg1;
- (void)setIsReadyForSeeking:(BOOL)arg1;
- (void)setLoopingEnabled:(BOOL)arg1;
- (void)setPlayState:(long long)arg1;
- (void)setPlayable:(BOOL)arg1;
- (void)setPlaybackTimeRange:(CDStruct_e83c9415)arg1;
- (void)setPlaybackTimeRangeEndBoundaryObserver:(id)arg1;
- (void)setPlayerTimeAdvancing:(BOOL)arg1;
- (void)setPreventsSleepDuringVideoPlayback:(BOOL)arg1;
- (void)setSeekToBeginningAtEnd:(BOOL)arg1;
- (void)setVideoOutput:(id)arg1;
- (void)setVolume:(float)arg1 withFade:(BOOL)arg2;
- (id)videoOutput;
- (id)videoPlayer;

@end

