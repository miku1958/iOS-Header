//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class CNUIContactsEnvironment, HKHealthStore, NSMutableDictionary, _HKMedicalIDData;
@protocol CNScheduler;

__attribute__((visibility("hidden")))
@interface CNHealthStoreManager : NSObject
{
    int _healthNotificationToken;
    BOOL _needsFetching;
    BOOL _isListeningToChanges;
    CNUIContactsEnvironment *_environment;
    _HKMedicalIDData *_medicalIDData;
    id<CNScheduler> _workQueue;
    NSMutableDictionary *_medicalIDDataHandlers;
    id<CNScheduler> _stateLock;
    HKHealthStore *_healthStore;
}

@property (strong, nonatomic) CNUIContactsEnvironment *environment; // @synthesize environment=_environment;
@property (strong, nonatomic) HKHealthStore *healthStore; // @synthesize healthStore=_healthStore;
@property (nonatomic) BOOL isListeningToChanges; // @synthesize isListeningToChanges=_isListeningToChanges;
@property (strong, nonatomic) _HKMedicalIDData *medicalIDData; // @synthesize medicalIDData=_medicalIDData;
@property (readonly, nonatomic) NSMutableDictionary *medicalIDDataHandlers; // @synthesize medicalIDDataHandlers=_medicalIDDataHandlers;
@property (nonatomic) BOOL needsFetching; // @synthesize needsFetching=_needsFetching;
@property (readonly, nonatomic) id<CNScheduler> stateLock; // @synthesize stateLock=_stateLock;
@property (readonly, nonatomic) id<CNScheduler> workQueue; // @synthesize workQueue=_workQueue;

+ (id)descriptorForRequiredKeys;
+ (CDUnknownBlockType)emergencyContactMatchingContact:(id)arg1;
+ (id)identifiersForContactMatchingEmergencyContacts:(id)arg1 contactStore:(id)arg2;
+ (BOOL)shouldShowEmergencyContacts;
- (void).cxx_destruct;
- (id)createMedicalIDFromContact:(id)arg1;
- (void)dealloc;
- (id)initWithEnvironment:(id)arg1;
- (id)initWithEnvironment:(id)arg1 healthStore:(id)arg2;
- (id)nts_lazyHealthStore;
- (id)registerMedicalIDDataHandler:(CDUnknownBlockType)arg1;
- (void)startListeningForChanges;
- (void)unregisterHandlerForToken:(id)arg1;
- (void)updateAndDispatchMedicalIDData;

@end

