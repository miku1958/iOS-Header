//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <ContactsUICore/CNUICoreFamilyMemberWhitelistedContactsDataSource-Protocol.h>

@class CNFuture, NSArray, NSString;
@protocol CNCancelable, CNSchedulerProvider, CNUICoreContactStoreFacade, CNUICoreFamilyMemberContactsModelFetching, CNUICoreFamilyMemberContactsObserver, CNUICoreFamilyMemberContactsUpdating;

@interface CNUICoreFamilyMemberWhitelistedContactsController : NSObject <CNUICoreFamilyMemberWhitelistedContactsDataSource>
{
    NSArray *_familyMemberContactItems;
    id<CNUICoreFamilyMemberContactsObserver> _observer;
    id<CNUICoreFamilyMemberContactsModelFetching> _modelFetcher;
    id<CNUICoreFamilyMemberContactsUpdating> _familyMemberContactsUpdator;
    id<CNSchedulerProvider> _schedulerProvider;
    id<CNUICoreContactStoreFacade> _familyMemberScopedContactStore;
    id<CNUICoreContactStoreFacade> _mainContactStoreFacade;
    CNFuture *_familyMemberContactItemsFuture;
    CNFuture *_addContactsToWhitelistFuture;
    CNFuture *_updateContactsInWhitelistFuture;
    CNFuture *_deleteContactsFromWhitelistFuture;
    id<CNCancelable> _contactStoreDidChangeToken;
}

@property (strong, nonatomic) CNFuture *addContactsToWhitelistFuture; // @synthesize addContactsToWhitelistFuture=_addContactsToWhitelistFuture;
@property (readonly, nonatomic) id<CNCancelable> contactStoreDidChangeToken; // @synthesize contactStoreDidChangeToken=_contactStoreDidChangeToken;
@property (readonly, copy) NSString *debugDescription;
@property (strong, nonatomic) CNFuture *deleteContactsFromWhitelistFuture; // @synthesize deleteContactsFromWhitelistFuture=_deleteContactsFromWhitelistFuture;
@property (readonly, copy) NSString *description;
@property (strong, nonatomic) NSArray *familyMemberContactItems; // @synthesize familyMemberContactItems=_familyMemberContactItems;
@property (strong, nonatomic) CNFuture *familyMemberContactItemsFuture; // @synthesize familyMemberContactItemsFuture=_familyMemberContactItemsFuture;
@property (readonly, nonatomic) id<CNUICoreFamilyMemberContactsUpdating> familyMemberContactsUpdator; // @synthesize familyMemberContactsUpdator=_familyMemberContactsUpdator;
@property (readonly, nonatomic) BOOL familyMemberContainerIsEmpty;
@property (readonly, nonatomic) id<CNUICoreContactStoreFacade> familyMemberScopedContactStore; // @synthesize familyMemberScopedContactStore=_familyMemberScopedContactStore;
@property (readonly, nonatomic) long long fetchStatus;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) id<CNUICoreContactStoreFacade> mainContactStoreFacade; // @synthesize mainContactStoreFacade=_mainContactStoreFacade;
@property (readonly, nonatomic) id<CNUICoreFamilyMemberContactsModelFetching> modelFetcher; // @synthesize modelFetcher=_modelFetcher;
@property (weak, nonatomic) id<CNUICoreFamilyMemberContactsObserver> observer; // @synthesize observer=_observer;
@property (readonly, nonatomic) id<CNSchedulerProvider> schedulerProvider; // @synthesize schedulerProvider=_schedulerProvider;
@property (readonly) Class superclass;
@property (strong, nonatomic) CNFuture *updateContactsInWhitelistFuture; // @synthesize updateContactsInWhitelistFuture=_updateContactsInWhitelistFuture;

+ (id)contactByRemovingSensitiveDataFromContact:(id)arg1;
+ (id)controllerWithFamilyMember:(id)arg1 options:(id)arg2 schedulerProvider:(id)arg3;
+ (id)propertyKeysContainingSenstiveData;
- (void).cxx_destruct;
- (void)cancelContactItemsFetch;
- (id)contactItemFutureFromFetcher;
- (id)contactRepresentingItem:(id)arg1;
- (void)dealloc;
- (void)finishWhitelistedContactsTasks;
- (id)init;
- (id)initWithFamilyMember:(id)arg1 options:(id)arg2 schedulerProvider:(id)arg3;
- (id)initWithModelFetcher:(id)arg1 familyMemberContactsUpdator:(id)arg2 familyMemberScopedContactStoreFacade:(id)arg3 mainContactStoreFacade:(id)arg4 schedulerProvider:(id)arg5;
- (void)setupChangeNotificationResponse;
- (void)triggerContactItemsFetch;
- (void)updateWhitelistByAddingContacts:(id)arg1;
- (void)updateWhitelistByRemovingContacts:(id)arg1;
- (void)updateWhitelistByUpdatingContacts:(id)arg1;

@end

