//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <HealthKit/HKSample.h>

#import <HealthKit/NSCopying-Protocol.h>

@class HKQuantity, NSArray, NSDate, NSDateComponents;

@interface HKActivityCache : HKSample <NSCopying>
{
    long long _cacheIndex;
    NSDateComponents *_dateComponents;
    long long _stepCount;
    long long _pushCount;
    long long _wheelchairUse;
    double _deepBreathingDuration;
    HKQuantity *_energyBurned;
    double _briskMinutes;
    double _activeHours;
    HKQuantity *_energyBurnedGoal;
    NSDate *_energyBurnedGoalDate;
    HKQuantity *_walkingAndRunningDistance;
    long long _flightsClimbed;
    NSArray *_dailyEnergyBurnedStatistics;
    NSArray *_dailyBriskMinutesStatistics;
    unsigned long long _knownFields;
    long long _sequence;
}

@property (setter=_setActiveHours:) double activeHours;
@property (readonly) double activeHoursGoal;
@property (readonly) double activeHoursGoalPercentage;
@property (setter=_setBriskMinutes:) double briskMinutes;
@property (readonly) double briskMinutesGoal;
@property (readonly) double briskMinutesGoalPercentage;
@property (setter=_setCacheIndex:) long long cacheIndex;
@property (copy, setter=_setDailyBriskMinutesStatistics:) NSArray *dailyBriskMinutesStatistics;
@property (copy, setter=_setDailyEnergyBurnedStatistics:) NSArray *dailyEnergyBurnedStatistics;
@property (readonly) NSDateComponents *dateComponents;
@property (setter=_setDeepBreathingDuration:) double deepBreathingDuration;
@property (strong, setter=_setEnergyBurned:) HKQuantity *energyBurned;
@property (strong, setter=_setEnergyBurnedGoal:) HKQuantity *energyBurnedGoal;
@property (readonly) NSDate *energyBurnedGoalDate;
@property (readonly) double energyBurnedGoalPercentage;
@property (setter=_setFlightsClimbed:) long long flightsClimbed;
@property (readonly) BOOL hasActiveHours;
@property (readonly) BOOL hasActiveHoursGoal;
@property (readonly) BOOL hasActiveHoursGoalPercentage;
@property (readonly) BOOL hasBriskMinutes;
@property (readonly) BOOL hasBriskMinutesGoal;
@property (readonly) BOOL hasBriskMinutesGoalPercentage;
@property (readonly) BOOL hasDailyBriskMinutesStatistics;
@property (readonly) BOOL hasDailyEnergyBurnedStatistics;
@property (readonly) BOOL hasDateComponents;
@property (readonly) BOOL hasDeepBreathingDuration;
@property (readonly) BOOL hasEnergyBurned;
@property (readonly) BOOL hasEnergyBurnedGoal;
@property (readonly) BOOL hasEnergyBurnedGoalPercentage;
@property (readonly) BOOL hasFlightsClimbed;
@property (readonly) BOOL hasPushCount;
@property (readonly) BOOL hasStepCount;
@property (readonly) BOOL hasWalkingAndRunningDistance;
@property (readonly) BOOL hasWheelchairUse;
@property (setter=_setKnownFields:) unsigned long long knownFields;
@property (setter=_setPushCount:) long long pushCount;
@property (setter=_setSequence:) long long sequence; // @synthesize sequence=_sequence;
@property (setter=_setStepCount:) long long stepCount;
@property (strong, setter=_setWalkingAndRunningDistance:) HKQuantity *walkingAndRunningDistance;
@property (setter=_setWheelchairUse:) long long wheelchairUse;

+ (id)_activityCacheWithStartDate:(id)arg1 endDate:(id)arg2 dateComponents:(id)arg3 sequence:(long long)arg4 energyBurned:(id)arg5 energyBurnedGoal:(id)arg6 walkingAndRunningDistance:(id)arg7 metadata:(id)arg8;
+ (id)_activityCacheWithUUID:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 dateComponents:(id)arg4 sequence:(long long)arg5;
+ (BOOL)_isConcreteObjectClass;
+ (id)_newActivityCacheWithStartDate:(id)arg1 endDate:(id)arg2 dateComponents:(id)arg3 energyBurned:(id)arg4 energyBurnedGoal:(id)arg5 walkingAndRunningDistance:(id)arg6 metadata:(id)arg7;
+ (BOOL)supportsSecureCoding;
- (void).cxx_destruct;
- (double)_energyBurnedGoalInKilocalories;
- (double)_energyBurnedInKilocalories;
- (BOOL)_isEqualToActivityCache:(id)arg1;
- (void)_setEnergyBurnedGoal:(id)arg1 date:(id)arg2;
- (void)_setEnergyBurnedGoalDateOnly:(id)arg1;
- (void)_setEnergyBurnedGoalOnly:(id)arg1;
- (id)_valueDescription;
- (double)_walkingAndRunningDistanceInMeters;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)reset;

@end

