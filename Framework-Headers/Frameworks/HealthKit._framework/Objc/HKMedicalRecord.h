//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <HealthKit/HKSample.h>

#import <HealthKit/HKCodedSample-Protocol.h>
#import <HealthKit/HKConceptIndexable-Protocol.h>
#import <HealthKit/HKMedicalRecordCodings-Protocol.h>
#import <HealthKit/NSCopying-Protocol.h>
#import <HealthKit/NSSecureCoding-Protocol.h>

@class HKConcept, HKFHIRIdentifier, HKSemanticDate, NSArray, NSDate, NSLocale, NSString, NSUUID;

@interface HKMedicalRecord : HKSample <HKMedicalRecordCodings, HKConceptIndexable, HKCodedSample, NSSecureCoding, NSCopying>
{
    HKConcept *_primaryConcept;
    BOOL _enteredInError;
    NSString *_note;
    NSDate *_modifiedDate;
    HKFHIRIdentifier *_FHIRIdentifier;
    NSLocale *_locale;
    long long _extractionVersion;
    HKSemanticDate *_sortDate;
    NSString *_country;
    unsigned long long _state;
}

@property (readonly, copy, nonatomic) HKFHIRIdentifier *FHIRIdentifier; // @synthesize FHIRIdentifier=_FHIRIdentifier;
@property (readonly) NSUUID *UUID;
@property (readonly, copy, nonatomic) NSString *country;
@property (strong, nonatomic) NSString *country; // @synthesize country=_country;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *description;
@property (readonly) NSDate *endDate; // @dynamic endDate;
@property (readonly, nonatomic) BOOL enteredInError; // @synthesize enteredInError=_enteredInError;
@property (readonly, nonatomic) long long extractionVersion; // @synthesize extractionVersion=_extractionVersion;
@property (readonly) unsigned long long hash;
@property (readonly) unsigned long long hash;
@property (readonly) unsigned long long hash;
@property (readonly, copy, nonatomic) NSLocale *locale;
@property (readonly, copy, nonatomic) NSLocale *locale; // @synthesize locale=_locale;
@property (readonly, nonatomic) NSArray *medicalRecordCodings;
@property (readonly, copy, nonatomic) NSDate *modifiedDate; // @synthesize modifiedDate=_modifiedDate;
@property (readonly, copy, nonatomic) NSString *note; // @synthesize note=_note;
@property (readonly, nonatomic) HKConcept *primaryConcept;
@property (readonly, copy, nonatomic) HKSemanticDate *sortDate; // @synthesize sortDate=_sortDate;
@property (readonly) NSDate *startDate; // @dynamic startDate;
@property (readonly, nonatomic) unsigned long long state; // @synthesize state=_state;
@property (readonly) Class superclass;
@property (readonly) Class superclass;
@property (readonly) Class superclass;

+ (BOOL)_isConcreteObjectClass;
+ (id)_newMedicalRecordWithType:(id)arg1 note:(id)arg2 enteredInError:(BOOL)arg3 modifiedDate:(id)arg4 FHIRIdentifier:(id)arg5 locale:(id)arg6 extractionVersion:(long long)arg7 device:(id)arg8 metadata:(id)arg9 sortDate:(id)arg10 country:(id)arg11 state:(unsigned long long)arg12 config:(CDUnknownBlockType)arg13;
+ (id)_sortDateIntervalFromStartDateComponents:(id)arg1 endDateComponents:(id)arg2 error:(out id *)arg3;
+ (id)cachedConceptRelationshipKeyPaths;
+ (id)defaultDisplayString;
+ (id)indexableConceptKeyPaths;
+ (id)indexableKeyPathsWithPrefix:(id)arg1;
+ (BOOL)supportsEquivalence;
+ (BOOL)supportsSecureCoding;
- (void).cxx_destruct;
- (id)_init;
- (void)_setCountry:(id)arg1;
- (void)_setEnteredInError:(BOOL)arg1;
- (void)_setExtractionVersion:(long long)arg1;
- (void)_setFHIRIdentifier:(id)arg1;
- (void)_setLocale:(id)arg1;
- (void)_setModifiedDate:(id)arg1;
- (void)_setNote:(id)arg1;
- (void)_setPrimaryConcept:(id)arg1;
- (void)_setSortDate:(id)arg1;
- (void)_setState:(unsigned long long)arg1;
- (id)_validateWithConfiguration:(struct HKObjectValidationConfiguration)arg1;
- (BOOL)applyConcepts:(id)arg1 forKeyPath:(id)arg2 error:(id *)arg3;
- (id)codingsForKeyPath:(id)arg1 error:(id *)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)fallbackDisplayString;
- (id)initWithCoder:(id)arg1;
- (BOOL)isEquivalent:(id)arg1;

@end

