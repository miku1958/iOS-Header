//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <QuartzCore/CABrightnessControl-Protocol.h>

@class NSDictionary, NSSet, NSString;

@interface CAWindowServerDisplay : NSObject <CABrightnessControl>
{
    struct CAWindowServerDisplayImpl *_impl;
    BOOL _mirroringEnabled;
}

@property (copy) NSString *TVMode;
@property (copy) NSString *TVSignalType;
@property BOOL allowsDisplayCompositing;
@property BOOL allowsExtendedDynamicRange;
@property BOOL allowsVirtualModes;
@property struct CGColorTRC blackpointAdaptation;
@property (getter=isBlanked) BOOL blanked;
@property (strong) struct CGColorSpace *blendColorSpace;
@property (readonly) struct CGRect bounds;
@property (readonly, nonatomic) BOOL brightnessAvailable;
@property (copy) CDUnknownBlockType brightnessCallback;
@property (readonly, nonatomic) NSDictionary *brightnessCapabilities;
@property (readonly) CDStruct_31cefc2d chromaticities;
@property (readonly) CAWindowServerDisplay *cloneMaster;
@property (readonly) NSSet *clones;
@property (copy, nonatomic) NSString *colorMode;
@property float contrast;
@property (copy) NSDictionary *cursorDictionary;
@property BOOL cursorEnabled;
@property BOOL cursorHidden;
@property struct CGPoint cursorPosition;
@property (strong) struct __IOSurface *cursorSurface;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, getter=isDetaching) BOOL detaching;
@property (readonly) void *detachingDisplay;
@property (readonly) struct CGRect detachingRect;
@property (readonly) NSString *deviceName;
@property BOOL disabled;
@property BOOL disablesUpdates;
@property (strong) struct CGColorSpace *displayColorSpace;
@property (readonly) unsigned int displayId;
@property (readonly) long long displayType;
@property BOOL enabled;
@property (getter=isFlipBookEnabled) BOOL flipBookEnabled;
@property (readonly) unsigned int framebufferFormat;
@property (readonly) float gamma;
@property (getter=isGrayscale) BOOL grayscale;
@property (readonly) unsigned long long hash;
@property (copy) CDUnknownBlockType hotPlugCallback;
@property float idealRefreshRate;
@property BOOL invertsColors;
@property float maximumBrightness;
@property (readonly) struct CGSize maximumCursorSize;
@property (readonly) float maximumLuminance;
@property (readonly) double maximumScale;
@property (readonly) unsigned long long maximumSourceRectPixels;
@property (readonly) unsigned long long maximumSourceRectWidth;
@property (readonly) double minimumScale;
@property (readonly) unsigned long long minimumSourceRectSize;
@property (readonly) struct CGSize minimumVisibleCursorSize;
@property (getter=isMirroringEnabled) BOOL mirroringEnabled; // @synthesize mirroringEnabled=_mirroringEnabled;
@property (readonly) NSString *name;
@property (readonly) struct CGSize nativeSize;
@property (readonly) BOOL needsUpdate;
@property (readonly) double nextWakeupTime;
@property float nits;
@property (copy) NSString *orientation;
@property (copy) NSString *overscanAdjustment;
@property double overscanAmount;
@property struct CGSize overscanAmounts;
@property (readonly) struct CGSize panelPhysicalSize;
@property (readonly) unsigned long long panelPointsPerInch;
@property (readonly) unsigned long long previousVBL;
@property int processId;
@property (readonly) unsigned int rendererFlags;
@property double scale;
@property (getter=isSecure) BOOL secure;
@property (readonly) Class superclass;
@property (readonly) BOOL supportsColorSpaces;
@property (readonly) BOOL supportsCursor;
@property (readonly) BOOL supportsExtendedColors;
@property struct CGColorTRC systemGamma;
@property long long tag;
@property (readonly) long long transportType;
@property (readonly) BOOL tripleBuffered;
@property (readonly) NSString *uniqueId;
@property BOOL usesPreferredModeRefreshRate;
@property (readonly) unsigned long long vblDelta;
@property (readonly) BOOL wantedToDetach;
@property (readonly, nonatomic) BOOL whitePointAvailable;
@property (readonly, nonatomic) BOOL whitePointD50XYZ;
@property (readonly) CDStruct_b2fbf00d whitepoint;

- (id)_initWithCADisplayServer:(struct Server *)arg1;
- (void)abortColorMatrixRamp:(float *)arg1 scale:(float *)arg2;
- (void)abortContrastEnhancerRamp:(float *)arg1;
- (struct __IOSurface *)acquireFrozenSurface;
- (void)activateReplay;
- (void)addClone:(id)arg1;
- (void)addClone:(id)arg1 options:(id)arg2;
- (void)beginExternalUpdate:(void *)arg1 usingSoftwareRenderer:(BOOL)arg2;
- (BOOL)canUpdate:(BOOL)arg1;
- (BOOL)canUpdateWithFlags:(unsigned int)arg1;
- (unsigned int)clientPortAtPosition:(struct CGPoint)arg1;
- (unsigned int)clientPortOfContextId:(unsigned int)arg1;
- (BOOL)commitBrightness:(id *)arg1;
- (unsigned int)contextIdAtPosition:(struct CGPoint)arg1;
- (unsigned int)contextIdAtPosition:(struct CGPoint)arg1 excludingContextIds:(id)arg2;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 fromContextId:(unsigned int)arg2;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 toContextId:(unsigned int)arg2;
- (void)dealloc;
- (void)emitBrightnessError:(id *)arg1;
- (void)emitWhitePointError:(id *)arg1;
- (BOOL)finishExternalUpdate:(void *)arg1 withFlags:(unsigned int)arg2;
- (void)freeze;
- (id)hitTestAtPosition:(struct CGPoint)arg1 options:(id)arg2;
- (void)invalidate;
- (float)maximumRefreshRate;
- (float)minimumRefreshRate;
- (void)presentSurface:(struct __IOSurface *)arg1 withOptions:(id)arg2;
- (void)removeAllClones;
- (void)removeClone:(id)arg1;
- (void)setAccessibilityColorMatrix:(float *)arg1 scale:(float)arg2;
- (void)setAmbient:(float)arg1;
- (void)setCalibrationPhase:(unsigned int)arg1 forIdentifier:(unsigned int)arg2;
- (void)setColorMatrix:(float *)arg1 scale:(float)arg2 rampDuration:(double)arg3;
- (void)setContrastEnhancer:(float)arg1 rampDuration:(double)arg2;
- (BOOL)setDigitalModes:(id)arg1 withTimings:(id)arg2;
- (void)setGammaAdjustment:(struct CGColorTRC [3])arg1;
- (void)setHeadroom:(float)arg1;
- (void)setMaximumRefreshRate:(float)arg1;
- (void)setMinimumRefreshRate:(float)arg1;
- (void)setPotentialHeadroom:(float)arg1;
- (void)setSDRBrightness:(float)arg1;
- (unsigned int)taskNamePortOfContextId:(unsigned int)arg1;
- (struct CATransform3D)transformFromLayerId:(unsigned long long)arg1 inContextId:(unsigned int)arg2;
- (void)update;
- (void)willUnblank;

@end

