//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class AVAudioSession;

@interface CHHapticEngine : NSObject
{
    BOOL _running;
    BOOL _autoShutdownEnabled;
    unsigned int _audioSessionID;
    CDUnknownBlockType _stoppedHandler;
    CDUnknownBlockType _resetHandler;
    AVAudioSession *_avAudioSession;
}

@property (nonatomic) BOOL activateAudioSessionOnStart;
@property (nonatomic) BOOL audioIsMuted;
@property (readonly) unsigned int audioSessionID; // @synthesize audioSessionID=_audioSessionID;
@property (nonatomic, getter=isAutoShutdownEnabled) BOOL autoShutdownEnabled; // @synthesize autoShutdownEnabled=_autoShutdownEnabled;
@property (readonly) AVAudioSession *avAudioSession; // @synthesize avAudioSession=_avAudioSession;
@property (readonly) double currentTime;
@property (nonatomic) BOOL followAudioRoute;
@property (nonatomic) BOOL hapticsIsMuted;
@property (nonatomic) BOOL hapticsOnly;
@property (nonatomic) BOOL highPriority;
@property (nonatomic) BOOL isMutedForAudio;
@property (nonatomic) BOOL isMutedForHaptics;
@property (nonatomic) BOOL muteAudioOnRingerOff;
@property (nonatomic) BOOL muteHapticsWhileRecordingAudio;
@property (nonatomic) BOOL playsHapticsOnly;
@property (copy) CDUnknownBlockType resetHandler; // @synthesize resetHandler=_resetHandler;
@property BOOL running; // @synthesize running=_running;
@property (copy) CDUnknownBlockType stoppedHandler; // @synthesize stoppedHandler=_stoppedHandler;

+ (id)capabilitiesForHardware;
+ (BOOL)supports1stPartyHaptics;
- (void).cxx_destruct;
- (id)createAdvancedPlayerWithPattern:(id)arg1 error:(id *)arg2;
- (id)createAdvancedPlayerWithRingtoneData:(id)arg1 error:(id *)arg2;
- (id)createAdvancedPlayerWithRingtonePattern:(id)arg1 error:(id *)arg2;
- (id)createPlayerWithEvent:(id)arg1 error:(id *)arg2;
- (id)createPlayerWithPattern:(id)arg1 error:(id *)arg2;
- (id)createPrivilegedPlayerWithPlayable:(id)arg1 error:(id *)arg2;
- (void)dealloc;
- (BOOL)doInit;
- (double)getDurationForResource:(unsigned long long)arg1;
- (id)init;
- (id)initAndReturnError:(id *)arg1;
- (id)initWithAudioSession:(id)arg1 error:(id *)arg2;
- (id)initWithAudioSession:(id)arg1 sessionIsShared:(BOOL)arg2 error:(id *)arg3;
- (id)initWithAudioSessionID:(unsigned int)arg1 error:(id *)arg2;
- (void)notifyWhenPlayersFinished:(CDUnknownBlockType)arg1;
- (BOOL)playPatternFromData:(id)arg1 error:(id *)arg2;
- (BOOL)playPatternFromURL:(id)arg1 error:(id *)arg2;
- (void)prewarmWithCompletionHandler:(CDUnknownBlockType)arg1;
- (unsigned long long)registerAudioResource:(id)arg1 options:(id)arg2 error:(id *)arg3;
- (BOOL)resourceIsRegistered:(unsigned long long)arg1;
- (BOOL)startAndReturnError:(id *)arg1;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)stopPrewarm;
- (void)stopWithCompletionHandler:(CDUnknownBlockType)arg1;
- (BOOL)unregisterAudioResource:(unsigned long long)arg1 error:(id *)arg2;

@end

