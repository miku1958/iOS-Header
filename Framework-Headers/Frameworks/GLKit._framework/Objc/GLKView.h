//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIView.h>

#import <GLKit/NSCoding-Protocol.h>

@class EAGLContext, NSMutableDictionary, UIImage;
@protocol GLKViewDelegate;

@interface GLKView : UIView <NSCoding>
{
    BOOL _inDraw;
    BOOL _shouldDeleteFramebuffer;
    BOOL _enableSetNeedsDisplay;
    unsigned int _resolveFramebuffer;
    unsigned int _resolveColorRenderbuffer;
    unsigned int _multisampleFramebuffer;
    unsigned int _multisampleColorRenderbuffer;
    unsigned int _depthRenderbuffer;
    unsigned int _stencilRenderbuffer;
    unsigned int _depthStencilRenderbuffer;
    int _drawableColorFormat;
    int _drawableDepthFormat;
    int _drawableStencilFormat;
    int _drawableMultisample;
    NSMutableDictionary *_drawableProperties;
    double _viewContentScaleFactor;
    id<GLKViewDelegate> _delegate;
    EAGLContext *_context;
    long long _drawableWidth;
    long long _drawableHeight;
    CDUnknownFunctionPointerType _drawRectIMP;
    struct CGRect _viewBounds;
}

@property (strong, nonatomic) EAGLContext *context; // @synthesize context=_context;
@property (nonatomic) id<GLKViewDelegate> delegate; // @synthesize delegate=_delegate;
@property (nonatomic) unsigned int depthRenderbuffer; // @synthesize depthRenderbuffer=_depthRenderbuffer;
@property (nonatomic) unsigned int depthStencilRenderbuffer; // @synthesize depthStencilRenderbuffer=_depthStencilRenderbuffer;
@property (nonatomic) CDUnknownFunctionPointerType drawRectIMP; // @synthesize drawRectIMP=_drawRectIMP;
@property (nonatomic) int drawableColorFormat; // @synthesize drawableColorFormat=_drawableColorFormat;
@property (nonatomic) int drawableDepthFormat; // @synthesize drawableDepthFormat=_drawableDepthFormat;
@property (readonly, nonatomic) long long drawableHeight; // @synthesize drawableHeight=_drawableHeight;
@property (nonatomic) int drawableMultisample; // @synthesize drawableMultisample=_drawableMultisample;
@property (strong, nonatomic) NSMutableDictionary *drawableProperties; // @synthesize drawableProperties=_drawableProperties;
@property (nonatomic) int drawableStencilFormat; // @synthesize drawableStencilFormat=_drawableStencilFormat;
@property (readonly, nonatomic) long long drawableWidth; // @synthesize drawableWidth=_drawableWidth;
@property (nonatomic) BOOL enableSetNeedsDisplay; // @synthesize enableSetNeedsDisplay=_enableSetNeedsDisplay;
@property (nonatomic) BOOL inDraw; // @synthesize inDraw=_inDraw;
@property (nonatomic) unsigned int multisampleColorRenderbuffer; // @synthesize multisampleColorRenderbuffer=_multisampleColorRenderbuffer;
@property (nonatomic) unsigned int multisampleFramebuffer; // @synthesize multisampleFramebuffer=_multisampleFramebuffer;
@property (nonatomic) unsigned int resolveColorRenderbuffer; // @synthesize resolveColorRenderbuffer=_resolveColorRenderbuffer;
@property (nonatomic) unsigned int resolveFramebuffer; // @synthesize resolveFramebuffer=_resolveFramebuffer;
@property (nonatomic) BOOL shouldDeleteFramebuffer; // @synthesize shouldDeleteFramebuffer=_shouldDeleteFramebuffer;
@property (readonly) UIImage *snapshot;
@property (nonatomic) unsigned int stencilRenderbuffer; // @synthesize stencilRenderbuffer=_stencilRenderbuffer;
@property (nonatomic) struct CGRect viewBounds; // @synthesize viewBounds=_viewBounds;
@property (nonatomic) double viewContentScaleFactor; // @synthesize viewContentScaleFactor=_viewContentScaleFactor;

+ (Class)layerClass;
- (BOOL)_canDrawContent;
- (BOOL)_controlsOwnScaleFactor;
- (void)_createFramebuffer;
- (void)_deleteFramebuffer;
- (void)_display:(BOOL)arg1;
- (void)_initCommon;
- (BOOL)_presentFramebuffer;
- (void)_resolveAndDiscard;
- (void)_setFramebuffer:(BOOL *)arg1;
- (void)bindDrawable;
- (void)dealloc;
- (void)deleteDrawable;
- (void)display;
- (void)displayLayer:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (void)layoutSubviews;
- (void)setContentScaleFactor:(double)arg1;

@end

