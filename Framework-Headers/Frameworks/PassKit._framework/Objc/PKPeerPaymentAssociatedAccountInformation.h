//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <PassKitCore/NSSecureCoding-Protocol.h>

@class NSDate, NSSet;

@interface PKPeerPaymentAssociatedAccountInformation : NSObject <NSSecureCoding>
{
    BOOL _associatedAccountStateDirty;
    NSSet *_associatedAccounts;
    NSSet *_associatedAccountInvitations;
    NSSet *_associatedAccountRemovalRecords;
    double _proactiveAssociatedAccountFetchPeriod;
    NSDate *_lastUpdated;
    NSDate *_nextPossibleFetchDate;
    long long _backoffRetryLevel;
}

@property (copy, nonatomic) NSSet *associatedAccountInvitations; // @synthesize associatedAccountInvitations=_associatedAccountInvitations;
@property (copy, nonatomic) NSSet *associatedAccountRemovalRecords; // @synthesize associatedAccountRemovalRecords=_associatedAccountRemovalRecords;
@property (nonatomic, getter=isAssociatedAccountStateDirty) BOOL associatedAccountStateDirty; // @synthesize associatedAccountStateDirty=_associatedAccountStateDirty;
@property (copy, nonatomic) NSSet *associatedAccounts; // @synthesize associatedAccounts=_associatedAccounts;
@property (nonatomic) long long backoffRetryLevel; // @synthesize backoffRetryLevel=_backoffRetryLevel;
@property (copy, nonatomic) NSDate *lastUpdated; // @synthesize lastUpdated=_lastUpdated;
@property (strong, nonatomic) NSDate *nextPossibleFetchDate; // @synthesize nextPossibleFetchDate=_nextPossibleFetchDate;
@property (nonatomic) double proactiveAssociatedAccountFetchPeriod; // @synthesize proactiveAssociatedAccountFetchPeriod=_proactiveAssociatedAccountFetchPeriod;

+ (BOOL)supportsSecureCoding;
- (void).cxx_destruct;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (void)enumerateAccountInvitationsUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateAssociatedAccountsUsingBlock:(CDUnknownBlockType)arg1;
- (unsigned long long)hash;
- (id)initWithCoder:(id)arg1;
- (id)initWithDictionary:(id)arg1 lastUpdated:(id)arg2;
- (BOOL)isEqual:(id)arg1;
- (void)markAssociatedAccountActiveWithAltDSID:(id)arg1 hasPresentedNotification:(BOOL)arg2;
- (void)markAssociatedAccountRemovalRecordWithAltDSID:(id)arg1 hasPresentedNotification:(BOOL)arg2;

@end

