//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <PassKitCore/PKPassImageSet.h>

@class PKImage;

@interface PKPassLogoImageSet : PKPassImageSet
{
    PKImage *_logoImage;
    PKImage *_backgroundImage;
    PKImage *_thumbnailImage;
    PKImage *_stripImage;
    PKImage *_footerImage;
    PKImage *_bankLogoImage;
    PKImage *_networkLogoImage;
    PKImage *_cobrandLogoImage;
    PKImage *_cardBackgroundImage;
    PKImage *_cardBackgroundCombinedImage;
    PKImage *_compactBankLogoDarkImage;
    PKImage *_compactBankLogoLightImage;
}

@property (strong, nonatomic) PKImage *backgroundImage; // @synthesize backgroundImage=_backgroundImage;
@property (strong, nonatomic) PKImage *bankLogoImage; // @synthesize bankLogoImage=_bankLogoImage;
@property (strong, nonatomic) PKImage *cardBackgroundCombinedImage; // @synthesize cardBackgroundCombinedImage=_cardBackgroundCombinedImage;
@property (strong, nonatomic) PKImage *cardBackgroundImage; // @synthesize cardBackgroundImage=_cardBackgroundImage;
@property (strong, nonatomic) PKImage *cobrandLogoImage; // @synthesize cobrandLogoImage=_cobrandLogoImage;
@property (strong, nonatomic) PKImage *compactBankLogoDarkImage; // @synthesize compactBankLogoDarkImage=_compactBankLogoDarkImage;
@property (strong, nonatomic) PKImage *compactBankLogoLightImage; // @synthesize compactBankLogoLightImage=_compactBankLogoLightImage;
@property (strong, nonatomic) PKImage *footerImage; // @synthesize footerImage=_footerImage;
@property (strong, nonatomic) PKImage *logoImage; // @synthesize logoImage=_logoImage;
@property (strong, nonatomic) PKImage *networkLogoImage; // @synthesize networkLogoImage=_networkLogoImage;
@property (strong, nonatomic) PKImage *stripImage; // @synthesize stripImage=_stripImage;
@property (strong, nonatomic) PKImage *thumbnailImage; // @synthesize thumbnailImage=_thumbnailImage;

+ (id)archiveName;
+ (unsigned int)currentVersion;
+ (long long)imageSetType;
+ (BOOL)shouldCache;
+ (BOOL)supportsSecureCoding;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)hash;
- (id)initWithCoder:(id)arg1;
- (id)initWithDisplayProfile:(id)arg1 fileURL:(id)arg2 screenScale:(double)arg3 suffix:(id)arg4;
- (BOOL)isEqual:(id)arg1;
- (void)preheatImages;

@end

