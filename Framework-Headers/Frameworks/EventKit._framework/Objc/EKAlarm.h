//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <EventKit/EKObject.h>

#import <EventKit/NSCopying-Protocol.h>

@class EKCalendar, EKCalendarItem, EKStructuredLocation, NSArray, NSDate, NSString, NSURL;

@interface EKAlarm : EKObject <NSCopying>
{
    long long _type;
    NSString *_emailAddress;
    NSString *_soundName;
    NSURL *_url;
}

@property (readonly, nonatomic) NSString *UUID;
@property (copy, nonatomic) NSDate *absoluteDate;
@property (readonly, nonatomic) EKCalendarItem *calendarItemOwner;
@property (readonly, nonatomic) EKCalendar *calendarOwner;
@property (nonatomic, getter=isDefaultAlarm) BOOL defaultAlarm;
@property (copy, nonatomic) NSString *emailAddress; // @synthesize emailAddress=_emailAddress;
@property (readonly, nonatomic) NSString *externalID;
@property (readonly, nonatomic) BOOL isAbsolute;
@property (nonatomic) BOOL isSnoozed;
@property (strong, nonatomic) EKAlarm *originalAlarm;
@property (readonly, nonatomic) EKObject *owner;
@property (nonatomic) long long proximity;
@property (nonatomic) double relativeOffset;
@property (copy, nonatomic) NSArray *snoozedAlarms;
@property (copy, nonatomic) NSString *soundName; // @synthesize soundName=_soundName;
@property (copy, nonatomic) EKStructuredLocation *structuredLocation;
@property (readonly, nonatomic) long long type; // @synthesize type=_type;
@property (copy, nonatomic) NSURL *url; // @synthesize url=_url;

+ (int)_currentAuthorizationStatus;
+ (id)alarmWithAbsoluteDate:(id)arg1;
+ (id)alarmWithAlarm:(id)arg1;
+ (id)alarmWithRelativeOffset:(double)arg1;
+ (BOOL)areLocationsAllowed;
+ (BOOL)areLocationsAllowedWithAuthorizationStatus:(int)arg1;
+ (BOOL)areLocationsAvailable;
+ (BOOL)areLocationsCurrentlyEnabled;
+ (double)defaultGeofencedReminderRadius;
+ (Class)frozenClass;
+ (id)knownRelationshipMultiValueKeys;
+ (id)knownRelationshipSingleValueKeys;
+ (long long)maxPublicProximity;
+ (id)noneTriggerDate;
- (void).cxx_destruct;
- (BOOL)_reset;
- (id)acknowledgedDate;
- (void)addSnoozedAlarm:(id)arg1;
- (long long)alarmType;
- (long long)compare:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (id)init;
- (id)initWithAbsoluteDate:(id)arg1;
- (id)initWithRelativeOffset:(double)arg1;
- (BOOL)isTimeToLeaveAlarm;
- (BOOL)isTopographicallyEqualToAlarm:(id)arg1;
- (BOOL)isVehicleAlarm;
- (id)ownerUUID;
- (id)relativeOffsetRaw;
- (void)removeSnoozedAlarm:(id)arg1;
- (id)semanticIdentifier;
- (void)setAcknowledgedDate:(id)arg1;
- (void)setAlarmType:(long long)arg1;
- (void)setIsTimeToLeaveAlarm:(BOOL)arg1;
- (void)setRelativeOffsetRaw:(id)arg1;
- (void)setTriggerIsNotRelativeToTravelTime:(BOOL)arg1;
- (void)setUUID:(id)arg1;
- (BOOL)shouldIncludeInNormalAlarms;
- (BOOL)triggerIsNotRelativeToTravelTime;
- (BOOL)validateWithOwner:(id)arg1 error:(id *)arg2;

@end

