//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class EKObject, NSDictionary, NSSet;

@interface EKDiff : NSObject
{
    int _result;
    EKObject *_firstObject;
    EKObject *_secondObject;
    NSSet *_differentIdentityKeys;
    NSSet *_differentImmutableKeys;
    NSSet *_differentSingleValueKeys;
    NSSet *_differentRelationshipSingleValueKeys;
    NSSet *_differentRelationshipMultiValueKeys;
    NSDictionary *_relationshipMultiValueAdds;
    NSDictionary *_relationshipMultiValueRemoves;
    NSDictionary *_relationshipMultiValueModifies;
    NSDictionary *_relationshipSingleValueModifies;
}

@property (strong, nonatomic) NSSet *differentIdentityKeys; // @synthesize differentIdentityKeys=_differentIdentityKeys;
@property (strong, nonatomic) NSSet *differentImmutableKeys; // @synthesize differentImmutableKeys=_differentImmutableKeys;
@property (strong, nonatomic) NSSet *differentRelationshipMultiValueKeys; // @synthesize differentRelationshipMultiValueKeys=_differentRelationshipMultiValueKeys;
@property (strong, nonatomic) NSSet *differentRelationshipSingleValueKeys; // @synthesize differentRelationshipSingleValueKeys=_differentRelationshipSingleValueKeys;
@property (strong, nonatomic) NSSet *differentSingleValueKeys; // @synthesize differentSingleValueKeys=_differentSingleValueKeys;
@property (strong, nonatomic) EKObject *firstObject; // @synthesize firstObject=_firstObject;
@property (strong, nonatomic) NSDictionary *relationshipMultiValueAdds; // @synthesize relationshipMultiValueAdds=_relationshipMultiValueAdds;
@property (strong, nonatomic) NSDictionary *relationshipMultiValueModifies; // @synthesize relationshipMultiValueModifies=_relationshipMultiValueModifies;
@property (strong, nonatomic) NSDictionary *relationshipMultiValueRemoves; // @synthesize relationshipMultiValueRemoves=_relationshipMultiValueRemoves;
@property (strong, nonatomic) NSDictionary *relationshipSingleValueModifies; // @synthesize relationshipSingleValueModifies=_relationshipSingleValueModifies;
@property (nonatomic) int result; // @synthesize result=_result;
@property (strong, nonatomic) EKObject *secondObject; // @synthesize secondObject=_secondObject;

+ (id)_addChangeStarIfChangedKey:(id)arg1 onObject:(id)arg2;
+ (void)_addObject:(id)arg1 forKey:(id)arg2 toDiff:(id)arg3;
+ (void)_addPaddedHeaderToMutableString:(id)arg1 forKey:(id)arg2 withDepth:(long long)arg3;
+ (void)_addSummaryWithDepth:(long long)arg1 toMutableString:(id)arg2 forRelationshipMultiValueKeys:(id)arg3 firstObject:(id)arg4 secondObject:(id)arg5;
+ (void)_addSummaryWithDepth:(long long)arg1 toMutableString:(id)arg2 forRelationshipSingleValueKeys:(id)arg3 firstObject:(id)arg4 secondObject:(id)arg5;
+ (void)_addSummaryWithDepth:(long long)arg1 toMutableString:(id)arg2 forSingleValueKeys:(id)arg3 firstObject:(id)arg4 secondObject:(id)arg5;
+ (id)_indentStringAtDepth:(long long)arg1;
+ (id)_keysToIgnoreForComputingDiff;
+ (void)_populateIdentityKeysForDiff:(id)arg1;
+ (void)_populateImmutableKeysForDiff:(id)arg1;
+ (void)_populateMultiValueRelationshipKeysForDiff:(id)arg1;
+ (void)_populateSingleValueKeysForDiff:(id)arg1;
+ (void)_populateSingleValueRelationshipKeysForDiff:(id)arg1;
+ (id)diffBetweenObject:(id)arg1 andObject:(id)arg2;
- (void).cxx_destruct;
- (id)_multiValueModifiedObjectsForKey:(id)arg1;
- (id)_nonNilObject;
- (void)_summarizeDiffsBetweenFirstObject:(id)arg1 secondObject:(id)arg2 mutableString:(id)arg3 depth:(long long)arg4;
- (id)changeSetForDiff;
- (id)differentKeys;
- (id)initWithFirstObject:(id)arg1 secondObject:(id)arg2;
- (id)summaryDictionary;
- (id)summaryString;

@end

