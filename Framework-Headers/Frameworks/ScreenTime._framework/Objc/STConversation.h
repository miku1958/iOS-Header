//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class CNContactStore, CNDowntimeWhitelist, DMFApplicationPolicyMonitor, DMFCommunicationPolicyMonitor, DMFEmergencyModeMonitor, NSMapTable, NSString, STManagementState;
@protocol OS_dispatch_queue;

@interface STConversation : NSObject
{
    NSMapTable *_contextByHandles;
    NSObject<OS_dispatch_queue> *_stateChangeQueue;
    NSObject *_didFetchInitialStateLock;
    BOOL _isThirdPartyBundleIdentifier;
    BOOL _emergencyModeEnabled;
    BOOL _didFetchInitialScreenTimePolicyState;
    BOOL _didFetchInitialApplicationState;
    BOOL _didFetchInitialEmergencyModeState;
    BOOL _didFetchInitialThirdPartyApplicationState;
    int _policyNotifyToken;
    int _emergencyModeNotifyToken;
    CNContactStore *_contactStore;
    CNDowntimeWhitelist *_whitelist;
    STManagementState *_managementState;
    DMFCommunicationPolicyMonitor *_communicationPolicyMonitor;
    DMFApplicationPolicyMonitor *_thirdPartyApplicationPolicyMonitor;
    NSString *_bundleIdentifier;
    long long _generalScreenTimePolicy;
    long long _whileLimitedPolicy;
    unsigned long long _currentApplicationState;
    long long _currentThirdPartyApplicationState;
    DMFEmergencyModeMonitor *_emergencyModeMonitor;
    STConversation *_me;
    CDUnknownBlockType _conversationCompletionHandler;
}

@property (readonly, copy) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property (strong) DMFCommunicationPolicyMonitor *communicationPolicyMonitor; // @synthesize communicationPolicyMonitor=_communicationPolicyMonitor;
@property (readonly) CNContactStore *contactStore; // @synthesize contactStore=_contactStore;
@property (copy) CDUnknownBlockType conversationCompletionHandler; // @synthesize conversationCompletionHandler=_conversationCompletionHandler;
@property unsigned long long currentApplicationState; // @synthesize currentApplicationState=_currentApplicationState;
@property long long currentThirdPartyApplicationState; // @synthesize currentThirdPartyApplicationState=_currentThirdPartyApplicationState;
@property BOOL didFetchInitialApplicationState; // @synthesize didFetchInitialApplicationState=_didFetchInitialApplicationState;
@property BOOL didFetchInitialEmergencyModeState; // @synthesize didFetchInitialEmergencyModeState=_didFetchInitialEmergencyModeState;
@property BOOL didFetchInitialScreenTimePolicyState; // @synthesize didFetchInitialScreenTimePolicyState=_didFetchInitialScreenTimePolicyState;
@property BOOL didFetchInitialThirdPartyApplicationState; // @synthesize didFetchInitialThirdPartyApplicationState=_didFetchInitialThirdPartyApplicationState;
@property BOOL emergencyModeEnabled; // @synthesize emergencyModeEnabled=_emergencyModeEnabled;
@property (strong) DMFEmergencyModeMonitor *emergencyModeMonitor; // @synthesize emergencyModeMonitor=_emergencyModeMonitor;
@property (readonly) int emergencyModeNotifyToken; // @synthesize emergencyModeNotifyToken=_emergencyModeNotifyToken;
@property long long generalScreenTimePolicy; // @synthesize generalScreenTimePolicy=_generalScreenTimePolicy;
@property (readonly) BOOL isThirdPartyBundleIdentifier; // @synthesize isThirdPartyBundleIdentifier=_isThirdPartyBundleIdentifier;
@property (strong) STManagementState *managementState; // @synthesize managementState=_managementState;
@property (strong) STConversation *me; // @synthesize me=_me;
@property (readonly) int policyNotifyToken; // @synthesize policyNotifyToken=_policyNotifyToken;
@property (strong) DMFApplicationPolicyMonitor *thirdPartyApplicationPolicyMonitor; // @synthesize thirdPartyApplicationPolicyMonitor=_thirdPartyApplicationPolicyMonitor;
@property long long whileLimitedPolicy; // @synthesize whileLimitedPolicy=_whileLimitedPolicy;
@property (readonly) CNDowntimeWhitelist *whitelist; // @synthesize whitelist=_whitelist;

+ (void)requestConversationWithBundleIdentifier:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void).cxx_destruct;
- (void)_contactStoreDidChange;
- (id)_contactsByHandle:(id)arg1 error:(id *)arg2;
- (void)_currentApplicationStateDidChange;
- (void)_currentThirdPartyApplicationStateDidChange;
- (BOOL)_doesContainAtLeastOneContactInHandles:(id)arg1 contactsByHandle:(id)arg2;
- (void)_emergencyModeDidChange;
- (id)_filteredArrayForKnownHandlesInArray:(id)arg1;
- (void)_populateAllowedContactsByHandlesForContactHandles:(id)arg1 context:(id)arg2;
- (void)_populateThirdPartyAllowedContactsByHandlesForContactHandles:(id)arg1 context:(id)arg2;
- (void)_screenTimePolicyDidChange;
- (BOOL)_shouldGeneralScreenTimeAllowHandles:(id)arg1 context:(id)arg2;
- (BOOL)_shouldWhileLimitedAllowHandles:(id)arg1 context:(id)arg2;
- (void)_stConversationCommonInitSetupObservationOfStateChanges;
- (void)_stConversationCommonInitWithBundleIdentifier:(id)arg1 contactStore:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_stConversationCommonInitWithThirdPartyBundleIdentifier:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_updateAllContextsForNewWhileLimitedPolicyOrWhitelist;
- (void)_updateAllContextsUpdateGeneral:(BOOL)arg1 updateLimited:(BOOL)arg2 updateCurrentApplicationState:(BOOL)arg3 updateAllowedByContactsHandle:(BOOL)arg4 refreshContacts:(BOOL)arg5 refreshWhitelist:(BOOL)arg6 updateEmergencyMode:(BOOL)arg7;
- (void)_updateAllThirdPartyContexts;
- (void)_updateContext:(id)arg1 forHandles:(id)arg2 updateGeneral:(BOOL)arg3 updateLimited:(BOOL)arg4 updateCurrentApplicationState:(BOOL)arg5 updateAllowedByContactsHandle:(BOOL)arg6 refreshContacts:(BOOL)arg7 refreshWhitelist:(BOOL)arg8 updateEmergencyMode:(BOOL)arg9;
- (void)_updateThirdPartyContext:(id)arg1 forHandles:(id)arg2;
- (id)allowableByContactsHandles:(id)arg1;
- (void)callCompletionHandlerIfNeededWithConversation:(id)arg1 error:(id)arg2;
- (void)callCompletionHandlerIfNeededWithThirdPartyConversation:(id)arg1 error:(id)arg2;
- (void)dealloc;
- (id)initSynchronouslyWithBundleIdentifier:(id)arg1;
- (id)initSynchronouslyWithThirdPartyBundleIdentifier:(id)arg1;
- (id)initWithBundleIdentifier:(id)arg1;
- (id)initWithBundleIdentifier:(id)arg1 contactStore:(id)arg2;
- (id)initWithBundleIdentifier:(id)arg1 contactStore:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)initWithThirdPartyBundleIdentifier:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;

@end

