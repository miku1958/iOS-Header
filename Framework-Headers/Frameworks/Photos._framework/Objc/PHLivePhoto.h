//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <Photos/NSCopying-Protocol.h>
#import <Photos/NSSecureCoding-Protocol.h>

@class AVAsset, NSString, NSURL, PHAsset, PHImageManager, PHSandboxExtensionWrapper, UIImage;

@interface PHLivePhoto : NSObject <NSCopying, NSSecureCoding>
{
    NSString *_uniqueIdentifier;
    UIImage *_image;
    AVAsset *_videoAsset;
    unsigned long long _options;
    NSString *_assetLocalIdentifier;
    NSURL *_imageURL;
    PHSandboxExtensionWrapper *_imageURLSandboxExtensionWrapper;
    NSURL *_videoURL;
    PHSandboxExtensionWrapper *_videoURLSandboxExtensionWrapper;
    long long _contentMode;
    PHImageManager *_imageManager;
    PHAsset *_asset;
    struct CGSize _size;
    struct CGSize _targetSize;
    CDStruct_1b6d18a9 _photoTime;
}

@property (weak, nonatomic) PHAsset *asset; // @synthesize asset=_asset;
@property (readonly, copy, nonatomic) NSString *assetLocalIdentifier; // @synthesize assetLocalIdentifier=_assetLocalIdentifier;
@property (readonly, nonatomic) long long contentMode; // @synthesize contentMode=_contentMode;
@property (readonly, nonatomic) UIImage *image; // @synthesize image=_image;
@property (readonly, nonatomic) CDUnknownBlockType imageFileLoader;
@property (weak, nonatomic) PHImageManager *imageManager; // @synthesize imageManager=_imageManager;
@property (readonly, nonatomic) NSString *imageTypeIdentifier;
@property (readonly, nonatomic) NSURL *imageURL; // @synthesize imageURL=_imageURL;
@property (readonly, nonatomic) PHSandboxExtensionWrapper *imageURLSandboxExtensionWrapper; // @synthesize imageURLSandboxExtensionWrapper=_imageURLSandboxExtensionWrapper;
@property (readonly, nonatomic) unsigned long long options; // @synthesize options=_options;
@property (readonly, nonatomic) NSString *originalFilename;
@property (readonly, nonatomic) CDStruct_1b6d18a9 photoTime; // @synthesize photoTime=_photoTime;
@property (readonly, nonatomic) struct CGSize size; // @synthesize size=_size;
@property (readonly, nonatomic) struct CGSize targetSize; // @synthesize targetSize=_targetSize;
@property (readonly) NSString *uniqueIdentifier; // @synthesize uniqueIdentifier=_uniqueIdentifier;
@property (readonly, nonatomic) AVAsset *videoAsset; // @synthesize videoAsset=_videoAsset;
@property (readonly, nonatomic) CDUnknownBlockType videoFileLoader;
@property (readonly, nonatomic) NSString *videoTypeIdentifier;
@property (readonly, nonatomic) NSURL *videoURL; // @synthesize videoURL=_videoURL;
@property (readonly, nonatomic) PHSandboxExtensionWrapper *videoURLSandboxExtensionWrapper; // @synthesize videoURLSandboxExtensionWrapper=_videoURLSandboxExtensionWrapper;

+ (BOOL)_canCreateLivePhotoWithURLs:(id)arg1 outError:(id *)arg2;
+ (void)_identifyResourceURLs:(id)arg1 outError:(id *)arg2 outImageURL:(id *)arg3 outVideoURL:(id *)arg4;
+ (CDStruct_1b6d18a9)_photoTimeForLivePhotoWithImageURL:(id)arg1 videoURL:(id)arg2;
+ (void)cancelLivePhotoRequestWithRequestID:(int)arg1;
+ (id)livePhotoWithResourceFileURLs:(id)arg1 error:(id *)arg2;
+ (id)livePhotoWithResourceFileURLs:(id)arg1 targetSize:(struct CGSize)arg2 contentMode:(long long)arg3 error:(id *)arg4;
+ (int)requestLivePhotoWithResourceFileURLs:(id)arg1 placeholderImage:(id)arg2 targetSize:(struct CGSize)arg3 contentMode:(long long)arg4 resultHandler:(CDUnknownBlockType)arg5;
+ (BOOL)supportsSecureCoding;
- (void).cxx_destruct;
- (id)_asset;
- (void)_ensureConstituentData;
- (id)_imageManager;
- (id)_initWithImageURL:(id)arg1 videoURL:(id)arg2 targetSize:(struct CGSize)arg3 contentMode:(long long)arg4;
- (void)_loadConstituentURLsWithNetworkAccessAllowed:(BOOL)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (BOOL)_synchronouslyLoadImageURL:(id *)arg1 videoURL:(id *)arg2 error:(id *)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (BOOL)hasPhotoColorAdjustments;
- (id)initWithCoder:(id)arg1;
- (id)initWithImage:(id)arg1 videoAsset:(id)arg2 photoTime:(CDStruct_1b6d18a9)arg3 assetLocalIdentifier:(id)arg4;
- (id)initWithImage:(id)arg1 videoAsset:(id)arg2 photoTime:(CDStruct_1b6d18a9)arg3 assetLocalIdentifier:(id)arg4 options:(unsigned long long)arg5;
- (void)saveToPhotoLibraryWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)videoComplement;

@end

