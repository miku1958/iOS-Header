//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <Metal/NSCopying-Protocol.h>

@class MTLRenderPassColorAttachmentDescriptorArray, MTLRenderPassDepthAttachmentDescriptor, MTLRenderPassSampleBufferAttachmentDescriptorArray, MTLRenderPassStencilAttachmentDescriptor;
@protocol MTLBuffer, MTLRasterizationRateMap;

@interface MTLRenderPassDescriptor : NSObject <NSCopying>
{
    unsigned long long _imageblockSampleLength;
    unsigned long long _threadgroupMemoryLength;
    unsigned long long _tileWidth;
    unsigned long long _tileHeight;
}

@property (readonly) MTLRenderPassColorAttachmentDescriptorArray *colorAttachments; // @dynamic colorAttachments;
@property (nonatomic) unsigned long long defaultRasterSampleCount; // @dynamic defaultRasterSampleCount;
@property (copy, nonatomic) MTLRenderPassDepthAttachmentDescriptor *depthAttachment; // @dynamic depthAttachment;
@property (nonatomic) unsigned long long imageblockSampleLength; // @synthesize imageblockSampleLength=_imageblockSampleLength;
@property (strong, nonatomic) id<MTLRasterizationRateMap> rasterizationRateMap; // @dynamic rasterizationRateMap;
@property (nonatomic) unsigned long long renderTargetArrayLength; // @dynamic renderTargetArrayLength;
@property (nonatomic) unsigned long long renderTargetHeight; // @dynamic renderTargetHeight;
@property (nonatomic) unsigned long long renderTargetWidth; // @dynamic renderTargetWidth;
@property (readonly) MTLRenderPassSampleBufferAttachmentDescriptorArray *sampleBufferAttachments; // @dynamic sampleBufferAttachments;
@property (copy, nonatomic) MTLRenderPassStencilAttachmentDescriptor *stencilAttachment; // @dynamic stencilAttachment;
@property (nonatomic) unsigned long long threadgroupMemoryLength; // @synthesize threadgroupMemoryLength=_threadgroupMemoryLength;
@property (nonatomic) unsigned long long tileHeight; // @synthesize tileHeight=_tileHeight;
@property (nonatomic) unsigned long long tileWidth; // @synthesize tileWidth=_tileWidth;
@property (strong, nonatomic) id<MTLBuffer> visibilityResultBuffer; // @dynamic visibilityResultBuffer;

+ (id)alloc;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)renderPassDescriptor;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)getSamplePositions:(CDStruct_6e3f967a *)arg1 count:(unsigned long long)arg2;
- (void)setSamplePositions:(const CDStruct_6e3f967a *)arg1 count:(unsigned long long)arg2;

@end

