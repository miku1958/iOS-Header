//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <Metal/MTLArgumentEncoder-Protocol.h>

@class NSString, _MTLIndirectArgumentBufferLayout;
@protocol MTLDevice;

@interface _MTLIndirectArgumentEncoder : NSObject <MTLArgumentEncoder>
{
    id<MTLDevice> _device;
    NSString *_label;
    _MTLIndirectArgumentBufferLayout *_layout;
}

@property (readonly) unsigned long long alignment; // @dynamic alignment;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) id<MTLDevice> device;
@property (readonly) unsigned long long encodedLength; // @dynamic encodedLength;
@property (readonly) unsigned long long hash;
@property (copy) NSString *label; // @synthesize label=_label;
@property (readonly, nonatomic) _MTLIndirectArgumentBufferLayout *layout; // @synthesize layout=_layout;
@property (readonly) Class superclass;

- (void *)constantDataAtIndex:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithLayout:(id)arg1 device:(id)arg2;
- (id)newArgumentEncoderForBufferAtIndex:(unsigned long long)arg1;
- (id)newIndirectArgumentEncoderForBufferAtIndex:(unsigned long long)arg1;
- (void)setArgumentBuffer:(id)arg1 offset:(unsigned long long)arg2;
- (void)setArgumentBuffer:(id)arg1 startOffset:(unsigned long long)arg2 arrayElement:(unsigned long long)arg3;
- (void)setBuffer:(id)arg1 offset:(unsigned long long)arg2 atIndex:(unsigned long long)arg3;
- (void)setBuffers:(const id *)arg1 offsets:(const unsigned long long *)arg2 withRange:(struct _NSRange)arg3;
- (void)setIndirectArgumentBuffer:(id)arg1 offset:(unsigned long long)arg2;
- (void)setIndirectArgumentBuffer:(id)arg1 startOffset:(unsigned long long)arg2 arrayElement:(unsigned long long)arg3;
- (void)setSamplerState:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)setSamplerStates:(const id *)arg1 withRange:(struct _NSRange)arg2;
- (void)setTexture:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)setTextures:(const id *)arg1 withRange:(struct _NSRange)arg2;

@end

