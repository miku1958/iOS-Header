//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <Social/CLLocationManagerDelegate-Protocol.h>
#import <Social/SLPlaceDataSource-Protocol.h>

@class ACAccount, CLLocation, CLLocationManager, NSHTTPURLResponse, NSMutableData, NSString, NSURLConnection;
@protocol SLPlaceDataSourceDelegate;

@interface SLFacebookPlaceManager : NSObject <CLLocationManagerDelegate, SLPlaceDataSource>
{
    CLLocationManager *_locationManager;
    double _timeout;
    BOOL _isCanceled;
    BOOL _isUpdatingLocation;
    BOOL _disableTimeout;
    NSMutableData *_placeData;
    NSHTTPURLResponse *_urlResponse;
    NSURLConnection *_urlConnection;
    CDUnknownBlockType _queuedSearchRequest;
    CLLocation *_currentLocation;
    NSObject<SLPlaceDataSourceDelegate> *_delegate;
    ACAccount *_account;
}

@property (strong) ACAccount *account; // @synthesize account=_account;
@property (strong) CLLocation *currentLocation; // @synthesize currentLocation=_currentLocation;
@property (readonly) double currentLocationAccuracy;
@property (readonly, copy) NSString *debugDescription;
@property (weak) NSObject<SLPlaceDataSourceDelegate> *delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_handleResponse:(id)arg1 error:(id)arg2;
- (id)_placesArrayWithPlacesData:(id)arg1;
- (void)cancelPlaceFetch;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (double)distanceFromCurrentLocationToPlace:(id)arg1;
- (void)fetchPlaces;
- (void)fetchPlacesWithSearchString:(id)arg1;
- (id)initWithLocationManager:(id)arg1 account:(id)arg2 desiredAccuracy:(double)arg3 timeout:(double)arg4;
- (void)locationDidTimeout;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (void)startUpdatingLocation;
- (void)stopUpdatingLocation;

@end

