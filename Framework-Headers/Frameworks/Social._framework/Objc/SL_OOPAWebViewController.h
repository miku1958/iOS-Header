//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import <Social/UIWebViewDelegate-Protocol.h>
#import <Social/UIWebViewPrivateDelegate-Protocol.h>
#import <Social/WKNavigationDelegate-Protocol.h>

@class NSObject, NSString, NSURL, SL_OOPASpinnerTitle, UIWebView, WKWebView;
@protocol SL_OOPAWebViewControllerDelegate, SL_OOPAuthFlowDelegate;

@interface SL_OOPAWebViewController : UIViewController <WKNavigationDelegate, UIWebViewDelegate, UIWebViewPrivateDelegate>
{
    WKWebView *_wkWebView;
    UIWebView *_uiWebView;
    SL_OOPASpinnerTitle *_spinnerTitleView;
    struct __CFURLStorageSession *_storageSession;
    BOOL _hidingWebView;
    BOOL _didLoadWebView;
    BOOL _didFinish;
    id<SL_OOPAWebViewControllerDelegate> _delegate;
    NSObject<SL_OOPAuthFlowDelegate> *_authFlowDelegate;
    NSURL *_authURL;
    NSString *_username;
}

@property (strong, nonatomic) NSObject<SL_OOPAuthFlowDelegate> *authFlowDelegate; // @synthesize authFlowDelegate=_authFlowDelegate;
@property (copy, nonatomic) NSURL *authURL; // @synthesize authURL=_authURL;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<SL_OOPAWebViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (copy, nonatomic) NSString *navBarTitle;
@property (readonly) Class superclass;
@property (copy, nonatomic) NSString *username; // @synthesize username=_username;

- (void).cxx_destruct;
- (void)_cancelButtonTapped:(id)arg1;
- (void)_didFinishWithSuccess:(BOOL)arg1 response:(id)arg2 error:(id)arg3;
- (void)_evaluateDocumentTitleForUIWebView:(id)arg1 retryCount:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_evaluateDocumentTitleForWebView:(id)arg1 retryCount:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_loadWebView;
- (void)_loadWebViewIfReady;
- (void)_updateNavigationPromptWithActiveURL:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewWillAppear:(BOOL)arg1;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (BOOL)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;

@end

