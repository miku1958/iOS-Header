//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

@class MISSING_TYPE;

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGAffineTransform {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
};

struct CGPath;

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CGVector {
    double dx;
    double dy;
};

struct MaxRectTexturePacker;

struct PKCAether;

struct PKPath;

struct SCNVector3 {
    float _field1;
    float _field2;
    float _field3;
};

struct SKC3DNode {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    BOOL _field3;
    struct unordered_map<std::__1::basic_string<char>, SKAttributeValue *, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, SKAttributeValue *>>> _field4;
    id _field5;
    id _field6;
    struct SKCNode *_field7;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field8;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field9;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field10;
    id _field11;
    unsigned long long _field12;
    float _field13;
    BOOL _field14;
    struct list<SKCAction *, std::__1::allocator<SKCAction *>> _field15;
    struct list<SKCAction *, std::__1::allocator<SKCAction *>> _field16;
    BOOL _field17;
    id _field18;
    struct shared_ptr<PKPath> _field19;
    BOOL _field20;
    long long _field21;
    BOOL _field22;
    float _field23;
    float _field24;
    BOOL _field25;
    BOOL _field26;
    CDStruct_f1db2b5e _field27;
    CDStruct_f1db2b5e _field28;
    id _field29;
    struct SCNVector3 _field30;
    id _field31;
    double _field32;
    id _field33;
    id _field34;
    BOOL _field35;
    BOOL _field36;
    BOOL _field37;
};

struct SKCAction {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    BOOL _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    BOOL _field12;
    BOOL _field13;
    CDUnknownBlockType _field14;
    long long _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
};

struct SKCAnimate {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    BOOL _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    BOOL _field12;
    BOOL _field13;
    CDUnknownBlockType _field14;
    long long _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    struct vector<SKTexture *, std::__1::allocator<SKTexture *>> _field20;
    double _field21;
    id _field22;
    struct {
        float _field1;
        float _field2;
    } _field23;
    BOOL _field24;
    BOOL _field25;
    BOOL _field26;
};

struct SKCAudioNode {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    BOOL _field3;
    struct unordered_map<std::__1::basic_string<char>, SKAttributeValue *, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, SKAttributeValue *>>> _field4;
    id _field5;
    id _field6;
    struct SKCNode *_field7;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field8;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field9;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field10;
    id _field11;
    unsigned long long _field12;
    float _field13;
    BOOL _field14;
    struct list<SKCAction *, std::__1::allocator<SKCAction *>> _field15;
    struct list<SKCAction *, std::__1::allocator<SKCAction *>> _field16;
    BOOL _field17;
    id _field18;
    struct shared_ptr<PKPath> _field19;
    BOOL _field20;
    long long _field21;
    BOOL _field22;
    float _field23;
    float _field24;
    BOOL _field25;
    BOOL _field26;
    CDStruct_f1db2b5e _field27;
    CDStruct_f1db2b5e _field28;
    id _field29;
    id _field30;
    id _field31;
    id _field32;
    BOOL _field33;
    BOOL _field34;
};

struct SKCColorize {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    BOOL _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    BOOL _field12;
    BOOL _field13;
    CDUnknownBlockType _field14;
    long long _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field20;
    float _field21;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field22;
    float _field23;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field24;
    float _field25;
    BOOL _field26;
};

struct SKCCropNode {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    BOOL _field3;
    struct unordered_map<std::__1::basic_string<char>, SKAttributeValue *, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, SKAttributeValue *>>> _field4;
    id _field5;
    id _field6;
    struct SKCNode *_field7;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field8;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field9;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field10;
    id _field11;
    unsigned long long _field12;
    float _field13;
    BOOL _field14;
    struct list<SKCAction *, std::__1::allocator<SKCAction *>> _field15;
    struct list<SKCAction *, std::__1::allocator<SKCAction *>> _field16;
    BOOL _field17;
    id _field18;
    struct shared_ptr<PKPath> _field19;
    BOOL _field20;
    long long _field21;
    BOOL _field22;
    float _field23;
    float _field24;
    BOOL _field25;
    BOOL _field26;
    CDStruct_f1db2b5e _field27;
    CDStruct_f1db2b5e _field28;
    struct SKCNode *_field29;
    shared_ptr_2ce53ef7 _field30;
    shared_ptr_bb77cfd9 _field31;
    shared_ptr_bb77cfd9 _field32;
    shared_ptr_2ce53ef7 _field33;
    shared_ptr_bb77cfd9 _field34;
};

struct SKCCustomAction {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    BOOL _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    BOOL _field12;
    BOOL _field13;
    CDUnknownBlockType _field14;
    long long _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    CDUnknownBlockType _field20;
};

struct SKCEffectNode {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    BOOL _field3;
    struct unordered_map<std::__1::basic_string<char>, SKAttributeValue *, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, SKAttributeValue *>>> _field4;
    id _field5;
    id _field6;
    struct SKCNode *_field7;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field8;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field9;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field10;
    id _field11;
    unsigned long long _field12;
    float _field13;
    BOOL _field14;
    struct list<SKCAction *, std::__1::allocator<SKCAction *>> _field15;
    struct list<SKCAction *, std::__1::allocator<SKCAction *>> _field16;
    BOOL _field17;
    id _field18;
    struct shared_ptr<PKPath> _field19;
    BOOL _field20;
    long long _field21;
    BOOL _field22;
    float _field23;
    float _field24;
    BOOL _field25;
    BOOL _field26;
    CDStruct_f1db2b5e _field27;
    CDStruct_f1db2b5e _field28;
    id _field29;
    BOOL _field30;
    id _field31;
    shared_ptr_2ce53ef7 _field32;
    shared_ptr_bb77cfd9 _field33;
    shared_ptr_bb77cfd9 _field34;
    shared_ptr_bb77cfd9 _field35;
    BOOL _field36;
    unsigned int _field37;
    BOOL _field38;
    BOOL _field39;
};

struct SKCEmitterNode {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    BOOL _field3;
    struct unordered_map<std::__1::basic_string<char>, SKAttributeValue *, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, SKAttributeValue *>>> _field4;
    id _field5;
    id _field6;
    struct SKCNode *_field7;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field8;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field9;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field10;
    id _field11;
    unsigned long long _field12;
    float _field13;
    BOOL _field14;
    struct list<SKCAction *, std::__1::allocator<SKCAction *>> _field15;
    struct list<SKCAction *, std::__1::allocator<SKCAction *>> _field16;
    BOOL _field17;
    id _field18;
    struct shared_ptr<PKPath> _field19;
    BOOL _field20;
    long long _field21;
    BOOL _field22;
    float _field23;
    float _field24;
    BOOL _field25;
    BOOL _field26;
    CDStruct_f1db2b5e _field27;
    CDStruct_f1db2b5e _field28;
    BOOL _field29;
    BOOL _field30;
    id _field31;
    id _field32;
    id _field33;
    struct SKCParticleSystemNode *_field34;
    struct SKCParticleSystem *_field35;
    double _field36;
    BOOL _field37;
    struct SKCKeyframeSequence *_field38;
    struct SKCKeyframeSequence *_field39;
    struct SKCKeyframeSequence *_field40;
    struct SKCKeyframeSequence *_field41;
    struct SKCKeyframeSequence *_field42;
    struct SKCKeyframeSequence *_field43;
    unsigned long long _field44;
    unsigned long long _field45;
    int _field46;
    int _field47;
    double _field48;
    double _field49;
    double _field50;
    double _field51;
    struct CGSize _field52;
    float _field53;
    float _field54;
    float _field55;
    float _field56;
    float _field57;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field58;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field59;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field60;
    float _field61;
    float _field62;
    float _field63;
    struct list<PKPoint, std::__1::allocator<PKPoint>> _field64;
    struct {
        float _field1;
        float _field2;
    } _field65;
    struct {
        float _field1;
        float _field2;
    } _field66;
    float _field67;
    float _field68;
    float _field69;
    float _field70;
    struct {
        float _field1;
        float _field2;
    } _field71;
    float _field72;
    float _field73;
    float _field74;
    float _field75;
    float _field76;
    float _field77;
    float _field78;
    float _field79;
    float _field80;
    float _field81;
    float _field82;
    float _field83;
    id _field84;
    long long _field85;
    unsigned int _field86;
};

struct SKCFade {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    BOOL _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    BOOL _field12;
    BOOL _field13;
    CDUnknownBlockType _field14;
    long long _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    float _field20;
    float _field21;
    float _field22;
    BOOL _field23;
};

struct SKCFalloff {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    BOOL _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    BOOL _field12;
    BOOL _field13;
    CDUnknownBlockType _field14;
    long long _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    float _field20;
    float _field21;
    float _field22;
    float _field23;
    float _field24;
    BOOL _field25;
    BOOL _field26;
};

struct SKCFollowPath {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    BOOL _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    BOOL _field12;
    BOOL _field13;
    CDUnknownBlockType _field14;
    long long _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    float _field20;
    unsigned int _field21;
    struct PKPath *_field22;
    struct {
        float _field1;
        float _field2;
    } _field23;
    BOOL _field24;
    BOOL _field25;
};

struct SKCGroup {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    BOOL _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    BOOL _field12;
    BOOL _field13;
    CDUnknownBlockType _field14;
    long long _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    struct list<SKCAction *, std::__1::allocator<SKCAction *>> _field20;
};

struct SKCHide {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    BOOL _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    BOOL _field12;
    BOOL _field13;
    CDUnknownBlockType _field14;
    long long _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    BOOL _field20;
};

struct SKCKeyframeSequence {
    int _field1;
    int _field2;
    long long _field3;
    long long _field4;
    float *_field5;
    float *_field6;
};

struct SKCLabelNode {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    BOOL _field3;
    struct unordered_map<std::__1::basic_string<char>, SKAttributeValue *, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, SKAttributeValue *>>> _field4;
    id _field5;
    id _field6;
    struct SKCNode *_field7;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field8;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field9;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field10;
    id _field11;
    unsigned long long _field12;
    float _field13;
    BOOL _field14;
    struct list<SKCAction *, std::__1::allocator<SKCAction *>> _field15;
    struct list<SKCAction *, std::__1::allocator<SKCAction *>> _field16;
    BOOL _field17;
    id _field18;
    struct shared_ptr<PKPath> _field19;
    BOOL _field20;
    long long _field21;
    BOOL _field22;
    float _field23;
    float _field24;
    BOOL _field25;
    BOOL _field26;
    CDStruct_f1db2b5e _field27;
    CDStruct_f1db2b5e _field28;
    id _field29;
    id _field30;
    id _field31;
    float _field32;
    long long _field33;
    long long _field34;
    struct __CTFont *_field35;
    id _field36;
    id _field37;
    BOOL _field38;
    BOOL _field39;
    struct vector<SKCSpriteNode *, std::__1::allocator<SKCSpriteNode *>> _field40;
};

struct SKCLightNode {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    BOOL _field3;
    struct unordered_map<std::__1::basic_string<char>, SKAttributeValue *, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, SKAttributeValue *>>> _field4;
    id _field5;
    id _field6;
    struct SKCNode *_field7;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field8;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field9;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field10;
    id _field11;
    unsigned long long _field12;
    float _field13;
    BOOL _field14;
    struct list<SKCAction *, std::__1::allocator<SKCAction *>> _field15;
    struct list<SKCAction *, std::__1::allocator<SKCAction *>> _field16;
    BOOL _field17;
    id _field18;
    struct shared_ptr<PKPath> _field19;
    BOOL _field20;
    long long _field21;
    BOOL _field22;
    float _field23;
    float _field24;
    BOOL _field25;
    BOOL _field26;
    CDStruct_f1db2b5e _field27;
    CDStruct_f1db2b5e _field28;
    struct shared_ptr<jet_buffer_pool> _field29;
    struct ShadowInfo *_field30;
    BOOL _field31;
    float _field32;
    unsigned int _field33;
};

struct SKCMove {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    BOOL _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    BOOL _field12;
    BOOL _field13;
    CDUnknownBlockType _field14;
    long long _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    float _field20;
    struct {
        float _field1;
        float _field2;
    } _field21;
    struct {
        float _field1;
        float _field2;
    } _field22;
    struct {
        float _field1;
        float _field2;
    } _field23;
    BOOL _field24;
    BOOL _field25;
    BOOL _field26;
    BOOL _field27;
};

struct SKCNode {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    BOOL _field3;
    struct unordered_map<std::__1::basic_string<char>, SKAttributeValue *, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, SKAttributeValue *>>> _field4;
    id _field5;
    id _field6;
    struct SKCNode *_field7;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field8;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field9;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field10;
    id _field11;
    unsigned long long _field12;
    float _field13;
    BOOL _field14;
    struct list<SKCAction *, std::__1::allocator<SKCAction *>> _field15;
    struct list<SKCAction *, std::__1::allocator<SKCAction *>> _field16;
    BOOL _field17;
    id _field18;
    struct shared_ptr<PKPath> _field19;
    BOOL _field20;
    long long _field21;
    BOOL _field22;
    float _field23;
    float _field24;
    BOOL _field25;
    BOOL _field26;
    CDStruct_f1db2b5e _field27;
    CDStruct_f1db2b5e _field28;
};

struct SKCParticleManager;

struct SKCParticleSystem;

struct SKCParticleSystemNode {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    BOOL _field3;
    struct unordered_map<std::__1::basic_string<char>, SKAttributeValue *, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, SKAttributeValue *>>> _field4;
    id _field5;
    id _field6;
    struct SKCNode *_field7;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field8;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field9;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field10;
    id _field11;
    unsigned long long _field12;
    float _field13;
    BOOL _field14;
    struct list<SKCAction *, std::__1::allocator<SKCAction *>> _field15;
    struct list<SKCAction *, std::__1::allocator<SKCAction *>> _field16;
    BOOL _field17;
    id _field18;
    struct shared_ptr<PKPath> _field19;
    BOOL _field20;
    long long _field21;
    BOOL _field22;
    float _field23;
    float _field24;
    BOOL _field25;
    BOOL _field26;
    CDStruct_f1db2b5e _field27;
    CDStruct_f1db2b5e _field28;
    id _field29;
    id _field30;
    struct SKCParticleManager *_field31;
    struct shared_ptr<jet_buffer_pool> _field32;
    struct shared_ptr<jet_buffer_pool> _field33;
    struct shared_ptr<jet_buffer_pool> _field34;
};

struct SKCPlaySound {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    BOOL _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    BOOL _field12;
    BOOL _field13;
    CDUnknownBlockType _field14;
    long long _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    id _field20;
    BOOL _field21;
    BOOL _field22;
};

struct SKCReferencedAction {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    BOOL _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    BOOL _field12;
    BOOL _field13;
    CDUnknownBlockType _field14;
    long long _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    struct SKCAction *_field20;
};

struct SKCRenderBatch {
    BOOL _field1;
    int _field2;
    unsigned int _field3;
    unsigned int _field4;
    id _field5;
    shared_ptr_394c00aa _field6;
    shared_ptr_bb77cfd9 _field7;
    shared_ptr_bb77cfd9 _field8;
    struct shared_ptr<jet_sampler> _field9;
    struct shared_ptr<jet_sampler> _field10;
    unsigned int _field11;
    unsigned int _field12;
    float _field13;
};

struct SKCRenderPass;

struct SKCRenderSortGroup;

struct SKCRenderSortInfo;

struct SKCRenderer {
    id _field1;
    float _field2;
    struct shared_ptr<SKCRenderPass> _field3;
    unsigned int _field4;
    shared_ptr_d7c0f433 _field5;
    struct list<std::__1::shared_ptr<SKCRenderPass>, std::__1::allocator<std::__1::shared_ptr<SKCRenderPass>>> _field6;
    struct {
        unsigned int _field1;
        unsigned int _field2;
        CDStruct_f1db2b5e ***_field3;
        float _field4;
        struct SKCRenderer *_field5;
        float _field6;
        shared_ptr_394c00aa _field7;
        shared_ptr_394c00aa _field8;
        shared_ptr_394c00aa _field9;
        shared_ptr_394c00aa _field10;
        shared_ptr_394c00aa _field11;
        shared_ptr_394c00aa _field12;
        shared_ptr_394c00aa _field13;
        struct shared_ptr<jet_buffer> _field14;
        struct shared_ptr<jet_buffer> _field15;
        struct shared_ptr<jet_buffer> _field16;
        struct shared_ptr<jet_buffer_pool> _field17;
        struct shared_ptr<jet_buffer_pool> _field18;
        struct shared_ptr<jet_buffer_pool> _field19;
        struct shared_ptr<jet_buffer> _field20;
        struct shared_ptr<jet_buffer> _field21;
        shared_ptr_bb77cfd9 _field22;
        struct shared_ptr<jet_sampler> _field23;
        struct shared_ptr<jet_sampler> _field24;
        struct shared_ptr<jet_depth_stencil_mode> _field25;
        struct shared_ptr<jet_depth_stencil_mode> _field26;
        struct shared_ptr<jet_depth_stencil_mode> _field27;
        unsigned int _field28;
        struct SKCRenderBatch _field29;
        struct SKCStats *_field30;
    } _field7;
    struct SKCStats *_field8;
    struct SKCStats _field9;
    BOOL _field10;
    BOOL _field11;
    struct shared_ptr<jet_context> _field12;
    struct shared_ptr<jet_fence> _field13;
    struct map<SKCLightNode *, float __attribute__((ext_vector_type(4))), std::__1::less<SKCLightNode *>, std::__1::allocator<std::__1::pair<SKCLightNode *const, float __attribute__((ext_vector_type(4)))>>> _field14;
    struct vector<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *>> _field15;
    struct map<SKCLightNode *, std::__1::shared_ptr<std::__1::vector<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *>>>, std::__1::less<SKCLightNode *>, std::__1::allocator<std::__1::pair<SKCLightNode *const, std::__1::shared_ptr<std::__1::vector<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *>>>>>> _field16;
    struct SKCSpriteNode *_field17;
    struct SKCLabelNode *_field18;
    struct {
        struct SKCRenderPass *_field1;
        struct SKCRenderSortGroup *_field2;
        unsigned int _field3;
        struct list<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *>> _field4;
        struct list<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *>> _field5;
        struct __list_iterator<SKCRenderSortInfo *, void *> {
            struct __list_node<SKCRenderSortInfo *, void *> *_field1;
        } _field6;
    } _field19;
    id _field20;
};

struct SKCRepeat {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    BOOL _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    BOOL _field12;
    BOOL _field13;
    CDUnknownBlockType _field14;
    long long _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    struct SKCAction *_field20;
    unsigned long long _field21;
    unsigned long long _field22;
    BOOL _field23;
};

struct SKCResize {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    BOOL _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    BOOL _field12;
    BOOL _field13;
    CDUnknownBlockType _field14;
    long long _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    float _field20;
    struct {
        float _field1;
        float _field2;
    } _field21;
    struct {
        float _field1;
        float _field2;
    } _field22;
    struct {
        float _field1;
        float _field2;
    } _field23;
    BOOL _field24;
    BOOL _field25;
    BOOL _field26;
    BOOL _field27;
};

struct SKCRotate {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    BOOL _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    BOOL _field12;
    BOOL _field13;
    CDUnknownBlockType _field14;
    long long _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    float _field20;
    float _field21;
    float _field22;
    float _field23;
    float _field24;
    float _field25;
    float _field26;
    float _field27;
    float _field28;
    float _field29;
    BOOL _field30;
    BOOL _field31;
    BOOL _field32;
    BOOL _field33;
    BOOL _field34;
    BOOL _field35;
};

struct SKCScale {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    BOOL _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    BOOL _field12;
    BOOL _field13;
    CDUnknownBlockType _field14;
    long long _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    float _field20;
    float _field21;
    float _field22;
    float _field23;
    float _field24;
    float _field25;
    float _field26;
    float _field27;
    float _field28;
    BOOL _field29;
    BOOL _field30;
    BOOL _field31;
    BOOL _field32;
};

struct SKCSceneNode {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    BOOL _field3;
    struct unordered_map<std::__1::basic_string<char>, SKAttributeValue *, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, SKAttributeValue *>>> _field4;
    id _field5;
    id _field6;
    struct SKCNode *_field7;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field8;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field9;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field10;
    id _field11;
    unsigned long long _field12;
    float _field13;
    BOOL _field14;
    struct list<SKCAction *, std::__1::allocator<SKCAction *>> _field15;
    struct list<SKCAction *, std::__1::allocator<SKCAction *>> _field16;
    BOOL _field17;
    id _field18;
    struct shared_ptr<PKPath> _field19;
    BOOL _field20;
    long long _field21;
    BOOL _field22;
    float _field23;
    float _field24;
    BOOL _field25;
    BOOL _field26;
    CDStruct_f1db2b5e _field27;
    CDStruct_f1db2b5e _field28;
    id _field29;
    BOOL _field30;
    id _field31;
    shared_ptr_2ce53ef7 _field32;
    shared_ptr_bb77cfd9 _field33;
    shared_ptr_bb77cfd9 _field34;
    shared_ptr_bb77cfd9 _field35;
    BOOL _field36;
    unsigned int _field37;
    BOOL _field38;
    BOOL _field39;
    long long _field40;
    struct SKCSpriteNode *_field41;
    struct SKCSpriteNode *_field42;
};

struct SKCSequence {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    BOOL _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    BOOL _field12;
    BOOL _field13;
    CDUnknownBlockType _field14;
    long long _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    struct vector<SKCAction *, std::__1::allocator<SKCAction *>> _field20;
    unsigned long long _field21;
};

struct SKCShapeNode {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    BOOL _field3;
    struct unordered_map<std::__1::basic_string<char>, SKAttributeValue *, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, SKAttributeValue *>>> _field4;
    id _field5;
    id _field6;
    struct SKCNode *_field7;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field8;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field9;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field10;
    id _field11;
    unsigned long long _field12;
    float _field13;
    BOOL _field14;
    struct list<SKCAction *, std::__1::allocator<SKCAction *>> _field15;
    struct list<SKCAction *, std::__1::allocator<SKCAction *>> _field16;
    BOOL _field17;
    id _field18;
    struct shared_ptr<PKPath> _field19;
    BOOL _field20;
    long long _field21;
    BOOL _field22;
    float _field23;
    float _field24;
    BOOL _field25;
    BOOL _field26;
    CDStruct_f1db2b5e _field27;
    CDStruct_f1db2b5e _field28;
    struct SKCompositeBezierPath *_field29;
    int _field30;
    int _field31;
    float _field32;
    float _field33;
    float _field34;
    struct CGPath *_field35;
    int _field36;
    BOOL _field37;
    float _field38;
    id _field39;
    id _field40;
    id _field41;
    id _field42;
    struct shared_ptr<jet_buffer_pool> _field43;
    struct shared_ptr<jet_buffer_pool> _field44;
    struct shared_ptr<jet_buffer_pool> _field45;
};

struct SKCSpeed {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    BOOL _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    BOOL _field12;
    BOOL _field13;
    CDUnknownBlockType _field14;
    long long _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    float _field20;
    float _field21;
    float _field22;
    float _field23;
    float _field24;
    BOOL _field25;
    BOOL _field26;
};

struct SKCSpriteNode {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    BOOL _field3;
    struct unordered_map<std::__1::basic_string<char>, SKAttributeValue *, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, SKAttributeValue *>>> _field4;
    id _field5;
    id _field6;
    struct SKCNode *_field7;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field8;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field9;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field10;
    id _field11;
    unsigned long long _field12;
    float _field13;
    BOOL _field14;
    struct list<SKCAction *, std::__1::allocator<SKCAction *>> _field15;
    struct list<SKCAction *, std::__1::allocator<SKCAction *>> _field16;
    BOOL _field17;
    id _field18;
    struct shared_ptr<PKPath> _field19;
    BOOL _field20;
    long long _field21;
    BOOL _field22;
    float _field23;
    float _field24;
    BOOL _field25;
    BOOL _field26;
    CDStruct_f1db2b5e _field27;
    CDStruct_f1db2b5e _field28;
    unsigned int _field29;
    unsigned int _field30;
    unsigned int _field31;
    id _field32;
    id _field33;
    id _field34;
};

struct SKCStats {
    CDUnknownFunctionPointerType *_vptr$SKCStats;
    double frameBeginTime;
    double frameDuration;
    double baseTime;
    double currentTime;
    int frameCount;
    CDStruct_febfcd7b clientUpdate;
    CDStruct_febfcd7b update;
    struct {
        double beginTime;
        double duration;
        int bodyCount;
    } physics;
    struct {
        double beginTime;
        double duration;
        int constraintCount;
    } constraints;
    struct {
        double beginTime;
        double duration;
        int opCount;
        int quadCount;
        int nodeTraversalCount;
        int nodeRenderCount;
        int drawCallCount;
        int passCount;
    } render;
};

struct SKCStrength {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    BOOL _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    BOOL _field12;
    BOOL _field13;
    CDUnknownBlockType _field14;
    long long _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    float _field20;
    float _field21;
    float _field22;
    float _field23;
    float _field24;
    BOOL _field25;
    BOOL _field26;
};

struct SKCTransitionNode {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    BOOL _field3;
    struct unordered_map<std::__1::basic_string<char>, SKAttributeValue *, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, SKAttributeValue *>>> _field4;
    id _field5;
    id _field6;
    struct SKCNode *_field7;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field8;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field9;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field10;
    id _field11;
    unsigned long long _field12;
    float _field13;
    BOOL _field14;
    struct list<SKCAction *, std::__1::allocator<SKCAction *>> _field15;
    struct list<SKCAction *, std::__1::allocator<SKCAction *>> _field16;
    BOOL _field17;
    id _field18;
    struct shared_ptr<PKPath> _field19;
    BOOL _field20;
    long long _field21;
    BOOL _field22;
    float _field23;
    float _field24;
    BOOL _field25;
    BOOL _field26;
    CDStruct_f1db2b5e _field27;
    CDStruct_f1db2b5e _field28;
    int _field29;
    id _field30;
    BOOL _field31;
    BOOL _field32;
    float _field33;
    float _field34;
    struct SKCSceneNode *_field35;
    struct SKCSceneNode *_field36;
    shared_ptr_bb77cfd9 _field37;
    shared_ptr_bb77cfd9 _field38;
    shared_ptr_bb77cfd9 _field39;
    shared_ptr_bb77cfd9 _field40;
    shared_ptr_2ce53ef7 _field41;
    shared_ptr_2ce53ef7 _field42;
    float _field43;
    BOOL _field44;
    BOOL _field45;
    BOOL _field46;
    BOOL _field47;
};

struct SKCVideoNode {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    BOOL _field3;
    struct unordered_map<std::__1::basic_string<char>, SKAttributeValue *, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, SKAttributeValue *>>> _field4;
    id _field5;
    id _field6;
    struct SKCNode *_field7;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field8;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field9;
    struct vector<SKCNode *, std::__1::allocator<SKCNode *>> _field10;
    id _field11;
    unsigned long long _field12;
    float _field13;
    BOOL _field14;
    struct list<SKCAction *, std::__1::allocator<SKCAction *>> _field15;
    struct list<SKCAction *, std::__1::allocator<SKCAction *>> _field16;
    BOOL _field17;
    id _field18;
    struct shared_ptr<PKPath> _field19;
    BOOL _field20;
    long long _field21;
    BOOL _field22;
    float _field23;
    float _field24;
    BOOL _field25;
    BOOL _field26;
    CDStruct_f1db2b5e _field27;
    CDStruct_f1db2b5e _field28;
    BOOL _field29;
    id _field30;
    float _field31;
    shared_ptr_bb77cfd9 _field32;
    shared_ptr_bb77cfd9 _field33;
    id _field34;
    struct __CVBuffer *_field35;
    struct __CVBuffer *_field36;
    id _field37;
    id _field38;
};

struct SKCWait {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    float _field3;
    CDUnknownBlockType _field4;
    id _field5;
    BOOL _field6;
    double _field7;
    double _field8;
    float _field9;
    float _field10;
    double _field11;
    BOOL _field12;
    BOOL _field13;
    CDUnknownBlockType _field14;
    long long _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
};

struct SKCompositeBezierPath;

struct ShadowInfo;

struct TextureInfo;

struct Token;

struct __CVBuffer;

struct __hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *>;

struct __hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKTexture *>, void *>;

struct __list_node<PKPoint, void *>;

struct __list_node<SKCAction *, void *>;

struct __list_node<SKCRenderSortInfo *, void *>;

struct __list_node<std::__1::shared_ptr<SKCRenderPass>, void *>;

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long __cap_;
                    unsigned long long __size_;
                    char *__data_;
                } __l;
                struct __short {
                    union {
                        unsigned char __size_;
                        char __lx;
                    } ;
                    char __data_[23];
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
};

struct jet_buffer;

struct jet_buffer_pool;

struct jet_command_buffer;

struct jet_context;

struct jet_depth_stencil_mode;

struct jet_fence;

struct jet_framebuffer;

struct jet_program;

struct jet_sampler;

struct jet_texture {
    CDUnknownFunctionPointerType *_field1;
    struct jet_context *_field2;
};

struct list<PKPoint, std::__1::allocator<PKPoint>> {
    struct __list_node_base<PKPoint, void *> {
        struct __list_node<PKPoint, void *> *_field1;
        struct __list_node<PKPoint, void *> *_field2;
    } _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<PKPoint, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<SKCAction *, std::__1::allocator<SKCAction *>> {
    struct __list_node_base<SKCAction *, void *> {
        struct __list_node<SKCAction *, void *> *_field1;
        struct __list_node<SKCAction *, void *> *_field2;
    } _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SKCAction *, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *>> {
    struct __list_node_base<SKCRenderSortInfo *, void *> {
        struct __list_node<SKCRenderSortInfo *, void *> *_field1;
        struct __list_node<SKCRenderSortInfo *, void *> *_field2;
    } _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SKCRenderSortInfo *, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<std::__1::shared_ptr<SKCRenderPass>, std::__1::allocator<std::__1::shared_ptr<SKCRenderPass>>> {
    struct __list_node_base<std::__1::shared_ptr<SKCRenderPass>, void *> {
        struct __list_node<std::__1::shared_ptr<SKCRenderPass>, void *> *_field1;
        struct __list_node<std::__1::shared_ptr<SKCRenderPass>, void *> *_field2;
    } _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<SKCRenderPass>, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct map<SKCLightNode *, float __attribute__((ext_vector_type(4))), std::__1::less<SKCLightNode *>, std::__1::allocator<std::__1::pair<SKCLightNode *const, float __attribute__((ext_vector_type(4)))>>> {
    struct __tree<std::__1::__value_type<SKCLightNode *, float __attribute__((ext_vector_type(4)))>, std::__1::__map_value_compare<SKCLightNode *, std::__1::__value_type<SKCLightNode *, float __attribute__((ext_vector_type(4)))>, std::__1::less<SKCLightNode *>, true>, std::__1::allocator<std::__1::__value_type<SKCLightNode *, float __attribute__((ext_vector_type(4)))>>> {
        struct __tree_node<std::__1::__value_type<SKCLightNode *, float __attribute__((ext_vector_type(4)))>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<SKCLightNode *, float __attribute__((ext_vector_type(4)))>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<SKCLightNode *, std::__1::__value_type<SKCLightNode *, float __attribute__((ext_vector_type(4)))>, std::__1::less<SKCLightNode *>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<SKCLightNode *, std::__1::shared_ptr<std::__1::vector<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *>>>, std::__1::less<SKCLightNode *>, std::__1::allocator<std::__1::pair<SKCLightNode *const, std::__1::shared_ptr<std::__1::vector<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *>>>>>> {
    struct __tree<std::__1::__value_type<SKCLightNode *, std::__1::shared_ptr<std::__1::vector<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *>>>>, std::__1::__map_value_compare<SKCLightNode *, std::__1::__value_type<SKCLightNode *, std::__1::shared_ptr<std::__1::vector<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *>>>>, std::__1::less<SKCLightNode *>, true>, std::__1::allocator<std::__1::__value_type<SKCLightNode *, std::__1::shared_ptr<std::__1::vector<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *>>>>>> {
        struct __tree_node<std::__1::__value_type<SKCLightNode *, std::__1::shared_ptr<std::__1::vector<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *>>>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<SKCLightNode *, std::__1::shared_ptr<std::__1::vector<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<SKCLightNode *, std::__1::__value_type<SKCLightNode *, std::__1::shared_ptr<std::__1::vector<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *>>>>, std::__1::less<SKCLightNode *>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, std::__1::shared_ptr<jet_buffer_pool>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<jet_buffer_pool>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<jet_buffer_pool>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<jet_buffer_pool>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<jet_buffer_pool>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<jet_buffer_pool>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<jet_buffer_pool>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<jet_buffer_pool>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned int, double, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, double>>> {
    struct __tree<std::__1::__value_type<unsigned int, double>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, double>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, double>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, double>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, double>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, double>, std::__1::less<unsigned int>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned short, SKSpriteNode *, std::__1::less<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, SKSpriteNode *>>> {
    struct __tree<std::__1::__value_type<unsigned short, SKSpriteNode *>, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, SKSpriteNode *>, std::__1::less<unsigned short>, true>, std::__1::allocator<std::__1::__value_type<unsigned short, SKSpriteNode *>>> {
        struct __tree_node<std::__1::__value_type<unsigned short, SKSpriteNode *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned short, SKSpriteNode *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, SKSpriteNode *>, std::__1::less<unsigned short>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned short, double, std::__1::less<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, double>>> {
    struct __tree<std::__1::__value_type<unsigned short, double>, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, double>, std::__1::less<unsigned short>, true>, std::__1::allocator<std::__1::__value_type<unsigned short, double>>> {
        struct __tree_node<std::__1::__value_type<unsigned short, double>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned short, double>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, double>, std::__1::less<unsigned short>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<SKNode *, std::__1::less<SKNode *>, std::__1::allocator<SKNode *>> {
    struct __tree<SKNode *, std::__1::less<SKNode *>, std::__1::allocator<SKNode *>> {
        struct __tree_node<SKNode *, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<SKNode *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<SKNode *>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct shared_ptr<MaxRectTexturePacker> {
    struct MaxRectTexturePacker *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<PKCAether> {
    struct PKCAether *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<PKPath> {
    struct PKPath *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<SKCRenderPass> {
    struct SKCRenderPass *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<jet_buffer> {
    struct jet_buffer *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<jet_buffer_pool> {
    struct jet_buffer_pool *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<jet_command_buffer> {
    struct jet_command_buffer *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<jet_context> {
    struct jet_context *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<jet_depth_stencil_mode> {
    struct jet_depth_stencil_mode *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<jet_fence> {
    struct jet_fence *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<jet_framebuffer> {
    struct jet_framebuffer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<jet_program> {
    struct jet_program *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<jet_sampler> {
    struct jet_sampler *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<jet_texture> {
    struct jet_texture *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKTexture *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKTexture *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKTexture *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKTexture *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKTexture *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKTexture *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKTexture *>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unordered_map<std::__1::basic_string<char>, SKAttributeValue *, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, SKAttributeValue *>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, SKAttributeValue *>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<std::__1::basic_string<char>, SKTexture *, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, SKTexture *>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, SKTexture *>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, SKTexture *>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, SKTexture *>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, SKTexture *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKTexture *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKTexture *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKTexture *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKTexture *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKTexture *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, SKTexture *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, SKTexture *>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, SKTexture *>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct vector<CGRect, std::__1::allocator<CGRect>> {
    struct CGRect *_field1;
    struct CGRect *_field2;
    struct __compressed_pair<CGRect *, std::__1::allocator<CGRect>> {
        struct CGRect *_field1;
    } _field3;
};

struct vector<CGSize, std::__1::allocator<CGSize>> {
    struct CGSize *_field1;
    struct CGSize *_field2;
    struct __compressed_pair<CGSize *, std::__1::allocator<CGSize>> {
        struct CGSize *_field1;
    } _field3;
};

struct vector<SKCAction *, std::__1::allocator<SKCAction *>> {
    struct SKCAction **_field1;
    struct SKCAction **_field2;
    struct __compressed_pair<SKCAction **, std::__1::allocator<SKCAction *>> {
        struct SKCAction **_field1;
    } _field3;
};

struct vector<SKCNode *, std::__1::allocator<SKCNode *>> {
    struct SKCNode **_field1;
    struct SKCNode **_field2;
    struct __compressed_pair<SKCNode **, std::__1::allocator<SKCNode *>> {
        struct SKCNode **_field1;
    } _field3;
};

struct vector<SKCRenderSortInfo *, std::__1::allocator<SKCRenderSortInfo *>> {
    struct SKCRenderSortInfo **_field1;
    struct SKCRenderSortInfo **_field2;
    struct __compressed_pair<SKCRenderSortInfo **, std::__1::allocator<SKCRenderSortInfo *>> {
        struct SKCRenderSortInfo **_field1;
    } _field3;
};

struct vector<SKCSpriteNode *, std::__1::allocator<SKCSpriteNode *>> {
    struct SKCSpriteNode **_field1;
    struct SKCSpriteNode **_field2;
    struct __compressed_pair<SKCSpriteNode **, std::__1::allocator<SKCSpriteNode *>> {
        struct SKCSpriteNode **_field1;
    } _field3;
};

struct vector<SKTexture *, std::__1::allocator<SKTexture *>> {
    id *_field1;
    id *_field2;
    struct __compressed_pair<SKTexture *__strong *, std::__1::allocator<SKTexture *>> {
        id *_field1;
    } _field3;
};

struct vector<TextureInfo, std::__1::allocator<TextureInfo>> {
    struct TextureInfo *_field1;
    struct TextureInfo *_field2;
    struct __compressed_pair<TextureInfo *, std::__1::allocator<TextureInfo>> {
        struct TextureInfo *_field1;
    } _field3;
};

struct vector<Token, std::__1::allocator<Token>> {
    struct Token *_field1;
    struct Token *_field2;
    struct __compressed_pair<Token *, std::__1::allocator<Token>> {
        struct Token *_field1;
    } _field3;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    MISSING_TYPE *_field1[4];
} CDStruct_f1db2b5e;

typedef struct {
    double beginTime;
    double duration;
} CDStruct_febfcd7b;

// Ambiguous groups
typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} CDStruct_818bb265;

typedef struct {
    float _field1;
    float _field2;
} CDStruct_b2fbf00d;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long __cap_;
                    unsigned long long __size_;
                    char *__data_;
                } __l;
                struct __short {
                    union {
                        unsigned char __size_;
                        char __lx;
                    } ;
                    char __data_[23];
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
} basic_string_805fe43b;

typedef struct map<std::__1::basic_string<char>, std::__1::shared_ptr<jet_buffer_pool>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<jet_buffer_pool>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<jet_buffer_pool>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<jet_buffer_pool>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<jet_buffer_pool>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<jet_buffer_pool>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<jet_buffer_pool>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<jet_buffer_pool>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
} map_a51e33c7;

typedef struct set<SKNode *, std::__1::less<SKNode *>, std::__1::allocator<SKNode *>> {
    struct __tree<SKNode *, std::__1::less<SKNode *>, std::__1::allocator<SKNode *>> {
        struct __tree_node<SKNode *, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<SKNode *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<SKNode *>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} set_23ab0f84;

typedef struct shared_ptr<MaxRectTexturePacker> {
    struct MaxRectTexturePacker *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_7747cbe3;

typedef struct shared_ptr<PKCAether> {
    struct PKCAether *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_11a7378b;

typedef struct shared_ptr<jet_command_buffer> {
    struct jet_command_buffer *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_d7c0f433;

typedef struct shared_ptr<jet_framebuffer> {
    struct jet_framebuffer *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_2ce53ef7;

typedef struct shared_ptr<jet_program> {
    struct jet_program *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_394c00aa;

typedef struct shared_ptr<jet_texture> {
    struct jet_texture *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_bb77cfd9;

typedef struct vector<CGRect, std::__1::allocator<CGRect>> {
    struct CGRect *_field1;
    struct CGRect *_field2;
    struct __compressed_pair<CGRect *, std::__1::allocator<CGRect>> {
        struct CGRect *_field1;
    } _field3;
} vector_ea45b3ba;

typedef struct vector<CGSize, std::__1::allocator<CGSize>> {
    struct CGSize *_field1;
    struct CGSize *_field2;
    struct __compressed_pair<CGSize *, std::__1::allocator<CGSize>> {
        struct CGSize *_field1;
    } _field3;
} vector_c74fc2b3;

typedef struct vector<TextureInfo, std::__1::allocator<TextureInfo>> {
    struct TextureInfo *_field1;
    struct TextureInfo *_field2;
    struct __compressed_pair<TextureInfo *, std::__1::allocator<TextureInfo>> {
        struct TextureInfo *_field1;
    } _field3;
} vector_65e381fc;

typedef struct vector<Token, std::__1::allocator<Token>> {
    struct Token *_field1;
    struct Token *_field2;
    struct __compressed_pair<Token *, std::__1::allocator<Token>> {
        struct Token *_field1;
    } _field3;
} vector_408ca79d;

#pragma mark Named Unions

union _GLKMatrix2 {
    struct {
        float m00;
        float m01;
        float m10;
        float m11;
    } ;
    float m2[2][2];
    float m[4];
};

union _GLKMatrix3 {
    struct {
        float m00;
        float m01;
        float m02;
        float m10;
        float m11;
        float m12;
        float m20;
        float m21;
        float m22;
    } ;
    float m[9];
};

union _GLKMatrix4 {
    struct {
        float m00;
        float m01;
        float m02;
        float m03;
        float m10;
        float m11;
        float m12;
        float m13;
        float m20;
        float m21;
        float m22;
        float m23;
        float m30;
        float m31;
        float m32;
        float m33;
    } ;
    float m[16];
};

union _GLKVector2 {
    struct {
        float x;
        float y;
    } ;
    struct {
        float s;
        float t;
    } ;
    float v[2];
};

union _GLKVector3 {
    struct {
        float x;
        float y;
        float z;
    } ;
    struct {
        float r;
        float g;
        float b;
    } ;
    struct {
        float s;
        float t;
        float p;
    } ;
    float v[3];
};

union _GLKVector4 {
    struct {
        float x;
        float y;
        float z;
        float w;
    } ;
    struct {
        float r;
        float g;
        float b;
        float a;
    } ;
    struct {
        float s;
        float t;
        float p;
        float q;
    } ;
    float v[4];
};

