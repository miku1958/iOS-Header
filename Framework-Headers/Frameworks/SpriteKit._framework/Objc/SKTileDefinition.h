//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <SpriteKit/NSCopying-Protocol.h>
#import <SpriteKit/NSSecureCoding-Protocol.h>

@class NSArray, NSMutableArray, NSMutableDictionary, NSString, SKTileGroupRule;

@interface SKTileDefinition : NSObject <NSCopying, NSSecureCoding>
{
    NSMutableArray *_textures;
    NSMutableArray *_normals;
    unsigned long long _orientation;
    BOOL _frameDidChange;
    BOOL _nextFrameAffectsVertexBuffer;
    unsigned short _currentFrameIndex;
    float _currentFrameTime;
    NSMutableDictionary *_userData;
    NSString *_name;
    double _timePerFrame;
    unsigned long long _placementWeight;
    SKTileGroupRule *_parentRule;
    NSString *_uid;
    double _lastTargetTime;
    struct CGSize _size;
}

@property (nonatomic) unsigned short currentFrameIndex; // @synthesize currentFrameIndex=_currentFrameIndex;
@property (nonatomic) float currentFrameTime; // @synthesize currentFrameTime=_currentFrameTime;
@property (nonatomic) BOOL flipHorizontally;
@property (nonatomic) BOOL flipVertically;
@property (nonatomic) BOOL frameDidChange; // @synthesize frameDidChange=_frameDidChange;
@property (nonatomic) double lastTargetTime; // @synthesize lastTargetTime=_lastTargetTime;
@property (copy, nonatomic) NSString *name; // @synthesize name=_name;
@property (nonatomic) BOOL nextFrameAffectsVertexBuffer; // @synthesize nextFrameAffectsVertexBuffer=_nextFrameAffectsVertexBuffer;
@property (copy, nonatomic) NSArray *normalTextures;
@property (weak, nonatomic) SKTileGroupRule *parentRule; // @synthesize parentRule=_parentRule;
@property (nonatomic) unsigned long long placementWeight; // @synthesize placementWeight=_placementWeight;
@property (nonatomic) unsigned long long rotation;
@property (nonatomic) struct CGSize size; // @synthesize size=_size;
@property (copy, nonatomic) NSArray *textures;
@property (nonatomic) double timePerFrame; // @synthesize timePerFrame=_timePerFrame;
@property (strong, nonatomic) NSString *uid; // @synthesize uid=_uid;
@property (strong, nonatomic) NSMutableDictionary *userData; // @synthesize userData=_userData;

+ (BOOL)supportsSecureCoding;
+ (id)tileDefinitionWithTexture:(id)arg1;
+ (id)tileDefinitionWithTexture:(id)arg1 normalTexture:(id)arg2 size:(struct CGSize)arg3;
+ (id)tileDefinitionWithTexture:(id)arg1 size:(struct CGSize)arg2;
+ (id)tileDefinitionWithTextures:(id)arg1 normalTextures:(id)arg2 size:(struct CGSize)arg3 timePerFrame:(double)arg4;
+ (id)tileDefinitionWithTextures:(id)arg1 size:(struct CGSize)arg2 timePerFrame:(double)arg3;
- (void).cxx_destruct;
- (id)copy;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithTexture:(id)arg1;
- (id)initWithTexture:(id)arg1 normalTexture:(id)arg2 size:(struct CGSize)arg3;
- (id)initWithTexture:(id)arg1 size:(struct CGSize)arg2;
- (id)initWithTextures:(id)arg1 normalTextures:(id)arg2 size:(struct CGSize)arg3 timePerFrame:(double)arg4;
- (id)initWithTextures:(id)arg1 size:(struct CGSize)arg2 timePerFrame:(double)arg3;
- (BOOL)isEqualToNode:(id)arg1;
- (void)setDataWithTexture:(id)arg1 normalTexture:(id)arg2 tileName:(id)arg3 size:(struct CGSize)arg4;
- (void)setDataWithTextures:(id)arg1 normalTextures:(id)arg2 timePerFrame:(double)arg3 tileName:(id)arg4 size:(struct CGSize)arg5;

@end

