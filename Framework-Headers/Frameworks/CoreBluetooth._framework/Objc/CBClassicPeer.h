//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <CoreBluetooth/CBPeer.h>

@class NSArray, NSHashTable, NSNumber, NSString;

@interface CBClassicPeer : CBPeer
{
    BOOL _isDevFused;
    unsigned char _colorID;
    BOOL _isConnectedOverUSB;
    unsigned char _batteryPercentSingle;
    unsigned char _batteryPercentLeft;
    unsigned char _batteryPercentRight;
    unsigned char _batteryPercentCase;
    unsigned char _batteryPercentCombined;
    unsigned char _listeningMode;
    BOOL _LRDetectionEnabled;
    BOOL _EQConfigEnabled;
    unsigned char _EQConfigTreble;
    unsigned char _EQConfigMid;
    unsigned char _EQConfigBass;
    unsigned char _singleClickMode;
    unsigned char _doubleClickMode;
    unsigned char _clickHoldModeLeft;
    unsigned char _clickHoldModeRight;
    unsigned char _oneBudANCMode;
    unsigned char _switchControlMode;
    unsigned char _doubleTapCapability;
    unsigned char _micMode;
    BOOL _inEarDetectionEnabled;
    BOOL _smartRoutingEnabled;
    BOOL _remoteTimeSyncEnabled;
    unsigned char _primaryInEarStatus;
    unsigned char _secondaryInEarStatus;
    BOOL _isIncoming;
    unsigned char _modeSupported;
    BOOL _traceLogging;
    unsigned short _productID;
    unsigned short _vendorID;
    unsigned short _vendorIDSource;
    unsigned short _version;
    unsigned short _syncSettings;
    unsigned short _doubleTapAction;
    unsigned short _doubleTapActionLeft;
    unsigned short _doubleTapActionRight;
    unsigned short _connectionHandle;
    int _deviceType;
    unsigned int _listeningModeConfigs;
    unsigned int _doubleClickInterval;
    unsigned int _clickHoldInterval;
    unsigned int _appleFeatureBitMask;
    long long _state;
    NSString *_name;
    CDUnknownBlockType _connectL2CAPCallback;
    CDUnknownBlockType _disconnectL2CAPCallback;
    CDUnknownBlockType _connectRFCOMMCallback;
    CDUnknownBlockType _disconnectRFCOMMCallback;
    NSString *_appleModelIdentifier;
    NSArray *_syncGroups;
    unsigned long long _timeSyncID;
    NSArray *_services;
    NSNumber *_RSSI;
    NSHashTable *_L2CAPChannels;
    NSHashTable *_RFCOMMChannels;
    long long _internalState;
    NSString *_addressString;
}

@property (nonatomic) unsigned char EQConfigBass; // @synthesize EQConfigBass=_EQConfigBass;
@property (nonatomic) BOOL EQConfigEnabled; // @synthesize EQConfigEnabled=_EQConfigEnabled;
@property (nonatomic) unsigned char EQConfigMid; // @synthesize EQConfigMid=_EQConfigMid;
@property (nonatomic) unsigned char EQConfigTreble; // @synthesize EQConfigTreble=_EQConfigTreble;
@property (strong, nonatomic) NSHashTable *L2CAPChannels; // @synthesize L2CAPChannels=_L2CAPChannels;
@property (nonatomic) BOOL LRDetectionEnabled; // @synthesize LRDetectionEnabled=_LRDetectionEnabled;
@property (strong, nonatomic) NSHashTable *RFCOMMChannels; // @synthesize RFCOMMChannels=_RFCOMMChannels;
@property (strong, nonatomic) NSNumber *RSSI; // @synthesize RSSI=_RSSI;
@property (copy, nonatomic) NSString *addressString; // @synthesize addressString=_addressString;
@property (nonatomic) unsigned int appleFeatureBitMask; // @synthesize appleFeatureBitMask=_appleFeatureBitMask;
@property (copy, nonatomic) NSString *appleModelIdentifier; // @synthesize appleModelIdentifier=_appleModelIdentifier;
@property (nonatomic) unsigned char batteryPercentCase; // @synthesize batteryPercentCase=_batteryPercentCase;
@property (nonatomic) unsigned char batteryPercentCombined; // @synthesize batteryPercentCombined=_batteryPercentCombined;
@property (nonatomic) unsigned char batteryPercentLeft; // @synthesize batteryPercentLeft=_batteryPercentLeft;
@property (nonatomic) unsigned char batteryPercentRight; // @synthesize batteryPercentRight=_batteryPercentRight;
@property (nonatomic) unsigned char batteryPercentSingle; // @synthesize batteryPercentSingle=_batteryPercentSingle;
@property (nonatomic) unsigned int clickHoldInterval; // @synthesize clickHoldInterval=_clickHoldInterval;
@property (nonatomic) unsigned char clickHoldModeLeft; // @synthesize clickHoldModeLeft=_clickHoldModeLeft;
@property (nonatomic) unsigned char clickHoldModeRight; // @synthesize clickHoldModeRight=_clickHoldModeRight;
@property (nonatomic) unsigned char colorID; // @synthesize colorID=_colorID;
@property (copy) CDUnknownBlockType connectL2CAPCallback; // @synthesize connectL2CAPCallback=_connectL2CAPCallback;
@property (copy) CDUnknownBlockType connectRFCOMMCallback; // @synthesize connectRFCOMMCallback=_connectRFCOMMCallback;
@property (nonatomic) unsigned short connectionHandle; // @synthesize connectionHandle=_connectionHandle;
@property (nonatomic) int deviceType; // @synthesize deviceType=_deviceType;
@property (copy) CDUnknownBlockType disconnectL2CAPCallback; // @synthesize disconnectL2CAPCallback=_disconnectL2CAPCallback;
@property (copy) CDUnknownBlockType disconnectRFCOMMCallback; // @synthesize disconnectRFCOMMCallback=_disconnectRFCOMMCallback;
@property (nonatomic) unsigned int doubleClickInterval; // @synthesize doubleClickInterval=_doubleClickInterval;
@property (nonatomic) unsigned char doubleClickMode; // @synthesize doubleClickMode=_doubleClickMode;
@property (nonatomic) unsigned short doubleTapAction; // @synthesize doubleTapAction=_doubleTapAction;
@property (nonatomic) unsigned short doubleTapActionLeft; // @synthesize doubleTapActionLeft=_doubleTapActionLeft;
@property (nonatomic) unsigned short doubleTapActionRight; // @synthesize doubleTapActionRight=_doubleTapActionRight;
@property (nonatomic) unsigned char doubleTapCapability; // @synthesize doubleTapCapability=_doubleTapCapability;
@property (nonatomic) BOOL inEarDetectionEnabled; // @synthesize inEarDetectionEnabled=_inEarDetectionEnabled;
@property (nonatomic) long long internalState; // @synthesize internalState=_internalState;
@property (nonatomic) BOOL isConnectedOverUSB; // @synthesize isConnectedOverUSB=_isConnectedOverUSB;
@property (nonatomic) BOOL isDevFused; // @synthesize isDevFused=_isDevFused;
@property (nonatomic) BOOL isIncoming; // @synthesize isIncoming=_isIncoming;
@property (nonatomic) unsigned char listeningMode; // @synthesize listeningMode=_listeningMode;
@property (nonatomic) unsigned int listeningModeConfigs; // @synthesize listeningModeConfigs=_listeningModeConfigs;
@property (nonatomic) unsigned char micMode; // @synthesize micMode=_micMode;
@property (nonatomic) unsigned char modeSupported; // @synthesize modeSupported=_modeSupported;
@property (copy, nonatomic) NSString *name; // @synthesize name=_name;
@property (nonatomic) unsigned char oneBudANCMode; // @synthesize oneBudANCMode=_oneBudANCMode;
@property (nonatomic) unsigned char primaryInEarStatus; // @synthesize primaryInEarStatus=_primaryInEarStatus;
@property (nonatomic) unsigned short productID; // @synthesize productID=_productID;
@property (nonatomic) BOOL remoteTimeSyncEnabled; // @synthesize remoteTimeSyncEnabled=_remoteTimeSyncEnabled;
@property (nonatomic) unsigned char secondaryInEarStatus; // @synthesize secondaryInEarStatus=_secondaryInEarStatus;
@property (strong, nonatomic) NSArray *services; // @synthesize services=_services;
@property (nonatomic) unsigned char singleClickMode; // @synthesize singleClickMode=_singleClickMode;
@property (nonatomic) BOOL smartRoutingEnabled; // @synthesize smartRoutingEnabled=_smartRoutingEnabled;
@property (nonatomic) long long state; // @synthesize state=_state;
@property (nonatomic) unsigned char switchControlMode; // @synthesize switchControlMode=_switchControlMode;
@property (strong, nonatomic) NSArray *syncGroups; // @synthesize syncGroups=_syncGroups;
@property (nonatomic) unsigned short syncSettings; // @synthesize syncSettings=_syncSettings;
@property (nonatomic) unsigned long long timeSyncID; // @synthesize timeSyncID=_timeSyncID;
@property (nonatomic) BOOL traceLogging; // @synthesize traceLogging=_traceLogging;
@property (nonatomic) unsigned short vendorID; // @synthesize vendorID=_vendorID;
@property (nonatomic) unsigned short vendorIDSource; // @synthesize vendorIDSource=_vendorIDSource;
@property (nonatomic) unsigned short version; // @synthesize version=_version;

- (void).cxx_destruct;
- (id)channelWithID:(unsigned char)arg1;
- (id)channelWithPSM:(unsigned short)arg1;
- (void)closeL2CAPChannel:(id)arg1;
- (void)closeRFCOMMChannel:(id)arg1;
- (void)dealloc;
- (id)description;
- (unsigned int)getConnectedServices;
- (void)handleDisconnection;
- (void)handleFailedConnection;
- (void)handleGetPeerState:(id)arg1;
- (void)handleL2CAPChannelClosed:(id)arg1;
- (void)handleL2CAPChannelOpened:(id)arg1;
- (void)handleMsg:(int)arg1 args:(id)arg2;
- (void)handlePeerUpdated:(id)arg1;
- (void)handleRFCOMMChannelClosed:(id)arg1;
- (void)handleRFCOMMChannelOpened:(id)arg1;
- (void)handleSuccessfulConnection:(id)arg1;
- (unsigned long long)hash;
- (id)importServices:(id)arg1;
- (id)initWithInfo:(id)arg1 manager:(id)arg2;
- (BOOL)isAppleDevice;
- (BOOL)isAppleFeatureSupported:(unsigned int)arg1;
- (BOOL)isGameController;
- (BOOL)isMac;
- (BOOL)isMultiBatteryDevice;
- (BOOL)isRFCOMMServiceSupported:(id)arg1;
- (BOOL)isReportingBatteryPercent;
- (BOOL)isServiceSupported:(id)arg1;
- (BOOL)isSonyGameController;
- (BOOL)isXboxGameController;
- (BOOL)isiPad;
- (BOOL)isiPhone;
- (void)openL2CAPChannel:(id)arg1;
- (void)openL2CAPChannel:(id)arg1 options:(id)arg2;
- (void)openRFCOMMChannel:(id)arg1;
- (void)openRFCOMMChannel:(id)arg1 options:(id)arg2;
- (unsigned short)psmForService:(id)arg1;
- (unsigned char)rfcommChannelIDForService:(id)arg1;
- (void)sendMsg:(int)arg1 args:(id)arg2;
- (void)sendMsg:(int)arg1 requiresConnected:(BOOL)arg2 args:(id)arg3;
- (id)service:(id)arg1;
- (id)serviceForPSM:(unsigned short)arg1;
- (id)serviceForRFCOMMChannelID:(unsigned char)arg1;
- (void)setOrphan;

@end

