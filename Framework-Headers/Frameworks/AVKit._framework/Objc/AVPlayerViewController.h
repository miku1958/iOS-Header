//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import <AVKit/AVContentTransitioningDelegate-Protocol.h>
#import <AVKit/AVFullScreenViewControllerDelegate-Protocol.h>
#import <AVKit/AVPictureInPictureControllerDelegate-Protocol.h>
#import <AVKit/AVPlaybackControlsVisibilityControllerDelegate-Protocol.h>
#import <AVKit/AVTransitionControllerDelegate-Protocol.h>
#import <AVKit/UIGestureRecognizerDelegate-Protocol.h>
#import <AVKit/UIPopoverPresentationControllerDelegate-Protocol.h>

@class AVAppBasedStatusBarAppearanceController, AVFullScreenViewController, AVObservationController, AVPictureInPictureController, AVPlaybackControlsController, AVPlaybackControlsVisibilityController, AVPlayer, AVPlayerController, AVPlayerView, AVPlayerViewControllerContentView, AVPlayerViewControllerCustomControlsView, AVTransitionController, NSArray, NSDictionary, NSMutableDictionary, NSString, UIPopoverPresentationController, UIScreen, UIView, UIWindow, __AVPlayerLayerView;
@protocol AVPlayerViewControllerContentTransitioning_NewsOnly, AVPlayerViewControllerDelegate;

@interface AVPlayerViewController : UIViewController <AVPictureInPictureControllerDelegate, UIGestureRecognizerDelegate, UIPopoverPresentationControllerDelegate, AVPlaybackControlsVisibilityControllerDelegate, AVFullScreenViewControllerDelegate, AVContentTransitioningDelegate, AVTransitionControllerDelegate>
{
    BOOL _playerShouldAutoplay;
    BOOL _showsPlaybackControls;
    BOOL _requiresLinearPlayback;
    long long _videoGravity;
    BOOL _allowsPictureInPicturePlayback;
    BOOL _hasClientSetVideoGravity;
    BOOL _hasClientSetTransitioningDelegate;
    NSDictionary *_pixelBufferAttributes;
    AVPictureInPictureController *_pictureInPictureController;
    UIPopoverPresentationController *_mediaSelectionPopoverPresentationController;
    AVTransitionController *_transitionController;
    AVPlaybackControlsVisibilityController *_playbackControlsVisibilityController;
    AVPlaybackControlsController *_playbackControlsController;
    AVAppBasedStatusBarAppearanceController *_appBasedStatusBarAppearanceController;
    AVPlayerView *_playerViewControllerView;
    __AVPlayerLayerView *_playerLayerView;
    BOOL _playbackControlsViewControllerPictureInPictureButtonEnabled;
    BOOL _transitionFromFullScreenOrDismissViewControllerWhenEnteringBackgroundAfterPictureInPictureStart;
    id<AVPlayerViewControllerDelegate> _delegate;
    struct {
        BOOL playerViewControllerWillStartPictureInPicture;
        BOOL playerViewControllerDidStartPictureInPicture;
        BOOL playerViewController_failedToStartPictureInPictureWithError;
        BOOL playerViewControllerWillStopPictureInPicture;
        BOOL playerViewControllerDidStopPictureInPicture;
        BOOL playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart;
        BOOL playerViewController_restoreUserInterfaceForPictureInPictureStopWithCompletionHandler;
        BOOL playerViewController_shouldExitFullScreenWithReason;
        BOOL playerViewControllerMetricsCollectionEventOccured;
        BOOL playerViewControllerWillTransitionToVisibilityOfPlaybackControlsWithAnimationCoordinator;
    } _delegateRespondsTo;
    BOOL _showsExitFullScreenButton;
    id<AVPlayerViewControllerContentTransitioning_NewsOnly> _contentTransitioningDelegate;
    UIView *_customContentTransitioningInfoPanel;
    BOOL _startNextContentTransitionButtonEnabled;
    BOOL _startPreviousContentTransitionButtonEnabled;
    BOOL _updatesNowPlayingInfoCenter;
    BOOL _entersFullScreenWhenPlaybackBegins;
    BOOL _exitsFullScreenWhenPlaybackEnds;
    BOOL _shouldUseNetworkingResourcesForLiveStreamingWhilePaused;
    BOOL __wasInitializedWithPlayerLayerView;
    BOOL __hasBegunObservation;
    BOOL _canPausePlaybackWhenExitingFullScreen;
    BOOL _playbackControlsIncludeVolumeControls;
    AVPlayer *_player;
    NSMutableDictionary *__targetVideoGravitiesForLayoutClass;
    AVPlayerController *_playerController;
    UIWindow *_secondScreenWindow;
    UIScreen *_playbackTargetScreen;
    CDUnknownBlockType _finishPreparingForInteractiveDismissalHandler;
    CDUnknownBlockType _interactiveDismissalCompletionHandler;
    AVPlayer *_contentTransitioningPlayer;
    AVObservationController *__observationController;
    long long __numberOfTrackedUserInteractions;
    NSArray *_customControlItems;
}

@property (nonatomic) BOOL _hasBegunObservation; // @synthesize _hasBegunObservation=__hasBegunObservation;
@property (nonatomic, setter=_setNumberOfTrackedUserInteractions:) long long _numberOfTrackedUserInteractions; // @synthesize _numberOfTrackedUserInteractions=__numberOfTrackedUserInteractions;
@property (readonly, nonatomic) AVObservationController *_observationController; // @synthesize _observationController=__observationController;
@property (readonly, nonatomic) NSMutableDictionary *_targetVideoGravitiesForLayoutClass; // @synthesize _targetVideoGravitiesForLayoutClass=__targetVideoGravitiesForLayoutClass;
@property (nonatomic, setter=_setWasInitializedWithPlayerLayerView:) BOOL _wasInitializedWithPlayerLayerView; // @synthesize _wasInitializedWithPlayerLayerView=__wasInitializedWithPlayerLayerView;
@property (readonly, nonatomic) long long activeContentTransitionType;
@property (nonatomic) BOOL allowsEnteringFullScreen;
@property (nonatomic) BOOL allowsPictureInPicturePlayback;
@property (nonatomic) BOOL canHideInteractiveContentOverlayView;
@property (nonatomic) BOOL canHidePlaybackControls;
@property (nonatomic) BOOL canPausePlaybackWhenExitingFullScreen; // @synthesize canPausePlaybackWhenExitingFullScreen=_canPausePlaybackWhenExitingFullScreen;
@property (readonly, nonatomic) UIView *contentOverlayView;
@property (readonly, nonatomic, getter=isContentTransitionInteractive) BOOL contentTransitionInteractive;
@property (weak, nonatomic) id<AVPlayerViewControllerContentTransitioning_NewsOnly> contentTransitioningDelegate;
@property (readonly, nonatomic) UIView *contentTransitioningOverlayView;
@property (readonly, nonatomic) AVPlayer *contentTransitioningPlayer;
@property (strong, nonatomic) AVPlayer *contentTransitioningPlayer; // @synthesize contentTransitioningPlayer=_contentTransitioningPlayer;
@property (readonly, nonatomic) AVPlayerViewControllerContentView *contentView;
@property (strong, nonatomic) UIView *customContentTransitioningInfoPanel;
@property (copy, nonatomic) NSArray *customControlItems; // @synthesize customControlItems=_customControlItems;
@property (readonly, nonatomic) AVPlayerViewControllerCustomControlsView *customControlsView;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<AVPlayerViewControllerDelegate> delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) BOOL entersFullScreenWhenPlaybackBegins; // @synthesize entersFullScreenWhenPlaybackBegins=_entersFullScreenWhenPlaybackBegins;
@property (nonatomic) BOOL entersFullScreenWhenTapped;
@property (nonatomic) BOOL exitsFullScreenWhenPlaybackEnds; // @synthesize exitsFullScreenWhenPlaybackEnds=_exitsFullScreenWhenPlaybackEnds;
@property (copy, nonatomic) CDUnknownBlockType finishPreparingForInteractiveDismissalHandler; // @synthesize finishPreparingForInteractiveDismissalHandler=_finishPreparingForInteractiveDismissalHandler;
@property (readonly, weak, nonatomic) UIViewController *fullScreenViewController;
@property (readonly, nonatomic) AVFullScreenViewController *fullScreenViewController;
@property (readonly, nonatomic) BOOL hasActiveTransition;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) UIView *iAdPrerollView;
@property (readonly, nonatomic) UIView *interactiveContentOverlayView;
@property (copy, nonatomic) CDUnknownBlockType interactiveDismissalCompletionHandler; // @synthesize interactiveDismissalCompletionHandler=_interactiveDismissalCompletionHandler;
@property (readonly, nonatomic, getter=isPictureInPictureActive) BOOL pictureInPictureActive;
@property (readonly, nonatomic, getter=isPictureInPicturePossible) BOOL pictureInPicturePossible;
@property (readonly, nonatomic, getter=isPictureInPictureSuspended) BOOL pictureInPictureSuspended;
@property (readonly, nonatomic) BOOL pictureInPictureWasStartedWhenEnteringBackground;
@property (copy, nonatomic) NSDictionary *pixelBufferAttributes;
@property (copy, nonatomic) CDUnknownBlockType playButtonHandlerForLazyPlayerLoading;
@property (nonatomic) BOOL playbackControlsIncludeDisplayModeControls;
@property (nonatomic) BOOL playbackControlsIncludeTransportControls;
@property (nonatomic) BOOL playbackControlsIncludeVolumeControls; // @synthesize playbackControlsIncludeVolumeControls=_playbackControlsIncludeVolumeControls;
@property (readonly, nonatomic) AVPlaybackControlsVisibilityController *playbackControlsVisibilityController;
@property (strong, nonatomic) UIScreen *playbackTargetScreen; // @synthesize playbackTargetScreen=_playbackTargetScreen;
@property (strong, nonatomic) AVPlayer *player; // @synthesize player=_player;
@property (strong, nonatomic) AVPlayerController *playerController; // @synthesize playerController=_playerController;
@property (nonatomic) long long preferredUnobscuredArea;
@property (readonly, nonatomic, getter=isPresentedFullScreen) BOOL presentedFullScreen;
@property (readonly, nonatomic, getter=isPresentingFullScreenFromInline) BOOL presentingFullScreenFromInline;
@property (readonly, nonatomic, getter=isReadyForDisplay) BOOL readyForDisplay;
@property (nonatomic) BOOL requiresLinearPlayback;
@property (strong, nonatomic) UIWindow *secondScreenWindow; // @synthesize secondScreenWindow=_secondScreenWindow;
@property (nonatomic) BOOL shouldUseNetworkingResourcesForLiveStreamingWhilePaused; // @synthesize shouldUseNetworkingResourcesForLiveStreamingWhilePaused=_shouldUseNetworkingResourcesForLiveStreamingWhilePaused;
@property (nonatomic) BOOL showsExitFullScreenButton;
@property (nonatomic) BOOL showsMinimalPlaybackControlsWhenEmbeddedInline;
@property (nonatomic) BOOL showsPlaybackControls;
@property (nonatomic, getter=isStartNextContentTransitionButtonEnabled) BOOL startNextContentTransitionButtonEnabled;
@property (nonatomic, getter=isStartPreviousContentTransitionButtonEnabled) BOOL startPreviousContentTransitionButtonEnabled;
@property (readonly) Class superclass;
@property (nonatomic) BOOL updatesNowPlayingInfoCenter; // @synthesize updatesNowPlayingInfoCenter=_updatesNowPlayingInfoCenter;
@property (readonly, nonatomic) struct CGRect videoBounds;
@property (copy, nonatomic) NSString *videoGravity;
@property (readonly, nonatomic) UIViewController *viewControllerForFullScreenPresentation;
@property (nonatomic) BOOL volumeControlsCanShowSlider;

+ (id)keyPathsForValuesAffectingPictureInPictureActive;
+ (id)keyPathsForValuesAffectingPictureInPicturePossible;
+ (id)keyPathsForValuesAffectingPictureInPictureSuspended;
+ (id)keyPathsForValuesAffectingPictureInPictureWasStartedWhenEnteringBackground;
+ (id)keyPathsForValuesAffectingPixelBufferAttributes;
+ (id)keyPathsForValuesAffectingReadyForDisplay;
+ (id)keyPathsForValuesAffectingVideoBounds;
+ (id)keyPathsForValuesAffectingVideoGravity;
- (void).cxx_destruct;
- (void)_addObservers;
- (void)_beginTrackingUserInteraction;
- (BOOL)_canEnterFullScreen;
- (void)_contentViewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)_endTrackingUserInteraction;
- (void)_handleDoubleDoubleTapGesture:(id)arg1;
- (void)_handleDoubleTapGesture:(id)arg1;
- (void)_handleExitFullScreenKeyCommand:(id)arg1;
- (void)_handleFastForwardKeyPressedCommand:(id)arg1;
- (void)_handleFastForwardKeyReleasedCommand:(id)arg1;
- (void)_handleGoToBeginningKeyCommand:(id)arg1;
- (void)_handlePlayPauseKeyCommand:(id)arg1;
- (void)_handleRewindKeyPressedCommand:(id)arg1;
- (void)_handleRewindKeyReleasedCommand:(id)arg1;
- (void)_handleShowNextFrameKeyCommand:(id)arg1;
- (void)_handleShowPreviousFrameKeyCommand:(id)arg1;
- (void)_handleSingleTapGesture:(id)arg1;
- (void)_handleSkipAhead15SecondsKeyCommand:(id)arg1;
- (void)_handleSkipBack15SecondsKeyCommand:(id)arg1;
- (void)_handleUserInteractionObservationRecognizer:(id)arg1;
- (void)_handleVolumeDownKeyPressedCommand:(id)arg1;
- (void)_handleVolumeDownKeyReleasedCommand:(id)arg1;
- (void)_handleVolumeUpKeyPressedCommand:(id)arg1;
- (void)_handleVolumeUpKeyReleasedCommand:(id)arg1;
- (BOOL)_inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused;
- (BOOL)_isAudioOnlyContent;
- (BOOL)_isDescendantOfRootViewController;
- (BOOL)_isTrackingUserInteraction;
- (BOOL)_isTrackingUserInteractionWithInteractiveView;
- (BOOL)_isTransitioningToOrFromFullScreen;
- (BOOL)_isUnsupportedContent;
- (void)_mediaSelectionDoneButtonTapped:(id)arg1;
- (BOOL)_modalPresentationStyleIsFullScreen;
- (void)_notifyDelegateOfMetricsCollectionEvent:(long long)arg1;
- (void)_setInlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused:(BOOL)arg1;
- (void)_setPlayerLayerView:(id)arg1;
- (void)_togglePictureInPicture;
- (id)_transitionController;
- (id)_transitionControllerIfLoaded;
- (long long)_transitionDirectionForContentTransitionType:(long long)arg1;
- (void)_transitionFromFullScreenAnimated:(BOOL)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_transitionFromFullScreenWithReason:(long long)arg1 animated:(BOOL)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_transitionToFullScreenAnimated:(BOOL)arg1 interactive:(BOOL)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_updateAudioOnlyIndicatorView;
- (void)_updateExternalPlaybackIndicatorView;
- (void)_updatePlaybackControlsController;
- (void)_updatePlayerLayerViewAndContentOverlayView;
- (void)_updatePlayerLayerViewAndContentOverlayViewExcludingScreen:(id)arg1;
- (void)_updateUnsupportedContentIndicatorView;
- (long long)adaptivePresentationStyleForPresentationController:(id)arg1;
- (BOOL)canBecomeFirstResponder;
- (long long)contentTransitionTypeForTransitionDirection:(long long)arg1;
- (BOOL)contentTransitioningEnabled:(id)arg1;
- (id)contentTransitioningPlayerContentViewForTransition:(id)arg1;
- (BOOL)contentTransitioningView:(id)arg1 shouldBeginTransitionWithDirection:(long long)arg2;
- (void)contentTransitioningViewDidChangeTransitionStatus:(id)arg1 oldState:(long long)arg2 oldTransitionDirection:(long long)arg3 oldProgress:(double)arg4;
- (BOOL)contentTransitioningViewShouldBeginDragging:(id)arg1 locationInView:(struct CGPoint)arg2;
- (void)dealloc;
- (void)didMoveToParentViewController:(id)arg1;
- (void)doneButtonTapped:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)enterAutoplayPhase;
- (void)enterFullScreenAnimated:(BOOL)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)exitAutoplayPhase;
- (void)exitFullScreenAnimated:(BOOL)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)flashAutoplayControls;
- (void)flashPlaybackControlsWithDuration:(double)arg1;
- (void)fullScreenButtonTapped:(id)arg1;
- (void)fullScreenViewController:(id)arg1 viewWillTransitionToSize:(struct CGSize)arg2 coordinator:(id)arg3;
- (void)fullScreenViewControllerNeedsAppBasedStatusBarAppearanceUpdate:(id)arg1;
- (void)fullScreenViewControllerWillBeginFullScreenPresentation:(id)arg1;
- (void)fullScreenViewControllerWillEndFullScreenPresentation:(id)arg1;
- (BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithPlayerLayerView:(id)arg1;
- (id)keyCommandResponderForFullScreenViewController:(id)arg1;
- (id)keyCommands;
- (void)loadView;
- (void)mediaSelectionButtonTapped:(id)arg1;
- (BOOL)modalPresentationCapturesStatusBarAppearance;
- (void)pictureInPictureButtonTapped:(id)arg1;
- (void)pictureInPictureController:(id)arg1 failedToStartPictureInPictureWithError:(id)arg2;
- (void)pictureInPictureController:(id)arg1 restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:(CDUnknownBlockType)arg2;
- (void)pictureInPictureControllerDidStartPictureInPicture:(id)arg1;
- (void)pictureInPictureControllerDidStopPictureInPicture:(id)arg1;
- (void)pictureInPictureControllerWillStartPictureInPicture:(id)arg1;
- (void)pictureInPictureControllerWillStopPictureInPicture:(id)arg1;
- (id)playbackControlsController;
- (BOOL)playbackControlsIncludeVolumeControlsControls;
- (void)playbackControlsVisibilityController:(id)arg1 animateAlongsideVisibilityAnimationsWithAnimationCoordinator:(id)arg2 appearingViews:(id)arg3 disappearingViews:(id)arg4;
- (void)playbackControlsVisibilityController:(id)arg1 updateStatusBarAppearanceUsingAnimator:(id)arg2;
- (void)popoverPresentationControllerDidDismissPopover:(id)arg1;
- (long long)preferredStatusBarStyle;
- (long long)preferredStatusStyleForFullScreenViewController:(id)arg1;
- (long long)preferredWhitePointAdaptivityStyle;
- (BOOL)prefersHomeIndicatorAutoHidden;
- (BOOL)prefersStatusBarHidden;
- (BOOL)prefersStatusBarHiddenForFullScreenViewController:(id)arg1;
- (void)prepareForFinishingInteractiveTransition:(CDUnknownBlockType)arg1;
- (void)prepareForPopoverPresentation:(id)arg1;
- (void)setTransitioningDelegate:(id)arg1;
- (void)setVideoGravity:(id)arg1 forLayoutClass:(unsigned long long)arg2;
- (void)setVideoGravityForTransitioningContent:(id)arg1;
- (void)setView:(id)arg1;
- (void)showFullScreenPresentationFromView:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)startContentTransition:(long long)arg1;
- (void)startPictureInPicture;
- (void)stopPictureInPicture;
- (void)toggleMuted:(id)arg1;
- (void)togglePlayback:(id)arg1;
- (BOOL)transitionController:(id)arg1 gestureRecognizer:(id)arg2 shouldReceiveTouch:(id)arg3;
- (void)transitionController:(id)arg1 prepareForFinishingInteractiveTransition:(CDUnknownBlockType)arg2;
- (id)transitionController:(id)arg1 targetViewForDismissingViewController:(id)arg2;
- (void)transitionController:(id)arg1 transitionWillComplete:(BOOL)arg2;
- (void)transitionController:(id)arg1 willBeginDismissingViewController:(id)arg2;
- (void)transitionController:(id)arg1 willBeginPresentingViewController:(id)arg2;
- (id)transitionControllerBackgroundColorForInteractivelyTransitioningPresentedViewController:(id)arg1;
- (void)transitionControllerBeginInteractiveDismissalTransition:(id)arg1;
- (void)transitionControllerBeginInteractivePresentationTransition:(id)arg1;
- (BOOL)transitionControllerCanBeginInteractiveDismissalTransition:(id)arg1;
- (BOOL)transitionControllerCanBeginInteractivePresentationTransition:(id)arg1;
- (BOOL)transitionControllerCanCreateVideoOnlyWindow:(id)arg1;
- (id)transitionControllerContentSourceViewController:(id)arg1;
- (void)updateStartLeftRightContentTransitionButtonsEnabled;
- (void)videoGravityButtonTapped:(id)arg1;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewDidDisappear:(BOOL)arg1;
- (void)viewDidLoad;
- (id)viewForFullScreenViewController:(id)arg1;
- (void)viewWillAppear:(BOOL)arg1;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;

@end

