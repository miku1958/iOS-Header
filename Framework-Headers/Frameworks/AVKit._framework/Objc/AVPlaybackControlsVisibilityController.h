//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class AVObservationController, AVPlayerController, NSMapTable, NSTimer, UIViewPropertyAnimator;
@protocol AVPlaybackControlsVisibilityControllerDelegate;

@interface AVPlaybackControlsVisibilityController : NSObject
{
    UIViewPropertyAnimator *_visibilityAnimator;
    AVObservationController *_keyValueObservationController;
    NSMapTable *_itemsAndItemInfos;
    long long _numberOfUserInteractionsBeingTracked;
    double _animationDuration;
    BOOL _visibilityNeedsUpdate;
    BOOL _prefersRegularItemsVisible;
    double _prefersItemsVisibleTimerInterval;
    double _prefersItemsVisibleTimerIntervalForQuicklyHiding;
    double _prefersItemsVisibleTimerIntervalForFlashingControls;
    NSTimer *_prefersRegularItemsVisibleTimer;
    BOOL _prefersItemsShownForVolumeChangeVisible;
    double _prefersItemsShownForVolumeChangeVisibleTimerInterval;
    NSTimer *_prefersItemsShownForVolumeChangeVisibleTimer;
    BOOL _hidesItemQuicklyWhenPlaybackBegins;
    BOOL _popoverPresented;
    BOOL _pictureInPictureActive;
    BOOL _scrubbing;
    BOOL _transitionInProgress;
    BOOL _playbackWasPausedAndVisibilityNotToggledAfterPausing;
    BOOL _loadingIndicatorWasShownAndVisibilityNotToggledAfterLoadingIndicatorShown;
    BOOL _isFlashingControlsVisible;
    BOOL _statusBarAppearanceNeedsUpdate;
    id<AVPlaybackControlsVisibilityControllerDelegate> _delegate;
    BOOL _canHideItems;
    BOOL _showsItemsWhileWaitingToPlay;
    AVPlayerController *_playerController;
}

@property double animationDuration;
@property (nonatomic) BOOL canHideItems; // @synthesize canHideItems=_canHideItems;
@property (weak) id<AVPlaybackControlsVisibilityControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property double hideItemsQuicklyTimerInterval;
@property double hideItemsTimerInterval;
@property (nonatomic, getter=isPictureInPictureActive) BOOL pictureInPictureActive; // @synthesize pictureInPictureActive=_pictureInPictureActive;
@property (strong, nonatomic) AVPlayerController *playerController; // @synthesize playerController=_playerController;
@property (nonatomic, getter=isPopoverPresented) BOOL popoverPresented; // @synthesize popoverPresented=_popoverPresented;
@property (readonly, nonatomic) BOOL showsItemPreferingStatusBarVisible;
@property (nonatomic) BOOL showsItemsWhileWaitingToPlay; // @synthesize showsItemsWhileWaitingToPlay=_showsItemsWhileWaitingToPlay;
@property double volumeChangeHidePlaybackControlTimerInterval;

- (void).cxx_destruct;
- (BOOL)_hasItemsThatCanBeHidden;
- (BOOL)_hasItemsThatCanBeShown;
- (void)_hideItemsShownForVolumeChange;
- (void)_hideRegularItems;
- (id)_itemsPassingTest:(CDUnknownBlockType)arg1;
- (void)_performForEachItem:(CDUnknownBlockType)arg1;
- (void)_setVisibilityNeedsUpdate;
- (void)_showItemsShownForVolumeChange;
- (void)_showItemsShownForVolumeChangeAndHideAfterDelay;
- (void)_showRegularItems;
- (void)_showRegularItemsAndHideAfterDelay;
- (void)_showRegularItemsAndHideAfterDelayIfPlaying;
- (void)_startControllingVisibilityIfNeeded;
- (void)_startTimerToHideItemsShownForVolumeChange;
- (void)_startTimerToHideRegularItems;
- (void)_startTimerToHideRegularItemsAfterDelay:(double)arg1 ifPlaying:(BOOL)arg2;
- (void)_startTimerToHideRegularItemsIfPlaying;
- (void)_stopInitiallyHidingItems;
- (void)_stopInitiallyHidingItemsThatAreShownForVolumeChanges;
- (void)_stopTimerToHideItemsShownForVolumeChangeIfPlaying;
- (void)_stopTimerToHideRegularControlsIfPlaying;
- (void)_updateControlItemVisibilityIfNeeded;
- (void)_updateVisibilityWithCompletionHandler:(CDUnknownBlockType)arg1;
- (BOOL)_userIsInteractingWithItems;
- (void)activeAudioRouteOrSystemVolumeDidChange;
- (void)beginHidingItemsForTransition;
- (void)beginTrackingUserInteraction;
- (void)dealloc;
- (void)endHidingItemsForTransition;
- (void)endHidingItemsForTransitionAndShowImmediately:(BOOL)arg1;
- (void)endTrackingUserInteraction;
- (void)flashPlaybackControlsWithDuration:(double)arg1;
- (id)init;
- (BOOL)isHidingItemsForTransition;
- (void)startControllingVisibilityOfItem:(id)arg1 visibilityBehaviorOptions:(long long)arg2;
- (void)startHidingItemQuicklyWhenPlaybackBegins;
- (void)stopControllingVisibilityOfItem:(id)arg1;
- (void)stopHidingItemQuicklyWhenPlaybackBegins;
- (void)toggleVisibility;

@end

