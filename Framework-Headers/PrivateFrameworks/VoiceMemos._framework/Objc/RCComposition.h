//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <VoiceMemos/NSCopying-Protocol.h>
#import <VoiceMemos/NSMutableCopying-Protocol.h>
#import <VoiceMemos/RCDictionaryPListRepresentationCoding-Protocol.h>

@class NSArray, NSDate, NSDictionary, NSString, NSURL;

@interface RCComposition : NSObject <NSMutableCopying, NSCopying, RCDictionaryPListRepresentationCoding>
{
    BOOL _cachedComposedAVURLDurationIsValid;
    BOOL _readonly;
    NSArray *_composedFragments;
    NSString *_savedRecordingUUID;
    NSDate *_creationDate;
    NSDictionary *_musicMemoMetadata;
    NSURL *_composedAVURL;
    NSURL *_composedWaveformURL;
    NSArray *_decomposedFragments;
    NSString *_title;
    double _cachedComposedAVURLDuration;
    NSObject *_composedFragmentsMutex;
}

@property (nonatomic) double cachedComposedAVURLDuration; // @synthesize cachedComposedAVURLDuration=_cachedComposedAVURLDuration;
@property (nonatomic) BOOL cachedComposedAVURLDurationIsValid; // @synthesize cachedComposedAVURLDurationIsValid=_cachedComposedAVURLDurationIsValid;
@property (readonly, nonatomic) NSURL *composedAVURL; // @synthesize composedAVURL=_composedAVURL;
@property (readonly, nonatomic) double composedDuration;
@property (strong, nonatomic) NSArray *composedFragments; // @synthesize composedFragments=_composedFragments;
@property (strong, nonatomic) NSObject *composedFragmentsMutex; // @synthesize composedFragmentsMutex=_composedFragmentsMutex;
@property (readonly, nonatomic) NSURL *composedWaveformURL; // @synthesize composedWaveformURL=_composedWaveformURL;
@property (strong, nonatomic) NSDate *creationDate; // @synthesize creationDate=_creationDate;
@property (readonly, copy) NSString *debugDescription;
@property (strong, nonatomic) NSArray *decomposedFragments; // @synthesize decomposedFragments=_decomposedFragments;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) BOOL isContentBeingModified;
@property (strong, nonatomic) NSDictionary *musicMemoMetadata; // @synthesize musicMemoMetadata=_musicMemoMetadata;
@property (nonatomic) BOOL readonly; // @synthesize readonly=_readonly;
@property (strong, nonatomic) NSString *savedRecordingUUID; // @synthesize savedRecordingUUID=_savedRecordingUUID;
@property (readonly) Class superclass;
@property (strong, nonatomic) NSString *title; // @synthesize title=_title;

+ (id)_compositionFragmentsFolderForComposedAVURL:(id)arg1;
+ (id)_compositionLoadedFromMetadataURL:(id)arg1 composedAVURL:(id)arg2 savedRecordingUUID:(id)arg3 creationDate:(id)arg4 createIfNeeded:(BOOL)arg5;
+ (id)_compositionLoadedFromMetadataURL:(id)arg1 savedRecording:(id)arg2;
+ (id)_compositionMetadataURLForCompositionBundleURL:(id)arg1;
+ (BOOL)_isSessionWithModificationAccessActiveForComposedAVURL:(id)arg1;
+ (BOOL)_markCompositionAVURLsBeingModified:(id)arg1;
+ (id)_unitTestingCompositionWithDecomposedFragments:(id)arg1;
+ (id)compositionBundleURLForComposedAVURL:(id)arg1;
+ (id)compositionLoadedForComposedAVURL:(id)arg1 createIfNeeded:(BOOL)arg2;
+ (id)compositionLoadedForEditingSavedRecording:(id)arg1 error:(id *)arg2;
+ (id)compositionLoadedForSavedRecording:(id)arg1;
+ (id)compositionLoadedForSavedRecordingUUID:(id)arg1;
+ (id)compositionLoadedFromCompositionBundleURL:(id)arg1;
+ (id)compositionMetadataURLForComposedAVURL:(id)arg1;
+ (id)compositionWithComposedAVURL:(id)arg1;
+ (void)deleteFromFilesystem:(id)arg1;
+ (BOOL)excludeFromBackup:(id)arg1 error:(id *)arg2;
+ (BOOL)includeInBackup:(id)arg1 error:(id *)arg2;
+ (BOOL)migrateBackupExclusionFlag:(id)arg1;
+ (id)uriRepresentationForLegacyComposedAVURL:(id)arg1;
- (void).cxx_destruct;
- (id)_calculateComposedFragments;
- (double)_composedDuration;
- (id)_compositionAsset:(BOOL)arg1 error:(id *)arg2;
- (id)_compositionByReplacingDecomposedFragments:(id)arg1;
- (id)_eaccess_repairDecomposedFragmentMetadataIfNecessaryAndSave:(BOOL)arg1;
- (void)_eaccess_saveCompositionAndRecordingDuration:(BOOL)arg1;
- (BOOL)_enumerateFragmentsForInsertion:(CDUnknownBlockType)arg1;
- (unsigned long long)_fileSizeOfComposedAssetsIncludingRelatedResources:(BOOL)arg1;
- (id)_initWithComposedAVURL:(id)arg1 savedRecordingUUID:(id)arg2 creationDate:(id)arg3 title:(id)arg4 musicMemoMetadata:(id)arg5 decomposedFragments:(id)arg6 composedFragments:(id)arg7;
- (id)_initWithSavedRecording:(id)arg1 decomposedFragments:(id)arg2 composedFragments:(id)arg3;
- (void)_loadMusicMemoMetadata;
- (id)_privateModel;
- (id)composedFragmentsIntersectingTimeRange:(CDStruct_73a5d3ca)arg1;
- (id)compositionAssetForExport:(id *)arg1;
- (id)compositionByAppendingFragment:(id)arg1;
- (id)compositionByClippingToComposedTimeRange:(CDStruct_73a5d3ca)arg1;
- (id)compositionByDeletingAndSplittingAtComposedTimeRange:(CDStruct_73a5d3ca)arg1;
- (id)compositionByDuplicatingResourcesToDestinationComposedAVURL:(id)arg1;
- (id)compositionByOverdubbingWithFragment:(id)arg1;
- (id)compositionByReloadingFromDefaultMetadataLocation;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)deleteFromFilesystem;
- (id)dictionaryPListRepresentation;
- (void)enumerateOrphanedFragmentsWithBlock:(CDUnknownBlockType)arg1;
- (unsigned long long)estimatedFileSizeOfComposedAssetIncludingRelatedResources:(BOOL)arg1;
- (unsigned long long)fileSizeOfAssetsIncludingRelatedResources:(BOOL)arg1;
- (id)initWithDictionaryPListRepresentation:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)newRandomFragmentWithInsertionTimeRangeInComposition:(CDStruct_73a5d3ca)arg1 pathExtension:(id)arg2;
- (id)playableAsset:(id *)arg1;
- (void)rcs_composeToFinalDestinationAndDeleteDecomposedFragments:(BOOL)arg1 composeWaveform:(BOOL)arg2 canGenerateWaveformByProcessingAVURL:(BOOL)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)rcs_repairDecomposedFragmentMetadataIfNecessary;
- (void)recacheComposedDuration;
- (BOOL)saveMetadataToDefaultLocation;
- (void)setSavedRecordingUUIDFromRecoveredRecordingUUID:(id)arg1;

@end

