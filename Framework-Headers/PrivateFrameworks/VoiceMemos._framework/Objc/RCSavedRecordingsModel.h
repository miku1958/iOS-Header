//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <VoiceMemos/NSFetchedResultsControllerDelegate-Protocol.h>

@class NSArray, NSCloudKitMirroringRequestOptions, NSData, NSEntityDescription, NSManagedObjectContext, NSPersistentContainer, NSPersistentStore, NSSet, NSString, RCDatabaseMetadata, RCPersistentContainer, RCSavedRecordingsController;

@interface RCSavedRecordingsModel : NSObject <NSFetchedResultsControllerDelegate>
{
    RCPersistentContainer *_container;
    RCDatabaseMetadata *_metadata;
    NSPersistentStore *_localStore;
    NSPersistentStore *_cloudStore;
    NSManagedObjectContext *_context;
    NSEntityDescription *_cloudRecordingEntity;
    RCSavedRecordingsController *_recordingsController;
    RCSavedRecordingsController *_availableRecordingsController;
    RCSavedRecordingsController *_deletedRecordingsController;
    NSCloudKitMirroringRequestOptions *_mirroringRequestOptions;
    BOOL _valid;
    BOOL _disableSaveNotifications;
    long long _isSavingDisabledCount;
}

@property (readonly, nonatomic) NSArray *allRecordings;
@property (readonly, nonatomic) NSSet *audioProperties;
@property (readonly, nonatomic) RCSavedRecordingsController *availableRecordingsController; // @synthesize availableRecordingsController=_availableRecordingsController;
@property (readonly, nonatomic) NSPersistentContainer *container;
@property (readonly, nonatomic) unsigned long long count;
@property (readonly, nonatomic) NSData *currentChangeToken;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSArray *deletedRecordings;
@property (readonly, nonatomic) RCSavedRecordingsController *deletedRecordingsController; // @synthesize deletedRecordingsController=_deletedRecordingsController;
@property (readonly, copy) NSString *description;
@property (nonatomic) BOOL disableSaveNotifications; // @synthesize disableSaveNotifications=_disableSaveNotifications;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long isSavingDisabledCount; // @synthesize isSavingDisabledCount=_isSavingDisabledCount;
@property (readonly, nonatomic) NSArray *recordings;
@property (readonly, nonatomic) RCSavedRecordingsController *recordingsController; // @synthesize recordingsController=_recordingsController;
@property (readonly) Class superclass;
@property BOOL valid; // @synthesize valid=_valid;

+ (id)_copyFileIntoRecordingsDirectory:(id)arg1;
+ (id)_dateFormatterComponentFormatting;
+ (void)_importImportableRecordingWithSourceAudioURL:(id)arg1 name:(id)arg2 date:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
+ (void)_insertRecordingWithImportableAudioURL:(id)arg1 name:(id)arg2 date:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
+ (id)_moveFileIntoRecordingsDirectory:(id)arg1;
+ (id)cloudMirroringModel;
+ (id)creationDateFromStandardRecordingURL:(id)arg1;
+ (id)currentLocationBasedName;
+ (void)determineImportabilityOfRecordingWithAudioURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (void)importRecordingWithSourceAudioURL:(id)arg1 name:(id)arg2 date:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
+ (BOOL)migrateDatabaseIfNecessary;
+ (id)newPrivateModel;
+ (id)newSyncModel;
+ (id)savedRecordingsDirectory;
+ (id)sharedModelForMainQueue;
+ (id)sharedModelForQueue:(id)arg1;
+ (id)standardPathForRecording:(id)arg1;
+ (id)standardPathForRecordingWithCreationDate:(id)arg1 uniqueID:(id)arg2;
+ (id)standardURLForRecordingWithCreationDate:(id)arg1;
+ (id)startStoreServers:(CDUnknownBlockType)arg1;
- (void).cxx_destruct;
- (BOOL)__saveManagedObjectContext:(id *)arg1;
- (id)_allTitles;
- (void)_deleteRecordingsWithDurationLessThan:(double)arg1 passingTest:(CDUnknownBlockType)arg2;
- (void)_deliverSaveNotifications;
- (void)_enumerateFetchedRecordingTitles:(CDUnknownBlockType)arg1;
- (void)_enumerateRecordingsWithEntityDescription:(id)arg1 propertiesToFetch:(id)arg2 sortDescriptors:(id)arg3 withBlock:(CDUnknownBlockType)arg4;
- (id)_initWithContainer:(id)arg1 concurrencyType:(unsigned long long)arg2;
- (id)_labelPresetsForQuery:(id)arg1;
- (id)_recordingsWithUniqueID:(id)arg1 templateName:(id)arg2;
- (void)_scheduleAutomaticRecordingDeletions;
- (void)_synchronizeRecordingsMetadata;
- (id)_transactionHistorySinceToken:(id)arg1;
- (id)cloudRecordingEntity;
- (id)cloudStore;
- (id)context;
- (void)controllerDidChangeContent:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)currentPersistentHistoryToken;
- (void)dealloc;
- (BOOL)deleteDatabaseProperty:(id)arg1;
- (void)deleteRecording:(id)arg1;
- (id)duplicateRecording:(id)arg1 error:(id *)arg2;
- (id)enumerateChangeHistorySinceToken:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)enumerateExistingRecordingsSinceChangeToken:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)enumerateExistingRecordingsWithBlock:(CDUnknownBlockType)arg1;
- (void)enumerateExistingRecordingsWithProperties:(id)arg1 sortDescriptors:(id)arg2 block:(CDUnknownBlockType)arg3;
- (void)eraseAllDeleted;
- (void)eraseRecording:(id)arg1;
- (void)eraseRecordingsDeletedBeforeDate:(id)arg1;
- (BOOL)exportToCloud:(CDUnknownBlockType)arg1;
- (BOOL)fetchExportProgress:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (BOOL)fetchObjectsFromCloud:(id)arg1 entityToAttributesToFetch:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)finishSaveByUpdatingSearchableIndexWithChangeContext:(id)arg1;
- (BOOL)hasExistingRecordingForAudioFile:(id)arg1;
- (BOOL)importFromCloud:(CDUnknownBlockType)arg1;
- (id)indexPathForRecording:(id)arg1;
- (id)init;
- (id)insertRecordingWithAudioFile:(id)arg1 duration:(double)arg2 date:(id)arg3;
- (id)insertRecordingWithAudioFile:(id)arg1 duration:(double)arg2 date:(id)arg3 customLabelBase:(id)arg4;
- (id)insertRecordingWithAudioFile:(id)arg1 duration:(double)arg2 date:(id)arg3 customTitleBase:(id)arg4 uniqueID:(id)arg5;
- (void)mergeRecordings:(id)arg1 allTransactions:(id)arg2;
- (id)metadataValueForKey:(id)arg1;
- (id)mirroringOptions;
- (id)mirroringRequestOptions;
- (id)mostRecentRecording;
- (id)nextRecordingDefaultLabelWithCustomLabelBase:(id)arg1;
- (id)nextRecordingDefaultLabelWithCustomTitleBase:(id)arg1;
- (void)performBlockAndWait:(CDUnknownBlockType)arg1;
- (void)performBlockAndWaitInTemporaryContext:(CDUnknownBlockType)arg1;
- (void)performWithSavingDisabled:(CDUnknownBlockType)arg1;
- (id)recordingAtIndex:(unsigned long long)arg1;
- (id)recordingWithID:(id)arg1;
- (id)recordingWithITunesPersistentID:(long long)arg1;
- (id)recordingWithPath:(id)arg1;
- (id)recordingWithURIRepresentation:(id)arg1;
- (id)recordingWithUniqueID:(id)arg1;
- (id)recordingsForSpotlightSearch:(id)arg1;
- (id)recordingsWithPredicate:(id)arg1;
- (id)recordingsWithUniqueID:(id)arg1;
- (BOOL)resetCloud:(CDUnknownBlockType)arg1;
- (void)restoreDeletedRecording:(id)arg1;
- (void)saveIfNecessary;
- (BOOL)saveIfNecessary:(id *)arg1;
- (void)setMetadataValue:(id)arg1 forKey:(id)arg2;
- (void)setTitle:(id)arg1 ofRecording:(id)arg2;
- (BOOL)setValue:(id)arg1 forDatabaseProperty:(id)arg2;
- (BOOL)setValue:(id)arg1 forDatabaseProperty:(id)arg2 save:(BOOL)arg3;
- (id)transactionForToken:(id)arg1;
- (id)valueForDatabaseProperty:(id)arg1;

@end

