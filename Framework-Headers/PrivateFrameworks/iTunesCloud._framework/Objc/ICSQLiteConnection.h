//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class ICSQLiteConnectionOptions, NSError, NSMapTable, NSMutableArray, NSNumber;
@protocol ICSQLiteConnectionDelegate;

@interface ICSQLiteConnection : NSObject
{
    NSMutableArray *_afterTransactionBlocks;
    struct sqlite3 *_database;
    id<ICSQLiteConnectionDelegate> _delegate;
    BOOL _didResetForCorruption;
    NSMapTable *_preparedStatements;
    long long _transactionDepth;
    BOOL _transactionWantsRollback;
    ICSQLiteConnectionOptions *_options;
}

@property (readonly, copy, nonatomic) NSError *currentError;
@property (weak, nonatomic) id<ICSQLiteConnectionDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, nonatomic) long long lastChangeCount;
@property (readonly, copy, nonatomic) ICSQLiteConnectionOptions *options; // @synthesize options=_options;
@property (readonly, copy, nonatomic) NSNumber *userVersion;

- (void).cxx_destruct;
- (BOOL)_close;
- (BOOL)_executeStatement:(id)arg1 error:(id *)arg2;
- (void)_finalizeAllStatements;
- (void)_flushAfterTransactionBlocks;
- (BOOL)_open;
- (BOOL)_performResetAfterCorruptionError;
- (id)_prepareStatement:(id)arg1 error:(id *)arg2;
- (id)_statementForPreparedStatement:(id)arg1 error:(id *)arg2;
- (id)_verifiedStatementForPreparedStatement:(id)arg1 error:(id *)arg2;
- (id)_verifiedStatementForSQL:(id)arg1 error:(id *)arg2;
- (BOOL)close;
- (void)dispatchAfterTransaction:(CDUnknownBlockType)arg1;
- (void)executePreparedQuery:(id)arg1 withResults:(CDUnknownBlockType)arg2;
- (BOOL)executePreparedStatement:(id)arg1 error:(id *)arg2;
- (BOOL)executePreparedStatement:(id)arg1 error:(id *)arg2 bindings:(CDUnknownBlockType)arg3;
- (void)executeQuery:(id)arg1 withResults:(CDUnknownBlockType)arg2;
- (BOOL)executeStatement:(id)arg1 error:(id *)arg2;
- (BOOL)executeStatement:(id)arg1 error:(id *)arg2 bindings:(CDUnknownBlockType)arg3;
- (id)initWithOptions:(id)arg1;
- (BOOL)open;
- (void)performTransaction:(CDUnknownBlockType)arg1;
- (id)prepareStatement:(id)arg1 error:(id *)arg2;
- (BOOL)resetAfterCorruptionError;
- (BOOL)resetAfterIOError;
- (BOOL)setUserVersion:(id)arg1;
- (BOOL)truncate;

@end

