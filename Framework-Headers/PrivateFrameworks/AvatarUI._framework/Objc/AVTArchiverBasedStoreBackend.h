//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <AvatarUI/AVTStoreBackend-Protocol.h>

@class AVTArchiverBasedStoreRoot, AVTUIEnvironment, NSArray, NSDictionary, NSString, NSURL;

@interface AVTArchiverBasedStoreBackend : NSObject <AVTStoreBackend>
{
    NSURL *_storeLocation;
    NSString *_domainIdentifier;
    AVTUIEnvironment *_environment;
    AVTArchiverBasedStoreRoot *_model;
    NSDictionary *_avatarsByIdentifiers;
    NSArray *_sortedAvatars;
}

@property (copy, nonatomic) NSDictionary *avatarsByIdentifiers; // @synthesize avatarsByIdentifiers=_avatarsByIdentifiers;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, copy, nonatomic) NSString *domainIdentifier; // @synthesize domainIdentifier=_domainIdentifier;
@property (readonly, nonatomic) AVTUIEnvironment *environment; // @synthesize environment=_environment;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) AVTArchiverBasedStoreRoot *model; // @synthesize model=_model;
@property (copy, nonatomic) NSArray *sortedAvatars; // @synthesize sortedAvatars=_sortedAvatars;
@property (readonly, copy, nonatomic) NSURL *storeLocation; // @synthesize storeLocation=_storeLocation;
@property (readonly) Class superclass;

+ (id)classifyRecordsByIdentifiers:(id)arg1;
+ (unsigned long long)maximumNumberOfAvatars;
+ (id)rootByRemovingAvatarWithIdentifier:(id)arg1 fromRoot:(id)arg2;
+ (id)rootBySavingAvatarRecord:(id)arg1 afterAvatarRecord:(id)arg2 forDomainIdentifier:(id)arg3 toRoot:(id)arg4;
+ (id)storeLocationForDomainIdentifier:(id)arg1 environment:(id)arg2;
- (void).cxx_destruct;
- (id)allAvatars;
- (id)avatarsForFetchRequest:(id)arg1 error:(id *)arg2;
- (id)avatarsWithIdentifier:(id)arg1 error:(id *)arg2;
- (BOOL)canCreateAvatarWithError:(id *)arg1;
- (BOOL)deleteAvatarWithIdentifier:(id)arg1 error:(id *)arg2;
- (id)duplicateAvatarRecord:(id)arg1 error:(id *)arg2;
- (id)initWithStoreLocation:(id)arg1 domainIdentifier:(id)arg2 environment:(id)arg3;
- (BOOL)loadContentFromDisk:(id *)arg1;
- (BOOL)loadContentFromDiskIfNeeded:(id *)arg1;
- (void)loadModel:(id)arg1;
- (BOOL)saveAvatar:(id)arg1 error:(id *)arg2;
- (BOOL)saveModel:(id)arg1 logger:(id)arg2 error:(id *)arg3;

@end

