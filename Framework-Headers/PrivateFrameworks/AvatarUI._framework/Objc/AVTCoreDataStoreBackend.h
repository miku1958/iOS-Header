//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <AvatarUI/AVTStoreBackend-Protocol.h>

@class NSString;
@protocol AVTAvatarManagedRecordTransformer, AVTAvatarRecordChangeTracker, AVTCoreDataPersistentStoreConfiguration, AVTCoreDataRemoteChangesObserver, AVTStoreBackendDelegate, AVTUILogger;

@interface AVTCoreDataStoreBackend : NSObject <AVTStoreBackend>
{
    id<AVTStoreBackendDelegate> backendDelegate;
    id<AVTAvatarRecordChangeTracker> _recordChangeTracker;
    id<AVTCoreDataPersistentStoreConfiguration> _configuration;
    id<AVTUILogger> _logger;
    id<AVTAvatarManagedRecordTransformer> _recordTransformer;
    id<AVTCoreDataRemoteChangesObserver> _remoteChangesObserver;
    NSString *_localProcessName;
}

@property (weak, nonatomic) id<AVTStoreBackendDelegate> backendDelegate; // @synthesize backendDelegate;
@property (readonly, nonatomic) id<AVTCoreDataPersistentStoreConfiguration> configuration; // @synthesize configuration=_configuration;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) NSString *localProcessName; // @synthesize localProcessName=_localProcessName;
@property (readonly, nonatomic) id<AVTUILogger> logger; // @synthesize logger=_logger;
@property (readonly, nonatomic) id<AVTAvatarRecordChangeTracker> recordChangeTracker; // @synthesize recordChangeTracker=_recordChangeTracker;
@property (readonly, nonatomic) id<AVTAvatarManagedRecordTransformer> recordTransformer; // @synthesize recordTransformer=_recordTransformer;
@property (readonly, nonatomic) id<AVTCoreDataRemoteChangesObserver> remoteChangesObserver; // @synthesize remoteChangesObserver=_remoteChangesObserver;
@property (readonly) Class superclass;

+ (id)cdFetchRequestForAvatarFetchRequest:(id)arg1 recordTransformer:(id)arg2;
+ (id)cdFetchRequestWithPredicate:(id)arg1 fetchLimit:(long long)arg2;
+ (BOOL)fetchRequestCriteriaSupported:(long long)arg1;
- (void).cxx_destruct;
- (id)avatarsForFetchRequest:(id)arg1 error:(id *)arg2;
- (BOOL)canCreateAvatarWithError:(id *)arg1;
- (void)contentDidChangeWithIdentifiers:(id)arg1;
- (BOOL)deleteAvatarWithIdentifier:(id)arg1 error:(id *)arg2;
- (id)duplicateAvatarRecord:(id)arg1 error:(id *)arg2;
- (void)getChangedObjectIDsOfInterest:(id *)arg1 deletedIdentifiers:(id *)arg2 forTransactions:(id)arg3;
- (id)initWithConfiguration:(id)arg1 environment:(id)arg2;
- (id)initWithConfiguration:(id)arg1 recordTransformer:(id)arg2 remoteChangesObserver:(id)arg3 localProcessName:(id)arg4 recordChangeTracker:(id)arg5 environment:(id)arg6;
- (id)newManagedObjectContext;
- (unsigned long long)nts_avatarCountWithManagedObjectContext:(id)arg1 error:(id *)arg2;
- (BOOL)nts_saveManagedObjectContext:(id)arg1 error:(id *)arg2;
- (void)performWorkWithManagedObjectContext:(CDUnknownBlockType)arg1;
- (id)recordIdentifiersForManagedObjectIDs:(id)arg1 managedObjectContext:(id)arg2 error:(id *)arg3;
- (BOOL)saveAvatar:(id)arg1 error:(id *)arg2;
- (BOOL)saveAvatars:(id)arg1 error:(id *)arg2;
- (BOOL)setupStoreIfNeeded:(id *)arg1;
- (void)startObservingChangesIfNeeded;

@end

