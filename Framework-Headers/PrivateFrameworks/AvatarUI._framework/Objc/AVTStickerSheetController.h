//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <AvatarUI/AVTNotifyingContainerViewDelegate-Protocol.h>
#import <AvatarUI/AVTObjectViewController-Protocol.h>
#import <AvatarUI/AVTStickerCollectionViewCellDelegate-Protocol.h>
#import <AvatarUI/UICollectionViewDataSource-Protocol.h>
#import <AvatarUI/UICollectionViewDelegate-Protocol.h>
#import <AvatarUI/UICollectionViewDelegateFlowLayout-Protocol.h>

@class AVTStickerSheetModel, NSString, UICollectionView, UIImage, UIView;
@protocol AVTAvatarRecord, AVTPresenterDelegate, AVTStickerDisclosureValidationDelegate, AVTStickerSheetControllerDelegate;

@interface AVTStickerSheetController : NSObject <UICollectionViewDataSource, UICollectionViewDelegate, UICollectionViewDelegateFlowLayout, AVTNotifyingContainerViewDelegate, AVTStickerCollectionViewCellDelegate, AVTObjectViewController>
{
    BOOL _allowsPeel;
    BOOL _isPageVisible;
    BOOL _showPrereleaseSticker;
    id<AVTPresenterDelegate> presenterDelegate;
    id<AVTStickerSheetControllerDelegate> _delegate;
    id<AVTStickerDisclosureValidationDelegate> _disclosureValidationDelegate;
    UIView *_view;
    UICollectionView *_collectionView;
    AVTStickerSheetModel *_model;
    UIImage *_placeholderImage;
    struct UIEdgeInsets _sectionInsets;
}

@property (readonly, nonatomic) BOOL allowsPeel; // @synthesize allowsPeel=_allowsPeel;
@property (readonly, nonatomic) id<AVTAvatarRecord> avatarRecord;
@property (strong, nonatomic) UICollectionView *collectionView; // @synthesize collectionView=_collectionView;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<AVTStickerSheetControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (weak, nonatomic) id<AVTStickerDisclosureValidationDelegate> disclosureValidationDelegate; // @synthesize disclosureValidationDelegate=_disclosureValidationDelegate;
@property (readonly) unsigned long long hash;
@property (nonatomic) BOOL isPageVisible; // @synthesize isPageVisible=_isPageVisible;
@property (strong, nonatomic) AVTStickerSheetModel *model; // @synthesize model=_model;
@property (strong, nonatomic) UIImage *placeholderImage; // @synthesize placeholderImage=_placeholderImage;
@property (weak, nonatomic) id<AVTPresenterDelegate> presenterDelegate; // @synthesize presenterDelegate;
@property (nonatomic) struct UIEdgeInsets sectionInsets; // @synthesize sectionInsets=_sectionInsets;
@property (nonatomic) BOOL showPrereleaseSticker; // @synthesize showPrereleaseSticker=_showPrereleaseSticker;
@property (readonly) Class superclass;
@property (strong, nonatomic) UIView *view; // @synthesize view=_view;

- (void).cxx_destruct;
- (void)clearStickerRendererIfNeeded;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (struct UIEdgeInsets)collectionView:(id)arg1 layout:(id)arg2 insetForSectionAtIndex:(long long)arg3;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (void)discardStickerItems;
- (id)firstStickerView;
- (id)initWithStickerSheetModel:(id)arg1 allowsPeel:(BOOL)arg2;
- (void)loadView;
- (void)lowerTaskPriority:(CDUnknownBlockType)arg1;
- (struct CGPoint)maxedContentOffset:(struct CGPoint)arg1;
- (struct CGSize)minimumContentSizeForSize:(struct CGSize)arg1;
- (void)notifyingContainerViewDidChangeSize:(struct CGSize)arg1;
- (void)notifyingContainerViewWillChangeSize:(struct CGSize)arg1;
- (double)numberOfItemsPerRow;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (CDUnknownBlockType)placeholderProvider;
- (void)reloadCollectionViewItemForStickerItem:(id)arg1;
- (void)scrollToContentOffset:(struct CGPoint)arg1 animated:(BOOL)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)sheetWillAppear;
- (void)sheetWillDisappear;
- (void)startedTask:(CDUnknownBlockType)arg1 forItem:(id)arg2;
- (void)stickerCellDidPeelSticker:(id)arg1;
- (void)stickerCellDidTapSticker:(id)arg1;
- (double)topPadding;
- (void)updateItem:(id)arg1 withStickerResource:(id)arg2 reloadCell:(BOOL)arg3;

@end

