//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <GameCenterUI/GKLoadingViewController.h>

#import <GameCenterUI/GKLeaderboardScoreDelegate-Protocol.h>
#import <GameCenterUI/UIScrollViewDelegate-Protocol.h>

@class CAGradientLayer, GKLeaderboard, GKLeaderboardEntry, GKLeaderboardMetadataView, GKLeaderboardScoreDataSource, GKNoContentView, GKTimeScopeButton, NSLayoutConstraint, NSString, UIButton, UICollectionView, UILabel, UIScrollView, UISegmentedControl, UIStackView, UIView;

@interface GKLeaderboardScoreViewController : GKLoadingViewController <GKLeaderboardScoreDelegate, UIScrollViewDelegate>
{
    BOOL _shouldAutoRefreshHighlights;
    UICollectionView *_collectionView;
    UIStackView *_highlightView;
    UIButton *_scrollToTopButton;
    UIView *_collectionContainer;
    UIView *_timeScopeContainer;
    UILabel *_titleLabel;
    UISegmentedControl *_playerScopeControl;
    NSLayoutConstraint *_collectionContainerHeight;
    UIView *_collectionGradientView;
    NSLayoutConstraint *_collectionGradientViewHeightConstraint;
    UIScrollView *_mainScrollView;
    NSLayoutConstraint *_highlightViewHeightConstraint;
    NSLayoutConstraint *_highlightViewWidthConstraint;
    NSLayoutConstraint *_collectionGradientViewLandscapeTopConstraint;
    NSLayoutConstraint *_highlightViewLandscapeTopConstraint;
    GKTimeScopeButton *_timeScopeButton;
    GKLeaderboardScoreDataSource *_dataSource;
    GKLeaderboard *_leaderboard;
    GKLeaderboard *_currentOccurrence;
    GKLeaderboard *_previousOccurrence;
    long long _timeScope;
    long long _playerScope;
    long long _leaderboardOccurrence;
    GKLeaderboardMetadataView *_personalView;
    GKLeaderboardMetadataView *_socialView;
    GKNoContentView *_noContentView;
    CAGradientLayer *_collectionViewFadeGradient;
    GKLeaderboardEntry *_localPlayerEntry;
    GKLeaderboardEntry *_topPlayerEntry;
    GKLeaderboardEntry *_playerAboveEntry;
    GKLeaderboardEntry *_playerBelowEntry;
    long long _totalEntries;
}

@property (strong, nonatomic) UIView *collectionContainer; // @synthesize collectionContainer=_collectionContainer;
@property (strong, nonatomic) NSLayoutConstraint *collectionContainerHeight; // @synthesize collectionContainerHeight=_collectionContainerHeight;
@property (strong, nonatomic) UIView *collectionGradientView; // @synthesize collectionGradientView=_collectionGradientView;
@property (strong, nonatomic) NSLayoutConstraint *collectionGradientViewHeightConstraint; // @synthesize collectionGradientViewHeightConstraint=_collectionGradientViewHeightConstraint;
@property (strong, nonatomic) NSLayoutConstraint *collectionGradientViewLandscapeTopConstraint; // @synthesize collectionGradientViewLandscapeTopConstraint=_collectionGradientViewLandscapeTopConstraint;
@property (strong, nonatomic) UICollectionView *collectionView; // @synthesize collectionView=_collectionView;
@property (strong, nonatomic) CAGradientLayer *collectionViewFadeGradient; // @synthesize collectionViewFadeGradient=_collectionViewFadeGradient;
@property (strong, nonatomic) GKLeaderboard *currentOccurrence; // @synthesize currentOccurrence=_currentOccurrence;
@property (strong, nonatomic) GKLeaderboardScoreDataSource *dataSource; // @synthesize dataSource=_dataSource;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) UIStackView *highlightView; // @synthesize highlightView=_highlightView;
@property (strong, nonatomic) NSLayoutConstraint *highlightViewHeightConstraint; // @synthesize highlightViewHeightConstraint=_highlightViewHeightConstraint;
@property (strong, nonatomic) NSLayoutConstraint *highlightViewLandscapeTopConstraint; // @synthesize highlightViewLandscapeTopConstraint=_highlightViewLandscapeTopConstraint;
@property (strong, nonatomic) NSLayoutConstraint *highlightViewWidthConstraint; // @synthesize highlightViewWidthConstraint=_highlightViewWidthConstraint;
@property (nonatomic) long long initialPlayerScope; // @dynamic initialPlayerScope;
@property (nonatomic) long long initialTimeScope; // @dynamic initialTimeScope;
@property (strong, nonatomic) GKLeaderboard *leaderboard; // @synthesize leaderboard=_leaderboard;
@property (nonatomic) long long leaderboardOccurrence; // @synthesize leaderboardOccurrence=_leaderboardOccurrence;
@property (strong, nonatomic) GKLeaderboardEntry *localPlayerEntry; // @synthesize localPlayerEntry=_localPlayerEntry;
@property (strong, nonatomic) UIScrollView *mainScrollView; // @synthesize mainScrollView=_mainScrollView;
@property (strong, nonatomic) GKNoContentView *noContentView; // @synthesize noContentView=_noContentView;
@property (strong, nonatomic) GKLeaderboardMetadataView *personalView; // @synthesize personalView=_personalView;
@property (strong, nonatomic) GKLeaderboardEntry *playerAboveEntry; // @synthesize playerAboveEntry=_playerAboveEntry;
@property (strong, nonatomic) GKLeaderboardEntry *playerBelowEntry; // @synthesize playerBelowEntry=_playerBelowEntry;
@property (nonatomic) long long playerScope; // @synthesize playerScope=_playerScope;
@property (strong, nonatomic) UISegmentedControl *playerScopeControl; // @synthesize playerScopeControl=_playerScopeControl;
@property (strong, nonatomic) GKLeaderboard *previousOccurrence; // @synthesize previousOccurrence=_previousOccurrence;
@property (nonatomic) BOOL restrictToFriendsOnly; // @dynamic restrictToFriendsOnly;
@property (strong, nonatomic) UIButton *scrollToTopButton; // @synthesize scrollToTopButton=_scrollToTopButton;
@property (nonatomic) BOOL shouldAutoRefreshHighlights; // @synthesize shouldAutoRefreshHighlights=_shouldAutoRefreshHighlights;
@property (strong, nonatomic) GKLeaderboardMetadataView *socialView; // @synthesize socialView=_socialView;
@property (readonly) Class superclass;
@property (nonatomic) long long timeScope; // @synthesize timeScope=_timeScope;
@property (strong, nonatomic) GKTimeScopeButton *timeScopeButton; // @synthesize timeScopeButton=_timeScopeButton;
@property (strong, nonatomic) UIView *timeScopeContainer; // @synthesize timeScopeContainer=_timeScopeContainer;
@property (strong, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property (strong, nonatomic) GKLeaderboardEntry *topPlayerEntry; // @synthesize topPlayerEntry=_topPlayerEntry;
@property (nonatomic) long long totalEntries; // @synthesize totalEntries=_totalEntries;

+ (long long)initialPlayerScope;
+ (long long)initialTimeScope;
+ (BOOL)restrictToFriendsOnly;
+ (void)setInitialPlayerScope:(long long)arg1;
+ (void)setInitialTimeScope:(long long)arg1;
+ (void)setRestrictToFriendsOnly:(BOOL)arg1;
- (void).cxx_destruct;
- (void)addLeaderboardHighlights;
- (void)addPlayerScopeControl;
- (id)attributedStringWithSymbol:(id)arg1;
- (void)autoRefreshHighlightsPersonalView;
- (void)challengeWithScore:(id)arg1;
- (void)clearSelection;
- (void)collectionViewDidScroll;
- (void)configureCloseButton;
- (void)configureTimeScopeMenu;
- (void)dataUpdated:(BOOL)arg1 withError:(id)arg2;
- (void)dealloc;
- (void)didEnterLoadingState;
- (void)didEnterRefreshingState;
- (void)didExitRefreshingState;
- (void)didLoadAdditionalScores;
- (void)didLoadScoresWithLocalPlayerEntry:(id)arg1 topPlayer:(id)arg2 playerAbove:(id)arg3 playerBelow:(id)arg4 totalEntries:(long long)arg5;
- (void)donePressed:(id)arg1;
- (void)enableDisableCollectionViewScrolling;
- (id)formattedNumber:(id)arg1;
- (BOOL)hasData;
- (void)hideNoContentPlaceholder;
- (id)initWithGameRecord:(id)arg1 leaderboard:(id)arg2;
- (BOOL)isLoading;
- (void)loadData;
- (void)loadLeaderboardForOccurrence:(long long)arg1 handler:(CDUnknownBlockType)arg2;
- (void)playerScopeChanged:(id)arg1;
- (void)scrollToTopPressed:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)setNeedsRefresh;
- (void)setPlayerScope:(long long)arg1 restrictToFriendsOnly:(BOOL)arg2;
- (void)setupFadeGradient;
- (void)setupNoContentView:(id)arg1 withError:(id)arg2;
- (void)shareScore:(id)arg1 fromLeaderboard:(id)arg2 sendingView:(id)arg3 relativeRect:(struct CGRect)arg4;
- (void)shareWithScore:(id)arg1 fromView:(id)arg2;
- (void)showNoContentPlaceholderForError:(id)arg1;
- (id)timeRemainingFromDate:(id)arg1 toDate:(id)arg2;
- (void)timeScopePressed:(id)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (void)updateContentSize;
- (void)updateHighlights;
- (BOOL)updateHighlightsPersonalView;
- (void)updatePlayerScopeLayoutForSize:(struct CGSize)arg1;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)arg1;
- (void)viewWillDisappear:(BOOL)arg1;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;

@end

