//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIViewController.h>

@class NSLayoutConstraint, UIButton, UILabel, UIView;

@interface GKDefaultPrivacyViewController : UIViewController
{
    int _profilePrivacyVisibility;
    UILabel *_publicTitle;
    UILabel *_publicSubTitle;
    UILabel *_friendsOnlyTitle;
    UILabel *_friendsOnlySubtitle;
    UILabel *_meOnlyTitle;
    UILabel *_meOnlySubtitle;
    UIView *_publicDivider;
    UIView *_publicContainer;
    UIButton *_publicButton;
    UIButton *_friendsOnlyButton;
    UIButton *_meOnlyButton;
    NSLayoutConstraint *_topMargin;
    UIView *_buttonContainer;
    NSLayoutConstraint *_mainStackViewTrailingConstraint;
    NSLayoutConstraint *_mainStackViewLeadingConstraint;
    NSLayoutConstraint *_continueButtonEqualMainTitleWidthConstraint;
    NSLayoutConstraint *_continueButtonWidthConstraint;
    NSLayoutConstraint *_continueButtonBottomConstraint;
    UILabel *_underageHintLabel;
    UIButton *_nextButton;
    UILabel *_mainTitle;
    long long _numberOfClicksOnPrivacySelection;
}

@property (strong, nonatomic) UIView *buttonContainer; // @synthesize buttonContainer=_buttonContainer;
@property (strong, nonatomic) NSLayoutConstraint *continueButtonBottomConstraint; // @synthesize continueButtonBottomConstraint=_continueButtonBottomConstraint;
@property (strong, nonatomic) NSLayoutConstraint *continueButtonEqualMainTitleWidthConstraint; // @synthesize continueButtonEqualMainTitleWidthConstraint=_continueButtonEqualMainTitleWidthConstraint;
@property (strong, nonatomic) NSLayoutConstraint *continueButtonWidthConstraint; // @synthesize continueButtonWidthConstraint=_continueButtonWidthConstraint;
@property (strong, nonatomic) UIButton *friendsOnlyButton; // @synthesize friendsOnlyButton=_friendsOnlyButton;
@property (strong, nonatomic) UILabel *friendsOnlySubtitle; // @synthesize friendsOnlySubtitle=_friendsOnlySubtitle;
@property (strong, nonatomic) UILabel *friendsOnlyTitle; // @synthesize friendsOnlyTitle=_friendsOnlyTitle;
@property (strong, nonatomic) NSLayoutConstraint *mainStackViewLeadingConstraint; // @synthesize mainStackViewLeadingConstraint=_mainStackViewLeadingConstraint;
@property (strong, nonatomic) NSLayoutConstraint *mainStackViewTrailingConstraint; // @synthesize mainStackViewTrailingConstraint=_mainStackViewTrailingConstraint;
@property (strong, nonatomic) UILabel *mainTitle; // @synthesize mainTitle=_mainTitle;
@property (strong, nonatomic) UIButton *meOnlyButton; // @synthesize meOnlyButton=_meOnlyButton;
@property (strong, nonatomic) UILabel *meOnlySubtitle; // @synthesize meOnlySubtitle=_meOnlySubtitle;
@property (strong, nonatomic) UILabel *meOnlyTitle; // @synthesize meOnlyTitle=_meOnlyTitle;
@property (strong, nonatomic) UIButton *nextButton; // @synthesize nextButton=_nextButton;
@property long long numberOfClicksOnPrivacySelection; // @synthesize numberOfClicksOnPrivacySelection=_numberOfClicksOnPrivacySelection;
@property (nonatomic) int profilePrivacyVisibility; // @synthesize profilePrivacyVisibility=_profilePrivacyVisibility;
@property (strong, nonatomic) UIButton *publicButton; // @synthesize publicButton=_publicButton;
@property (strong, nonatomic) UIView *publicContainer; // @synthesize publicContainer=_publicContainer;
@property (strong, nonatomic) UIView *publicDivider; // @synthesize publicDivider=_publicDivider;
@property (strong, nonatomic) UILabel *publicSubTitle; // @synthesize publicSubTitle=_publicSubTitle;
@property (strong, nonatomic) UILabel *publicTitle; // @synthesize publicTitle=_publicTitle;
@property (strong, nonatomic) NSLayoutConstraint *topMargin; // @synthesize topMargin=_topMargin;
@property (strong, nonatomic) UILabel *underageHintLabel; // @synthesize underageHintLabel=_underageHintLabel;

- (void).cxx_destruct;
- (void)button1Pressed:(id)arg1;
- (void)button2Pressed:(id)arg1;
- (void)button3Pressed:(id)arg1;
- (void)nextPressed:(id)arg1;
- (void)notNowButtonPressed:(id)arg1;
- (void)reportPrivacySelectionClickAnalytics;
- (void)scrollViewDidScroll:(id)arg1;
- (void)updateUI;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewDidDisappear:(BOOL)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)arg1;
- (void)viewWillDisappear:(BOOL)arg1;
- (void)viewWillLayoutSubviews;

@end

