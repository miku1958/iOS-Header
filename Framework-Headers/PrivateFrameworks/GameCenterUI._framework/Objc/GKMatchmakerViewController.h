//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UINavigationController.h>

#import <GameCenterUI/GKExtensionParentViewControllerProtocol-Protocol.h>
#import <GameCenterUI/GKMatchDelegate-Protocol.h>

@class GKInvite, GKMatch, GKMatchRequest, GKMatchmakerHostViewController, NSMutableArray, NSString, UIAlertController;
@protocol GKMatchmakerViewControllerDelegate;

@interface GKMatchmakerViewController : UINavigationController <GKMatchDelegate, GKExtensionParentViewControllerProtocol>
{
    BOOL _hosted;
    id<GKMatchmakerViewControllerDelegate> _matchmakerDelegateWeak;
    GKMatchRequest *_matchRequest;
    GKMatchmakerHostViewController *_remoteViewController;
    GKInvite *_acceptedInvite;
    GKMatch *_match;
    NSMutableArray *_hostedPlayers;
    UIAlertController *_alertController;
}

@property (strong, nonatomic) GKInvite *acceptedInvite; // @synthesize acceptedInvite=_acceptedInvite;
@property (strong, nonatomic) UIAlertController *alertController; // @synthesize alertController=_alertController;
@property (readonly, copy) NSString *debugDescription;
@property (copy, nonatomic) NSString *defaultInvitationMessage;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, getter=isHosted) BOOL hosted; // @synthesize hosted=_hosted;
@property (strong, nonatomic) NSMutableArray *hostedPlayers; // @synthesize hostedPlayers=_hostedPlayers;
@property (strong, nonatomic) GKMatch *match; // @synthesize match=_match;
@property (readonly, strong, nonatomic) GKMatchRequest *matchRequest; // @synthesize matchRequest=_matchRequest;
@property (nonatomic) id<GKMatchmakerViewControllerDelegate> matchmakerDelegate; // @synthesize matchmakerDelegate=_matchmakerDelegateWeak;
@property (strong, nonatomic) GKMatchmakerHostViewController *remoteViewController; // @synthesize remoteViewController=_remoteViewController;
@property (readonly) Class superclass;

+ (BOOL)_preventsAppearanceProxyCustomization;
- (void)_setupChildViewController;
- (void)_setupRemoteViewController;
- (void)addPlayersToMatch:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)authenticationChanged:(id)arg1;
- (void)cancel;
- (void)cancelMatching;
- (void)cancelPendingInviteToPlayer:(id)arg1;
- (void)createMatchForAcceptedInvite;
- (void)dealloc;
- (void)extensionDidFinishWithError:(id)arg1;
- (void)finishWithError:(id)arg1;
- (void)finishWithMatch;
- (void)finishWithPlayers;
- (id)init;
- (id)initWithInvite:(id)arg1;
- (id)initWithMatchRequest:(id)arg1;
- (void)invitedPlayer:(id)arg1 responded:(long long)arg2;
- (void)inviterCancelledNotification:(id)arg1;
- (void)localPlayerAcceptedGameInvite:(id)arg1;
- (void)match:(id)arg1 didFailWithError:(id)arg2;
- (void)match:(id)arg1 didReceiveData:(id)arg2 fromRemotePlayer:(id)arg3;
- (void)match:(id)arg1 player:(id)arg2 didChangeConnectionState:(long long)arg3;
- (void)playersToInvite:(id)arg1;
- (void)sendData:(id)arg1;
- (void)setBrowsingForNearbyPlayers:(BOOL)arg1;
- (void)setHostedPlayer:(id)arg1 connected:(BOOL)arg2;
- (void)setHostedPlayer:(id)arg1 didConnect:(BOOL)arg2;
- (void)setHostedPlayerReady:(id)arg1;
- (void)setupNotifications;
- (BOOL)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)startMatchingWithRequest:(id)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewDidDisappear:(BOOL)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)arg1;

@end

