//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <GameCenterUI/GKCollectionViewController.h>

#import <GameCenterUI/GKMessageComposeViewControllerDelegate-Protocol.h>
#import <GameCenterUI/GKMultiplayerPlayerCountViewControllerDelegate-Protocol.h>

@class GKDashboardMultiplayerPickerViewController, GKDispatchGroup, GKGame, GKMatchRequest, GKMessageComposeViewController, GKMultiplayerButtonFooterView, GKMultiplayerButtonHeaderView, GKMultiplayerDataSource, NSDictionary, NSString, NSURL;
@protocol GKDashboardNearbyBrowserDelegate;

@interface GKMultiplayerViewController : GKCollectionViewController <GKMessageComposeViewControllerDelegate, GKMultiplayerPlayerCountViewControllerDelegate>
{
    BOOL _showCancelButton;
    BOOL _didAcceptGameInvite;
    BOOL _didStartForcedAutomatch;
    BOOL _addButtonEnabled;
    BOOL _needsFloatIn;
    GKMatchRequest *_matchRequest;
    GKMatchRequest *_originalMatchRequest;
    NSString *_defaultInvitationMessage;
    GKGame *_game;
    id<GKDashboardNearbyBrowserDelegate> _nearbyDelegate;
    NSURL *_shareURL;
    GKMessageComposeViewController *_inviteController;
    NSDictionary *_playerNamesToPlayers;
    GKMultiplayerButtonHeaderView *_buttonHeaderView;
    GKMultiplayerButtonFooterView *_buttonFooterView;
    GKDashboardMultiplayerPickerViewController *_picker;
    long long _invitationType;
    GKDispatchGroup *_urlPreloadGroup;
}

@property (nonatomic) BOOL addButtonEnabled; // @synthesize addButtonEnabled=_addButtonEnabled;
@property (strong, nonatomic) GKMultiplayerButtonFooterView *buttonFooterView; // @synthesize buttonFooterView=_buttonFooterView;
@property (strong, nonatomic) GKMultiplayerButtonHeaderView *buttonHeaderView; // @synthesize buttonHeaderView=_buttonHeaderView;
@property (readonly, copy) NSString *debugDescription;
@property (copy, nonatomic) NSString *defaultInvitationMessage; // @synthesize defaultInvitationMessage=_defaultInvitationMessage;
@property (readonly, copy) NSString *description;
@property (nonatomic) BOOL didAcceptGameInvite; // @synthesize didAcceptGameInvite=_didAcceptGameInvite;
@property (nonatomic) BOOL didStartForcedAutomatch; // @synthesize didStartForcedAutomatch=_didStartForcedAutomatch;
@property (strong, nonatomic) GKGame *game; // @synthesize game=_game;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long invitationType; // @synthesize invitationType=_invitationType;
@property (strong, nonatomic) GKMessageComposeViewController *inviteController; // @synthesize inviteController=_inviteController;
@property (readonly, copy, nonatomic) GKMatchRequest *matchRequest; // @synthesize matchRequest=_matchRequest;
@property (readonly, nonatomic) GKMultiplayerDataSource *multiplayerDataSource;
@property (nonatomic) id<GKDashboardNearbyBrowserDelegate> nearbyDelegate; // @synthesize nearbyDelegate=_nearbyDelegate;
@property (nonatomic) BOOL needsFloatIn; // @synthesize needsFloatIn=_needsFloatIn;
@property (readonly, copy, nonatomic) GKMatchRequest *originalMatchRequest; // @synthesize originalMatchRequest=_originalMatchRequest;
@property (strong, nonatomic) GKDashboardMultiplayerPickerViewController *picker; // @synthesize picker=_picker;
@property (strong, nonatomic) NSDictionary *playerNamesToPlayers; // @synthesize playerNamesToPlayers=_playerNamesToPlayers;
@property (strong, nonatomic) NSURL *shareURL; // @synthesize shareURL=_shareURL;
@property (nonatomic) BOOL showCancelButton; // @synthesize showCancelButton=_showCancelButton;
@property (readonly) Class superclass;
@property (strong, nonatomic) GKDispatchGroup *urlPreloadGroup; // @synthesize urlPreloadGroup=_urlPreloadGroup;

- (void)addAutomatchPlayer;
- (BOOL)allowPlayerCountSelection;
- (void)animateBubblesInIfNeeded;
- (BOOL)canStartForcedAutomatch;
- (void)cancel;
- (void)cancelButtonPressed;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (void)configureConstraintsForSubviews;
- (void)configureDataSource;
- (void)configureSubviewsForIOS;
- (void)dataSource:(id)arg1 didInsertItemsAtIndexPaths:(id)arg2;
- (void)dataSource:(id)arg1 didRefreshItemsAtIndexPaths:(id)arg2;
- (void)dataSource:(id)arg1 didRemoveItemsAtIndexPaths:(id)arg2;
- (void)dealloc;
- (void)determineInvitationType;
- (void)didEnterLoadedState;
- (void)didFinishPickingPlayers:(id)arg1;
- (void)didSelectPlayerCountHeader:(id)arg1;
- (void)handleServiceUnavailable:(id)arg1;
- (id)init;
- (id)initWithMatchRequest:(id)arg1;
- (void)inviteButtonPressed;
- (void)invitePlayers:(id)arg1;
- (void)invitePlayers:(id)arg1 contactPlayers:(id)arg2;
- (void)loadShareURLWithCompletion:(CDUnknownBlockType)arg1;
- (void)loadView;
- (void)localPlayerAcceptedGameInvite:(id)arg1;
- (long long)maxAvailablePlayers;
- (void)messageComposeViewController:(id)arg1 didFinishWithResult:(long long)arg2 message:(id)arg3 contactPlayers:(id)arg4 friendPlayers:(id)arg5;
- (void)messageComposeViewController:(id)arg1 willPresentPlayerPicker:(id)arg2;
- (void)multiplayerPlayerCountViewController:(id)arg1 didSelectValue:(long long)arg2;
- (void)playButtonPressed;
- (void)playNow;
- (void)playersToInvite:(id)arg1;
- (void)preloadShareURL;
- (void)removeAutomatchPlayer;
- (void)removePlayer:(id)arg1;
- (void)removedPlayer:(id)arg1;
- (void)setInvitesFailedWithError:(id)arg1;
- (void)setupCancelButton;
- (void)share;
- (void)shareButtonPressed;
- (void)shareFinishedWithContactPlayers:(id)arg1 legacyPlayers:(id)arg2;
- (void)showCollectionView;
- (void)traitCollectionDidChange:(id)arg1;
- (void)updateButtonViewsWithStatus:(id)arg1;
- (void)updateUIActionsEnabled:(BOOL)arg1;
- (void)updateVisibleRemoveButtons;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewDidDisappear:(BOOL)arg1;
- (void)viewSafeAreaInsetsDidChange;
- (void)viewWillAppear:(BOOL)arg1;
- (void)willPresentPlayerPicker:(id)arg1;
- (void)willQueryGKIDs;
- (void)willShare;

@end

