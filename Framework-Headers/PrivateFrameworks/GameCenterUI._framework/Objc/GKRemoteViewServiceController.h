//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/_UIRemoteViewController.h>

#import <GameCenterUI/GKExtensionHostProtocol-Protocol.h>

@class GKGame, GKHostedViewController, NSMutableDictionary, NSString, UIColor;

@interface GKRemoteViewServiceController : _UIRemoteViewController <GKExtensionHostProtocol>
{
    BOOL _didSetRemoteGame;
    BOOL _viewDidAppear;
    GKGame *_game;
    NSMutableDictionary *_dirtyProperties;
    GKHostedViewController *_managingViewController;
    UIColor *_previousStatusBarColor;
    CDUnknownBlockType _blockToPerformAfterViewDidAppear;
}

@property (copy, nonatomic) CDUnknownBlockType blockToPerformAfterViewDidAppear; // @synthesize blockToPerformAfterViewDidAppear=_blockToPerformAfterViewDidAppear;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) BOOL didSetRemoteGame; // @synthesize didSetRemoteGame=_didSetRemoteGame;
@property (strong, nonatomic) NSMutableDictionary *dirtyProperties; // @synthesize dirtyProperties=_dirtyProperties;
@property (strong, nonatomic) GKGame *game; // @synthesize game=_game;
@property (readonly) unsigned long long hash;
@property (weak, nonatomic) GKHostedViewController *managingViewController; // @synthesize managingViewController=_managingViewController;
@property (strong, nonatomic) UIColor *previousStatusBarColor; // @synthesize previousStatusBarColor=_previousStatusBarColor;
@property (readonly, nonatomic) BOOL serviceNeedsCurrentGame;
@property (readonly, nonatomic) BOOL serviceNeedsLocalPlayer;
@property (readonly) Class superclass;
@property (nonatomic) BOOL viewDidAppear; // @synthesize viewDidAppear=_viewDidAppear;

+ (id)exportedInterface;
+ (id)serviceViewControllerInterface;
+ (BOOL)shouldPropagateAppearanceCustomizations;
- (void).cxx_destruct;
- (long long)_desiredStatusBarStyle;
- (BOOL)_dismissSelfAfterGettingShouldCancel;
- (BOOL)_dismissSelfAfterGettingShouldFinish;
- (void)_performBlockAfterViewDidAppearIfNeeded;
- (void)_performSelectorAfterAppearingOrTimeOut:(SEL)arg1;
- (void)dealloc;
- (void)messageFromExtension:(id)arg1;
- (void)nudge;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)observedKeyPaths;
- (void)populateInitialStateForRemoteView:(id)arg1;
- (void)readyToPresentInController:(id)arg1;
- (void)remoteViewControllerIsCanceling;
- (void)remoteViewControllerIsFinishing;
- (BOOL)serviceNeedsFriendCode;
- (void)setValue:(id)arg1 forKeyPath:(id)arg2;
- (void)setupRemoteView;
- (BOOL)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewDidDisappear:(BOOL)arg1;
- (void)viewServiceDidTerminateWithError:(id)arg1;
- (void)viewWillAppear:(BOOL)arg1;
- (void)viewWillDisappear:(BOOL)arg1;

@end

