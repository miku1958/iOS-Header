//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSData, NSDictionary, NSString;

@interface CRKEDUPayload : NSObject
{
    BOOL _screenObservationPermissionModificationAllowed;
    BOOL _isEphemeralMultiUserDevice;
    NSString *_payloadDisplayName;
    NSString *_payloadDescriptionName;
    NSString *_organizationUUID;
    NSString *_organizationName;
    NSString *_payloadCertificateUUID;
    NSData *_payloadCertificatePersistentID;
    NSArray *_leaderPayloadCertificateAnchorUUID;
    NSArray *_leaderPayloadCertificateAnchorPersistentID;
    NSArray *_memberPayloadCertificateAnchorUUID;
    NSArray *_memberPayloadCertificateAnchorPersistentID;
    NSString *_resourcePayloadCertificateUUID;
    NSData *_resourcePayloadCertificatePersistentID;
    NSString *_userIdentifier;
    NSArray *_departments;
    NSArray *_groups;
    NSArray *_users;
    NSArray *_deviceGroups;
}

@property (readonly, copy, nonatomic) NSDictionary *configuration;
@property (strong, nonatomic) NSArray *departments; // @synthesize departments=_departments;
@property (strong, nonatomic) NSArray *deviceGroups; // @synthesize deviceGroups=_deviceGroups;
@property (strong, nonatomic) NSArray *groups; // @synthesize groups=_groups;
@property (readonly, nonatomic) BOOL isEphemeralMultiUserDevice; // @synthesize isEphemeralMultiUserDevice=_isEphemeralMultiUserDevice;
@property (strong, nonatomic) NSArray *leaderPayloadCertificateAnchorPersistentID; // @synthesize leaderPayloadCertificateAnchorPersistentID=_leaderPayloadCertificateAnchorPersistentID;
@property (strong, nonatomic) NSArray *leaderPayloadCertificateAnchorUUID; // @synthesize leaderPayloadCertificateAnchorUUID=_leaderPayloadCertificateAnchorUUID;
@property (strong, nonatomic) NSArray *memberPayloadCertificateAnchorPersistentID; // @synthesize memberPayloadCertificateAnchorPersistentID=_memberPayloadCertificateAnchorPersistentID;
@property (strong, nonatomic) NSArray *memberPayloadCertificateAnchorUUID; // @synthesize memberPayloadCertificateAnchorUUID=_memberPayloadCertificateAnchorUUID;
@property (strong, nonatomic) NSString *organizationName; // @synthesize organizationName=_organizationName;
@property (strong, nonatomic) NSString *organizationUUID; // @synthesize organizationUUID=_organizationUUID;
@property (strong, nonatomic) NSData *payloadCertificatePersistentID; // @synthesize payloadCertificatePersistentID=_payloadCertificatePersistentID;
@property (strong, nonatomic) NSString *payloadCertificateUUID; // @synthesize payloadCertificateUUID=_payloadCertificateUUID;
@property (strong, nonatomic) NSString *payloadDescriptionName; // @synthesize payloadDescriptionName=_payloadDescriptionName;
@property (strong, nonatomic) NSString *payloadDisplayName; // @synthesize payloadDisplayName=_payloadDisplayName;
@property (strong, nonatomic) NSData *resourcePayloadCertificatePersistentID; // @synthesize resourcePayloadCertificatePersistentID=_resourcePayloadCertificatePersistentID;
@property (strong, nonatomic) NSString *resourcePayloadCertificateUUID; // @synthesize resourcePayloadCertificateUUID=_resourcePayloadCertificateUUID;
@property (nonatomic) BOOL screenObservationPermissionModificationAllowed; // @synthesize screenObservationPermissionModificationAllowed=_screenObservationPermissionModificationAllowed;
@property (strong, nonatomic) NSString *userIdentifier; // @synthesize userIdentifier=_userIdentifier;
@property (strong, nonatomic) NSArray *users; // @synthesize users=_users;

- (void).cxx_destruct;
- (BOOL)areCredentialsValidForStub:(BOOL)arg1 error:(id *)arg2;
- (id)description;
- (id)initWithDictionary:(id)arg1 isStub:(BOOL)arg2 error:(id *)arg3;
- (id)initWithDictionary:(id)arg1 isStub:(BOOL)arg2 isEphemeralMultiUserDevice:(BOOL)arg3 error:(id *)arg4;
- (id)parseDepartmentFromDictionary:(id)arg1 isStub:(BOOL)arg2 outError:(id *)arg3;
- (id)parseDeviceGroupFromDictionary:(id)arg1 isStub:(BOOL)arg2 outError:(id *)arg3;
- (BOOL)parseDictionary:(id)arg1 isStub:(BOOL)arg2 outError:(id *)arg3;
- (id)parseGroupFromDictionary:(id)arg1 isStub:(BOOL)arg2 outError:(id *)arg3;
- (id)parseUserFromDictionary:(id)arg1 isStub:(BOOL)arg2 outError:(id *)arg3;

@end

