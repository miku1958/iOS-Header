//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <SpringBoard/CSAuthenticationManaging-Protocol.h>
#import <SpringBoard/CSCarPlayStatusProviding-Protocol.h>
#import <SpringBoard/CSCoverSheetContextProviding-Protocol.h>
#import <SpringBoard/CSMediaControlling-Protocol.h>
#import <SpringBoard/CSReachabilityControlling-Protocol.h>
#import <SpringBoard/CSResetRestoreStatusProviding-Protocol.h>
#import <SpringBoard/CSSystemCursorInteractionManaging-Protocol.h>
#import <SpringBoard/CSTelephonyStatusProviding-Protocol.h>
#import <SpringBoard/CSTodayOverlayProviding-Protocol.h>
#import <SpringBoard/CSTouchEnvironmentStatusProviding-Protocol.h>
#import <SpringBoard/CSUnlockRequesting-Protocol.h>
#import <SpringBoard/CSUserSessionControlling-Protocol.h>
#import <SpringBoard/CSWallpaperLogging-Protocol.h>

@class NSArray, NSString, SBDashBoardNotificationPresenter, SBSyncController, SBWallpaperAggdLogger;
@protocol CSApplicationInforming, CSAuthenticationManaging, CSCarPlayStatusProviding, CSHomeAffordanceControlling, CSLegibilityProviding, CSMediaControlling, CSModalHomeAffordanceControlling, CSNotificationPresenting, CSPowerStatusProviding, CSReachabilityControlling, CSResetRestoreStatusProviding, CSScreenStateProviding, CSStatusBarControlling, CSSystemCursorInteractionManaging, CSTelephonyStatusProviding, CSThermalStatusProviding, CSTodayOverlayProviding, CSTouchEnvironmentStatusProviding, CSUnlockRequesting, CSUserSessionControlling, CSWallpaperLogging, CSWallpaperViewProviding, SBFActionProviding, SBFAuthenticationAssertionProviding, SBFAuthenticationStatusProvider, SBFDateProviding, SBFLockOutStatusProvider, SBFPasscodeFieldChangeObserver, SBFScreenWakeAnimationControlling, SBUIBiometricResource;

@interface SBDefaultCoverSheetContext : NSObject <CSAuthenticationManaging, CSCarPlayStatusProviding, CSMediaControlling, CSReachabilityControlling, CSResetRestoreStatusProviding, CSTelephonyStatusProviding, CSTouchEnvironmentStatusProviding, CSUnlockRequesting, CSUserSessionControlling, CSWallpaperLogging, CSTodayOverlayProviding, CSSystemCursorInteractionManaging, CSCoverSheetContextProviding>
{
    SBSyncController *_syncController;
    SBWallpaperAggdLogger *_wallpaperAggdLogger;
    SBDashBoardNotificationPresenter *_notificationPresenter;
    id<SBFAuthenticationAssertionProviding> _authenticationAssertionProvider;
    id<SBFAuthenticationStatusProvider> _authenticationStatusProvider;
    id<SBFPasscodeFieldChangeObserver> _passcodeFieldChangeObserver;
    id<SBFDateProviding> _dateProvider;
    id<SBFLockOutStatusProvider> _lockOutStatusProvider;
    id<CSLegibilityProviding> _legibilityProvider;
    id<CSPowerStatusProviding> _powerStatusProvider;
    NSString *_powerStatusChangeNotificationName;
    id<CSThermalStatusProviding> _thermalStatusProvider;
    id<SBUIBiometricResource> _biometricResource;
    id<CSScreenStateProviding> _screenStateProvider;
    id<SBFScreenWakeAnimationControlling> _screenWakeAnimationController;
    id<CSHomeAffordanceControlling> _homeAffordanceController;
    id<CSModalHomeAffordanceControlling> _modalHomeAffordanceController;
    id<CSStatusBarControlling> _statusBarController;
    id<CSWallpaperViewProviding> _wallpaperViewProvider;
    id<SBFActionProviding> _contentActionProvider;
    id<CSApplicationInforming> _applicationInformer;
}

@property (readonly, nonatomic) id<CSApplicationInforming> applicationInformer; // @synthesize applicationInformer=_applicationInformer;
@property (readonly, nonatomic) id<SBFAuthenticationAssertionProviding> authenticationAssertionProvider; // @synthesize authenticationAssertionProvider=_authenticationAssertionProvider;
@property (readonly, nonatomic) id<CSAuthenticationManaging> authenticationManager;
@property (readonly, nonatomic) id<SBFAuthenticationStatusProvider> authenticationStatusProvider; // @synthesize authenticationStatusProvider=_authenticationStatusProvider;
@property (readonly, nonatomic) id<SBUIBiometricResource> biometricResource; // @synthesize biometricResource=_biometricResource;
@property (readonly, nonatomic, getter=isCarPlayActiveForNotifications) BOOL carPlayActiveForNotifications;
@property (readonly, nonatomic) id<CSCarPlayStatusProviding> carPlayStatusProvider;
@property (readonly, nonatomic) id<SBFActionProviding> contentActionProvider; // @synthesize contentActionProvider=_contentActionProvider;
@property (readonly, nonatomic) id<SBFDateProviding> dateProvider; // @synthesize dateProvider=_dateProvider;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, copy, nonatomic) NSArray *dismissableOverlays;
@property (readonly, nonatomic) BOOL expectsPocketTouches;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) id<CSHomeAffordanceControlling> homeAffordanceController; // @synthesize homeAffordanceController=_homeAffordanceController;
@property (readonly, nonatomic) id<CSLegibilityProviding> legibilityProvider; // @synthesize legibilityProvider=_legibilityProvider;
@property (readonly, nonatomic) id<SBFLockOutStatusProvider> lockOutStatusProvider; // @synthesize lockOutStatusProvider=_lockOutStatusProvider;
@property (readonly, nonatomic, getter=isLogoutSupported) BOOL logoutSupported;
@property (readonly, nonatomic) id<CSMediaControlling> mediaController;
@property (readonly, nonatomic) id<CSModalHomeAffordanceControlling> modalHomeAffordanceController; // @synthesize modalHomeAffordanceController=_modalHomeAffordanceController;
@property (readonly, nonatomic) id<CSNotificationPresenting> notificationPresenter;
@property (readonly, nonatomic) id<SBFPasscodeFieldChangeObserver> passcodeFieldChangeObserver; // @synthesize passcodeFieldChangeObserver=_passcodeFieldChangeObserver;
@property (readonly, copy, nonatomic) NSString *powerStatusChangeNotificationName; // @synthesize powerStatusChangeNotificationName=_powerStatusChangeNotificationName;
@property (readonly, nonatomic) id<CSPowerStatusProviding> powerStatusProvider; // @synthesize powerStatusProvider=_powerStatusProvider;
@property (readonly, nonatomic) id<CSReachabilityControlling> reachabilityController;
@property (readonly, nonatomic) id<CSResetRestoreStatusProviding> resetRestoreStatusProvider;
@property (readonly, nonatomic) long long resetState;
@property (readonly, nonatomic, getter=isResetting) BOOL resetting;
@property (readonly, nonatomic) long long restoreState;
@property (readonly, nonatomic, getter=isRestoring) BOOL restoring;
@property (readonly, nonatomic) id<CSScreenStateProviding> screenStateProvider; // @synthesize screenStateProvider=_screenStateProvider;
@property (readonly, nonatomic) id<SBFScreenWakeAnimationControlling> screenWakeAnimationController; // @synthesize screenWakeAnimationController=_screenWakeAnimationController;
@property (readonly, nonatomic) id<CSStatusBarControlling> statusBarController; // @synthesize statusBarController=_statusBarController;
@property (readonly) Class superclass;
@property (readonly, nonatomic) id<CSSystemCursorInteractionManaging> systemCursorInterationManager;
@property (readonly, nonatomic) id<CSTelephonyStatusProviding> telephonyStatusProvider;
@property (readonly, nonatomic) id<CSThermalStatusProviding> thermalStatusProvider; // @synthesize thermalStatusProvider=_thermalStatusProvider;
@property (readonly, nonatomic) id<CSTodayOverlayProviding> todayOverlayProvider;
@property (readonly, nonatomic) id<CSTouchEnvironmentStatusProviding> touchEnvironmentStatusProvider;
@property (readonly, nonatomic) id<CSUnlockRequesting> unlockRequester;
@property (readonly, nonatomic) id<CSUserSessionControlling> userSessionController;
@property (readonly, nonatomic) id<CSWallpaperLogging> wallpaperLogger;
@property (readonly, nonatomic) id<CSWallpaperViewProviding> wallpaperViewProvider; // @synthesize wallpaperViewProvider=_wallpaperViewProvider;
@property (readonly, nonatomic) BOOL wantsTodayOverlay;

- (void).cxx_destruct;
- (void)attemptUnlockWithPasscode:(id)arg1 finishUIUnlock:(BOOL)arg2 completion:(CDUnknownBlockType)arg3;
- (id)createUnlockRequest;
- (id)createUnlockRequestForActionContext:(id)arg1;
- (void)deactivateReachability;
- (void)incrementIrisPlayCount;
- (id)init;
- (BOOL)isEmergencyCallSupported;
- (void)logout;
- (id)newTodayOverlayController;
- (void)registerView:(id)arg1 delegate:(id)arg2;
- (void)setBiometricAutoUnlockingDisabled:(BOOL)arg1 forReason:(id)arg2;
- (void)setPasscodeVisible:(BOOL)arg1 animated:(BOOL)arg2;
- (void)stopMediaPlaybackForSource:(long long)arg1;
- (void)unlockWithRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)unregisterView:(id)arg1;

@end

