//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <SpringBoard/BSTransactionObserver-Protocol.h>
#import <SpringBoard/SBApplicationDropSessionSceneProviding-Protocol.h>
#import <SpringBoard/SBDragAndDropAppActivationWorkspaceTransactionDelegate-Protocol.h>
#import <SpringBoard/UIDragInteractionDelegate_ForWebKitOnly-Protocol.h>
#import <SpringBoard/UIDragInteractionDelegate_Private-Protocol.h>
#import <SpringBoard/UIDropInteractionDelegate-Protocol.h>

@class NSMapTable, NSString, SBDragAndDropAppActivationWorkspaceTransaction, SBFluidSwitcherViewController, SBMainDisplaySceneLayoutViewController, SBWindowDragInteraction, UIDropInteraction;
@protocol SBMainDisplaySceneLayoutDragAndDropInteractionManagerDelegate, UIDragSession;

@interface SBMainDisplaySceneLayoutDragAndDropInteractionManager : NSObject <BSTransactionObserver, SBApplicationDropSessionSceneProviding, UIDropInteractionDelegate, UIDragInteractionDelegate_Private, UIDragInteractionDelegate_ForWebKitOnly, SBDragAndDropAppActivationWorkspaceTransactionDelegate>
{
    BOOL _windowDragHandledByDruid;
    SBFluidSwitcherViewController *_mainSwitcherContentController;
    SBMainDisplaySceneLayoutViewController *_sceneLayoutViewController;
    SBFluidSwitcherViewController *_floatingSwitcherContentController;
    id<SBMainDisplaySceneLayoutDragAndDropInteractionManagerDelegate> _delegate;
    UIDropInteraction *_dropInteraction;
    SBDragAndDropAppActivationWorkspaceTransaction *_activeTransaction;
    NSMapTable *_activeDropSessions;
    SBWindowDragInteraction *_windowDragInteraction;
    id<UIDragSession> _windowDragSession;
    CDUnknownBlockType _windowDragSessionPrepareCompletionBlock;
    NSString *_windowDragSceneIdentifier;
}

@property (strong, nonatomic) NSMapTable *activeDropSessions; // @synthesize activeDropSessions=_activeDropSessions;
@property (strong, nonatomic) SBDragAndDropAppActivationWorkspaceTransaction *activeTransaction; // @synthesize activeTransaction=_activeTransaction;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, weak, nonatomic) id<SBMainDisplaySceneLayoutDragAndDropInteractionManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (strong, nonatomic) UIDropInteraction *dropInteraction; // @synthesize dropInteraction=_dropInteraction;
@property (readonly, weak, nonatomic) SBFluidSwitcherViewController *floatingSwitcherContentController; // @synthesize floatingSwitcherContentController=_floatingSwitcherContentController;
@property (readonly) unsigned long long hash;
@property (readonly, weak, nonatomic) SBFluidSwitcherViewController *mainSwitcherContentController; // @synthesize mainSwitcherContentController=_mainSwitcherContentController;
@property (readonly, weak, nonatomic) SBMainDisplaySceneLayoutViewController *sceneLayoutViewController; // @synthesize sceneLayoutViewController=_sceneLayoutViewController;
@property (readonly) Class superclass;
@property (nonatomic) BOOL windowDragHandledByDruid; // @synthesize windowDragHandledByDruid=_windowDragHandledByDruid;
@property (strong, nonatomic) SBWindowDragInteraction *windowDragInteraction; // @synthesize windowDragInteraction=_windowDragInteraction;
@property (strong, nonatomic) NSString *windowDragSceneIdentifier; // @synthesize windowDragSceneIdentifier=_windowDragSceneIdentifier;
@property (strong, nonatomic) id<UIDragSession> windowDragSession; // @synthesize windowDragSession=_windowDragSession;
@property (copy, nonatomic) CDUnknownBlockType windowDragSessionPrepareCompletionBlock; // @synthesize windowDragSessionPrepareCompletionBlock=_windowDragSessionPrepareCompletionBlock;

- (void).cxx_destruct;
- (id)_activeAndVisibleSceneIdentifiersForApplication:(id)arg1;
- (BOOL)_anyActiveAndVisibleSceneEntityMatches:(CDUnknownBlockType)arg1;
- (void)_beginTrackingDropSessionIfNeeded:(id)arg1;
- (void)_dismissInlineAppExposeIfNeeded;
- (void)_dragInteraction:(id)arg1 prepareForSession:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_dragInteractionDidCancelLiftWithoutDragging:(id)arg1;
- (id)_requiredContextIDsForDragSessionInView:(id)arg1;
- (void)_windowDragSessionDidEnd;
- (BOOL)_workspaceWouldAllowTransitionToApplication:(id)arg1;
- (void)dealloc;
- (void)dragAndDropTransaction:(id)arg1 didBeginGesture:(id)arg2;
- (void)dragAndDropTransaction:(id)arg1 didEndGesture:(id)arg2;
- (void)dragAndDropTransaction:(id)arg1 didUpdateGesture:(id)arg2;
- (void)dragInteraction:(id)arg1 item:(id)arg2 willAnimateCancelWithAnimator:(id)arg3;
- (id)dragInteraction:(id)arg1 itemsForBeginningSession:(id)arg2;
- (id)dragInteraction:(id)arg1 previewForCancellingItem:(id)arg2 withDefault:(id)arg3;
- (id)dragInteraction:(id)arg1 previewForLiftingItem:(id)arg2 session:(id)arg3;
- (void)dragInteraction:(id)arg1 session:(id)arg2 didEndWithOperation:(unsigned long long)arg3;
- (void)dragInteraction:(id)arg1 session:(id)arg2 willEndWithOperation:(unsigned long long)arg3;
- (void)dragInteraction:(id)arg1 sessionDidMove:(id)arg2;
- (BOOL)dragInteraction:(id)arg1 sessionIsRestrictedToDraggingApplication:(id)arg2;
- (void)dragInteraction:(id)arg1 sessionWillBegin:(id)arg2;
- (void)dragInteraction:(id)arg1 willAnimateLiftWithAnimator:(id)arg2 session:(id)arg3;
- (BOOL)dropInteraction:(id)arg1 canHandleSession:(id)arg2;
- (void)dropInteraction:(id)arg1 concludeDrop:(id)arg2;
- (void)dropInteraction:(id)arg1 item:(id)arg2 willAnimateDropWithAnimator:(id)arg3;
- (void)dropInteraction:(id)arg1 performDrop:(id)arg2;
- (id)dropInteraction:(id)arg1 previewForDroppingItem:(id)arg2 withDefault:(id)arg3;
- (void)dropInteraction:(id)arg1 sessionDidEnd:(id)arg2;
- (void)dropInteraction:(id)arg1 sessionDidEnter:(id)arg2;
- (void)dropInteraction:(id)arg1 sessionDidExit:(id)arg2;
- (id)dropInteraction:(id)arg1 sessionDidUpdate:(id)arg2;
- (void)handleWindowDragGestureRecognizer:(id)arg1;
- (id)initWithMainSwitcherContentController:(id)arg1 floatingSwitcherContentController:(id)arg2 sceneLayoutViewController:(id)arg3 delegate:(id)arg4;
- (BOOL)isApplicationActiveAndVisible:(id)arg1;
- (id)mostRecentSceneIdentityExcludingLiveScenesForApplication:(id)arg1;
- (id)newSceneIdentityForApplication:(id)arg1;
- (id)preferredSceneIdentityForApplication:(id)arg1 targetContentIdentifier:(id)arg2 preferNewScene:(BOOL)arg3;
- (BOOL)shouldBeginWindowDragGesture;
- (void)transactionDidComplete:(id)arg1;

@end

