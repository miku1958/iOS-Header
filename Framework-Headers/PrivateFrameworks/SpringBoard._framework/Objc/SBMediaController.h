//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <SpringBoard/FBSDisplayObserving-Protocol.h>
#import <SpringBoard/MPAVRoutingControllerDelegate-Protocol.h>
#import <SpringBoard/SBAVSystemControllerCacheObserver-Protocol.h>

@class MPAVRoutingController, NSDate, NSDictionary, NSNumber, NSString, NSTimer, SBAVSystemControllerCache, SBApplication, SBDirectToAirPlayController, SBSStatusBarStyleOverridesAssertion, SBVolumeControl;

@interface SBMediaController : NSObject <MPAVRoutingControllerDelegate, FBSDisplayObserving, SBAVSystemControllerCacheObserver>
{
    int _manualVolumeChangeCount;
    NSDictionary *_nowPlayingInfo;
    float _pendingVolumeChange;
    NSTimer *_volumeCommitTimer;
    BOOL _debounceVolumeRepeat;
    int _numberOfVolumeDecreasesSinceDownButtonDown;
    SBApplication *_lastNowPlayingApplication;
    BOOL _lastNowPlayingAppIsPlaying;
    int _lastMediaRemoteAppActivityStatus;
    BOOL _suppressHUD;
    BOOL _screenSharingViaAVSystemController;
    BOOL _screenSharingViaDisplayMonitor;
    BOOL _screenSharingSetsStatusBarOverride;
    NSTimer *_screenSharingStatusBarOverrideTimer;
    NSTimer *_videoOutStatusBarOverrideTimer;
    MPAVRoutingController *_routingController;
    SBAVSystemControllerCache *_avCache;
    SBVolumeControl *_volumeControl;
    NSNumber *_audioCategoryMusicVolume;
    NSDate *_lastActivityDate;
    SBSStatusBarStyleOverridesAssertion *_screenSharingStatusBarStyleOverrideAssertion;
    SBSStatusBarStyleOverridesAssertion *_videoOutStatusBarStyleOverrideAssertion;
    SBDirectToAirPlayController *_directToAirPlayController;
    int _nowPlayingProcessPID;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) NSDate *lastActivityDate;
@property (readonly, weak, nonatomic) SBApplication *nowPlayingApplication;
@property (nonatomic) int nowPlayingProcessPID; // @synthesize nowPlayingProcessPID=_nowPlayingProcessPID;
@property (readonly) Class superclass;
@property BOOL suppressHUD;

+ (BOOL)applicationCanBeConsideredNowPlaying:(id)arg1;
+ (void)sendResetPlaybackTimeoutCommand;
+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)_applicationActivityStatusDidChange:(id)arg1;
- (void)_authenticationStateChanged:(id)arg1;
- (void)_clearScreenSharingStatusBarStyleOverride;
- (void)_clearVideoOutStatusBarStyleOverride;
- (BOOL)_displayMonitorHasAConnectedExternalIdentity;
- (void)_mediaRemoteNowPlayingApplicationDidChange:(id)arg1;
- (void)_mediaRemoteNowPlayingApplicationIsPlayingDidChange:(id)arg1;
- (void)_mediaRemoteNowPlayingInfoDidChange:(id)arg1;
- (void)_notifyThatScreenSharingChanged;
- (void)_nowPlayingAppDidExit:(id)arg1;
- (id)_nowPlayingInfo;
- (void)_registerForNotifications;
- (BOOL)_sendMediaCommand:(unsigned int)arg1 options:(id)arg2;
- (void)_setNowPlayingApplication:(id)arg1;
- (void)_startVideoOutStatusBarStyleOverride;
- (void)_unregisterForNotifications;
- (void)_updateAVRoutes;
- (void)_updateDisplayMonitorState;
- (void)_updateLastRecentActivityDate;
- (void)_updateScreenSharingStatusBarStyleOverrideSuppressionPreference:(id)arg1;
- (BOOL)addTrackToWishListForEventSource:(long long)arg1;
- (BOOL)banTrackForEventSource:(long long)arg1;
- (BOOL)beginSeek:(int)arg1 eventSource:(long long)arg2;
- (void)cache:(id)arg1 didUpdateAirplayDisplayActive:(BOOL)arg2;
- (void)cacheDidRebuildAfterServerDeath:(id)arg1;
- (void)cancelVolumeEvent;
- (BOOL)changeTrack:(int)arg1 eventSource:(long long)arg2;
- (void)dealloc;
- (void)displayMonitor:(id)arg1 didConnectIdentity:(id)arg2 withConfiguration:(id)arg3;
- (void)displayMonitor:(id)arg1 willDisconnectIdentity:(id)arg2;
- (BOOL)endSeek:(int)arg1 eventSource:(long long)arg2;
- (BOOL)handsetRouteIsSelected;
- (BOOL)hasTrack;
- (id)init;
- (BOOL)isApplicationActivityActive;
- (BOOL)isFirstTrack;
- (BOOL)isLastTrack;
- (BOOL)isPaused;
- (BOOL)isPlaying;
- (BOOL)isScreenSharing;
- (BOOL)likeTrackForEventSource:(long long)arg1;
- (id)nameOfPickedRoute;
- (BOOL)pauseForEventSource:(long long)arg1;
- (BOOL)playForEventSource:(long long)arg1;
- (BOOL)routeOtherThanHandsetIsAvailable;
- (void)routingControllerAvailableRoutesDidChange:(id)arg1;
- (void)setNowPlayingInfo:(id)arg1;
- (BOOL)setPlaybackSpeed:(int)arg1 eventSource:(long long)arg2;
- (BOOL)stopForEventSource:(long long)arg1;
- (BOOL)togglePlayPauseForEventSource:(long long)arg1;
- (BOOL)toggleRepeatForEventSource:(long long)arg1;
- (BOOL)toggleShuffleForEventSource:(long long)arg1;
- (void)updateScreenSharingStatusBarStyleOverride;
- (BOOL)volumeControlIsAvailable;
- (BOOL)wirelessDisplayRouteIsPicked;

@end

