//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <SpringBoard/CSExternalEventHandling-Protocol.h>
#import <SpringBoard/CSIdleTimerControlling-Protocol.h>
#import <SpringBoard/SBDashBoardIdleTimerProviderDelegate-Protocol.h>
#import <SpringBoard/SBIdleTimerProviding-Protocol.h>
#import <SpringBoard/SBLockScreenIdleTimerControlling-Protocol.h>

@class CSCoverSheetViewController, NSString, SBDashBoardIdleTimerProvider;
@protocol SBIdleTimerCoordinating;

@interface SBDashBoardIdleTimerController : NSObject <CSExternalEventHandling, SBDashBoardIdleTimerProviderDelegate, CSIdleTimerControlling, SBIdleTimerProviding, SBLockScreenIdleTimerControlling>
{
    CSCoverSheetViewController *_coverSheetViewController;
    SBDashBoardIdleTimerProvider *_dashBoardIdleTimerProvider;
    id<SBIdleTimerCoordinating> _idleTimerCoordinator;
}

@property (readonly, copy, nonatomic) NSString *coverSheetIdentifier;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (weak, nonatomic) id<SBIdleTimerCoordinating> idleTimerCoordinator; // @synthesize idleTimerCoordinator=_idleTimerCoordinator;
@property (readonly, nonatomic) long long participantState;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)addIdleTimerDisabledAssertionReason:(id)arg1;
- (void)conformsToCSEventHandling;
- (id)coordinatorRequestedIdleTimerBehavior:(id)arg1;
- (id)dashBoardIdleTimerProvider:(id)arg1 didProposeBehavior:(id)arg2 reason:(id)arg3;
- (void)dealloc;
- (BOOL)handleEvent:(id)arg1;
- (void)idleTimerDidChange:(id)arg1;
- (void)idleTimerDidExpire:(id)arg1;
- (void)idleTimerDidRefresh:(id)arg1;
- (void)idleTimerDidWarn:(id)arg1;
- (void)idleTimerWillRefresh:(id)arg1;
- (id)initWithCoverSheetViewController:(id)arg1;
- (void)removeIdleTimerDisabledAssertionReason:(id)arg1;
- (id)requestIdleTimerBehaviorForReason:(id)arg1;
- (void)resetIdleTimerIfTopMost;
- (BOOL)wouldHandleButtonEvent:(id)arg1;

@end

