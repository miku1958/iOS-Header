//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <SpringBoard/SBRemoteTransientOverlaySessionHostDelegate-Protocol.h>

@class NSMutableDictionary, NSString;
@protocol OS_dispatch_queue, SBRemoteTransientOverlaySessionManagerDelegate;

@interface SBRemoteTransientOverlaySessionManager : NSObject <SBRemoteTransientOverlaySessionHostDelegate>
{
    NSObject<OS_dispatch_queue> *_accessSerialQueue;
    NSMutableDictionary *_sessionIDToSession;
    id<SBRemoteTransientOverlaySessionManagerDelegate> _delegate;
}

@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<SBRemoteTransientOverlaySessionManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)_createSessionWithDefinition:(id)arg1;
- (id)_existingSessionsWithDefinition:(id)arg1 options:(long long)arg2;
- (long long)activeWallpaperVariantForRemoteTransientOverlaySession:(id)arg1;
- (id)createSessionWithDefinition:(id)arg1;
- (id)existingSessionWithSessionID:(id)arg1 options:(long long)arg2;
- (id)existingSessionsWithDefinition:(id)arg1 options:(long long)arg2;
- (BOOL)hasSessionWithPendingButtonEvents:(unsigned long long)arg1 options:(long long)arg2;
- (BOOL)hasSessionWithServiceProcessIdentifier:(int)arg1 options:(long long)arg2;
- (id)init;
- (void)remoteTransientOverlaySession:(id)arg1 didInvalidateWithReason:(long long)arg2 error:(id)arg3;
- (BOOL)remoteTransientOverlaySession:(id)arg1 performDismissalRequest:(id)arg2;
- (BOOL)remoteTransientOverlaySession:(id)arg1 performPresentationRequest:(id)arg2;
- (BOOL)remoteTransientOverlaySession:(id)arg1 prefersStatusBarActivityItemVisibleForServiceBundleIdentifier:(id)arg2;
- (void)remoteTransientOverlaySession:(id)arg1 requestsHandlingForButtonEvents:(unsigned long long)arg2 viewController:(id)arg3;
- (BOOL)remoteTransientOverlaySession:(id)arg1 shouldActivateWithContext:(id)arg2;
- (id)sessionWithDefinition:(id)arg1 options:(long long)arg2;
- (id)sessionsWithDefinition:(id)arg1 options:(long long)arg2;

@end

