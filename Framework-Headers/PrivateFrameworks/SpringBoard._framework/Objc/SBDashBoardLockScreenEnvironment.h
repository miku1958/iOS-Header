//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <SpringBoard/CSCoverSheetViewControllerObserver-Protocol.h>
#import <SpringBoard/SBApplicationHosting-Protocol.h>
#import <SpringBoard/SBAutoUnlockRule-Protocol.h>
#import <SpringBoard/SBBiometricUnlockBehavior-Protocol.h>
#import <SpringBoard/SBBiometricUnlockBehaviorDelegate-Protocol.h>
#import <SpringBoard/SBButtonEventsHandler-Protocol.h>
#import <SpringBoard/SBLockScreenBacklightControlling-Protocol.h>
#import <SpringBoard/SBLockScreenBehaviorSuppressing-Protocol.h>
#import <SpringBoard/SBLockScreenBlockedStateObserving-Protocol.h>
#import <SpringBoard/SBLockScreenButtonObserving-Protocol.h>
#import <SpringBoard/SBLockScreenContentStateProviding-Protocol.h>
#import <SpringBoard/SBLockScreenCustomActionStoring-Protocol.h>
#import <SpringBoard/SBLockScreenEnvironment-Protocol.h>
#import <SpringBoard/SBLockScreenLockingAndUnlocking-Protocol.h>
#import <SpringBoard/SBLockScreenMediaControlsPresenting-Protocol.h>
#import <SpringBoard/SBLockScreenPasscodeViewPresenting-Protocol.h>
#import <SpringBoard/SBLockScreenProximityBehaviorProviding-Protocol.h>
#import <SpringBoard/SBLockScreenStatusBarTransitioning-Protocol.h>

@class CSCoverSheetViewController, NSString, SBDashBoardAnalyticsEmitter, SBDashBoardApplicationLauncher, SBDashBoardBiometricUnlockController, SBDashBoardEmergencyDialerController, SBDashBoardIdleTimerController, SBDashBoardOrientationController, SBDashBoardPluginController, SBDashBoardPolicyBasedBehaviorProvider, SBDashBoardSetupController, SBDashBoardSpotlightPresenter, SBFLockScreenActionContext, SBLockScreenActionManager, UIViewController;
@protocol SBApplicationHosting, SBAutoUnlockRule, SBBiometricUnlockBehavior, SBBiometricUnlockBehaviorDelegate, SBButtonEventsHandler, SBFScreenWakeAnimationTarget, SBIdleTimerProviding, SBLockScreenApplicationLaunching, SBLockScreenBacklightControlling, SBLockScreenBehaviorSuppressing, SBLockScreenBlockedStateObserving, SBLockScreenButtonObserving, SBLockScreenCallHandling, SBLockScreenContentStateProviding, SBLockScreenCustomActionStoring, SBLockScreenIdleTimerControlling, SBLockScreenLockingAndUnlocking, SBLockScreenMediaControlsPresenting, SBLockScreenPasscodeViewPresenting, SBLockScreenPluginPresenting, SBLockScreenProximityBehaviorProviding, SBLockScreenStatusBarTransitioning;

@interface SBDashBoardLockScreenEnvironment : NSObject <SBApplicationHosting, SBAutoUnlockRule, SBBiometricUnlockBehavior, SBBiometricUnlockBehaviorDelegate, SBButtonEventsHandler, CSCoverSheetViewControllerObserver, SBLockScreenBacklightControlling, SBLockScreenBehaviorSuppressing, SBLockScreenBlockedStateObserving, SBLockScreenButtonObserving, SBLockScreenContentStateProviding, SBLockScreenCustomActionStoring, SBLockScreenLockingAndUnlocking, SBLockScreenMediaControlsPresenting, SBLockScreenPasscodeViewPresenting, SBLockScreenProximityBehaviorProviding, SBLockScreenStatusBarTransitioning, SBLockScreenEnvironment>
{
    CSCoverSheetViewController *_coverSheetViewController;
    SBDashBoardAnalyticsEmitter *_analyticsEmitter;
    SBDashBoardApplicationLauncher *_applicationLauncher;
    SBDashBoardBiometricUnlockController *_biometricUnlockController;
    SBLockScreenActionManager *_lockScreenActionManager;
    SBDashBoardEmergencyDialerController *_emergencyDialerController;
    SBDashBoardIdleTimerController *_idleTimerController;
    SBDashBoardOrientationController *_orientationController;
    SBDashBoardPluginController *_pluginController;
    SBDashBoardPolicyBasedBehaviorProvider *_policyBasedBehaviorProvider;
    SBDashBoardSetupController *_setupController;
    SBDashBoardSpotlightPresenter *_spotlightPresenter;
    BOOL _expectsFaceContact;
    id<SBBiometricUnlockBehaviorDelegate> _biometricUnlockBehaviorDelegate;
}

@property (readonly, nonatomic) id<SBApplicationHosting> applicationHoster;
@property (readonly, nonatomic) id<SBLockScreenApplicationLaunching> applicationLauncher;
@property (nonatomic, getter=isAuthenticated) BOOL authenticated;
@property (readonly, nonatomic) id<SBAutoUnlockRule> autoUnlockRule;
@property (readonly, nonatomic) id<SBLockScreenBacklightControlling> backlightController;
@property (nonatomic) double backlightLevel;
@property (readonly, nonatomic) id<SBLockScreenBehaviorSuppressing> behaviorSuppressor;
@property (readonly, nonatomic) id<SBBiometricUnlockBehavior> biometricUnlockBehavior;
@property (weak, nonatomic) id<SBBiometricUnlockBehaviorDelegate> biometricUnlockBehaviorDelegate; // @synthesize biometricUnlockBehaviorDelegate=_biometricUnlockBehaviorDelegate;
@property (readonly, nonatomic) id<SBLockScreenBlockedStateObserving> blockedStateObserver;
@property (readonly, nonatomic) id<SBButtonEventsHandler> buttonEventsHandler;
@property (readonly, nonatomic) id<SBLockScreenButtonObserving> buttonObserver;
@property (readonly, nonatomic) id<SBLockScreenCallHandling> callController;
@property (readonly, nonatomic) id<SBLockScreenContentStateProviding> contentStateProvider;
@property (readonly, nonatomic) CSCoverSheetViewController *coverSheetViewController; // @synthesize coverSheetViewController=_coverSheetViewController;
@property (readonly, nonatomic) id<SBLockScreenCustomActionStoring> customActionStore;
@property (strong, nonatomic, getter=_customLockScreenActionContext) SBFLockScreenActionContext *customLockScreenActionContext;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) BOOL expectsFaceContact; // @synthesize expectsFaceContact=_expectsFaceContact;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) id<SBLockScreenIdleTimerControlling> idleTimerController;
@property (readonly, nonatomic) id<SBIdleTimerProviding> idleTimerProvider;
@property (readonly, nonatomic) id<SBLockScreenLockingAndUnlocking> lockController;
@property (readonly, nonatomic) id<SBLockScreenMediaControlsPresenting> mediaControlsPresenter;
@property (readonly, nonatomic) id<SBLockScreenPasscodeViewPresenting> passcodeViewPresenter;
@property (readonly, nonatomic) id<SBLockScreenPluginPresenting> pluginPresenter;
@property (readonly, nonatomic) id<SBLockScreenProximityBehaviorProviding> proximityBehaviorProvider;
@property (readonly, nonatomic) UIViewController *rootViewController;
@property (readonly, nonatomic) id<SBFScreenWakeAnimationTarget> screenWakeAnimationTarget;
@property (readonly, nonatomic) BOOL shouldShowLockStatusBarTime;
@property (nonatomic, getter=isShowingMediaControls) BOOL showingMediaControls;
@property (readonly, nonatomic) id<SBLockScreenStatusBarTransitioning> statusBarTransitionController;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_setExpectsFaceContact:(BOOL)arg1;
- (BOOL)biometricUnlockBehavior:(id)arg1 requestsFeedback:(id)arg2;
- (BOOL)biometricUnlockBehavior:(id)arg1 requestsUnlock:(id)arg2 withFeedback:(id)arg3;
- (BOOL)canBeDeactivatedForUIUnlockFromSource:(int)arg1;
- (BOOL)canHostAnApp;
- (void)conformsToSBApplicationHosting;
- (void)coverSheetViewController:(id)arg1 didChangeActiveBehavior:(id)arg2;
- (id)createHomeButtonShowPasscodeRecognizerForHomeButtonPress;
- (id)createHomeButtonSuppressAfterUnlockRecognizerForUnlockSource:(int)arg1;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
- (void)finishUIUnlockFromSource:(int)arg1;
- (void)handleBiometricEvent:(unsigned long long)arg1;
- (BOOL)handleHeadsetButtonPress:(BOOL)arg1;
- (BOOL)handleHomeButtonDoublePress;
- (BOOL)handleHomeButtonLongPress;
- (BOOL)handleHomeButtonPress;
- (BOOL)handleLockButtonPress;
- (BOOL)handleVolumeDownButtonPress;
- (BOOL)handleVolumeUpButtonPress;
- (id)hostedAppSceneHandle;
- (id)hostedAppSceneHandles;
- (void)hostedAppWillRotateToInterfaceOrientation:(long long)arg1;
- (id)init;
- (id)initWithCoverSheetViewController:(id)arg1;
- (BOOL)isHostingAnApp;
- (BOOL)isInScreenOffMode;
- (BOOL)isMainPageVisible;
- (BOOL)isPasscodeLockVisible;
- (BOOL)isUnlockDisabled;
- (void)jiggleLockIcon;
- (void)noteDeviceBlockedStatusUpdated;
- (void)noteMenuButtonDown;
- (void)noteMenuButtonUp;
- (void)noteResetRestoreStateUpdated;
- (void)prepareForUILock;
- (void)prepareForUIUnlock;
- (void)setInScreenOffMode:(BOOL)arg1;
- (void)setInScreenOffMode:(BOOL)arg1 forAutoUnlock:(BOOL)arg2 fromUnlockSource:(int)arg3;
- (void)setPasscodeLockVisible:(BOOL)arg1 animated:(BOOL)arg2;
- (void)setPasscodeLockVisible:(BOOL)arg1 animated:(BOOL)arg2 completion:(CDUnknownBlockType)arg3;
- (BOOL)shouldAutoUnlockForSource:(int)arg1;
- (BOOL)shouldDisableALS;
- (BOOL)shouldUnlockUIOnKeyDownEvent;
- (void)startLockScreenFadeInAnimationForSource:(int)arg1;
- (id)succinctDescription;
- (id)succinctDescriptionBuilder;
- (BOOL)suppressesBanners;
- (BOOL)suppressesControlCenter;
- (BOOL)suppressesScreenshots;
- (void)updateStatusBarForLockScreenComeback;
- (void)updateStatusBarForLockScreenTeardown;
- (BOOL)willUIUnlockFromSource:(int)arg1;

@end

