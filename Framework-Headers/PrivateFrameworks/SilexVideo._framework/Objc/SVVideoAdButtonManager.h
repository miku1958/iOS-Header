//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <SilexVideo/SVVideoControlVisibilityItem-Protocol.h>
#import <SilexVideo/SVVideoTransitionObserver-Protocol.h>

@class NSLayoutConstraint, NSMutableArray, NSString, SVAdPrivacyButton, SVLearnMoreButton, SVVideoAdSkipButton;
@protocol SVCustomControlsViewProviding, SVVideoAdActionAvailabilityObserver, SVVideoAdActionAvailabilityObserverFactory, SVVideoLoadingStateObserverFactory, SVVideoLoadingStateObserving, SVVideoSkipLockObserverFactory, SVVideoSkipLockObserving, SVVideoViewControllerSizeObserving;

@interface SVVideoAdButtonManager : NSObject <SVVideoTransitionObserver, SVVideoControlVisibilityItem>
{
    BOOL _transportControlsHidden;
    id<SVCustomControlsViewProviding> _customControlsViewProvider;
    id<SVVideoLoadingStateObserverFactory> _loadingStateObserverFactory;
    id<SVVideoLoadingStateObserving> _loadingStateObserver;
    id<SVVideoAdActionAvailabilityObserverFactory> _adActionAvailabilityObserverFactory;
    id<SVVideoAdActionAvailabilityObserver> _adActionAvailabilityObserver;
    id<SVVideoSkipLockObserverFactory> _skipLockObserverFactory;
    id<SVVideoSkipLockObserving> _skipLockObserver;
    SVAdPrivacyButton *_privacyButton;
    SVLearnMoreButton *_learnMoreButton;
    SVVideoAdSkipButton *_skipButton;
    long long _constraintsMode;
    NSLayoutConstraint *_learnMorePrimaryTopConstraint;
    NSLayoutConstraint *_learnMorePrimaryLeadingConstraint;
    NSLayoutConstraint *_learnMoreSecondaryTopConstraint;
    NSLayoutConstraint *_learnMoreSecondaryLeadingConstraint;
    NSLayoutConstraint *_privacyAboveTransportControlsConstraint;
    NSLayoutConstraint *_privacyAboveAccessoryBarConstraint;
    NSMutableArray *_alwaysActiveConstraints;
    id<SVVideoViewControllerSizeObserving> _sizeObserver;
}

@property (strong, nonatomic) id<SVVideoAdActionAvailabilityObserver> adActionAvailabilityObserver; // @synthesize adActionAvailabilityObserver=_adActionAvailabilityObserver;
@property (readonly, nonatomic) id<SVVideoAdActionAvailabilityObserverFactory> adActionAvailabilityObserverFactory; // @synthesize adActionAvailabilityObserverFactory=_adActionAvailabilityObserverFactory;
@property (strong, nonatomic) NSMutableArray *alwaysActiveConstraints; // @synthesize alwaysActiveConstraints=_alwaysActiveConstraints;
@property (nonatomic) long long constraintsMode; // @synthesize constraintsMode=_constraintsMode;
@property (readonly, nonatomic) id<SVCustomControlsViewProviding> customControlsViewProvider; // @synthesize customControlsViewProvider=_customControlsViewProvider;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) BOOL hideable;
@property (readonly, nonatomic) SVLearnMoreButton *learnMoreButton; // @synthesize learnMoreButton=_learnMoreButton;
@property (strong, nonatomic) NSLayoutConstraint *learnMorePrimaryLeadingConstraint; // @synthesize learnMorePrimaryLeadingConstraint=_learnMorePrimaryLeadingConstraint;
@property (strong, nonatomic) NSLayoutConstraint *learnMorePrimaryTopConstraint; // @synthesize learnMorePrimaryTopConstraint=_learnMorePrimaryTopConstraint;
@property (strong, nonatomic) NSLayoutConstraint *learnMoreSecondaryLeadingConstraint; // @synthesize learnMoreSecondaryLeadingConstraint=_learnMoreSecondaryLeadingConstraint;
@property (strong, nonatomic) NSLayoutConstraint *learnMoreSecondaryTopConstraint; // @synthesize learnMoreSecondaryTopConstraint=_learnMoreSecondaryTopConstraint;
@property (strong, nonatomic) id<SVVideoLoadingStateObserving> loadingStateObserver; // @synthesize loadingStateObserver=_loadingStateObserver;
@property (readonly, nonatomic) id<SVVideoLoadingStateObserverFactory> loadingStateObserverFactory; // @synthesize loadingStateObserverFactory=_loadingStateObserverFactory;
@property (strong, nonatomic) NSLayoutConstraint *privacyAboveAccessoryBarConstraint; // @synthesize privacyAboveAccessoryBarConstraint=_privacyAboveAccessoryBarConstraint;
@property (strong, nonatomic) NSLayoutConstraint *privacyAboveTransportControlsConstraint; // @synthesize privacyAboveTransportControlsConstraint=_privacyAboveTransportControlsConstraint;
@property (readonly, nonatomic) SVAdPrivacyButton *privacyButton; // @synthesize privacyButton=_privacyButton;
@property (readonly, nonatomic) id<SVVideoViewControllerSizeObserving> sizeObserver; // @synthesize sizeObserver=_sizeObserver;
@property (readonly, nonatomic) SVVideoAdSkipButton *skipButton; // @synthesize skipButton=_skipButton;
@property (strong, nonatomic) id<SVVideoSkipLockObserving> skipLockObserver; // @synthesize skipLockObserver=_skipLockObserver;
@property (readonly, nonatomic) id<SVVideoSkipLockObserverFactory> skipLockObserverFactory; // @synthesize skipLockObserverFactory=_skipLockObserverFactory;
@property (readonly) Class superclass;
@property (nonatomic, getter=areTransportControlsHidden) BOOL transportControlsHidden; // @synthesize transportControlsHidden=_transportControlsHidden;

- (void).cxx_destruct;
- (struct CGSize)accessoryBarSize;
- (void)activateConstraintsMode:(long long)arg1;
- (void)addButtonsToCustomControlsView:(id)arg1 withAdActionAvailable:(BOOL)arg2;
- (void)contentSizeCategoryDidChange;
- (void)embedButtonsInViewControllerWithAdActionAvailable:(BOOL)arg1;
- (void)hide:(BOOL)arg1 withAnimationCoordinator:(id)arg2;
- (id)initWithCustomControlsViewProvider:(id)arg1 loadingStateObserverFactory:(id)arg2 adActionAvailabilityObserverFactory:(id)arg3 skipLockObserverFactory:(id)arg4 adPrivacyButton:(id)arg5 learnMoreButton:(id)arg6 skipButton:(id)arg7 sizeObserver:(id)arg8;
- (void)installConstraintsForButtonsInControlsView:(id)arg1 withLayoutGuides:(id)arg2;
- (BOOL)isAccessoryBarAboveControlsView:(id)arg1;
- (BOOL)isVisible;
- (void)removeButtonsFromViewController;
- (void)removeObservers;
- (void)setupObserversForVideo:(id)arg1;
- (BOOL)supportsAutoAppearance;
- (void)updateConstraints:(id)arg1;
- (double)verticalOffsetForFloatAboveAccessoryBar;
- (void)videoPlayerSizeDidChange;
- (void)willTransitionToVideo:(id)arg1 withTransitionCoordinator:(id)arg2;

@end

