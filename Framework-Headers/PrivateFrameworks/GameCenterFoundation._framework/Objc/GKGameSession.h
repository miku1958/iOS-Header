//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/NSObject.h>

#import <GameCenterFoundation/NSSecureCoding-Protocol.h>

@class GKCloudPlayer, NSArray, NSDate, NSMutableDictionary, NSString;

@interface GKGameSession : NSObject <NSSecureCoding>
{
    NSString *_identifier;
    NSString *_title;
    GKCloudPlayer *_owner;
    NSArray *_players;
    NSDate *_lastModifiedDate;
    GKCloudPlayer *_lastModifiedPlayer;
    long long _maxNumberOfConnectedPlayers;
    NSString *_serverChangeTag;
    NSMutableDictionary *_playerStates;
}

@property (readonly, nonatomic) NSArray *badgedPlayers;
@property (strong, nonatomic) NSString *identifier;
@property (strong, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property (strong, nonatomic) NSDate *lastModifiedDate;
@property (strong, nonatomic) NSDate *lastModifiedDate; // @synthesize lastModifiedDate=_lastModifiedDate;
@property (strong, nonatomic) GKCloudPlayer *lastModifiedPlayer;
@property (strong, nonatomic) GKCloudPlayer *lastModifiedPlayer; // @synthesize lastModifiedPlayer=_lastModifiedPlayer;
@property (nonatomic) long long maxNumberOfConnectedPlayers;
@property (nonatomic) long long maxNumberOfConnectedPlayers; // @synthesize maxNumberOfConnectedPlayers=_maxNumberOfConnectedPlayers;
@property (strong, nonatomic) GKCloudPlayer *owner;
@property (strong, nonatomic) GKCloudPlayer *owner; // @synthesize owner=_owner;
@property (strong, nonatomic) NSMutableDictionary *playerStates;
@property (strong, nonatomic) NSMutableDictionary *playerStates; // @synthesize playerStates=_playerStates;
@property (strong, nonatomic) NSArray *players;
@property (strong, nonatomic) NSArray *players; // @synthesize players=_players;
@property (strong, nonatomic) NSString *serverChangeTag;
@property (strong, nonatomic) NSString *serverChangeTag; // @synthesize serverChangeTag=_serverChangeTag;
@property (strong, nonatomic) NSString *title;
@property (strong, nonatomic) NSString *title; // @synthesize title=_title;

+ (void)addEventListener:(id)arg1;
+ (void)createSessionInContainer:(id)arg1 withTitle:(id)arg2 maxConnectedPlayers:(long long)arg3 completionHandler:(CDUnknownBlockType)arg4;
+ (void)getSessionsForZone:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (void)getZonesWithCompletionHandler:(CDUnknownBlockType)arg1;
+ (id)gk_sessionEventListeners;
+ (void)loadSessionWithIdentifier:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (void)loadSessionsInContainer:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (void)postSession:(id)arg1 didAddPlayer:(id)arg2;
+ (void)postSession:(id)arg1 didReceiveData:(id)arg2 fromPlayer:(id)arg3;
+ (void)postSession:(id)arg1 didReceiveMessage:(id)arg2 withData:(id)arg3 fromPlayer:(id)arg4;
+ (void)postSession:(id)arg1 didRemovePlayer:(id)arg2;
+ (void)postSession:(id)arg1 player:(id)arg2 didChangeConnectionState:(long long)arg3;
+ (void)postSession:(id)arg1 player:(id)arg2 didSaveData:(id)arg3;
+ (void)removeEventListener:(id)arg1;
+ (void)removeSessionWithIdentifier:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (BOOL)supportsSecureCoding;
- (void).cxx_destruct;
- (id)_gkDescriptionWithChildren:(int)arg1;
- (void)clearBadgeForPlayers:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)description;
- (id)descriptionSubstitutionMap;
- (void)encodeWithCoder:(id)arg1;
- (void)getShareURLWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)initWithCoder:(id)arg1;
- (void)loadDataWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)playersWithConnectionState:(long long)arg1;
- (void)saveData:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)sendData:(id)arg1 withTransportType:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)sendMessageWithLocalizedFormatKey:(id)arg1 arguments:(id)arg2 data:(id)arg3 toPlayers:(id)arg4 badgePlayers:(BOOL)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (void)setConnectionState:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)updateWithSession:(id)arg1;

@end

