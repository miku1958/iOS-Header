//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class GKDaemonProxy, GKPlayerInternal, GKThreadsafeDictionary, NSDictionary;
@protocol GKAccountService, GKAccountServicePrivate, GKAnalyticsService, GKAnalyticsServicePrivate, GKBulletinService, GKBulletinServicePrivate, GKChallengeService, GKChallengeServicePrivate, GKFriendService, GKFriendServicePrivate, GKGameService, GKGameServicePrivate, GKGameSessionService, GKGameSessionServicePrivate, GKGameStatService, GKGameStatServicePrivate, GKMultiplayerService, GKMultiplayerServicePrivate, GKProfileService, GKProfileServicePrivate, GKTournamentService, GKTournamentServicePrivate, GKTurnBasedService, GKTurnBasedServicePrivate, GKUtilityService, GKUtilityServicePrivate;

@interface GKServiceProxy : NSObject
{
    NSDictionary *_serviceLookup;
    GKThreadsafeDictionary *_pendingRequests;
    unsigned int _serviceGeneration;
    GKDaemonProxy *_baseProxy;
    GKPlayerInternal *_localPlayer;
}

@property (readonly) id<GKAccountService> accountService;
@property (readonly) id<GKAccountServicePrivate> accountServicePrivate;
@property (readonly) id<GKAnalyticsService> analyticsService;
@property (readonly) id<GKAnalyticsServicePrivate> analyticsServicePrivate;
@property (strong) GKDaemonProxy *baseProxy; // @synthesize baseProxy=_baseProxy;
@property (readonly) id<GKBulletinService> bulletinService;
@property (readonly) id<GKBulletinServicePrivate> bulletinServicePrivate;
@property (readonly) id<GKChallengeService> challengeService;
@property (readonly) id<GKChallengeServicePrivate> challengeServicePrivate;
@property (readonly) id<GKFriendService> friendService;
@property (readonly) id<GKFriendServicePrivate> friendServicePrivate;
@property (readonly) id<GKGameService> gameService;
@property (readonly) id<GKGameServicePrivate> gameServicePrivate;
@property (readonly) id<GKGameSessionService> gameSessionService;
@property (readonly) id<GKGameSessionServicePrivate> gameSessionServicePrivate;
@property (readonly) id<GKGameStatService> gameStatService;
@property (readonly) id<GKGameStatServicePrivate> gameStatServicePrivate;
@property (strong) GKPlayerInternal *localPlayer; // @synthesize localPlayer=_localPlayer;
@property (readonly) id<GKMultiplayerService> multiplayerService;
@property (readonly) id<GKMultiplayerServicePrivate> multiplayerServicePrivate;
@property (strong) GKThreadsafeDictionary *pendingRequests; // @synthesize pendingRequests=_pendingRequests;
@property (readonly) id<GKProfileService> profileService;
@property (readonly) id<GKProfileServicePrivate> profileServicePrivate;
@property unsigned int serviceGeneration; // @synthesize serviceGeneration=_serviceGeneration;
@property (strong) NSDictionary *serviceLookup; // @synthesize serviceLookup=_serviceLookup;
@property (readonly) id<GKTournamentService> tournamentService;
@property (readonly) id<GKTournamentServicePrivate> tournamentServicePrivate;
@property (readonly) id<GKTurnBasedService> turnBasedService;
@property (readonly) id<GKTurnBasedServicePrivate> turnBasedServicePrivate;
@property (readonly) id<GKUtilityService> utilityService;
@property (readonly) id<GKUtilityServicePrivate> utilityServicePrivate;

- (void)addService:(id)arg1 forProtocol:(id)arg2 toLookup:(id)arg3;
- (void)buildServiceLookup;
- (void)buildServiceLookupIfNeccessary;
- (void)dealloc;
- (void)forwardInvocation:(id)arg1;
- (id)initWithPlayer:(id)arg1;
- (id)methodSignatureForProtocol:(id)arg1 selector:(SEL)arg2;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)replyToDuplicatesForRequest:(id)arg1 withInvocation:(id)arg2 queue:(id)arg3;
- (id)requestIdentifierForInvocation:(id)arg1;

@end

