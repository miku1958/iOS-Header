//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSString;
@protocol OS_dispatch_queue;

@interface MSASModelBase : NSObject
{
    BOOL _dbWasRecreated;
    struct sqlite3 *_db;
    NSString *_personID;
    struct __CFDictionary *_statements;
    NSObject<OS_dispatch_queue> *_statementQueue;
    NSObject<OS_dispatch_queue> *_dbQueue;
}

@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *dbQueue; // @synthesize dbQueue=_dbQueue;
@property (readonly, nonatomic) struct sqlite3 *dbQueueDB; // @synthesize dbQueueDB=_db;
@property (nonatomic) BOOL dbWasRecreated; // @synthesize dbWasRecreated=_dbWasRecreated;
@property (readonly, nonatomic) NSString *personID; // @synthesize personID=_personID;
@property (strong, nonatomic) NSObject<OS_dispatch_queue> *statementQueue; // @synthesize statementQueue=_statementQueue;
@property (nonatomic) struct __CFDictionary *statements; // @synthesize statements=_statements;

- (void).cxx_destruct;
- (void)beginTransaction;
- (struct sqlite3 *)db;
- (void)dbQueueBeginTransaction;
- (void)dbQueueDeletePersistentValueWithKey:(id)arg1;
- (void)dbQueueEndTransaction;
- (void)dbQueueInitializeDatabasePath:(id)arg1 currentVersion:(int)arg2;
- (id)dbQueuePersistentDataForKey:(id)arg1;
- (id)dbQueuePersistentObjectForKey:(id)arg1;
- (id)dbQueuePersistentStringForKey:(id)arg1;
- (void)dbQueueRollbackTransaction;
- (void)dbQueueSetPersistentData:(id)arg1 forKey:(id)arg2;
- (void)dbQueueSetPersistentObject:(id)arg1 forKey:(id)arg2;
- (void)dbQueueSetPersistentString:(id)arg1 forKey:(id)arg2;
- (BOOL)dbQueueUpgradeFromDatabaseVersion:(int)arg1 currentVersion:(int)arg2;
- (void)deletePersistentValueWithKey:(id)arg1;
- (void)endTransaction;
- (id)initWithPersonID:(id)arg1 databasePath:(id)arg2 currentVersion:(int)arg3;
- (id)persistentObjectForKey:(id)arg1;
- (id)persistentStringForKey:(id)arg1;
- (void)setPersistentObject:(id)arg1 forKey:(id)arg2;
- (void)setPersistentString:(id)arg1 forKey:(id)arg2;
- (void)shutDownForDestruction:(BOOL)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (struct sqlite3_stmt *)statementForString:(id)arg1;

@end

