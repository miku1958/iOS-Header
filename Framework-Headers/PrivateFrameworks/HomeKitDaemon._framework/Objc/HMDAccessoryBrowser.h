//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <HMFoundation/HMFObject.h>

#import <HomeKitDaemon/HAPAccessoryServerBrowserDelegate-Protocol.h>
#import <HomeKitDaemon/HAPAccessoryServerDelegate-Protocol.h>
#import <HomeKitDaemon/HMDAccessoryBrowserHapProtocol-Protocol.h>
#import <HomeKitDaemon/HMDAccessoryBrowserProtocol-Protocol.h>
#import <HomeKitDaemon/HMDAuthServerDelegate-Protocol.h>
#import <HomeKitDaemon/HMDMediaBrowserDelegate-Protocol.h>
#import <HomeKitDaemon/HMDWACAccessoryConfigurationDelegate-Protocol.h>
#import <HomeKitDaemon/HMDWACBrowserDelegate-Protocol.h>
#import <HomeKitDaemon/HMDWatchSystemStateDelegate-Protocol.h>
#import <HomeKitDaemon/HMFLogging-Protocol.h>
#import <HomeKitDaemon/HMFMessageReceiver-Protocol.h>
#import <HomeKitDaemon/HMFTimerDelegate-Protocol.h>

@class HAPAccessoryServerBrowser, HAPAccessoryServerBrowserBTLE, HAPAccessoryServerBrowserIP, HAPAccessoryServerBrowserRelay, HAPWACAccessoryBrowser, HMDAuthServer, HMDDAccessoryServerBrowserDemo, HMDHAP2Storage, HMDHomeManager, HMDMediaBrowser, HMDUnassociatedWACAccessory, HMDWACBrowser, HMFMessageDispatcher, HMFTimer, HMFUnfairLock, NSArray, NSData, NSHashTable, NSMutableArray, NSMutableSet, NSObject, NSString, NSUUID;
@protocol HMDAccessoryBrowserManagerDelegate, OS_dispatch_queue, OS_dispatch_source;

@interface HMDAccessoryBrowser : HMFObject <HAPAccessoryServerBrowserDelegate, HAPAccessoryServerDelegate, HMFMessageReceiver, HMFTimerDelegate, HMDMediaBrowserDelegate, HMDWACBrowserDelegate, HMDWACAccessoryConfigurationDelegate, HMDWatchSystemStateDelegate, HMDAuthServerDelegate, HMFLogging, HMDAccessoryBrowserProtocol, HMDAccessoryBrowserHapProtocol>
{
    HMFUnfairLock *_lock;
    NSMutableSet *_unpairedHAPAccessories;
    NSMutableSet *_unassociatedMediaAccessories;
    NSMutableSet *_deviceSetupMediaAccessories;
    NSMutableSet *_unassociatedWACAccessories;
    NSMutableSet *_mediaAccessoryControlConnections;
    NSMutableSet *_browsingConnections;
    NSHashTable *_activeAssertions;
    BOOL _btlePowerState;
    BOOL _internalDiscoveryRequest;
    BOOL _active;
    HMDUnassociatedWACAccessory *_accessoryPerformingWAC;
    HAPAccessoryServerBrowserRelay *_relayAccessoryServerBrowser;
    id<HMDAccessoryBrowserManagerDelegate> _managerDelegate;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSUUID *_uuid;
    HMFMessageDispatcher *_messageDispatcher;
    unsigned long long _generationCounter;
    HMDHomeManager *_homeManager;
    NSMutableArray *_accessoryServerBrowsers;
    HAPAccessoryServerBrowserIP *_ipAccessoryServerBrowser;
    HAPAccessoryServerBrowserBTLE *_btleAccessoryServerBrowser;
    HAPWACAccessoryBrowser *_wacAccessoryBrowser;
    HAPAccessoryServerBrowser *_hap2AccessoryServerBrowser;
    HMDHAP2Storage *_hap2Storage;
    HMDMediaBrowser *_mediaBrowser;
    HMDWACBrowser *_wacBrowser;
    HMDAuthServer *_authServer;
    HMDDAccessoryServerBrowserDemo *_demoAccessoryServerBrowser;
    HMFTimer *_stopReprovisioningTimer;
    HMFTimer *_stopBrowsingAccessoriesNeedingReprovisioningTimer;
    NSString *_identifierOfAccessoryBeingReprovisioned;
    NSData *_wiFiPSKForAccessoryReprovisioning;
    NSString *_countrycodeForAccessoryReprovisioning;
    NSMutableArray *_pairedAccessories;
    NSObject<OS_dispatch_source> *_reachabilityTimerForBTLE;
    NSMutableArray *_currentlyPairingAccessories;
    NSMutableArray *_currentlyPairingProgressHandlers;
    NSHashTable *_tombstonedHAPAccessoryServers;
    NSHashTable *_discoveringBLEAccessoryServerIdentifiers;
    NSMutableSet *_discoveredAccessoryServerIdentifiers;
}

@property (strong, nonatomic, getter=getActiveWACSession, setter=setActiveWACSession:) HMDUnassociatedWACAccessory *accessoryPerformingWAC; // @synthesize accessoryPerformingWAC=_accessoryPerformingWAC;
@property (strong, nonatomic) NSMutableArray *accessoryServerBrowsers; // @synthesize accessoryServerBrowsers=_accessoryServerBrowsers;
@property (nonatomic) BOOL active; // @synthesize active=_active;
@property (strong, nonatomic) HMDAuthServer *authServer; // @synthesize authServer=_authServer;
@property (strong, nonatomic) HAPAccessoryServerBrowserBTLE *btleAccessoryServerBrowser; // @synthesize btleAccessoryServerBrowser=_btleAccessoryServerBrowser;
@property (nonatomic) BOOL btlePowerState; // @synthesize btlePowerState=_btlePowerState;
@property (strong, nonatomic) NSString *countrycodeForAccessoryReprovisioning; // @synthesize countrycodeForAccessoryReprovisioning=_countrycodeForAccessoryReprovisioning;
@property (strong, nonatomic) NSMutableArray *currentlyPairingAccessories; // @synthesize currentlyPairingAccessories=_currentlyPairingAccessories;
@property (strong, nonatomic) NSMutableArray *currentlyPairingProgressHandlers; // @synthesize currentlyPairingProgressHandlers=_currentlyPairingProgressHandlers;
@property (readonly, copy) NSString *debugDescription;
@property (strong, nonatomic) HMDDAccessoryServerBrowserDemo *demoAccessoryServerBrowser; // @synthesize demoAccessoryServerBrowser=_demoAccessoryServerBrowser;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) NSArray *deviceSetupMediaAccessories;
@property (strong, nonatomic) NSMutableSet *discoveredAccessoryServerIdentifiers; // @synthesize discoveredAccessoryServerIdentifiers=_discoveredAccessoryServerIdentifiers;
@property (readonly, nonatomic) NSHashTable *discoveringBLEAccessoryServerIdentifiers; // @synthesize discoveringBLEAccessoryServerIdentifiers=_discoveringBLEAccessoryServerIdentifiers;
@property (nonatomic) unsigned long long generationCounter; // @synthesize generationCounter=_generationCounter;
@property (strong, nonatomic) HAPAccessoryServerBrowser *hap2AccessoryServerBrowser; // @synthesize hap2AccessoryServerBrowser=_hap2AccessoryServerBrowser;
@property (strong, nonatomic) HMDHAP2Storage *hap2Storage; // @synthesize hap2Storage=_hap2Storage;
@property (readonly) unsigned long long hash;
@property (weak, nonatomic) HMDHomeManager *homeManager; // @synthesize homeManager=_homeManager;
@property (strong, nonatomic) NSString *identifierOfAccessoryBeingReprovisioned; // @synthesize identifierOfAccessoryBeingReprovisioned=_identifierOfAccessoryBeingReprovisioned;
@property BOOL internalDiscoveryRequest; // @synthesize internalDiscoveryRequest=_internalDiscoveryRequest;
@property (strong, nonatomic) HAPAccessoryServerBrowserIP *ipAccessoryServerBrowser; // @synthesize ipAccessoryServerBrowser=_ipAccessoryServerBrowser;
@property (weak, nonatomic) id<HMDAccessoryBrowserManagerDelegate> managerDelegate; // @synthesize managerDelegate=_managerDelegate;
@property (strong, nonatomic) HMDMediaBrowser *mediaBrowser; // @synthesize mediaBrowser=_mediaBrowser;
@property (strong, nonatomic) HMFMessageDispatcher *messageDispatcher; // @synthesize messageDispatcher=_messageDispatcher;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property (readonly, nonatomic) NSUUID *messageTargetUUID;
@property (strong, nonatomic) NSMutableArray *pairedAccessories; // @synthesize pairedAccessories=_pairedAccessories;
@property (strong, nonatomic) NSObject<OS_dispatch_source> *reachabilityTimerForBTLE; // @synthesize reachabilityTimerForBTLE=_reachabilityTimerForBTLE;
@property (readonly, nonatomic) HAPAccessoryServerBrowserRelay *relayAccessoryServerBrowser; // @synthesize relayAccessoryServerBrowser=_relayAccessoryServerBrowser;
@property (strong, nonatomic) HMFTimer *stopBrowsingAccessoriesNeedingReprovisioningTimer; // @synthesize stopBrowsingAccessoriesNeedingReprovisioningTimer=_stopBrowsingAccessoriesNeedingReprovisioningTimer;
@property (strong, nonatomic) HMFTimer *stopReprovisioningTimer; // @synthesize stopReprovisioningTimer=_stopReprovisioningTimer;
@property (readonly) Class superclass;
@property (readonly, nonatomic) NSHashTable *tombstonedHAPAccessoryServers; // @synthesize tombstonedHAPAccessoryServers=_tombstonedHAPAccessoryServers;
@property (readonly, copy) NSArray *unassociatedAccessories;
@property (readonly, nonatomic) NSArray *unassociatedMediaAccessories;
@property (readonly, nonatomic) NSArray *unpairedHAPAccessories;
@property (strong, nonatomic) NSUUID *uuid; // @synthesize uuid=_uuid;
@property (strong, nonatomic) HAPWACAccessoryBrowser *wacAccessoryBrowser; // @synthesize wacAccessoryBrowser=_wacAccessoryBrowser;
@property (strong, nonatomic) HMDWACBrowser *wacBrowser; // @synthesize wacBrowser=_wacBrowser;
@property (strong, nonatomic) NSData *wiFiPSKForAccessoryReprovisioning; // @synthesize wiFiPSKForAccessoryReprovisioning=_wiFiPSKForAccessoryReprovisioning;
@property (strong, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;

+ (id)logCategory;
- (void).cxx_destruct;
- (void)__activate;
- (void)__addBrowsingConnection:(id)arg1;
- (void)__addMediaAccessoryControlObserver:(id)arg1;
- (void)__handleProcessStateChange:(id)arg1;
- (id)__identifiersOfPairedAccessoriesWithTransports:(unsigned long long)arg1;
- (void)__inactivate;
- (BOOL)__isAccessoryBrowsingRequested;
- (BOOL)__isCurrentDevicePrimaryResident;
- (BOOL)__isMediaAccessoryBrowsingRequested;
- (void)__removeBrowsingObserver:(id)arg1 error:(id)arg2;
- (void)__removeMediaAccessoryControlObserver:(id)arg1;
- (void)__resetBrowsingConnections;
- (void)_addReconfirmTimer:(id)arg1 accessoryServer:(id)arg2;
- (void)_addUnpairedAccessoryForServer:(id)arg1;
- (void)_associate:(BOOL)arg1 hapAccessoryWithAdvertisement:(id)arg2;
- (void)_associateMediaAccessoryForServer:(id)arg1;
- (void)_btleAccessoryReachabilityProbeTimer:(BOOL)arg1;
- (void)_callProgressOrErrorOut:(id)arg1 pairingInfo:(id)arg2 accessoryInfo:(id)arg3 unpairedAccessory:(id)arg4 progress:(long long)arg5 certStatus:(unsigned long long)arg6;
- (void)_cancelCurrentlyPairingAccessories:(long long)arg1;
- (void)_cancelPairingWithAccessory:(id)arg1 error:(id)arg2;
- (void)_checkIfPairingWithPairedAccessoryServer:(id)arg1 errorCode:(long long)arg2;
- (void)_continueAfterPPIDValidation:(BOOL)arg1 server:(id)arg2;
- (void)_discoverAccessories:(id)arg1;
- (void)_discoverAccessoryServer:(id)arg1 linkType:(long long)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)_handleAddedAccessory:(id)arg1;
- (void)_handleAddedAccessoryAdvertisements:(id)arg1;
- (void)_handlePairingInterruptedTimeout:(id)arg1 error:(id)arg2;
- (void)_handleRemovedAccessory:(id)arg1;
- (void)_handleRemovedAccessoryAdvertisements:(id)arg1;
- (void)_handleRemovedUnpairedHAPAccessory:(id)arg1;
- (void)_handleRequestFetchNewAccessories:(id)arg1;
- (void)_handleRequestSearchForNewAccessories:(id)arg1;
- (void)_handleSetupCodeAvailable:(id)arg1;
- (void)_handleWACAccessoryFound;
- (BOOL)_isAccessoryServerTombstoned:(id)arg1;
- (BOOL)_isBrowsingAllowed;
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didDiscoverAccessories:(id)arg2 transaction:(id)arg3 error:(id)arg4;
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didStopPairingWithError:(id)arg2;
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didUpdateCategory:(id)arg2;
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didUpdateHasPairings:(BOOL)arg2;
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didUpdateValuesForCharacteristics:(id)arg2 stateNumber:(id)arg3 broadcast:(BOOL)arg4;
- (void)_notifyDelegateOfAccessoryServerNeedingReprovisioning:(id)arg1 error:(id)arg2;
- (void)_notifyDelegateOfDiscoveryFailure:(id)arg1 accessoryServer:(id)arg2 linkType:(long long)arg3;
- (void)_notifyDelegateOfNewPairedAccessoryServer:(id)arg1 stateChanged:(BOOL)arg2 stateNumber:(id)arg3;
- (void)_notifyDelegateOfReachabilityChange:(BOOL)arg1 forAccessoryWithIdentifier:(id)arg2;
- (void)_notifyDelegateOfReachabilityChangeChange:(BOOL)arg1 forBTLEAccessories:(id)arg2;
- (void)_notifyDelegateOfRemovedAccessoryServer:(id)arg1 error:(id)arg2;
- (void)_notifyDelegateOfTombstonedAccessoryServer:(id)arg1;
- (void)_notifyDelegateOfWACCompletionForAccessoryServerWithIdentifier:(id)arg1 error:(id)arg2;
- (void)_notifyManagerOfNewAccessory;
- (void)_pairAccessory:(id)arg1 configuration:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_pairAccessoryWithDescription:(id)arg1 configuration:(id)arg2 progressHandler:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)_pairingInformationForAccessoryIdentifier:(id)arg1;
- (id)_pairingInformationForUnpairedAccessory:(id)arg1;
- (id)_progressHandlerForUnpairedAccessory:(id)arg1;
- (void)_promptForPairingPasswordForServer:(id)arg1 reason:(id)arg2;
- (void)_registerForMessages;
- (void)_registerForNotifications;
- (void)_removeBrowsingConnection:(id)arg1 error:(id)arg2;
- (void)_removeMediaAccessoryControlObserverMatchingConnection:(id)arg1;
- (void)_removePairingInformation:(id)arg1 error:(id)arg2;
- (void)_removePairingInformationForUnpairedAccessory:(id)arg1;
- (void)_reprovisionAccessoryWithIdentifier:(id)arg1 wiFiPSK:(id)arg2 countryCode:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;
- (void)_resurrectAccessoryServer:(id)arg1;
- (void)_sendNewAccessoryData:(id)arg1 messageName:(id)arg2;
- (void)_sendPairingCompletionStatusForServer:(id)arg1 error:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_setBTLEPowerChangeCompletionHandler;
- (BOOL)_shouldAccessoryServerBeTombstoned:(id)arg1;
- (void)_startDiscoveringAccessories;
- (void)_startDiscoveringAccessoriesNeedingReprovisioning;
- (void)_startDiscoveringMediaAccessories;
- (void)_startDiscoveringPairedAccessories;
- (void)_startOrStopAccessoryDiscovery;
- (void)_startPairingInterruptionTimer:(id)arg1;
- (void)_stopBtleAccessoryReachabilityProbeTimer;
- (void)_stopDiscoveringAccessoriesWithForce:(BOOL)arg1 error:(id)arg2;
- (void)_stopDiscoveringMediaAccessories;
- (void)_stopReconfirmTimer:(id)arg1;
- (void)_stopReprovisioningTimerHandler;
- (void)_tombstoneAccessoryServer:(id)arg1;
- (id)_tombstonedAccessoryServerWithServerIdentifier:(id)arg1;
- (id)_unassociatedMediaAccessoryWithIdentifier:(id)arg1;
- (id)_unpairedAccessoryMatchingPairingInfo:(id)arg1;
- (void)_updatePairingRetryTimerForAccessory:(id)arg1 delay:(long long)arg2;
- (void)accessoryServer:(id)arg1 authenticateUUID:(id)arg2 token:(id)arg3;
- (void)accessoryServer:(id)arg1 confirmUUID:(id)arg2 token:(id)arg3;
- (void)accessoryServer:(id)arg1 didDiscoverAccessories:(id)arg2 transaction:(id)arg3 error:(id)arg4;
- (void)accessoryServer:(id)arg1 didFinishAuth:(id)arg2;
- (void)accessoryServer:(id)arg1 didReceiveBadPasswordThrottleAttemptsWithDelay:(long long)arg2;
- (void)accessoryServer:(id)arg1 didStopPairingWithError:(id)arg2;
- (void)accessoryServer:(id)arg1 didUpdateCategory:(id)arg2;
- (void)accessoryServer:(id)arg1 didUpdateHasPairings:(BOOL)arg2;
- (void)accessoryServer:(id)arg1 didUpdateName:(id)arg2;
- (void)accessoryServer:(id)arg1 didUpdateValuesForCharacteristics:(id)arg2 stateNumber:(id)arg3 broadcast:(BOOL)arg4;
- (void)accessoryServer:(id)arg1 isBlockedWithCompletionHandler:(CDUnknownBlockType)arg2;
- (void)accessoryServer:(id)arg1 promptUserForPasswordWithType:(unsigned long long)arg2;
- (void)accessoryServer:(id)arg1 promtDialog:(id)arg2 forNotCertifiedAccessory:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)accessoryServer:(id)arg1 requestUserPermission:(long long)arg2 accessoryInfo:(id)arg3 error:(id)arg4;
- (void)accessoryServer:(id)arg1 updatePairingProgress:(long long)arg2;
- (void)accessoryServer:(id)arg1 validateCert:(id)arg2 model:(id)arg3;
- (void)accessoryServer:(id)arg1 validateUUID:(id)arg2 token:(id)arg3 model:(id)arg4;
- (void)accessoryServerBrowser:(id)arg1 accessoryServer:(id)arg2 didUpdateValuesForCharacteristics:(id)arg3 stateNumber:(id)arg4 broadcast:(BOOL)arg5;
- (void)accessoryServerBrowser:(id)arg1 didChangeReachability:(BOOL)arg2 forAccessoryServerWithIdentifier:(id)arg3;
- (void)accessoryServerBrowser:(id)arg1 didFailToDiscoverAccessoryServerWithIdentifier:(id)arg2;
- (void)accessoryServerBrowser:(id)arg1 didFindAccessoryServer:(id)arg2 stateChanged:(BOOL)arg3 stateNumber:(id)arg4;
- (void)accessoryServerBrowser:(id)arg1 didFindAccessoryServerForReprovisioning:(id)arg2;
- (void)accessoryServerBrowser:(id)arg1 didFindAccessoryServerNeedingReprovisioning:(id)arg2 error:(id)arg3;
- (void)accessoryServerBrowser:(id)arg1 didFinishWACForAccessoryWithIdentifier:(id)arg2 error:(id)arg3;
- (void)accessoryServerBrowser:(id)arg1 didRemoveAccessoryServer:(id)arg2 error:(id)arg3;
- (void)accessoryServerBrowser:(id)arg1 didStartDiscoveringWithError:(id)arg2;
- (void)accessoryServerBrowser:(id)arg1 didStopDiscoveringWithError:(id)arg2;
- (void)accessoryServerBrowser:(id)arg1 getCacheForAccessoryWithIdentifier:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)accessoryServerBrowser:(id)arg1 removeCacheForAccessoryWithIdentifier:(id)arg2;
- (void)accessoryServerBrowser:(id)arg1 saveCache:(id)arg2 serverIdentifier:(id)arg3;
- (void)accessoryServerDidUpdateStateNumber:(id)arg1;
- (void)accessoryServerNeedsOwnershipToken:(id)arg1;
- (id)acessoryBrowserHapProtocol;
- (void)activate:(BOOL)arg1;
- (void)addPairedAccessory:(id)arg1;
- (void)addUnassociatedAccessory:(id)arg1 forDeviceSetup:(BOOL)arg2;
- (void)addUnassociatedMediaAccessory:(id)arg1 forDeviceSetup:(BOOL)arg2;
- (void)addUnassociatedWACAccessory:(id)arg1;
- (void)addUnpairedAccessoryServer:(id)arg1 identifier:(id)arg2;
- (void)addUnpairedHAPAccessory:(id)arg1;
- (BOOL)areThereAnyAssociatedAirPlayAccessories;
- (BOOL)areThereAnyPairedAccessories;
- (BOOL)areThereAnyPairedBTLEAccessories;
- (id)beginActiveAssertionWithReason:(id)arg1;
- (void)browser:(id)arg1 didAddAdvertisements:(id)arg2;
- (void)browser:(id)arg1 didRemoveAdvertisements:(id)arg2;
- (void)browser:(id)arg1 didRemoveSessions:(id)arg2;
- (void)browser:(id)arg1 didUpdateEndpoints:(id)arg2;
- (id)browsingConnections;
- (void)btleAccessoryReachabilityProbeTimer:(BOOL)arg1;
- (void)cancelPairingWithAccessory:(id)arg1 error:(id)arg2;
- (void)cancelPairingWithAccessoryDescription:(id)arg1 error:(id)arg2;
- (void)configureAccessory:(id)arg1 trackState:(BOOL)arg2 connectionPriority:(BOOL)arg3;
- (void)configureDemoBrowserWithDemoAccessories:(id)arg1 finalized:(BOOL)arg2;
- (void)configureDemoBrowserWithTestAccessories:(id)arg1;
- (void)configureWithHomeManager:(id)arg1;
- (void)continueAddingAccessoryToHomeAfterUserConfirmation:(id)arg1 withError:(id)arg2;
- (void)dealloc;
- (void)deregisterPairedAccessory:(id)arg1;
- (void)didFinishActivation:(id)arg1 context:(id)arg2;
- (void)didReceiveUserConsentResponseForSetupAccessoryDetail:(id)arg1 consent:(BOOL)arg2;
- (void)discoverAccessories:(id)arg1;
- (void)discoverAccessoryServer:(id)arg1 linkType:(long long)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (id)discoveredAccessoryServers;
- (id)dumpBrowsingConnections;
- (id)dumpRegisteredPairedAccessories;
- (id)dumpUnassociatedAccessories;
- (void)endActiveAssertion:(id)arg1;
- (void)fetchAccessoryCacheForIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)findAccessoryServerForAccessoryDescription:(id)arg1;
- (void)handleActivationResponse:(id)arg1 context:(id)arg2;
- (void)handleAddedAccessory:(id)arg1;
- (void)handleConnectionDeactivation:(id)arg1;
- (void)handleNewlyPairedAccessory:(id)arg1 linkType:(long long)arg2;
- (void)handlePPIDInfoResponse:(id)arg1 context:(id)arg2 error:(id)arg3;
- (void)handleRemovedAccessory:(id)arg1;
- (void)handleSetupCodeAvailable:(id)arg1;
- (void)handleStartDiscoveringAssociatedMediaAccessories:(BOOL)arg1 forTransport:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)handleXPCConnectionInvalidated:(id)arg1;
- (BOOL)hasClientRequestedMediaAccessoryControl:(id)arg1;
- (void)homeLocationChangeNotification:(id)arg1;
- (id)identifiersOfAssociatedMediaAccessories;
- (id)identifiersOfPairedBTLEAccessories;
- (id)initWithMessageDispatcher:(id)arg1;
- (id)initWithMessageDispatcher:(id)arg1 workQueue:(id)arg2 injectedSettings:(id)arg3;
- (BOOL)isBrowsingAllowed;
- (id)mediaAccessoryControlConnections;
- (id)messageDestination;
- (unsigned long long)numPairedIPAccessories;
- (void)pairAccessory:(id)arg1 configuration:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)pairAccessoryWithDescription:(id)arg1 configuration:(id)arg2 progressHandler:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)pairedAccessoryInformationWithIdentifier:(id)arg1;
- (id)pairedAccessoryInformationWithSetupID:(id)arg1;
- (void)probeReachabilityForBTLEAccessoryServersWithIdentifiers:(id)arg1 onQueue:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)registerPairedAccessory:(id)arg1 transports:(unsigned long long)arg2 setupHash:(id)arg3 delegate:(id)arg4;
- (void)registerProgressHandler:(CDUnknownBlockType)arg1 unpairedAccessoryUUID:(id)arg2;
- (void)removeAccessoryCacheForIdentifier:(id)arg1;
- (void)removePairedAccessory:(id)arg1;
- (void)removePairedAccessoryInfoWithIdentifier:(id)arg1;
- (void)removePairingInformationForAccessoryServer:(id)arg1;
- (void)removeUnassociatedAccessory:(id)arg1;
- (void)removeUnassociatedAccessoryWithIdentifier:(id)arg1;
- (void)removeUnassociatedMediaAccessory:(id)arg1;
- (void)removeUnassociatedWACAccessory:(id)arg1;
- (void)removeUnpairedHAPAccessory:(id)arg1;
- (void)reprovisionAccessoryWithIdentifier:(id)arg1 wiFiPSK:(id)arg2 countryCode:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;
- (void)requestPermissionToAssociateWACAccessory:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)resetConfiguration;
- (void)resetMediaAccessoryControlConnections;
- (void)resetPairedAccessories;
- (void)resurrectAccessoryServer:(id)arg1;
- (void)retrieveCurrentStateForIdentifer:(id)arg1 onQueue:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)saveAccessoryCache:(id)arg1 forIdentifier:(id)arg2;
- (void)setQOS:(long long)arg1;
- (BOOL)shouldEnableReachabilityForAccessoryServer:(id)arg1;
- (void)startDiscoveringAccessories;
- (void)startDiscoveringAccessoriesNeedingReprovisioning;
- (void)startDiscoveringMediaAccessories;
- (void)startDiscoveringPairedAccessories;
- (void)stopDiscoveringAccessories;
- (void)stopDiscoveringMediaAccessories;
- (void)stopTrackingBTLEAccessoriesWithIdentifiers:(id)arg1;
- (void)timerDidFire:(id)arg1;
- (void)tombstoneAccessoryServer:(id)arg1;
- (id)unassociatedAccessoriesForClientRequest:(id)arg1;
- (void)unassociatedWACAccessoryDidFinishAssociation:(id)arg1 withError:(id)arg2;
- (void)unassociatedWACAccessoryDidStartAssociation:(id)arg1;
- (id)unpairedAccessoryForServer:(id)arg1;
- (id)unpairedAccessoryWithServerIdentifier:(id)arg1;
- (id)unpairedAccessoryWithUUID:(id)arg1;
- (id)unpairedHAPAccessoryWithAccessoryDescription:(id)arg1;
- (void)updateBroadcastKeyForIdentifer:(id)arg1 key:(id)arg2 keyUpdatedStateNumber:(id)arg3 keyUpdatedTime:(double)arg4;
- (void)updateStateForIdentifier:(id)arg1 stateNumber:(id)arg2;
- (void)updateUnassociatedWACAccessory:(id)arg1;
- (void)vendorModel:(id *)arg1 vendorManufacturer:(id *)arg2 accessoryInfo:(id)arg3;

@end

