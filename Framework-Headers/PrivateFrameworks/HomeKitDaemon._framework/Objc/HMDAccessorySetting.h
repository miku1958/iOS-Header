//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <HMFoundation/HMFObject.h>

#import <HomeKitDaemon/HMDAccessorySettingProtocol-Protocol.h>
#import <HomeKitDaemon/HMDAccessorySettingUpdateProtocol-Protocol.h>
#import <HomeKitDaemon/HMDSettingBaseProtocol-Protocol.h>
#import <HomeKitDaemon/HMFLogging-Protocol.h>
#import <HomeKitDaemon/NSSecureCoding-Protocol.h>

@class HMDAccessorySettingModel, HMFMessageDispatcher, NSArray, NSMutableArray, NSMutableSet, NSObject, NSString, NSUUID;
@protocol HMFLocking, OS_dispatch_queue;

@interface HMDAccessorySetting : HMFObject <HMFLogging, HMDAccessorySettingUpdateProtocol, HMDAccessorySettingProtocol, NSSecureCoding, HMDSettingBaseProtocol>
{
    id<HMFLocking> _lock;
    NSMutableSet *_inMemoryCachedConstraintRemovals;
    NSMutableArray *_inMemoryCachedConstraints;
    id _value;
    NSString *_name;
    long long _type;
    NSMutableArray *_constraints;
    BOOL _reflected;
    unsigned long long _configurationVersion;
    NSUUID *_parentIdentifier;
    NSString *_keyPath;
    NSUUID *_identifier;
    unsigned long long _properties;
    NSObject<OS_dispatch_queue> *_clientQueue;
    HMFMessageDispatcher *_messageDispatcher;
    HMDAccessorySettingModel *_model;
    NSArray *_models;
}

@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *clientQueue; // @synthesize clientQueue=_clientQueue;
@property (nonatomic) unsigned long long configurationVersion; // @synthesize configurationVersion=_configurationVersion;
@property (readonly, copy) NSArray *constraints;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, copy) NSUUID *identifier; // @synthesize identifier=_identifier;
@property (readonly) BOOL isCollectionType;
@property (readonly) NSString *keyPath; // @synthesize keyPath=_keyPath;
@property (strong, nonatomic) HMFMessageDispatcher *messageDispatcher; // @synthesize messageDispatcher=_messageDispatcher;
@property (readonly) HMDAccessorySettingModel *model; // @synthesize model=_model;
@property (readonly, copy) NSArray *models; // @synthesize models=_models;
@property (readonly, copy) NSString *name;
@property (readonly, copy) NSUUID *parentIdentifier; // @synthesize parentIdentifier=_parentIdentifier;
@property (readonly) unsigned long long properties; // @synthesize properties=_properties;
@property (getter=isReflected) BOOL reflected; // @synthesize reflected=_reflected;
@property (readonly) Class superclass;
@property (readonly) long long type;
@property (readonly, copy) id value;

+ (id)decodedValue:(id)arg1 error:(id *)arg2;
+ (id)logCategory;
+ (id)supportedConstraintClasses;
+ (id)supportedValueClasses;
+ (BOOL)supportsSecureCoding;
- (void).cxx_destruct;
- (void)_mergeConstraintsLocallyWithAdditions:(id)arg1 removals:(id)arg2;
- (id)_modelsForMergeStrategyConstraintsUpdate:(id)arg1;
- (void)_setType:(long long)arg1;
- (void)addConstraint:(id)arg1;
- (void)addConstraintsInMemory:(id)arg1;
- (BOOL)canAddConstraint:(id)arg1 error:(id *)arg2;
- (BOOL)canRemoveConstraint:(id)arg1;
- (BOOL)compareConstraints:(id)arg1;
- (id)constraintWithIdentifier:(id)arg1;
- (id)constraintsForCodingXPC;
- (id)copyIdentical;
- (id)copyReplica;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)counterpartConstraintFor:(id)arg1;
- (void)description:(id)arg1 indent:(id)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)inMemoryConstraintWithIdentifier:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithIdentifier:(id)arg1 name:(id)arg2;
- (id)initWithModel:(id)arg1;
- (BOOL)isConstraintMergeStrategyReflection;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isValid:(id *)arg1;
- (id)logIdentifier;
- (void)mergeConstraintsFromOther:(id)arg1;
- (id)modelsForConstraintsUpdate:(id)arg1;
- (void)removeConstraint:(id)arg1;
- (void)removeConstraintsInMemory:(id)arg1;
- (id)replicatedMissingConstraintsFrom:(id)arg1;
- (void)setConstraints:(id)arg1;
- (void)setGroup:(id)arg1;
- (void)setValue:(id)arg1;
- (BOOL)shouldBlockSettingUpdateFromVersion:(id)arg1 isMultiUserEnabled:(BOOL)arg2;
- (BOOL)shouldEncodeForCoder:(id)arg1;
- (BOOL)shouldTurnOffPersonalRequestsOnLanguageChangeTo:(id)arg1 supportedMultiUserLanguageCodes:(id)arg2 isMultiUserEnabled:(BOOL)arg3;

@end

