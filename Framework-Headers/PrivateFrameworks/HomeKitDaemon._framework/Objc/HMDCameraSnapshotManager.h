//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <HMFoundation/HMFObject.h>

#import <HomeKitDaemon/HMDCameraSnapshotLocalDelegate-Protocol.h>
#import <HomeKitDaemon/HMDCameraSnapshotRemoteRelayReceiverDelegate-Protocol.h>
#import <HomeKitDaemon/HMDCameraSnapshotRemoteRelaySenderDelegate-Protocol.h>
#import <HomeKitDaemon/HMDCameraSnapshotRemoteRelayStreamDelegate-Protocol.h>
#import <HomeKitDaemon/HMDCameraSnapshotRemoteStreamReceiverDelegate-Protocol.h>
#import <HomeKitDaemon/HMDCameraSnapshotRemoteStreamSenderDelegate-Protocol.h>
#import <HomeKitDaemon/HMDCameraStreamSnapshotHandlerDelegate-Protocol.h>
#import <HomeKitDaemon/HMDHomeMessageReceiver-Protocol.h>
#import <HomeKitDaemon/HMFLogging-Protocol.h>
#import <HomeKitDaemon/HMFTimerDelegate-Protocol.h>

@class HMDCameraResidentMessageHandler, HMDCameraSnapshotMonitorEvents, HMDCameraStreamSnapshotHandler, HMDHAPAccessory, HMDNotificationRegistration, HMDSnapshotCacheRequestHandler, HMDSnapshotLocalSession, HMDSnapshotRequestHandler, HMDSnapshotSlotManager, HMFMessageDispatcher, HMFNetMonitor, NSMutableArray, NSMutableDictionary, NSObject, NSSet, NSString, NSUUID;
@protocol OS_dispatch_queue;

@interface HMDCameraSnapshotManager : HMFObject <HMDCameraSnapshotLocalDelegate, HMDCameraSnapshotRemoteRelaySenderDelegate, HMDCameraSnapshotRemoteRelayReceiverDelegate, HMDCameraSnapshotRemoteStreamSenderDelegate, HMDCameraSnapshotRemoteStreamReceiverDelegate, HMDCameraSnapshotRemoteRelayStreamDelegate, HMFTimerDelegate, HMFLogging, HMDCameraStreamSnapshotHandlerDelegate, HMDHomeMessageReceiver>
{
    NSObject<OS_dispatch_queue> *_workQueue;
    HMFMessageDispatcher *_msgDispatcher;
    HMDSnapshotLocalSession *_currentLocalSession;
    NSMutableDictionary *_currentRemoteSessions;
    HMDHAPAccessory *_accessory;
    NSUUID *_uniqueIdentifier;
    NSString *_imageCacheDirectory;
    NSString *_logID;
    HMDCameraSnapshotMonitorEvents *_monitorServicesManager;
    HMDSnapshotRequestHandler *_snapshotRequestHandler;
    HMDSnapshotCacheRequestHandler *_snapshotCacheRequestHandler;
    HMDSnapshotSlotManager *_snapshotSlotManager;
    HMDCameraStreamSnapshotHandler *_streamSnapshotHandler;
    NSMutableArray *_pendingSnapshotRequestDuringStreamSetup;
    NSMutableArray *_pendingRemoteSnapshotRequestDuringStreamSetup;
    HMDNotificationRegistration *_notificationRegistration;
    HMFNetMonitor *_networkMonitor;
    HMDCameraResidentMessageHandler *_residentMessageHandler;
}

@property (readonly, weak, nonatomic) HMDHAPAccessory *accessory; // @synthesize accessory=_accessory;
@property (strong, nonatomic) HMDSnapshotLocalSession *currentLocalSession; // @synthesize currentLocalSession=_currentLocalSession;
@property (strong, nonatomic) NSMutableDictionary *currentRemoteSessions; // @synthesize currentRemoteSessions=_currentRemoteSessions;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) NSString *imageCacheDirectory; // @synthesize imageCacheDirectory=_imageCacheDirectory;
@property (readonly, nonatomic) NSString *logID; // @synthesize logID=_logID;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property (readonly, copy) NSSet *messageReceiverChildren;
@property (readonly, nonatomic) NSUUID *messageTargetUUID;
@property (readonly, nonatomic) HMDCameraSnapshotMonitorEvents *monitorServicesManager; // @synthesize monitorServicesManager=_monitorServicesManager;
@property (strong, nonatomic) HMFMessageDispatcher *msgDispatcher; // @synthesize msgDispatcher=_msgDispatcher;
@property (strong, nonatomic) HMFNetMonitor *networkMonitor; // @synthesize networkMonitor=_networkMonitor;
@property (readonly, nonatomic) HMDNotificationRegistration *notificationRegistration; // @synthesize notificationRegistration=_notificationRegistration;
@property (readonly, nonatomic) NSMutableArray *pendingRemoteSnapshotRequestDuringStreamSetup; // @synthesize pendingRemoteSnapshotRequestDuringStreamSetup=_pendingRemoteSnapshotRequestDuringStreamSetup;
@property (readonly, nonatomic) NSMutableArray *pendingSnapshotRequestDuringStreamSetup; // @synthesize pendingSnapshotRequestDuringStreamSetup=_pendingSnapshotRequestDuringStreamSetup;
@property (readonly, nonatomic) HMDCameraResidentMessageHandler *residentMessageHandler; // @synthesize residentMessageHandler=_residentMessageHandler;
@property (readonly, nonatomic) HMDSnapshotCacheRequestHandler *snapshotCacheRequestHandler; // @synthesize snapshotCacheRequestHandler=_snapshotCacheRequestHandler;
@property (readonly, nonatomic) HMDSnapshotRequestHandler *snapshotRequestHandler; // @synthesize snapshotRequestHandler=_snapshotRequestHandler;
@property (readonly, nonatomic) HMDSnapshotSlotManager *snapshotSlotManager; // @synthesize snapshotSlotManager=_snapshotSlotManager;
@property (readonly, nonatomic) HMDCameraStreamSnapshotHandler *streamSnapshotHandler; // @synthesize streamSnapshotHandler=_streamSnapshotHandler;
@property (readonly) Class superclass;
@property (readonly, nonatomic) NSUUID *uniqueIdentifier; // @synthesize uniqueIdentifier=_uniqueIdentifier;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;

+ (void)auditSnapshotDirectories:(id)arg1;
+ (BOOL)hasMessageReceiverChildren;
+ (id)logCategory;
- (void).cxx_destruct;
- (id)_createSnapshotSessionIDWithMessage:(id)arg1 error:(id *)arg2;
- (void)_endSession:(id)arg1 error:(id)arg2;
- (id)_findSessionWithID:(id)arg1;
- (void)_handleCreateSnapshotFromBulletinContext:(id)arg1;
- (void)_handleReleaseSnapshot:(id)arg1;
- (void)_handleSnapshotReceived:(id)arg1;
- (void)_handleSnapshotRemoteRequest:(id)arg1;
- (void)_handleSnapshotRequest:(id)arg1;
- (void)_handleSnapshotSendFailure:(id)arg1;
- (void)_issueGetSnapshot:(id)arg1;
- (void)_removeAllPendingRequests:(id)arg1;
- (void)_sendRemoteResponse:(id)arg1 sessionID:(id)arg2;
- (void)_sendResponse:(id)arg1 error:(id)arg2 sessionID:(id)arg3;
- (void)_sendSnapshotRequestLocal:(id)arg1 snapshotSessionID:(id)arg2;
- (void)_sendSnapshotRequestRelayInitiator:(id)arg1 snapshotSessionID:(id)arg2;
- (void)_sendSnapshotRequestRelayReceiver:(id)arg1 snapshotSessionID:(id)arg2;
- (void)_sendSnapshotRequestRelayStream:(id)arg1 snapshotSessionID:(id)arg2;
- (void)_sendSnapshotRequestStreamInitiator:(id)arg1 snapshotSessionID:(id)arg2;
- (void)_sendSnapshotRequestStreamReceiver:(id)arg1 snapshotSessionID:(id)arg2;
- (void)_sendStreamSnapshotRequest:(id)arg1 snapshotSessionID:(id)arg2;
- (void)_startedGettingImageFor:(id)arg1 error:(id)arg2;
- (void)dealloc;
- (id)getMostRecentSnapshotRequest;
- (void)handleAccessoryIsNotReachable:(id)arg1;
- (void)handleCameraSettingsDidChangeNotification:(id)arg1;
- (id)initWithAccessory:(id)arg1 workQueue:(id)arg2 streamSnapshotHandler:(id)arg3 uniqueIdentifier:(id)arg4 logID:(id)arg5 msgDispatcher:(id)arg6 networkMonitor:(id)arg7 residentMessageHandler:(id)arg8;
- (id)logIdentifier;
- (void)registerForMessages;
- (void)releaseSnapshot:(id)arg1;
- (void)snapshotLocal:(id)arg1 didSaveSnapshotFile:(id)arg2 error:(id)arg3 sessionID:(id)arg4;
- (void)snapshotRelayReceiver:(id)arg1 didSaveSnapshotFile:(id)arg2 error:(id)arg3 sessionID:(id)arg4;
- (void)snapshotRelayReceiver:(id)arg1 didStartGettingImage:(id)arg2 sessionID:(id)arg3;
- (void)snapshotRelaySender:(id)arg1 didCompleteSendImage:(id)arg2 sessionID:(id)arg3;
- (void)snapshotRelaySender:(id)arg1 didStartCaptureImage:(id)arg2 sessionID:(id)arg3;
- (void)snapshotRelayStream:(id)arg1 didCompleteSendImage:(id)arg2 sessionID:(id)arg3;
- (void)snapshotRelayStream:(id)arg1 didStartCaptureImage:(id)arg2 sessionID:(id)arg3;
- (void)snapshotStreamReceiver:(id)arg1 didSaveSnapshotFile:(id)arg2 error:(id)arg3 sessionID:(id)arg4;
- (void)snapshotStreamReceiver:(id)arg1 didStartGettingImage:(id)arg2 sessionID:(id)arg3;
- (void)snapshotStreamSender:(id)arg1 didCompleteSendImage:(id)arg2 sessionID:(id)arg3;
- (void)snapshotStreamSender:(id)arg1 didStartCaptureImage:(id)arg2 sessionID:(id)arg3;
- (void)streamSnapshotHandler:(id)arg1 didChangeStreamSetupInProgress:(BOOL)arg2;
- (void)streamSnapshotHandler:(id)arg1 didGetLastSnapshot:(id)arg2;
- (void)streamSnapshotHandler:(id)arg1 didGetNewSnapshot:(id)arg2;
- (void)takeSnapshot:(id)arg1;
- (void)timerDidFire:(id)arg1;

@end

