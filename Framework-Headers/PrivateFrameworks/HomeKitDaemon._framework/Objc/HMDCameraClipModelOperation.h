//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <HMFoundation/HMFOperation.h>

#import <HomeKitDaemon/HMFLogging-Protocol.h>
#import <HomeKitDaemon/HMFObject-Protocol.h>

@class HMBLocalZone, HMCameraClipEncryptionManager, HMDCameraRecordingUploadOperationEvent, NSArray, NSDate, NSString, NSUUID;
@protocol HMDCameraRecordingUploaderDataSource;

@interface HMDCameraClipModelOperation : HMFOperation <HMFObject, HMFLogging>
{
    NSString *_logIdentifier;
    NSUUID *_clipModelID;
    HMBLocalZone *_localZone;
    HMCameraClipEncryptionManager *_encryptionManager;
    HMDCameraRecordingUploadOperationEvent *_uploadOperationEvent;
    NSDate *_createDate;
    NSDate *_startDate;
    NSDate *_endDate;
    id<HMDCameraRecordingUploaderDataSource> _dataSource;
}

@property (readonly, copy, nonatomic) NSArray *attributeDescriptions;
@property (readonly) NSUUID *clipModelID; // @synthesize clipModelID=_clipModelID;
@property (readonly) NSDate *createDate; // @synthesize createDate=_createDate;
@property (readonly) id<HMDCameraRecordingUploaderDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (strong) HMCameraClipEncryptionManager *encryptionManager; // @synthesize encryptionManager=_encryptionManager;
@property (strong) NSDate *endDate; // @synthesize endDate=_endDate;
@property (readonly) unsigned long long hash;
@property (readonly) HMBLocalZone *localZone; // @synthesize localZone=_localZone;
@property (readonly, copy) NSString *logIdentifier; // @synthesize logIdentifier=_logIdentifier;
@property (readonly, copy) NSString *privateDescription;
@property (readonly, copy) NSString *propertyDescription;
@property (readonly) double runTime;
@property (readonly, copy) NSString *shortDescription;
@property (strong) NSDate *startDate; // @synthesize startDate=_startDate;
@property (readonly) Class superclass;
@property (readonly) HMDCameraRecordingUploadOperationEvent *uploadOperationEvent; // @synthesize uploadOperationEvent=_uploadOperationEvent;

+ (double)clipModelOperationTimeout;
+ (id)logCategory;
+ (id)shortDescription;
- (void).cxx_destruct;
- (void)_markEndDateAndSubmitUploadOperationEvent;
- (void)cancelWithError:(id)arg1;
- (id)fetchClipModel;
- (void)finish;
- (id)initWithClipModelID:(id)arg1 localZone:(id)arg2 encryptionManager:(id)arg3 dataSource:(id)arg4;
- (void)main;
- (id)updateClipModel:(id)arg1;
- (id)updateClipModel:(id)arg1 shouldPerformDelegateCallbacks:(BOOL)arg2;

@end

