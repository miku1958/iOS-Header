//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <HMFoundation/HMFObject.h>

#import <HomeKitDaemon/NSURLSessionDelegate-Protocol.h>

@class NSDictionary, NSObject, NSString, NSURL, NSURLSession;
@protocol HMFLocking, OS_dispatch_queue;

@interface HMDServerBag : HMFObject <NSURLSessionDelegate>
{
    id<HMFLocking> _lock;
    BOOL _refreshing;
    NSDictionary *_dictionaryRepresentation;
    unsigned long long _environment;
    NSURL *_url;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSURLSession *_urlSession;
}

@property (readonly, nonatomic) double accessoryReportTimeout;
@property (readonly, copy, nonatomic) NSURL *accessoryReportURL;
@property (readonly, copy, nonatomic) NSURL *activationCertificateHostnameURL;
@property (readonly, copy, nonatomic) NSURL *activationHostnameURL;
@property (readonly, nonatomic, getter=isControlCenterEnabled) BOOL controlCenterEnabled;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (copy, nonatomic) NSDictionary *dictionaryRepresentation; // @synthesize dictionaryRepresentation=_dictionaryRepresentation;
@property (readonly, nonatomic) unsigned long long environment; // @synthesize environment=_environment;
@property (readonly) unsigned long long hash;
@property (nonatomic) BOOL refreshing; // @synthesize refreshing=_refreshing;
@property (readonly) Class superclass;
@property (readonly, nonatomic) NSURL *url; // @synthesize url=_url;
@property (readonly, nonatomic) NSURLSession *urlSession; // @synthesize urlSession=_urlSession;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;

+ (id)activationCertificateHostnameURLOverride;
+ (id)activationHostnameURLOverride;
+ (id)defaultServerBag;
+ (void)initialize;
+ (id)serverBagURLForEnvironment:(unsigned long long)arg1;
- (void).cxx_destruct;
- (void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_handleServerBagResponseData:(id)arg1 response:(id)arg2 error:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_loadDefaultBag;
- (void)_synchronizeWithCompletion:(CDUnknownBlockType)arg1;
- (id)init;
- (id)initWithEnvironment:(unsigned long long)arg1;

@end

