//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <HomeKitDaemon/HMDDataStreamBulkSendSession-Protocol.h>
#import <HomeKitDaemon/HMFLogging-Protocol.h>

@class HMDDataStreamBulkSendProtocol, NSError, NSMutableArray, NSNumber, NSString;
@protocol OS_dispatch_queue;

@interface HMDDataStreamBulkSendSession : NSObject <HMFLogging, HMDDataStreamBulkSendSession>
{
    BOOL _isClosed;
    BOOL _hasReceivedEof;
    HMDDataStreamBulkSendProtocol *_bulkSendProtocol;
    NSNumber *_sessionIdentifier;
    NSObject<OS_dispatch_queue> *_queue;
    CDUnknownBlockType _activeReadHandler;
    NSMutableArray *_pendingReads;
    NSError *_pendingError;
    NSString *_logIdentifier;
}

@property (readonly, getter=isActive) BOOL active;
@property (copy, nonatomic) CDUnknownBlockType activeReadHandler; // @synthesize activeReadHandler=_activeReadHandler;
@property (readonly, weak, nonatomic) HMDDataStreamBulkSendProtocol *bulkSendProtocol; // @synthesize bulkSendProtocol=_bulkSendProtocol;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) NSString *logIdentifier; // @synthesize logIdentifier=_logIdentifier;
@property (strong, nonatomic) NSError *pendingError; // @synthesize pendingError=_pendingError;
@property (strong, nonatomic) NSMutableArray *pendingReads; // @synthesize pendingReads=_pendingReads;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property (readonly, nonatomic) NSNumber *sessionIdentifier; // @synthesize sessionIdentifier=_sessionIdentifier;
@property (readonly) Class superclass;

+ (id)logCategory;
- (void).cxx_destruct;
- (void)_closeSession;
- (void)_pumpReadDataIfPossible;
- (void)asyncHandleIncomingPackets:(id)arg1 isEof:(BOOL)arg2;
- (void)asyncHandleRemoteCloseWithError:(id)arg1;
- (void)cancelWithReason:(unsigned short)arg1;
- (void)dealloc;
- (id)initWithProtocol:(id)arg1 sessionIdentifier:(id)arg2 queue:(id)arg3 logIdentifier:(id)arg4;
- (void)read:(CDUnknownBlockType)arg1;

@end

