//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <HMFoundation/HMFObject.h>

#import <HomeKitDaemon/HMDCameraClipManagerDelegate-Protocol.h>
#import <HomeKitDaemon/HMDCameraRecordingSessionDelegate-Protocol.h>
#import <HomeKitDaemon/HMDCameraRecordingSessionNotificationTriggerDelegate-Protocol.h>
#import <HomeKitDaemon/HMDCameraRecordingSettingsControlDelegate-Protocol.h>
#import <HomeKitDaemon/HMDDevicePreferenceDataSource-Protocol.h>
#import <HomeKitDaemon/HMDHomeMessageReceiver-Protocol.h>
#import <HomeKitDaemon/HMFLogging-Protocol.h>
#import <HomeKitDaemon/HMFTimerDelegate-Protocol.h>

@class HMDCameraProfile, HMDCameraRecordingBulkSendDataReadEvent, HMDCameraRecordingBulkSendSessionInitiator, HMDCameraRecordingManagerFactory, HMDCameraRecordingResidentElector, HMDCameraRecordingSession, HMDCameraRecordingSessionNotificationTrigger, HMDCameraRecordingSettingsControl, HMDHAPAccessory, HMDStreamDataChunkAssembler, HMFMessageDispatcher, HMFTimer, NSDictionary, NSMutableSet, NSObject, NSSet, NSString, NSUUID;
@protocol HMDDataStreamBulkSendSession, OS_dispatch_queue;

@interface HMDCameraRecordingManager : HMFObject <HMDCameraRecordingSessionNotificationTriggerDelegate, HMDCameraRecordingSettingsControlDelegate, HMDDevicePreferenceDataSource, HMFLogging, HMDCameraRecordingSessionDelegate, HMDHomeMessageReceiver, HMDCameraClipManagerDelegate, HMFTimerDelegate>
{
    BOOL _motionActive;
    NSString *_logIdentifier;
    NSUUID *_messageTargetUUID;
    HMDStreamDataChunkAssembler *_dataChunkAssembler;
    HMDCameraRecordingResidentElector *_recordingResidentElector;
    unsigned long long _failedSessionRetryCount;
    unsigned long long _failedSessionMaxRetryCount;
    HMDCameraRecordingBulkSendDataReadEvent *_readEvent;
    NSObject<OS_dispatch_queue> *_workQueue;
    HMDCameraRecordingSessionNotificationTrigger *_notificationTrigger;
    HMDCameraRecordingSettingsControl *_recordingSettingsControl;
    HMDCameraRecordingManagerFactory *_factory;
    HMFMessageDispatcher *_msgDispatcher;
    HMDHAPAccessory *_accessory;
    HMDCameraProfile *_camera;
    id<HMDDataStreamBulkSendSession> _currentBulkSendSession;
    HMDCameraRecordingBulkSendSessionInitiator *_bulkSendSessionInitiator;
    HMFTimer *_readCallbackTimer;
    HMDCameraRecordingSession *_currentRecordingSession;
    NSMutableSet *_activeRecordingSessions;
}

@property (readonly, weak) HMDHAPAccessory *accessory; // @synthesize accessory=_accessory;
@property (readonly) NSMutableSet *activeRecordingSessions; // @synthesize activeRecordingSessions=_activeRecordingSessions;
@property (readonly) HMDCameraRecordingBulkSendSessionInitiator *bulkSendSessionInitiator; // @synthesize bulkSendSessionInitiator=_bulkSendSessionInitiator;
@property (readonly, weak) HMDCameraProfile *camera; // @synthesize camera=_camera;
@property (strong) id<HMDDataStreamBulkSendSession> currentBulkSendSession; // @synthesize currentBulkSendSession=_currentBulkSendSession;
@property (strong) HMDCameraRecordingSession *currentRecordingSession; // @synthesize currentRecordingSession=_currentRecordingSession;
@property (strong) HMDStreamDataChunkAssembler *dataChunkAssembler; // @synthesize dataChunkAssembler=_dataChunkAssembler;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) HMDCameraRecordingManagerFactory *factory; // @synthesize factory=_factory;
@property (readonly) unsigned long long failedSessionMaxRetryCount; // @synthesize failedSessionMaxRetryCount=_failedSessionMaxRetryCount;
@property unsigned long long failedSessionRetryCount; // @synthesize failedSessionRetryCount=_failedSessionRetryCount;
@property (readonly) unsigned long long hash;
@property (readonly) NSDictionary *homePresenceByPairingIdentity;
@property (readonly) NSString *logIdentifier; // @synthesize logIdentifier=_logIdentifier;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property (readonly, copy) NSSet *messageReceiverChildren;
@property (readonly, nonatomic) NSUUID *messageTargetUUID; // @synthesize messageTargetUUID=_messageTargetUUID;
@property (getter=isMotionActive) BOOL motionActive; // @synthesize motionActive=_motionActive;
@property (readonly) HMFMessageDispatcher *msgDispatcher; // @synthesize msgDispatcher=_msgDispatcher;
@property (readonly) HMDCameraRecordingSessionNotificationTrigger *notificationTrigger; // @synthesize notificationTrigger=_notificationTrigger;
@property (strong) HMFTimer *readCallbackTimer; // @synthesize readCallbackTimer=_readCallbackTimer;
@property (strong) HMDCameraRecordingBulkSendDataReadEvent *readEvent; // @synthesize readEvent=_readEvent;
@property (readonly) HMDCameraRecordingResidentElector *recordingResidentElector; // @synthesize recordingResidentElector=_recordingResidentElector;
@property (readonly) HMDCameraRecordingSettingsControl *recordingSettingsControl; // @synthesize recordingSettingsControl=_recordingSettingsControl;
@property (readonly) Class superclass;
@property (readonly) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;

+ (BOOL)hasMessageReceiverChildren;
+ (id)logCategory;
- (void).cxx_destruct;
- (void)_bulkSendReadDidReceiveStreamDataChunk:(id)arg1;
- (void)_closeCurrentSessionsWithReason:(unsigned short)arg1;
- (unsigned short)_closeEventReasonForRecordingSessionError:(id)arg1;
- (void)_coordinateRecordingSessionForAccessory:(unsigned long long)arg1;
- (void)_createRecordingSessionForTrigger:(unsigned long long)arg1 presenceByPairingIdentity:(id)arg2;
- (void)_forwardRecordingSession:(unsigned long long)arg1 withSortedDevices:(id)arg2 withRetries:(long long)arg3;
- (void)_handleBulkSendSessionCreated:(id)arg1;
- (void)_handleDataReceived:(id)arg1;
- (void)_readDataForCurrentSession;
- (void)_resetCurrentRecordingSession:(id)arg1;
- (void)_start;
- (void)_startBulkSendDataReadEvent;
- (void)_startCameraRecordingSession:(id)arg1;
- (void)_startCameraRecordingSessionForTrigger:(unsigned long long)arg1;
- (void)_startRecordingSessionForTrigger:(unsigned long long)arg1 presenceByPairingIdentity:(id)arg2 completionCallback:(CDUnknownBlockType)arg3;
- (void)_submitReadEventWithStatus:(unsigned short)arg1;
- (void)clipManagerDidBecomeAvailable:(id)arg1;
- (void)clipManagerDidBecomeUnavailable:(id)arg1;
- (void)closeSession:(id)arg1 withError:(id)arg2;
- (void)dealloc;
- (void)handleCameraSettingsDidChangeNotification:(id)arg1;
- (void)handleStartRecordingSessionRequest:(id)arg1;
- (id)initWithCamera:(id)arg1 recordingManagementService:(id)arg2;
- (id)initWithCamera:(id)arg1 recordingManagementService:(id)arg2 factory:(id)arg3;
- (void)notificationTrigger:(id)arg1 didObserveTriggerType:(unsigned long long)arg2 changeToActive:(BOOL)arg3;
- (void)recordingSettingsControlDidConfigure:(id)arg1;
- (void)start;
- (BOOL)supportsDeviceWithCapabilities:(id)arg1;
- (void)timerDidFire:(id)arg1;

@end

