//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <HMFoundation/HMFObject.h>

#import <HomeKitDaemon/HMFLogging-Protocol.h>

@class HMBLocalZone, HMCameraClipEncryptionManager, NSData, NSMutableArray, NSObject, NSString, NSUUID;
@protocol HMDCameraRecordingUploaderDelegate, HMDCameraRecordingUploaderFactory, OS_dispatch_queue;

@interface HMDCameraRecordingUploader : HMFObject <HMFLogging>
{
    unsigned long long _activeUploadOperationCount;
    NSData *_videoInitData;
    double _targetFragmentDuration;
    id<HMDCameraRecordingUploaderDelegate> _delegate;
    NSUUID *_clipModelID;
    HMBLocalZone *_localZone;
    id<HMDCameraRecordingUploaderFactory> _factory;
    HMCameraClipEncryptionManager *_encryptionManager;
    NSObject<OS_dispatch_queue> *_workQueue;
    double _frameTimeOffset;
    NSMutableArray *_operations;
    double _totalClipDuration;
}

@property (readonly) unsigned long long activeUploadOperationCount; // @synthesize activeUploadOperationCount=_activeUploadOperationCount;
@property (strong) NSUUID *clipModelID; // @synthesize clipModelID=_clipModelID;
@property (readonly, copy) NSString *debugDescription;
@property (weak) id<HMDCameraRecordingUploaderDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (strong) HMCameraClipEncryptionManager *encryptionManager; // @synthesize encryptionManager=_encryptionManager;
@property (readonly) id<HMDCameraRecordingUploaderFactory> factory; // @synthesize factory=_factory;
@property double frameTimeOffset; // @synthesize frameTimeOffset=_frameTimeOffset;
@property (readonly) unsigned long long hash;
@property (readonly) HMBLocalZone *localZone; // @synthesize localZone=_localZone;
@property (readonly) NSMutableArray *operations; // @synthesize operations=_operations;
@property (readonly) Class superclass;
@property double targetFragmentDuration; // @synthesize targetFragmentDuration=_targetFragmentDuration;
@property double totalClipDuration; // @synthesize totalClipDuration=_totalClipDuration;
@property (copy) NSData *videoInitData; // @synthesize videoInitData=_videoInitData;
@property (readonly) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;

+ (id)logCategory;
- (void).cxx_destruct;
- (id)_addOperation:(id)arg1 finalizeClipOnError:(BOOL)arg2;
- (void)_cancelOperationsForCurrentClip;
- (void)_createClipModel:(id)arg1;
- (id)_finish;
- (void)_operationCompleted:(id)arg1 finalizeOnError:(BOOL)arg2 promise:(id)arg3;
- (void)_startNextOperationWithLastOperationWasFinalized:(BOOL)arg1;
- (id)addNotificationWithReason:(unsigned long long)arg1 confidenceLevel:(unsigned long long)arg2 dateOfOccurrence:(id)arg3 heroFrameData:(id)arg4 offset:(double)arg5 homePresenceByPairingIdentity:(id)arg6;
- (id)addPosterFrameData:(id)arg1 offset:(double)arg2 width:(unsigned long long)arg3 height:(unsigned long long)arg4;
- (id)addVideoInitData:(id)arg1;
- (id)addVideoSegmentData:(id)arg1 startDate:(id)arg2 duration:(double)arg3;
- (id)errorForCancel;
- (BOOL)errorIsCancelled:(id)arg1;
- (id)finish;
- (id)initWithLocalZone:(id)arg1 workQueue:(id)arg2 videoInitData:(id)arg3 targetFragmentDuration:(double)arg4;
- (id)initWithLocalZone:(id)arg1 workQueue:(id)arg2 videoInitData:(id)arg3 targetFragmentDuration:(double)arg4 factory:(id)arg5;

@end

