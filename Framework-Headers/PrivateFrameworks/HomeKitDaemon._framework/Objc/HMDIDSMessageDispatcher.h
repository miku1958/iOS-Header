//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <HomeKitDaemon/HMMessageDispatcher.h>

@class HMDAdminEnforcementMessageFilter, HMDHomeManager, HMDIDSMessageTransport, HMDIdentityRegistry, HMDMessageFilterChain, HMDNotificationRelay, HMDSecureSessionNotifications, NSArray, NSMutableDictionary, NSSet;

@interface HMDIDSMessageDispatcher : HMMessageDispatcher
{
    HMMessageDispatcher *_recvDispatcher;
    NSMutableDictionary *_remoteGateways;
    HMDMessageFilterChain *_msgFilterChain;
    HMDAdminEnforcementMessageFilter *_adminMsgFilter;
    NSMutableDictionary *_activeClientSecureSessions;
    NSMutableDictionary *_activeServerSecureSessions;
    HMDIdentityRegistry *_identityRegistry;
    HMDNotificationRelay *_notificationRelay;
    HMMessageDispatcher *_notificationDispatcher;
    HMDIDSMessageTransport *_idsProxyTransport;
    HMDHomeManager *_homeManager;
    NSMutableDictionary *_currentHomeConfigurations;
    HMDSecureSessionNotifications *_sessionNotifications;
}

@property (readonly, nonatomic, getter=isAccountActive) BOOL accountActive;
@property (strong, nonatomic) NSMutableDictionary *activeClientSecureSessions; // @synthesize activeClientSecureSessions=_activeClientSecureSessions;
@property (strong, nonatomic) NSMutableDictionary *activeServerSecureSessions; // @synthesize activeServerSecureSessions=_activeServerSecureSessions;
@property (strong, nonatomic) HMDAdminEnforcementMessageFilter *adminMsgFilter; // @synthesize adminMsgFilter=_adminMsgFilter;
@property (strong, nonatomic) NSMutableDictionary *currentHomeConfigurations; // @synthesize currentHomeConfigurations=_currentHomeConfigurations;
@property (weak, nonatomic) HMDHomeManager *homeManager; // @synthesize homeManager=_homeManager;
@property (strong, nonatomic) HMDIdentityRegistry *identityRegistry; // @synthesize identityRegistry=_identityRegistry;
@property (weak, nonatomic) HMDIDSMessageTransport *idsProxyTransport; // @synthesize idsProxyTransport=_idsProxyTransport;
@property (strong, nonatomic) HMDMessageFilterChain *msgFilterChain; // @synthesize msgFilterChain=_msgFilterChain;
@property (strong, nonatomic) HMMessageDispatcher *notificationDispatcher; // @synthesize notificationDispatcher=_notificationDispatcher;
@property (strong, nonatomic) HMDNotificationRelay *notificationRelay; // @synthesize notificationRelay=_notificationRelay;
@property (readonly, nonatomic) NSSet *pairedWatchAddresses;
@property (readonly, nonatomic) NSArray *reachableCompanionDevices;
@property (readonly, nonatomic) NSArray *reachableWatchDevices;
@property (strong, nonatomic) HMMessageDispatcher *recvDispatcher; // @synthesize recvDispatcher=_recvDispatcher;
@property (strong, nonatomic) NSMutableDictionary *remoteGateways; // @synthesize remoteGateways=_remoteGateways;
@property (readonly, nonatomic) NSArray *residentDevices;
@property (strong, nonatomic) HMDSecureSessionNotifications *sessionNotifications; // @synthesize sessionNotifications=_sessionNotifications;
@property (readonly, nonatomic) NSArray *transientDevices;

+ (BOOL)isWhitelistedLocalMessage:(id)arg1;
- (void).cxx_destruct;
- (BOOL)_checkAuthorizationForMessage:(id)arg1 errorReason:(id *)arg2;
- (BOOL)_checkTransportProtocol;
- (void)_handleElectDeviceForIDSSession:(id)arg1;
- (void)_handleElectDeviceForUserResponse:(id)arg1 error:(id)arg2 responseQueue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (BOOL)_handleInternalIDSMessage:(id)arg1 fromID:(id)arg2;
- (void)_handleSecureClientMessage:(id)arg1 fromID:(id)arg2;
- (void)_handleSecureServerMessage:(id)arg1 fromID:(id)arg2;
- (BOOL)_haveAllCapabilities:(id)arg1;
- (id)_pairedCompanionDevices;
- (id)_pairedWatchAddresses;
- (id)_reachableCompanionDevices;
- (id)_reachableWatchDevices;
- (void)_sendMessage:(id)arg1 target:(id)arg2 destination:(id)arg3 responseTimeout:(double)arg4 responseQueue:(id)arg5 responseHandler:(CDUnknownBlockType)arg6;
- (void)_sendSecureMessage:(id)arg1 target:(id)arg2 destination:(id)arg3 responseQueue:(id)arg4 responseHandler:(CDUnknownBlockType)arg5;
- (void)_setRemoteAccessPeer:(id)arg1 forHome:(id)arg2 sendNotification:(BOOL)arg3;
- (BOOL)_watchCompanionCommunication:(id)arg1 isConnected:(BOOL *)arg2;
- (void)configureHomeManager:(id)arg1;
- (void)configureNotificationDispatcher:(id)arg1;
- (void)deregisterForMessage:(id)arg1 receiver:(id)arg2;
- (void)deregisterReceiver:(id)arg1;
- (void)disableRemoteSessionForAddresses:(id)arg1;
- (void)dispatchMessage:(id)arg1 target:(id)arg2;
- (void)electDeviceForUser:(id)arg1 destination:(id)arg2 deviceCapabilities:(id)arg3 responseTimeout:(double)arg4 responseQueue:(id)arg5 responseHandler:(CDUnknownBlockType)arg6;
- (id)initWithIDSTransport:(id)arg1 idsProxyTransport:(id)arg2 messageFilterChain:(id)arg3 identityRegistry:(id)arg4 notificationRelayDispatcher:(id)arg5;
- (id)pairedCompanionDevices;
- (id)prepareAnswerForRequestedCapabilities:(id)arg1;
- (void)redispatchMessage:(id)arg1 target:(id)arg2 responseQueue:(id)arg3 toResidentForHomeWithUUID:(id)arg4;
- (void)registerForMessage:(id)arg1 receiver:(id)arg2 messageHandler:(CDUnknownBlockType)arg3;
- (void)removeHome:(id)arg1;
- (void)sendMessage:(id)arg1 target:(id)arg2;
- (void)sendMessage:(id)arg1 target:(id)arg2 andInvokeCompletionHandler:(CDUnknownBlockType)arg3;
- (void)sendMessage:(id)arg1 target:(id)arg2 completionQueue:(id)arg3 deliveryCompletionHandler:(CDUnknownBlockType)arg4;
- (void)sendMessage:(id)arg1 target:(id)arg2 destination:(id)arg3;
- (void)sendMessage:(id)arg1 target:(id)arg2 destination:(id)arg3 responseQueue:(id)arg4 responseHandler:(CDUnknownBlockType)arg5;
- (void)sendMessage:(id)arg1 target:(id)arg2 destination:(id)arg3 responseTimeout:(double)arg4 responseQueue:(id)arg5 responseHandler:(CDUnknownBlockType)arg6;
- (void)sendMessage:(id)arg1 target:(id)arg2 responseQueue:(id)arg3 responseHandler:(CDUnknownBlockType)arg4;
- (void)sendSecureMessage:(id)arg1 target:(id)arg2 userID:(id)arg3 destination:(id)arg4 responseQueue:(id)arg5 responseHandler:(CDUnknownBlockType)arg6;
- (void)setRemoteAccessPeer:(id)arg1 forHome:(id)arg2;
- (void)updateHome:(id)arg1 configurationVersion:(long long)arg2;
- (void)updateLocalAdministratorName;

@end

