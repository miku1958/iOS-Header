//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <HomeKitDaemon/HAPTimerDelegate-Protocol.h>
#import <HomeKitDaemon/HMDFairPlaySAPSessionDelegate-Protocol.h>

@class HAPTimer, HMDFairPlaySAPSession, NSOperationQueue, NSString, NSURLSession;
@protocol OS_dispatch_queue;

@interface HMDRelayActivationSession : NSObject <HMDFairPlaySAPSessionDelegate, HAPTimerDelegate>
{
    NSObject<OS_dispatch_queue> *_workQueue;
    unsigned long long _state;
    HMDFairPlaySAPSession *_fairPlaySAPSession;
    HAPTimer *_fairPlaySessionTimer;
    NSURLSession *_urlSession;
    NSOperationQueue *_requestOperationQueue;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (strong, nonatomic) HMDFairPlaySAPSession *fairPlaySAPSession; // @synthesize fairPlaySAPSession=_fairPlaySAPSession;
@property (strong, nonatomic) HAPTimer *fairPlaySessionTimer; // @synthesize fairPlaySessionTimer=_fairPlaySessionTimer;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) NSOperationQueue *requestOperationQueue; // @synthesize requestOperationQueue=_requestOperationQueue;
@property (nonatomic) unsigned long long state; // @synthesize state=_state;
@property (readonly) Class superclass;
@property (readonly, nonatomic) NSURLSession *urlSession; // @synthesize urlSession=_urlSession;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;

+ (id)sharedSession;
- (void).cxx_destruct;
- (void)_addRequestOperation:(id)arg1;
- (void)_cancelAllPendingRequestOperations;
- (void)_handleCertificateResponseData:(id)arg1 response:(id)arg2 error:(id)arg3 fairPlaySession:(id)arg4 completionQueue:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (void)_handleChallengeResponseData:(id)arg1 response:(id)arg2 error:(id)arg3 fairPlaySession:(id)arg4 completionQueue:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (void)_handleFairPlayCertificateResponseData:(id)arg1 response:(id)arg2 error:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_handleFairPlaySetupExchangeResponseData:(id)arg1 response:(id)arg2 error:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_requestFairPlayCertificateWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_requestFairPlaySetupExchangeWithExchangeData:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_resumeRequestOperations;
- (void)_setupFairPlaySession;
- (void)_suspendRequestOperations;
- (void)_teardownFairPlaySession;
- (void)_verifyURLResponse:(id)arg1 responseData:(id)arg2 fairPlaySession:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)init;
- (void)requestCertificateWithCertificateRequest:(id)arg1 completionQueue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)requestChallengeWithCompletionQueue:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)session:(id)arg1 didCloseWithError:(id)arg2;
- (void)session:(id)arg1 didReceiveClientExchangeData:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)session:(id)arg1 didReceiveServerCertificateRequestWithCompletionHandler:(CDUnknownBlockType)arg2;
- (void)timerDidFire:(id)arg1;

@end

