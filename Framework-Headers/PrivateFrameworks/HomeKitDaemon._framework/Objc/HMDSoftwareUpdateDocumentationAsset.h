//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <HMFoundation/HMFObject.h>

#import <HomeKitDaemon/HMFLogging-Protocol.h>
#import <HomeKitDaemon/NSSecureCoding-Protocol.h>
#import <HomeKitDaemon/NSURLSessionDownloadDelegate-Protocol.h>
#import <HomeKitDaemon/SZExtractorDelegate-Protocol.h>

@class HMSoftwareUpdateDocumentation, HMSoftwareUpdateDocumentationMetadata, NSInputStream, NSObject, NSString, NSURL, NSURLSession, NSUUID, SZExtractor;
@protocol OS_dispatch_queue;

@interface HMDSoftwareUpdateDocumentationAsset : HMFObject <HMFLogging, NSURLSessionDownloadDelegate, SZExtractorDelegate, NSSecureCoding>
{
    BOOL _shouldAutomaticallyCache;
    long long _state;
    NSUUID *_identifier;
    HMSoftwareUpdateDocumentationMetadata *_metadata;
    NSObject<OS_dispatch_queue> *_clientQueue;
    NSObject<OS_dispatch_queue> *_propertyQueue;
    NSURLSession *_URLSession;
    SZExtractor *_extrator;
    NSInputStream *_archivedFileStream;
}

@property (readonly, copy) NSURL *URL;
@property (strong, nonatomic) NSURLSession *URLSession; // @synthesize URLSession=_URLSession;
@property (strong, nonatomic) NSInputStream *archivedFileStream; // @synthesize archivedFileStream=_archivedFileStream;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *clientQueue; // @synthesize clientQueue=_clientQueue;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, copy) HMSoftwareUpdateDocumentation *documentation;
@property (strong, nonatomic) SZExtractor *extrator; // @synthesize extrator=_extrator;
@property (readonly) unsigned long long hash;
@property (readonly, copy) NSUUID *identifier; // @synthesize identifier=_identifier;
@property (readonly) HMSoftwareUpdateDocumentationMetadata *metadata; // @synthesize metadata=_metadata;
@property (readonly) NSObject<OS_dispatch_queue> *propertyQueue; // @synthesize propertyQueue=_propertyQueue;
@property BOOL shouldAutomaticallyCache; // @synthesize shouldAutomaticallyCache=_shouldAutomaticallyCache;
@property (readonly) long long state; // @synthesize state=_state;
@property (readonly) Class superclass;

+ (id)assetDirectoryURL;
+ (id)assetWithURL:(id)arg1;
+ (id)logCategory;
+ (BOOL)supportsSecureCoding;
- (void).cxx_destruct;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (id)archiveURL;
- (id)bundleURL;
- (void)cancelDownload;
- (void)cancelUnarchive;
- (void)encodeWithCoder:(id)arg1;
- (void)finishDownload;
- (void)finishUnarchive;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithDocumentationMetadata:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)logIdentifier;
- (id)metadataURL;
- (BOOL)purgeWithError:(id *)arg1;
- (BOOL)saveWithError:(id *)arg1;
- (void)setExtractionProgress:(double)arg1;
- (void)setState:(long long)arg1;
- (void)startCaching;
- (void)startDownload;
- (void)startUnarchive;

@end

