//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <HomeKitDaemon/HAPAccessoryServerForBridgeDelegate-Protocol.h>
#import <HomeKitDaemon/HAPRelayAccessoryDelegate-Protocol.h>
#import <HomeKitDaemon/HMDBulletinIdentifiers-Protocol.h>
#import <HomeKitDaemon/HMDTimeInformationMonitorDelegate-Protocol.h>
#import <HomeKitDaemon/HMFDumpState-Protocol.h>
#import <HomeKitDaemon/HMFMessageReceiver-Protocol.h>
#import <HomeKitDaemon/HMFTimerDelegate-Protocol.h>
#import <HomeKitDaemon/NSSecureCoding-Protocol.h>

@class HMAccessoryCategory, HMDAccessoryVersion, HMDApplicationData, HMDApplicationRegistry, HMDBridgeInformation, HMDCharacteristic, HMDHome, HMDRoom, HMDVendorModelEntry, HMFMessageDispatcher, HMFTimer, NSArray, NSData, NSMutableArray, NSMutableSet, NSNumber, NSSet, NSString, NSUUID;
@protocol OS_dispatch_queue;

@interface HMDAccessory : NSObject <HMDBulletinIdentifiers, NSSecureCoding, HMFMessageReceiver, HAPRelayAccessoryDelegate, HMDTimeInformationMonitorDelegate, HMFTimerDelegate, HAPAccessoryServerForBridgeDelegate, HMFDumpState>
{
    NSMutableArray *_transportInformationInstances;
    BOOL _reachable;
    BOOL _remotelyReachable;
    BOOL _relayEnabled;
    BOOL _timeInformationServiceExists;
    BOOL _discoveredBridgeableAccessory;
    BOOL _supportsBridgeConfiguration;
    BOOL _primary;
    BOOL _blocked;
    BOOL _supportsRelay;
    BOOL _paired;
    BOOL _remoteAccessEnabled;
    BOOL _unblockPending;
    BOOL _systemTimeNeedsUpdate;
    NSString *_model;
    NSString *_manufacturer;
    HMDAccessoryVersion *_firmwareVersion;
    NSString *_serialNumber;
    NSString *_relayIdentifier;
    unsigned long long _currentRelayAccessoryState;
    HMDCharacteristic *_currentTimeCharacteristic;
    HMDCharacteristic *_timeUpdateCharacteristic;
    HMDCharacteristic *_dayOfTheWeekCharacteristic;
    HMDApplicationData *_appData;
    NSSet *_accessoryProfiles;
    HMDRoom *_room;
    NSNumber *_accessoryFlags;
    unsigned long long _configNumber;
    HMDHome *_home;
    NSString *_name;
    NSUUID *_uuid;
    NSString *_uniqueIdentifier;
    NSString *_identifier;
    NSString *_configurationAppIdentifier;
    NSObject<OS_dispatch_queue> *_propertyQueue;
    unsigned long long _activationAttempts;
    unsigned long long _pairingAttempts;
    NSNumber *_backedOffStateNumber;
    HMFTimer *_accessoryDiscoveryBackoffTimer;
    NSString *_providedName;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSMutableArray *_discoveredServices;
    HMFMessageDispatcher *_msgDispatcher;
    HMAccessoryCategory *_category;
    HMDAccessory *_bridge;
    NSMutableSet *_identifiersForBridgedAccessories;
    NSData *_publicKey;
    NSString *_pairingUsername;
    HMDApplicationRegistry *_appRegistry;
    HMFTimer *_timeInformationTimer;
    NSMutableSet *_identifiersOfBridgesDuringDiscovery;
    NSMutableSet *_discoveredBridgeableAccessories;
    HMDBridgeInformation *_hmdBridgeInformation;
    HMFTimer *_systemTimeInformationTimer;
    NSSet *_cameraProfiles;
}

@property (strong, nonatomic) HMFTimer *accessoryDiscoveryBackoffTimer; // @synthesize accessoryDiscoveryBackoffTimer=_accessoryDiscoveryBackoffTimer;
@property (copy, nonatomic) NSNumber *accessoryFlags; // @synthesize accessoryFlags=_accessoryFlags;
@property (strong, nonatomic) NSSet *accessoryProfiles; // @synthesize accessoryProfiles=_accessoryProfiles;
@property (nonatomic) unsigned long long activationAttempts; // @synthesize activationAttempts=_activationAttempts;
@property (strong, nonatomic) HMDApplicationData *appData; // @synthesize appData=_appData;
@property (strong, nonatomic) HMDApplicationRegistry *appRegistry; // @synthesize appRegistry=_appRegistry;
@property (copy, nonatomic) NSNumber *backedOffStateNumber; // @synthesize backedOffStateNumber=_backedOffStateNumber;
@property (nonatomic, getter=isBlocked) BOOL blocked; // @synthesize blocked=_blocked;
@property (weak, nonatomic) HMDAccessory *bridge; // @synthesize bridge=_bridge;
@property (strong, nonatomic) NSSet *cameraProfiles; // @synthesize cameraProfiles=_cameraProfiles;
@property (strong, nonatomic) HMAccessoryCategory *category; // @synthesize category=_category;
@property (readonly, getter=isClientRegisteredForNotifications) BOOL clientRegisteredForNotifications;
@property (nonatomic) unsigned long long configNumber; // @synthesize configNumber=_configNumber;
@property (strong, nonatomic) NSString *configurationAppIdentifier; // @synthesize configurationAppIdentifier=_configurationAppIdentifier;
@property (readonly, copy, nonatomic) NSString *contextID;
@property (readonly, copy, nonatomic) NSUUID *contextSPIUniqueIdentifier;
@property (readonly, nonatomic) unsigned long long currentRelayAccessoryState; // @synthesize currentRelayAccessoryState=_currentRelayAccessoryState;
@property (readonly, weak, nonatomic) HMDCharacteristic *currentTimeCharacteristic; // @synthesize currentTimeCharacteristic=_currentTimeCharacteristic;
@property (readonly, weak, nonatomic) HMDCharacteristic *dayOfTheWeekCharacteristic; // @synthesize dayOfTheWeekCharacteristic=_dayOfTheWeekCharacteristic;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (strong, nonatomic) NSMutableSet *discoveredBridgeableAccessories; // @synthesize discoveredBridgeableAccessories=_discoveredBridgeableAccessories;
@property (nonatomic, getter=isDiscoveredBridgeableAccessory) BOOL discoveredBridgeableAccessory; // @synthesize discoveredBridgeableAccessory=_discoveredBridgeableAccessory;
@property (strong, nonatomic) NSMutableArray *discoveredServices; // @synthesize discoveredServices=_discoveredServices;
@property (readonly, copy, nonatomic) HMDAccessoryVersion *firmwareVersion; // @synthesize firmwareVersion=_firmwareVersion;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) HMDBridgeInformation *hmdBridgeInformation; // @synthesize hmdBridgeInformation=_hmdBridgeInformation;
@property (weak, nonatomic) HMDHome *home; // @synthesize home=_home;
@property (strong, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property (strong, nonatomic) NSMutableSet *identifiersForBridgedAccessories; // @synthesize identifiersForBridgedAccessories=_identifiersForBridgedAccessories;
@property (strong, nonatomic) NSMutableSet *identifiersOfBridgesDuringDiscovery; // @synthesize identifiersOfBridgesDuringDiscovery=_identifiersOfBridgesDuringDiscovery;
@property (readonly, copy, nonatomic) NSString *manufacturer; // @synthesize manufacturer=_manufacturer;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property (readonly, nonatomic) NSUUID *messageTargetUUID;
@property (readonly, copy, nonatomic) NSString *model; // @synthesize model=_model;
@property (strong, nonatomic) HMFMessageDispatcher *msgDispatcher; // @synthesize msgDispatcher=_msgDispatcher;
@property (copy, nonatomic, getter=getName) NSString *name; // @synthesize name=_name;
@property (nonatomic, getter=isPaired) BOOL paired; // @synthesize paired=_paired;
@property (nonatomic) unsigned long long pairingAttempts; // @synthesize pairingAttempts=_pairingAttempts;
@property (strong, nonatomic) NSString *pairingUsername; // @synthesize pairingUsername=_pairingUsername;
@property (nonatomic, getter=isPrimary) BOOL primary; // @synthesize primary=_primary;
@property (strong, nonatomic) NSObject<OS_dispatch_queue> *propertyQueue; // @synthesize propertyQueue=_propertyQueue;
@property (strong, nonatomic) NSString *providedName; // @synthesize providedName=_providedName;
@property (strong, nonatomic) NSData *publicKey; // @synthesize publicKey=_publicKey;
@property (nonatomic, getter=isReachable) BOOL reachable; // @synthesize reachable=_reachable;
@property (nonatomic, getter=isRelayEnabled) BOOL relayEnabled; // @synthesize relayEnabled=_relayEnabled;
@property (strong, nonatomic) NSString *relayIdentifier; // @synthesize relayIdentifier=_relayIdentifier;
@property (nonatomic, getter=isRemoteAccessEnabled) BOOL remoteAccessEnabled; // @synthesize remoteAccessEnabled=_remoteAccessEnabled;
@property (nonatomic, getter=isRemotelyReachable) BOOL remotelyReachable; // @synthesize remotelyReachable=_remotelyReachable;
@property (strong, nonatomic) HMDRoom *room; // @synthesize room=_room;
@property (readonly, getter=isSecuritySessionOpen) BOOL securitySessionOpen;
@property (readonly, copy, nonatomic) NSString *serialNumber; // @synthesize serialNumber=_serialNumber;
@property (readonly, nonatomic) NSString *serializedIdentifier;
@property (readonly, copy, nonatomic) NSArray *services;
@property (readonly) Class superclass;
@property (nonatomic) BOOL supportsBridgeConfiguration; // @synthesize supportsBridgeConfiguration=_supportsBridgeConfiguration;
@property (nonatomic) BOOL supportsRelay; // @synthesize supportsRelay=_supportsRelay;
@property (strong, nonatomic) HMFTimer *systemTimeInformationTimer; // @synthesize systemTimeInformationTimer=_systemTimeInformationTimer;
@property (nonatomic) BOOL systemTimeNeedsUpdate; // @synthesize systemTimeNeedsUpdate=_systemTimeNeedsUpdate;
@property (readonly, nonatomic) BOOL timeInformationServiceExists; // @synthesize timeInformationServiceExists=_timeInformationServiceExists;
@property (strong, nonatomic) HMFTimer *timeInformationTimer; // @synthesize timeInformationTimer=_timeInformationTimer;
@property (readonly, weak, nonatomic) HMDCharacteristic *timeUpdateCharacteristic; // @synthesize timeUpdateCharacteristic=_timeUpdateCharacteristic;
@property (readonly, nonatomic) NSArray *tunneledHAPAccessories;
@property (nonatomic) BOOL unblockPending; // @synthesize unblockPending=_unblockPending;
@property (strong, nonatomic) NSString *uniqueIdentifier; // @synthesize uniqueIdentifier=_uniqueIdentifier;
@property (readonly, nonatomic) NSUUID *uuid; // @synthesize uuid=_uuid;
@property (readonly, copy, nonatomic) HMDVendorModelEntry *vendorInfo;
@property (strong, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;

+ (unsigned long long)getAWDTransportTypeWithLinkType:(long long)arg1;
+ (BOOL)supportsSecureCoding;
- (void).cxx_destruct;
- (CDUnknownBlockType)_accessoryCompletionBlockForAssociatingAccessory:(id)arg1;
- (CDUnknownBlockType)_accessoryCompletionBlockForDisAssociatingAccessory:(id)arg1;
- (CDUnknownBlockType)_accessoryCompletionBlockForDiscoveredAccessory:(id)arg1;
- (void)_addBridgeToDiscoveredAccessory:(id)arg1;
- (void)_addDiscoveredBridgeableAccessory:(id)arg1;
- (void)_addHAPAccessory:(id)arg1;
- (void)_addNewCompletionBlockforAssociatingAccessory:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)_addNewCompletionBlockforDisAssociatingAccessory:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)_addNewCompletionBlockforDiscoveredAccessory:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)_allDiscoveredAccessories;
- (id)_associatingAccessory;
- (void)_createCameraProfiles:(id)arg1;
- (unsigned long long)_currentRelayAccessoryState;
- (id)_currentTimeCharacteristic;
- (id)_dayOfTheWeekCharacteristic;
- (void)_deRegisterForTimeMonitor;
- (id)_disAssociatingAccessory;
- (void)_disableNotificationsForBundleID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_enableNotification:(BOOL)arg1 forCharacteristics:(id)arg2 hapAccessory:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_enableNotification:(BOOL)arg1 forCharacteristics:(id)arg2 message:(id)arg3 clientIdentifier:(id)arg4;
- (void)_enableNotification:(BOOL)arg1 matchingHAPAccessory:(id)arg2 unconditionallyDeregister:(BOOL)arg3 ignoreDeviceUnlockRequirement:(BOOL)arg4 clientIdentifier:(id)arg5 forCharacteristics:(id)arg6;
- (BOOL)_enableNotificationOnResident:(BOOL)arg1 characteristic:(id)arg2 clientIdentifier:(id)arg3 ignoreDeviceUnlockRequirement:(BOOL)arg4;
- (long long)_enumerateReachableTransports;
- (void)_handleAccessoryConfigureWrite:(id)arg1;
- (void)_handleCharacteristicError:(id)arg1 characteristic:(id)arg2 message:(id)arg3 read:(BOOL)arg4;
- (void)_handleCharacteristicRead:(id)arg1;
- (void)_handleCharacteristicWrite:(id)arg1;
- (void)_handleCharacteristicsChangedNotification:(id)arg1;
- (void)_handleDiscoverBridgedAccessories:(id)arg1 startDiscovery:(BOOL)arg2;
- (void)_handleDiscoveryBackoffTimerFired;
- (void)_handleGetAccessoryAdvertisingParams:(id)arg1;
- (void)_handleIdentify:(id)arg1;
- (void)_handleMultipleCharacteristicsUpdated:(id)arg1 message:(id)arg2 completionQueue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_handleRename:(id)arg1;
- (void)_handleRenameService:(id)arg1;
- (void)_handleSetAppData:(id)arg1;
- (void)_handleUpdateAssociatedServiceType:(id)arg1;
- (void)_handleUpdateAuthorizationData:(id)arg1;
- (void)_handleUpdateRoom:(id)arg1;
- (BOOL)_isDiscoveredBridgeableAccessory;
- (BOOL)_isPaired;
- (void)_logDuetEventIfNeeded:(id)arg1 clientName:(id)arg2;
- (id)_messageIdentifier;
- (void)_notifyCharacteristicNotificationChangedForCharacteristic:(id)arg1 enableNotification:(BOOL)arg2 message:(id)arg3;
- (void)_notifyCharacteristicNotificationChanges:(id)arg1 enableNotification:(BOOL)arg2 message:(id)arg3 clientIdentifier:(id)arg4;
- (void)_notifyConnectivityChangedWithReachabilityState:(BOOL)arg1 remoteAccessChanged:(BOOL)arg2;
- (void)_notifyNotificationChangesForCharacteristics:(id)arg1 errors:(id)arg2 enableNotification:(BOOL)arg3 message:(id)arg4;
- (void)_parseResponseFromRemotePeer:(id)arg1 message:(id)arg2 forCharacteristic:(id)arg3;
- (void)_performOperation:(long long)arg1 linkType:(long long)arg2 operationBlock:(CDUnknownBlockType)arg3 errorBlock:(CDUnknownBlockType)arg4;
- (id)_populateServices:(id *)arg1 hapAccessory:(id)arg2 reAddServices:(BOOL)arg3;
- (id)_prepareMessagePayloadForCharacteristicRemoteWrite:(id)arg1;
- (void)_readAndWriteTimeInformationCharacteristic:(id)arg1;
- (void)_readCharacteristicValues:(id)arg1 hapAccessory:(id)arg2 queue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_readCharacteristicValues:(id)arg1 localOperationRequired:(BOOL)arg2 queue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4 errorBlock:(CDUnknownBlockType)arg5;
- (void)_readValueForCharacteristic:(id)arg1 hapAccessory:(id)arg2 requestMessage:(id)arg3;
- (void)_readandWriteToCurrentTime:(id)arg1 errorBlock:(CDUnknownBlockType)arg2;
- (void)_reenableNotificationsOnWatch;
- (void)_registerForMessages:(BOOL)arg1;
- (void)_registerForTimeMonitor;
- (id)_relayIdentifier;
- (void)_relayIdentifyAccessorytoResidentForMessage:(id)arg1;
- (void)_relayReadFromCharacteristic:(id)arg1 toResidentForMessage:(id)arg2 viaDevice:(id)arg3;
- (void)_relayWriteToCharacteristic:(id)arg1 toResidentForMessage:(id)arg2 viaDevice:(id)arg3;
- (void)_remoteAccessEnabled:(BOOL)arg1;
- (void)_removeAllDiscoveredBridgeableAccessories;
- (void)_removeBackedoffAccessoryForStateNumber:(id)arg1;
- (void)_removeBridgeFromDiscoveredAccessory:(id)arg1;
- (void)_removeBridgesFromDiscoveredAccessory;
- (void)_removeDiscoveredBridgeableAccessory:(id)arg1;
- (void)_removeHAPAccessoryWithServerIdentifier:(id)arg1 linkType:(long long)arg2 completion:(CDUnknownBlockType)arg3 completionQueue:(id)arg4;
- (void)_removeNewAccessoryCompletionBlockForDisAssociatingAccessory:(id)arg1;
- (void)_removeNewAccessoryCompletionBlockforAssociatingAccessory:(id)arg1;
- (void)_removeNewAccessoryCompletionBlockforDiscoveredAccessory:(id)arg1;
- (void)_retrieveStateForTrackedAccessory:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)_sendBlockedNotification:(BOOL)arg1 withError:(id)arg2 withIdentifier:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;
- (void)_setCurrentRelayAccessoryState:(unsigned long long)arg1;
- (void)_setCurrentTimeCharacteristic:(id)arg1;
- (void)_setDayOfTheWeekCharacteristic:(id)arg1;
- (void)_setPaired:(BOOL)arg1;
- (void)_setRelayEnabled:(BOOL)arg1;
- (void)_setRelayIdentifier:(id)arg1;
- (void)_setSupportsBridgeConfiguration:(BOOL)arg1;
- (void)_setSupportsRelay:(BOOL)arg1;
- (void)_setSystemTimeNeedsUpdate:(BOOL)arg1;
- (void)_setTimeInformationServiceExists:(BOOL)arg1;
- (void)_setTimeUpdateCharacteristic:(id)arg1;
- (BOOL)_shouldTrackAccessoryWithPriority:(BOOL *)arg1;
- (void)_startAssociatingAccessoryTimer;
- (void)_startDisassociatingAccessoryTimer;
- (void)_startDiscoveryAccessoryTimer:(CDUnknownBlockType)arg1;
- (void)_startSystemTimeWriteTimeInformationTimer;
- (void)_startWriteTimeInformationTimer;
- (void)_stopAssociatingAccessoryTimer;
- (void)_stopDisassociatingAccessoryTimer;
- (void)_stopDiscoveryAccessoryTimer;
- (void)_stopSystemTimeWriteTimeInformationTimer;
- (void)_stopWriteTimeInformationTimer;
- (BOOL)_supportsBridgeConfiguration;
- (BOOL)_supportsRelay;
- (BOOL)_timeInformationServiceExists;
- (id)_timeUpdateCharacteristic;
- (void)_updateAccessoryTracking;
- (void)_updateCategory:(id)arg1 notifyClients:(BOOL)arg2;
- (void)_updateName:(id)arg1;
- (void)_updateReachability;
- (void)_updateRelayEnabled:(BOOL)arg1 notifyRelayManager:(BOOL)arg2;
- (void)_updateStateForTrackedAccessory:(id)arg1 stateNumber:(id)arg2;
- (void)_writeCharacteristicValues:(id)arg1 hapAccessory:(id)arg2 queue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_writeCharacteristicValues:(id)arg1 localOperationRequired:(BOOL)arg2 queue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4 errorBlock:(CDUnknownBlockType)arg5;
- (void)_writeConfigureBridgeValue:(id)arg1 forCharacteristic:(id)arg2 accessory:(id)arg3 toAdd:(BOOL)arg4 hapAccessory:(id)arg5 authorizationData:(id)arg6 identifier:(id)arg7 queue:(id)arg8 completionHandler:(CDUnknownBlockType)arg9;
- (void)_writeDiscoverAccessoriesValue:(id)arg1 forCharacteristic:(id)arg2 hapAccessory:(id)arg3 authorizationData:(id)arg4 identifier:(id)arg5 queue:(id)arg6 completionHandler:(CDUnknownBlockType)arg7;
- (void)_writeTimeInformationCharacteristicsForAccessory;
- (void)_writeValue:(id)arg1 forCharacteristic:(id)arg2 hapAccessory:(id)arg3 authorizationData:(id)arg4 message:(id)arg5;
- (void)accessory:(id)arg1 didActivateRelayWithError:(id)arg2;
- (void)accessory:(id)arg1 didPairRelayWithError:(id)arg2;
- (void)accessory:(id)arg1 didUpdateAccessoryAccessToken:(id)arg2;
- (void)accessory:(id)arg1 didUpdateAccessoryIdentifier:(id)arg2;
- (void)accessory:(id)arg1 didUpdateCategory:(id)arg2;
- (void)accessory:(id)arg1 didUpdateRelayEnabled:(BOOL)arg2;
- (void)accessory:(id)arg1 didUpdateRelayState:(unsigned long long)arg2;
- (CDUnknownBlockType)accessoryCompletionBlockForAssociatingAccessory:(id)arg1;
- (CDUnknownBlockType)accessoryCompletionBlockForDisAssociatingAccessory:(id)arg1;
- (CDUnknownBlockType)accessoryCompletionBlockForDiscoveredAccessory:(id)arg1;
- (void)accessoryDidBecomeReachable:(id)arg1;
- (void)accessoryDidBecomeUnreachable:(id)arg1;
- (void)accessoryServer:(id)arg1 didUpdateValuesForBridgeCharacteristic:(id)arg2;
- (void)addBridgeToDiscoveredAccessory:(id)arg1;
- (void)addBridgedAccessory:(id)arg1;
- (void)addDiscoveredAccessoryToBridge:(id)arg1;
- (void)addDiscoveredBridgeableAccessory:(id)arg1;
- (void)addNewCompletionBlockforAssociatingAccessory:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)addNewCompletionBlockforDisAssociatingAccessory:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)addNewCompletionBlockforDiscoveredAccessory:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)addRelayUser:(id)arg1 accessToken:(id)arg2 queue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)addTransportInformationInstance:(id)arg1;
- (void)addTransportInformationInstances:(id)arg1;
- (id)allDiscoveredAccessories;
- (id)assistantObject;
- (id)assistantUniqueIdentifier;
- (void)backOffAccessoryForStateNumber:(id)arg1;
- (void)blockWithError:(id)arg1;
- (id)characteristicsPassingTest:(CDUnknownBlockType)arg1;
- (void)configure:(id)arg1 msgDispatcher:(id)arg2 accessoryConfigureGroup:(id)arg3;
- (void)configureBulletinNotification:(CDUnknownBlockType)arg1;
- (void)configureWithAccessory:(id)arg1 reAddServices:(BOOL)arg2 homeNotificationsEnabled:(BOOL)arg3 queue:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)configureWithMsgDispatcher:(id)arg1;
- (BOOL)containsCameraService;
- (id)currentAssociatingAccessory;
- (id)currentDisassociatingAccessory;
- (void)deRegisterForTimeMonitor;
- (void)dealloc;
- (void)didEncounterError:(id)arg1;
- (void)disableNotificationsForBundleID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)dumpSimpleState;
- (id)dumpState;
- (void)enableNotification:(BOOL)arg1 forCharacteristicIDs:(id)arg2 message:(id)arg3 clientIdentifier:(id)arg4;
- (void)enableNotification:(BOOL)arg1 forCharacteristics:(id)arg2 message:(id)arg3 clientIdentifier:(id)arg4;
- (void)enableNotification:(BOOL)arg1 unconditionallyDeregister:(BOOL)arg2 ignoreDeviceUnlockRequirement:(BOOL)arg3 clientIdentifier:(id)arg4 forCharacteristics:(id)arg5;
- (void)encodeWithCoder:(id)arg1;
- (void)enumerateCharacteristicsUsingBlock:(CDUnknownBlockType)arg1;
- (id)findCharacteristic:(id)arg1;
- (id)findCharacteristic:(id)arg1 forService:(id)arg2;
- (id)findCharacteristicType:(id)arg1 forServiceType:(id)arg2;
- (id)findService:(id)arg1;
- (void)fixupServices:(id)arg1 idsDataSync:(BOOL)arg2 dataVersion:(long long)arg3;
- (id)getConfiguredName;
- (id)getPrimaryHAPAccessories;
- (void)handleMultipleCharacteristicsUpdated:(id)arg1 message:(id)arg2 completionQueue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)handleReachabilityChange:(BOOL)arg1;
- (void)handleRemoteGatewayNotificationRegistration:(id)arg1 enable:(BOOL)arg2 enableTime:(id)arg3;
- (void)handleStartDiscoveringBridgedAcessories:(id)arg1;
- (void)handleStopDiscoveringBridgedAcessories:(id)arg1;
- (id)hapCharacteristicWriteRequests:(id)arg1 hapAccessory:(id)arg2 hmdResponses:(id *)arg3 mapping:(id *)arg4;
- (BOOL)hasBTLELink;
- (id)hmdCharacteristicFromHapCharacteristic:(id)arg1;
- (id)initWithAccessory:(id)arg1 uuid:(id)arg2 messageDispatcher:(id)arg3;
- (id)initWithCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isNonClientNotificationEnabled;
- (BOOL)isNotificationEnabled;
- (BOOL)isNotificationEnabledForClientIdentifier:(id)arg1;
- (BOOL)isReadingRequiredAccessoryInformationCharacteristic:(id)arg1 providedName:(id)arg2 forceReadFWVersion:(BOOL)arg3;
- (BOOL)isRemoteReachable;
- (long long)linkSpeed;
- (void)logDuetEventIfNeeded:(id)arg1 clientName:(id)arg2;
- (void)logDuetRoomEvent;
- (BOOL)matchesHAPAccessory:(id)arg1;
- (BOOL)matchesHAPAccessoryWithServerIdentifier:(id)arg1 linkType:(long long *)arg2;
- (BOOL)matchesHMDAccessoryTransportInformationWithServerIdentifier:(id)arg1 instanceID:(id)arg2;
- (id)matchingHAPAccessoryServerIdentifierWithLinkType:(long long)arg1;
- (id)matchingHAPAccessoryWithLinkType:(long long)arg1;
- (id)matchingHAPAccessoryWithServerIdentifier:(id)arg1;
- (id)matchingHAPAccessoryWithServerIdentifier:(id)arg1 linkType:(long long)arg2;
- (id)matchingTransportInformation:(id)arg1;
- (id)matchingTransportInformationWithServerIdentifier:(id)arg1;
- (id)matchingTransportInformationWithServerIdentifier:(id)arg1 linkType:(long long)arg2;
- (void)mergeTransportInformationInstances:(id)arg1;
- (id)messageIdentifier;
- (id)namesOfServicesShowingTilesInHomeApp;
- (void)notifyValue:(id)arg1 previousValue:(id)arg2 error:(id)arg3 forCharacteristic:(id)arg4 requestMessage:(id)arg5;
- (void)performOperation:(long long)arg1 linkType:(long long)arg2 operationBlock:(CDUnknownBlockType)arg3 errorBlock:(CDUnknownBlockType)arg4;
- (void)populateHMDCharacteristicResponses:(id)arg1 hapResponses:(id)arg2 mapping:(id)arg3 overallError:(id)arg4 requests:(id)arg5;
- (id)preferredHAPAccessoryForOperation:(long long)arg1 linkType:(long long *)arg2;
- (void)readCharacteristicValues:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)registerForMessagesWithNewUUID:(id)arg1;
- (void)registerForTimeMonitor;
- (id)relayAccessory;
- (void)remoteAccessEnabled:(BOOL)arg1;
- (void)removeAllTransportInformationInstances;
- (void)removeBridgeFromDiscoveredAccessory:(id)arg1;
- (void)removeBridgedAccessory:(id)arg1;
- (void)removeBridgesFromDiscoveredAccessory;
- (void)removeDiscoveredAccessoryFromBridge:(id)arg1;
- (void)removeDiscoveredBridgeableAccessory:(id)arg1;
- (void)removeHAPAccessoryWithServerIdentifier:(id)arg1 linkType:(long long)arg2 completion:(CDUnknownBlockType)arg3 completionQueue:(id)arg4;
- (void)removeNewAccessoryCompletionBlockForDisAssociatingAccessory:(id)arg1;
- (void)removeNewAccessoryCompletionBlockforAssociatingAccessory:(id)arg1;
- (void)removeNewAccessoryCompletionBlockforDiscoveringAccessory:(id)arg1;
- (void)removeRelayUser:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)removeTransportInformationInstance:(id)arg1;
- (void)requestResource:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)resetNotificationEnabledTime;
- (void)savePublicKeyToKeychain;
- (id)serverIdentifier;
- (void)setAssociatingAccessory:(id)arg1;
- (void)setCurrentTimeCharacteristic:(id)arg1;
- (void)setDayOfTheWeekCharacteristic:(id)arg1;
- (void)setDisassociatingAccessory:(id)arg1;
- (void)setFirmwareVersion:(id)arg1;
- (void)setManufacturer:(id)arg1;
- (void)setMessageIdentifier:(id)arg1;
- (void)setModel:(id)arg1;
- (void)setPairingUsername:(id)arg1 publicKey:(id)arg2;
- (void)setReachability:(BOOL)arg1 serverIdentifier:(id)arg2 linkType:(long long)arg3;
- (void)setSerialNumber:(id)arg1;
- (void)setTimeInformationServiceExists:(BOOL)arg1;
- (void)setTimeUpdateCharacteristic:(id)arg1;
- (BOOL)shouldEnableDaemonRelaunch;
- (void)startAssociatingAccessoryTimer;
- (void)startDisassociatingAccessoryTimer;
- (void)startDiscoveryAccessoryTimer:(CDUnknownBlockType)arg1;
- (void)startRelayActivationWithActivationClient:(id)arg1;
- (void)startRelayPairingWithPairingClient:(id)arg1;
- (void)stopAssociatingAccessoryTimer;
- (void)stopDisassociatingAccessoryTimer;
- (void)stopDiscoveryAccessoryTimer;
- (void)takeOwnershipOfAppData:(id)arg1;
- (void)timeInformationMonitorDidChangeTime;
- (void)timerDidFire:(id)arg1;
- (id)transportInformationInstances;
- (void)unblockWithMessageIdentifier:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)unconfigure;
- (void)unconfigureAccessoryWithServerIdentifier:(id)arg1 linkType:(long long)arg2 updateReachability:(BOOL)arg3;
- (void)updateAccessoryFlags:(id)arg1;
- (void)updateAccessoryFlagsAndNotifyClients:(id)arg1;
- (void)updateAccessoryInformation:(id)arg1;
- (void)updateCategory:(id)arg1;
- (void)updateManufacturer:(id)arg1 model:(id)arg2 firmwareVersion:(id)arg3 serialNumber:(id)arg4;
- (void)updateName:(id)arg1;
- (void)updateNotificationEnabled:(BOOL)arg1 forCharacteristics:(id)arg2 onBehalfOf:(id)arg3;
- (void)updateReachability;
- (void)updateRoom:(id)arg1;
- (BOOL)updateTimeInformationCharacteristicsForAccessory:(id)arg1;
- (id)url;
- (void)verifyPairingWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)writeCharacteristicValues:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)writeTimeInformationCharacteristicsForAccessory:(id)arg1;

@end

