//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <HomeKitDaemon/HMDAssistantAccessControlModelUpdateReceiver-Protocol.h>
#import <HomeKitDaemon/HMDMediaContentProfileAccessControlModelUpdateReceiver-Protocol.h>
#import <HomeKitDaemon/HMFLogging-Protocol.h>
#import <HomeKitDaemon/HMFTimerDelegate-Protocol.h>

@class HMFTimer, HMFUnfairLock, NSArray, NSDictionary, NSMutableSet, NSString, NSUUID;
@protocol HMDSettingsControllerProtocol, HMDUserDataControllerDelegate, HMDUserDataControllerTimerCreator, OS_dispatch_queue;

@interface HMDUserDataController : NSObject <HMDAssistantAccessControlModelUpdateReceiver, HMDMediaContentProfileAccessControlModelUpdateReceiver, HMFLogging, HMFTimerDelegate>
{
    BOOL _isModifyingState;
    BOOL _assistantAccessControlRequiresAuthenticationForSecureRequests;
    unsigned long long _state;
    HMFUnfairLock *_lock;
    NSUUID *_homeUUID;
    NSUUID *_userUUID;
    NSObject<OS_dispatch_queue> *_clientQueue;
    id<HMDUserDataControllerDelegate> _delegate;
    id<HMDUserDataControllerTimerCreator> _timerCreator;
    id<HMDSettingsControllerProtocol> _sharedSettingsController;
    id<HMDSettingsControllerProtocol> _privateSettingsController;
    NSUUID *_sharedSettingsRootUUID;
    NSUUID *_assistantAccessControlModelUUID;
    NSMutableSet *_assistantAccessControlAccessoryUUIDs;
    NSUUID *_mediaContentProfileAccessControlModelUUID;
    NSMutableSet *_mediaContentProfileAccessControlAccessories;
    NSUUID *_privateSettingsRootUUID;
    HMFTimer *_sharedZoneFirstLoadTimer;
    HMFTimer *_privateZoneFirstLoadTimer;
}

@property (readonly, copy) NSArray *assistantAccessControlAccessoriesToEncode;
@property (strong) NSMutableSet *assistantAccessControlAccessoryUUIDs; // @synthesize assistantAccessControlAccessoryUUIDs=_assistantAccessControlAccessoryUUIDs;
@property (strong) NSUUID *assistantAccessControlModelUUID; // @synthesize assistantAccessControlModelUUID=_assistantAccessControlModelUUID;
@property BOOL assistantAccessControlRequiresAuthenticationForSecureRequests; // @synthesize assistantAccessControlRequiresAuthenticationForSecureRequests=_assistantAccessControlRequiresAuthenticationForSecureRequests;
@property (readonly) NSObject<OS_dispatch_queue> *clientQueue; // @synthesize clientQueue=_clientQueue;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, weak) id<HMDUserDataControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) NSUUID *homeUUID; // @synthesize homeUUID=_homeUUID;
@property (readonly) HMFUnfairLock *lock; // @synthesize lock=_lock;
@property (strong) NSMutableSet *mediaContentProfileAccessControlAccessories; // @synthesize mediaContentProfileAccessControlAccessories=_mediaContentProfileAccessControlAccessories;
@property (readonly, copy) NSArray *mediaContentProfileAccessControlAccessoriesToEncode;
@property (strong) NSUUID *mediaContentProfileAccessControlModelUUID; // @synthesize mediaContentProfileAccessControlModelUUID=_mediaContentProfileAccessControlModelUUID;
@property (readonly, copy) NSDictionary *privateSettingValuesByKeyPathForAWD;
@property (readonly) id<HMDSettingsControllerProtocol> privateSettingsController; // @synthesize privateSettingsController=_privateSettingsController;
@property (strong) NSUUID *privateSettingsRootUUID; // @synthesize privateSettingsRootUUID=_privateSettingsRootUUID;
@property (strong, nonatomic) HMFTimer *privateZoneFirstLoadTimer; // @synthesize privateZoneFirstLoadTimer=_privateZoneFirstLoadTimer;
@property (readonly, copy) NSDictionary *sharedSettingValuesByKeyPathForAWD;
@property (readonly) id<HMDSettingsControllerProtocol> sharedSettingsController; // @synthesize sharedSettingsController=_sharedSettingsController;
@property (strong) NSUUID *sharedSettingsRootUUID; // @synthesize sharedSettingsRootUUID=_sharedSettingsRootUUID;
@property (strong, nonatomic) HMFTimer *sharedZoneFirstLoadTimer; // @synthesize sharedZoneFirstLoadTimer=_sharedZoneFirstLoadTimer;
@property unsigned long long state; // @synthesize state=_state;
@property (readonly) Class superclass;
@property (readonly) id<HMDUserDataControllerTimerCreator> timerCreator; // @synthesize timerCreator=_timerCreator;
@property (readonly) NSUUID *userUUID; // @synthesize userUUID=_userUUID;

+ (id)logCategory;
- (void).cxx_destruct;
- (void)_invalidatePrivateZoneFirstLoadTimer;
- (void)_invalidateSharedZoneFirstLoadTimer;
- (void)_startPrivateZoneFirstLoadTimer;
- (void)_startSharedZoneFirstLoadTimer;
- (void)_startupPrivateZone;
- (void)_startupSharedZone;
- (void)assistantAccessControlModelRemoved:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)assisteantAccessControlModelUpdated:(id)arg1 previousModel:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)configure;
- (void)encodeWithCoder:(id)arg1;
- (void)eventDidInitializePrivateZone;
- (void)eventDidInitializeSharedZone;
- (void)handleAssistantAccessControlAccessoryUUIDsUpdated:(id)arg1 requireAuthenticationForSecureRequests:(BOOL)arg2 completion:(CDUnknownBlockType)arg3;
- (void)handleMediaContentProfileAccessControlUpdatedAccessoryUUIDs:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)handleStartForZoneController:(id)arg1;
- (id)initWithDelegate:(id)arg1 queue:(id)arg2 userID:(id)arg3 homeID:(id)arg4 sharedSettingsController:(id)arg5 privateSettingsController:(id)arg6;
- (id)initWithDelegate:(id)arg1 queue:(id)arg2 userID:(id)arg3 homeID:(id)arg4 sharedSettingsController:(id)arg5 privateSettingsController:(id)arg6 timerCreator:(id)arg7;
- (void)initializePrivateZoneController:(id)arg1 userDataModel:(id)arg2;
- (void)initializeSharedZoneController:(id)arg1 userDataModel:(id)arg2;
- (BOOL)isInitialized;
- (id)logIdentifier;
- (void)mediaContentProfileAccessControlModelRemoved:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)mediaContentProfileAccessControlModelUpdated:(id)arg1 previousModel:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)performFirstRunOperationsOnPrivateZoneController:(id)arg1;
- (void)performFirstRunOperationsOnSharedZoneController:(id)arg1;
- (void)timerDidFire:(id)arg1;

@end

