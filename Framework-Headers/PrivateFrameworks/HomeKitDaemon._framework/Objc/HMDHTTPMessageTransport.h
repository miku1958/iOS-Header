//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <HomeKitDaemon/HMDRemoteMessageTransport.h>

#import <HomeKitDaemon/HMDHTTPClientMessageTransportDelegate-Protocol.h>
#import <HomeKitDaemon/HMDHTTPServerMessageTransportDelegate-Protocol.h>
#import <HomeKitDaemon/HMFNetServiceBrowserDelegate-Protocol.h>

@class HMDHTTPDevice, HMDHTTPServerMessageTransport, HMFNetServiceBrowser, NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSMutableSet, NSObject, NSString;
@protocol HMFLocking, OS_dispatch_queue;

@interface HMDHTTPMessageTransport : HMDRemoteMessageTransport <HMDHTTPServerMessageTransportDelegate, HMFNetServiceBrowserDelegate, HMDHTTPClientMessageTransportDelegate>
{
    id<HMFLocking> _lock;
    NSObject<OS_dispatch_queue> *_queue;
    NSMutableSet *_residentDevices;
    NSMutableSet *_transientDevices;
    NSMutableDictionary *_txtRecord;
    NSMutableArray *_clientTransports;
    BOOL _serverEnabled;
    HMDHTTPDevice *_currentDevice;
    HMDHTTPServerMessageTransport *_serverTransport;
    HMFNetServiceBrowser *_clientBrowser;
}

@property (readonly, copy, nonatomic) NSDictionary *TXTRecord;
@property (readonly, nonatomic) HMFNetServiceBrowser *clientBrowser; // @synthesize clientBrowser=_clientBrowser;
@property (readonly, nonatomic) NSArray *clientTransports;
@property (readonly, nonatomic) HMDHTTPDevice *currentDevice; // @synthesize currentDevice=_currentDevice;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (getter=isServerEnabled) BOOL serverEnabled; // @synthesize serverEnabled=_serverEnabled;
@property (readonly, nonatomic) HMDHTTPServerMessageTransport *serverTransport; // @synthesize serverTransport=_serverTransport;
@property (readonly) Class superclass;

+ (id)logCategory;
+ (id)protocolVersion;
+ (BOOL)protocolVersionSupportsExtendedMessages:(id)arg1;
+ (unsigned long long)restriction;
+ (id)shortDescription;
+ (BOOL)shouldHostMessageServer;
- (void).cxx_destruct;
- (void)_connectToDevice:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_handleReceivedRequestMessage:(id)arg1 fromDevice:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_sendMessage:(id)arg1 destination:(id)arg2 timeout:(double)arg3 responseHandler:(CDUnknownBlockType)arg4;
- (id)_serviceForDevice:(id)arg1;
- (void)_startServerWithDevice:(id)arg1;
- (void)_stopServer;
- (void)addClientTransport:(id)arg1;
- (BOOL)canSendMessage:(id)arg1;
- (void)client:(id)arg1 didReceiveMessage:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)client:(id)arg1 didStopWithError:(id)arg2;
- (id)clientTransportForDevice:(id)arg1;
- (id)clientTransportForService:(id)arg1;
- (void)configureWithDevice:(id)arg1;
- (id)descriptionWithPointer:(BOOL)arg1;
- (id)deviceForHTTPDevice:(id)arg1;
- (void)handleServerEnabled:(BOOL)arg1;
- (id)initWithAccountRegistry:(id)arg1;
- (id)initWithAccountRegistry:(id)arg1 clientBrowser:(id)arg2;
- (BOOL)isDeviceConnected:(id)arg1;
- (id)logIdentifier;
- (void)netServiceBrowser:(id)arg1 didAddService:(id)arg2;
- (void)netServiceBrowser:(id)arg1 didRemoveService:(id)arg2;
- (void)netServiceBrowser:(id)arg1 didStopBrowsingWithError:(id)arg2;
- (long long)qualityOfService;
- (void)removeAllClientTransports;
- (void)removeClientTransport:(id)arg1;
- (void)removeTXTRecordValueForKey:(id)arg1;
- (void)sendMessage:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)server:(id)arg1 didAddDevice:(id)arg2;
- (void)server:(id)arg1 didReceiveMessage:(id)arg2 fromDevice:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)server:(id)arg1 didRemoveDevice:(id)arg2;
- (void)server:(id)arg1 didStopWithError:(id)arg2;
- (void)setCurrentDevice:(id)arg1;
- (void)setServerTransport:(id)arg1;
- (void)setTXTRecordValue:(id)arg1 forKey:(id)arg2;
- (id)shortDescription;
- (void)startObservingIsPublishingForService:(id)arg1;
- (int)transportType;

@end

