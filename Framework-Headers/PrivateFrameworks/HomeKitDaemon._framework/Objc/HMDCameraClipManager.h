//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <HMFoundation/HMFObject.h>

#import <HomeKitDaemon/HMBLocalZoneModelObserver-Protocol.h>
#import <HomeKitDaemon/HMDActiveXPCClientConnectionsPeriodicTimerDelegate-Protocol.h>
#import <HomeKitDaemon/HMDDatabaseZoneManagerDataSource-Protocol.h>
#import <HomeKitDaemon/HMDDatabaseZoneManagerDelegate-Protocol.h>
#import <HomeKitDaemon/HMDLogEventSubmitting-Protocol.h>
#import <HomeKitDaemon/HMFLogging-Protocol.h>
#import <HomeKitDaemon/HMFMessageReceiver-Protocol.h>

@class HMBCloudZone, HMBLocalZone, HMDActiveXPCClientConnectionsPeriodicTimer, HMDCameraClipFeedbackManager, HMDCameraClipsQuotaManager, HMDCameraSignificantEventFaceClassificationResolver, HMDDatabaseZoneManager, HMDLogEventDispatcher, HMFMessageDispatcher, NSObject, NSString, NSUUID;
@protocol HMDCameraClipManagerDelegate, HMDFileManager, OS_dispatch_queue;

@interface HMDCameraClipManager : HMFObject <HMBLocalZoneModelObserver, HMFLogging, HMFMessageReceiver, HMDDatabaseZoneManagerDataSource, HMDDatabaseZoneManagerDelegate, HMDActiveXPCClientConnectionsPeriodicTimerDelegate, HMDLogEventSubmitting>
{
    BOOL _hasWriteAccess;
    id<HMDCameraClipManagerDelegate> _delegate;
    HMBLocalZone *_localZone;
    HMBCloudZone *_cloudZone;
    NSObject<OS_dispatch_queue> *_workQueue;
    HMDDatabaseZoneManager *_zoneManager;
    HMDCameraClipsQuotaManager *_quotaManager;
    HMDCameraSignificantEventFaceClassificationResolver *_faceClassificationResolver;
    HMDActiveXPCClientConnectionsPeriodicTimer *_clientConnectionsTimer;
    HMFMessageDispatcher *_messageDispatcher;
    NSUUID *_cameraProfileUUID;
    id<HMDFileManager> _fileManager;
    HMDCameraClipFeedbackManager *_feedbackManager;
    unsigned long long _fetchBatchLimit;
    CDUnknownBlockType _fetchServerFactory;
}

@property (readonly, copy) NSUUID *cameraProfileUUID; // @synthesize cameraProfileUUID=_cameraProfileUUID;
@property (readonly) HMDActiveXPCClientConnectionsPeriodicTimer *clientConnectionsTimer; // @synthesize clientConnectionsTimer=_clientConnectionsTimer;
@property (strong) HMBCloudZone *cloudZone; // @synthesize cloudZone=_cloudZone;
@property (readonly, copy) NSString *debugDescription;
@property (weak) id<HMDCameraClipManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly) HMDCameraSignificantEventFaceClassificationResolver *faceClassificationResolver; // @synthesize faceClassificationResolver=_faceClassificationResolver;
@property (strong) HMDCameraClipFeedbackManager *feedbackManager; // @synthesize feedbackManager=_feedbackManager;
@property unsigned long long fetchBatchLimit; // @synthesize fetchBatchLimit=_fetchBatchLimit;
@property (copy) CDUnknownBlockType fetchServerFactory; // @synthesize fetchServerFactory=_fetchServerFactory;
@property (readonly) id<HMDFileManager> fileManager; // @synthesize fileManager=_fileManager;
@property (readonly) BOOL hasStartedUpCloudZone;
@property (nonatomic) BOOL hasWriteAccess; // @synthesize hasWriteAccess=_hasWriteAccess;
@property (readonly) unsigned long long hash;
@property (strong) HMBLocalZone *localZone; // @synthesize localZone=_localZone;
@property (readonly) HMDLogEventDispatcher *logEventDispatcher;
@property (readonly) HMFMessageDispatcher *messageDispatcher; // @synthesize messageDispatcher=_messageDispatcher;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property (readonly, nonatomic) NSUUID *messageTargetUUID;
@property (readonly) HMDCameraClipsQuotaManager *quotaManager; // @synthesize quotaManager=_quotaManager;
@property (readonly) Class superclass;
@property (readonly) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property (readonly) HMDDatabaseZoneManager *zoneManager; // @synthesize zoneManager=_zoneManager;

+ (id)logCategory;
+ (double)maximumClipDuration;
- (void).cxx_destruct;
- (void)_cleanUpClipsAndSignificantEventsForInitialStartup:(BOOL)arg1;
- (void)_cleanUpExpiredClips;
- (void)_cleanUpIncompleteClipsForInitialStartup:(BOOL)arg1;
- (void)_cleanUpOrphanedSignficantEvents;
- (id)_faceClassificationsForSignificantEventWithUUID:(id)arg1;
- (void)_fetchAssetContextForMessage:(id)arg1 propertyName:(id)arg2;
- (id)_fetchAssetContextForProperty:(id)arg1 forClipModel:(id)arg2;
- (id)_fetchCanonicalHeroFrameURLForClipModel:(id)arg1;
- (BOOL)_fetchClipsWithDateInterval:(id)arg1 isAscending:(BOOL)arg2 error:(id *)arg3 handler:(CDUnknownBlockType)arg4;
- (id)_fetchFaceCropURLForSignificantEventModel:(id)arg1;
- (id)_fetchHeroFrameURLForSignificantEventModel:(id)arg1;
- (BOOL)_fetchSignificantEventsWithDateInterval:(id)arg1 isAscending:(BOOL)arg2 error:(id *)arg3 handler:(CDUnknownBlockType)arg4;
- (void)_handleChangedClipModel:(id)arg1 wasCreated:(BOOL)arg2 mirrorOutputFuture:(id)arg3;
- (void)_handleChangedFaceClassificationModel:(id)arg1;
- (void)_handleChangedSignificantEventNotificationModel:(id)arg1 mirrorOutputFuture:(id)arg2;
- (id)_handleFaceMisclassificationForFaceCropURL:(id)arg1 personUUID:(id)arg2 personManagerUUID:(id)arg3 significantEventModel:(id)arg4;
- (void)_notifyForChangedSignificantEventModel:(id)arg1 mirrorOutputFuture:(id)arg2;
- (void)_notifyPrimaryResidentAboutFaceMisclassificationForFaceCropData:(id)arg1 personUUID:(id)arg2 personManagerUUID:(id)arg3;
- (void)_notifyTransportsOfUpdatedClips:(id)arg1 removedClipUUIDs:(id)arg2;
- (void)_notifyTransportsOfUpdatedSignificantEvents:(id)arg1 removedSignificantEventUUIDs:(id)arg2;
- (id)_performCloudPull;
- (void)_removeAllFaceClassificationModels;
- (id)_removeClipsWithUUIDs:(id)arg1 options:(id)arg2;
- (id)_significantEventFromSignificantEventModel:(id)arg1;
- (id)_significantEventModelsForClipWithUUID:(id)arg1;
- (id)_significantEventModelsWithUUIDs:(id)arg1;
- (id)_significantEventsWithUUIDs:(id)arg1;
- (BOOL)areShareModificationsEnabledForManager:(id)arg1;
- (void)cleanUpClipsAndSignificantEvents;
- (void)clientConnectionsTimerDidFire:(id)arg1;
- (void)configureWithHome:(id)arg1;
- (id)disableCloudStorage;
- (id)enableCloudStorage;
- (id)fetchHeroFrameURLForSignificantEventWithUUID:(id)arg1;
- (void)handleDeleteAllClipsMessage:(id)arg1;
- (void)handleDeleteClipMessage:(id)arg1;
- (void)handleFetchClipForSignificantEventMessage:(id)arg1;
- (void)handleFetchClipMessage:(id)arg1;
- (void)handleFetchClipsMessage:(id)arg1;
- (void)handleFetchCountOfClipsMessage:(id)arg1;
- (void)handleFetchFaceCropDataRepresentationMessage:(id)arg1;
- (void)handleFetchFaceCropURLMessage:(id)arg1;
- (void)handleFetchHeroFrameDataRepresentationMessage:(id)arg1;
- (void)handleFetchHeroFrameURLMessage:(id)arg1;
- (void)handleFetchPosterFramesAssetContextMessage:(id)arg1;
- (void)handleFetchSignificantEventsMessage:(id)arg1;
- (void)handleFetchVideoSegmentsAssetContextMessage:(id)arg1;
- (void)handleHandleFaceMisclassificationMessage:(id)arg1;
- (void)handleHomePersonManagerSettingsDidChangeNotification:(id)arg1;
- (void)handleImportClipsMessage:(id)arg1;
- (void)handlePerformCloudPullMessage:(id)arg1;
- (void)handleRemoteHandleFaceMisclassificationMessage:(id)arg1;
- (void)handleSubscribeMessage:(id)arg1;
- (void)handleUnsubscribeMessage:(id)arg1;
- (void)handleUserCamerasAccessLevelDidChangeNotification:(id)arg1;
- (void)handleUserPrivilegeDidChangeNotification:(id)arg1;
- (void)handleUserRemoteAccessDidChangeNotification:(id)arg1;
- (id)heroFrameURLForSignificantEventWithUUID:(id)arg1;
- (id)home;
- (id)initWithCameraProfile:(id)arg1;
- (id)initWithZoneManager:(id)arg1 quotaManager:(id)arg2 faceClassificationResolver:(id)arg3 clientConnectionsTimer:(id)arg4 messageDispatcher:(id)arg5 workQueue:(id)arg6 cameraProfileUUID:(id)arg7 fileManager:(id)arg8;
- (id)localZone:(id)arg1 didProcessModelCreation:(id)arg2;
- (id)localZone:(id)arg1 didProcessModelDeletion:(id)arg2;
- (id)localZone:(id)arg1 didProcessModelUpdate:(id)arg2;
- (id)logIdentifier;
- (BOOL)manager:(id)arg1 shouldGrantWriteAccessToUser:(id)arg2;
- (BOOL)manager:(id)arg1 shouldShareWithUser:(id)arg2;
- (id)performCloudPull;
- (id)remove;
- (id)significantEventsForClipContainingDate:(id)arg1;
- (id)significantEventsForClipWithUUID:(id)arg1;
- (id)significantEventsWithDateInterval:(id)arg1;
- (void)submitLogEvent:(id)arg1 error:(id)arg2;
- (void)zoneManager:(id)arg1 didReceiveMessageWithUserInfo:(id)arg2;
- (BOOL)zoneManager:(id)arg1 shouldRequestShareInvitationFromUser:(id)arg2;
- (void)zoneManagerDidStart:(id)arg1;
- (void)zoneManagerDidStop:(id)arg1;

@end

