//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <HomeKitDaemon/HMDCameraParameterSelectionBase.h>

@class HMDAudioCodecGroup, HMDAudioSampleRate, HMDBitRateSetting, HMDCameraAudioParameterCombination, HMDSelectedAudioParameters, HMDStreamingCapabilities, HMDSupportedAudioStreamConfiguration, HMDSupportedRTPConfiguration, NSArray, NSNumber;

@interface HMDCameraAudioParameterSelection : HMDCameraParameterSelectionBase
{
    HMDSupportedAudioStreamConfiguration *_supportedAudioStreamConfiguration;
    HMDSupportedRTPConfiguration *_rtpConfiguration;
    HMDSelectedAudioParameters *_selectedAudioParameters;
    HMDStreamingCapabilities *_streamingCapabilities;
    NSArray *_audioCodecsPreference;
    NSArray *_bitrateSettingsPreference;
    NSArray *_sampleRatesPreference;
    NSArray *_validAudioParameterCombinations;
    HMDAudioCodecGroup *_selectedCodecGroupType;
    HMDBitRateSetting *_selectedBitRateSetting;
    HMDAudioSampleRate *_selectedSampleRate;
    NSNumber *_selectedAudioChannelCount;
    HMDCameraAudioParameterCombination *_selectedAudioParameterCombination;
    NSNumber *_comfortNoiseSupported;
}

@property (readonly, nonatomic) NSArray *audioCodecsPreference; // @synthesize audioCodecsPreference=_audioCodecsPreference;
@property (readonly, nonatomic) NSArray *bitrateSettingsPreference; // @synthesize bitrateSettingsPreference=_bitrateSettingsPreference;
@property (strong, nonatomic) NSNumber *comfortNoiseSupported; // @synthesize comfortNoiseSupported=_comfortNoiseSupported;
@property (readonly, nonatomic) HMDSupportedRTPConfiguration *rtpConfiguration; // @synthesize rtpConfiguration=_rtpConfiguration;
@property (readonly, nonatomic) NSArray *sampleRatesPreference; // @synthesize sampleRatesPreference=_sampleRatesPreference;
@property (strong, nonatomic) NSNumber *selectedAudioChannelCount; // @synthesize selectedAudioChannelCount=_selectedAudioChannelCount;
@property (strong, nonatomic) HMDCameraAudioParameterCombination *selectedAudioParameterCombination; // @synthesize selectedAudioParameterCombination=_selectedAudioParameterCombination;
@property (strong, nonatomic) HMDSelectedAudioParameters *selectedAudioParameters; // @synthesize selectedAudioParameters=_selectedAudioParameters;
@property (strong, nonatomic) HMDBitRateSetting *selectedBitRateSetting; // @synthesize selectedBitRateSetting=_selectedBitRateSetting;
@property (strong, nonatomic) HMDAudioCodecGroup *selectedCodecGroupType; // @synthesize selectedCodecGroupType=_selectedCodecGroupType;
@property (strong, nonatomic) HMDAudioSampleRate *selectedSampleRate; // @synthesize selectedSampleRate=_selectedSampleRate;
@property (readonly, nonatomic) HMDStreamingCapabilities *streamingCapabilities; // @synthesize streamingCapabilities=_streamingCapabilities;
@property (readonly, nonatomic) HMDSupportedAudioStreamConfiguration *supportedAudioStreamConfiguration; // @synthesize supportedAudioStreamConfiguration=_supportedAudioStreamConfiguration;
@property (readonly, nonatomic) NSArray *validAudioParameterCombinations; // @synthesize validAudioParameterCombinations=_validAudioParameterCombinations;

+ (id)logCategory;
- (void).cxx_destruct;
- (void)_generateAllCombinations:(id)arg1;
- (BOOL)_selectParametersFromCodec:(id)arg1 bitRateSettings:(id)arg2 sampleRates:(id)arg3 audioChannelCount:(id)arg4;
- (id)createSRTPParamters;
- (id)createSelectedAudioParameters;
- (id)initWithSessionID:(id)arg1 supportedAudioConfiguration:(id)arg2 supportedRTPConfiguration:(id)arg3 streamingCapabilities:(id)arg4;
- (id)logIdentifier;
- (BOOL)selectAudioParameters;

@end

