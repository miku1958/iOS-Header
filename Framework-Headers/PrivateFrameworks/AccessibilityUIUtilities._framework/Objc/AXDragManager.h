//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <AccessibilityUIUtilities/AXDragEndpointVendorDelegate-Protocol.h>
#import <AccessibilityUIUtilities/AXDragSessionDelegate-Protocol.h>
#import <AccessibilityUIUtilities/AXDragSessionDragManager-Protocol.h>
#import <AccessibilityUIUtilities/NSXPCListenerDelegate-Protocol.h>

@class AXDispatchTimer, AXDragEndpointVendor, AXDragSession, NSMutableArray, NSString, NSXPCListener;
@protocol AXDragManagerDelegate, OS_dispatch_queue;

@interface AXDragManager : NSObject <AXDragEndpointVendorDelegate, NSXPCListenerDelegate, AXDragSessionDragManager, AXDragSessionDelegate>
{
    AXDragEndpointVendor *_vendor;
    NSXPCListener *_endpointListener;
    NSMutableArray *_activeSessions;
    NSObject<OS_dispatch_queue> *_dragStateQueue;
    int _pidForDrag;
    id<AXDragManagerDelegate> _delegate;
    NSString *_machServiceName;
    CDUnknownBlockType _dragStartCompletionHandler;
    AXDispatchTimer *_dragStartTimer;
    AXDragSession *_dragSession;
}

@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<AXDragManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (strong, nonatomic) AXDragSession *dragSession; // @synthesize dragSession=_dragSession;
@property (copy, nonatomic) CDUnknownBlockType dragStartCompletionHandler; // @synthesize dragStartCompletionHandler=_dragStartCompletionHandler;
@property (strong, nonatomic) AXDispatchTimer *dragStartTimer; // @synthesize dragStartTimer=_dragStartTimer;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) BOOL isDragActive;
@property (readonly, nonatomic) NSString *machServiceName; // @synthesize machServiceName=_machServiceName;
@property (nonatomic) int pidForDrag; // @synthesize pidForDrag=_pidForDrag;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (BOOL)_shouldAllowEndpointVendForRequestingConnection:(id)arg1;
- (void)cancelDrag;
- (void)dragSession:(id)arg1 movedToPoint:(struct CGPoint)arg2 byRequestor:(id)arg3;
- (void)dragSessionChanged:(id)arg1 toStatus:(id)arg2;
- (void)dragSessionEnded:(id)arg1 withOperation:(unsigned long long)arg2;
- (void)dragSessionWasTerminated:(id)arg1;
- (void)drop;
- (id)endpointForRequestingConnection:(id)arg1 fromEndpointVendor:(id)arg2;
- (id)initWithMachServiceName:(id)arg1;
- (BOOL)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (void)moveToAndDropAtPoint:(struct CGPoint)arg1;
- (void)moveToPoint:(struct CGPoint)arg1;
- (void)sessionWasTerminated:(id)arg1;
- (void)waitForDragStartFromPid:(int)arg1 completionHandler:(CDUnknownBlockType)arg2;

@end

