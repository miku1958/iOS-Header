//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSURL, PVClusterer, PVContext, PVEventManager, PVFaceMerger, PVVisionAnalyzer;
@protocol PVNotificationListener, PVPersistenceDelegate, PVVisionIntegrating;

@interface PhotoVision : NSObject
{
    id<PVVisionIntegrating> _visionIntegration;
    id<PVNotificationListener> _notificationListener;
    id<PVPersistenceDelegate> _persistenceDelegate;
    PVContext *_context;
    PVVisionAnalyzer *_analyzer;
    PVFaceMerger *_faceMerger;
    PVEventManager *_eventManager;
    PVClusterer *_clusterer;
    NSURL *_cacheDirUrl;
    unsigned int _faceAlgorithmUmbrellaVersion;
    unsigned int _sceneAlgorithmUmbrellaVersion;
}

@property (readonly, nonatomic) unsigned int faceAlgorithmUmbrellaVersion; // @synthesize faceAlgorithmUmbrellaVersion=_faceAlgorithmUmbrellaVersion;
@property (readonly, nonatomic) unsigned int sceneAlgorithmUmbrellaVersion; // @synthesize sceneAlgorithmUmbrellaVersion=_sceneAlgorithmUmbrellaVersion;

+ (int)_intValueForKey:(id)arg1 defaultValue:(int)arg2;
+ (unsigned long long)defaultFaceAnalysisOptionsForFaceAlgorithmUmbrellaVersion:(unsigned int)arg1;
+ (unsigned long long)faceprintAnalysisOptionsForFaceAlgorithmUmbrellaVersion:(unsigned int)arg1;
+ (BOOL)isAppleInternal;
+ (unsigned int)maximumFaceAlgorithmUmbrellaVersion;
+ (unsigned int)maximumSceneAlgorithmUmbrellaVersion;
+ (unsigned int)minimumFaceAlgorithmUmbrellaVersion;
+ (unsigned int)minimumSceneAlgorithmUmbrellaVersion;
+ (void)setAlgorithmRevisionForRequest:(id)arg1 algorithmUmbrellaVersion:(unsigned int)arg2 algorithmCollectionType:(unsigned long long)arg3;
+ (id)supportedFaceAlgorithmUmbrellaVersions;
+ (id)supportedSceneAlgorithmUmbrellaVersions;
- (void).cxx_destruct;
- (id)analyzeImage:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (BOOL)buildPersonsWithCanceler:(id)arg1 keyFaceUpdateBlock:(CDUnknownBlockType)arg2 extendTimeoutBlock:(CDUnknownBlockType)arg3 error:(id *)arg4;
- (void)cancelAllSuggestionRequests;
- (void)cancelFaceClustering;
- (void)cancelSuggestionRequest:(id)arg1;
- (BOOL)clustererIsReadyToReturnSuggestions;
- (long long)clustererState;
- (id)clusteringStatus;
- (id)context;
- (id)differencesBetweenClustersInClusterCacheAndLibrary:(id *)arg1;
- (BOOL)getFaceClusters:(id *)arg1 clusteringThreshold:(double *)arg2 utilizingGPU:(BOOL *)arg3 error:(id *)arg4;
- (id)initWithPersistenceDelegate:(id)arg1 visionIntegration:(id)arg2 workingDirectoryURL:(id)arg3 faceAlgorithmUmbrellaVersion:(unsigned int)arg4 sceneAlgorithmUmbrellaVersion:(unsigned int)arg5 notificationListener:(id)arg6;
- (id)mergeExistingFaces:(id)arg1 withDetectedFaces:(id)arg2 forImage:(id)arg3;
- (unsigned long long)numberOfFacesPendingClustering;
- (void)performFaceClusteringAndWait;
- (void)performFaceClusteringIfNecessaryAndWait;
- (void)performFaceClusteringWithCompletion:(CDUnknownBlockType)arg1;
- (BOOL)reclusterFacesWithThreshold:(id)arg1 shouldRecluster:(BOOL)arg2 withContext:(id)arg3 error:(id *)arg4;
- (id)requestSuggestionsForFaceClusterSequenceNumbers:(id)arg1 withClusteringFlags:(id)arg2 updateHandler:(CDUnknownBlockType)arg3 error:(id *)arg4;
- (void)resetClusterer;
- (BOOL)resetFaceClusteringStateWithContext:(id)arg1 error:(id *)arg2;
- (void)scheduleClusteringOfFacesWithLocalIdentifiers:(id)arg1;
- (void)scheduleUnclusteringOfFacesWithClusterSequenceNumbers:(id)arg1;
- (void)startAndSyncClusterCacheWithLibrary:(BOOL)arg1 reply:(CDUnknownBlockType)arg2;
- (void)stop;
- (id)suggestedPersonLocalIdentifierForFaceLocalIdentifier:(id)arg1 error:(id *)arg2;
- (id)suggestedPersonLocalIdentifierForPersonLocalIdentifier:(id)arg1 error:(id *)arg2;
- (id)suggestionsForFaceClusterSequenceNumbers:(id)arg1 error:(id *)arg2;

@end

