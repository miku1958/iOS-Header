//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <StoreBookkeeper/SBKSyncRequestHandler.h>

#import <StoreBookkeeper/SBKSyncTransactionProcessing-Protocol.h>
#import <StoreBookkeeper/SBKTransactionControllerDelegate-Protocol.h>

@class NSDictionary, NSError, NSMutableDictionary, NSObject, NSString, SBKSyncTransaction, SBKTransactionController;
@protocol OS_dispatch_queue, SBKUniversalPlaybackPositionDataSource, SBKUniversalPlaybackPositionTransactionContext;

__attribute__((visibility("hidden")))
@interface SBKPlaybackPositionSyncRequestHandler : SBKSyncRequestHandler <SBKTransactionControllerDelegate, SBKSyncTransactionProcessing>
{
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_dispatch_queue> *_syncOperationQueue;
    BOOL _syncInProgress;
    BOOL _canceled;
    id<SBKUniversalPlaybackPositionDataSource> _dataSource;
    SBKTransactionController *_kvsController;
    id<SBKUniversalPlaybackPositionTransactionContext> _dataSourceTransactionContext;
    NSMutableDictionary *_metadataItemsFromDataSource;
    NSDictionary *_metadataItemsToCommitToDataSource;
    NSDictionary *_metadataItemsToCommitToKVSStorage;
    NSMutableDictionary *_responseMetadataItemsToCommitToDataSource;
    NSMutableDictionary *_responseMetadataItemsMergedToCommitBackToKVSStorage;
    SBKSyncTransaction *_currentKVSTransaction;
    NSError *_fatalSyncError;
    NSString *_overrideSyncAnchor;
}

@property BOOL canceled; // @synthesize canceled=_canceled;
@property (strong) SBKSyncTransaction *currentKVSTransaction; // @synthesize currentKVSTransaction=_currentKVSTransaction;
@property (strong) id<SBKUniversalPlaybackPositionDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property (strong) id<SBKUniversalPlaybackPositionTransactionContext> dataSourceTransactionContext; // @synthesize dataSourceTransactionContext=_dataSourceTransactionContext;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (strong) NSError *fatalSyncError; // @synthesize fatalSyncError=_fatalSyncError;
@property (readonly) unsigned long long hash;
@property (strong) SBKTransactionController *kvsController; // @synthesize kvsController=_kvsController;
@property (strong) NSMutableDictionary *metadataItemsFromDataSource; // @synthesize metadataItemsFromDataSource=_metadataItemsFromDataSource;
@property (strong) NSDictionary *metadataItemsToCommitToDataSource; // @synthesize metadataItemsToCommitToDataSource=_metadataItemsToCommitToDataSource;
@property (strong) NSDictionary *metadataItemsToCommitToKVSStorage; // @synthesize metadataItemsToCommitToKVSStorage=_metadataItemsToCommitToKVSStorage;
@property (strong) NSString *overrideSyncAnchor; // @synthesize overrideSyncAnchor=_overrideSyncAnchor;
@property (strong) NSMutableDictionary *responseMetadataItemsMergedToCommitBackToKVSStorage; // @synthesize responseMetadataItemsMergedToCommitBackToKVSStorage=_responseMetadataItemsMergedToCommitBackToKVSStorage;
@property (strong) NSMutableDictionary *responseMetadataItemsToCommitToDataSource; // @synthesize responseMetadataItemsToCommitToDataSource=_responseMetadataItemsToCommitToDataSource;
@property (readonly) Class superclass;
@property BOOL syncInProgress; // @synthesize syncInProgress=_syncInProgress;

- (void).cxx_destruct;
- (void)_dataSourceCancelTransaction;
- (int)_mergeConflictedItemFromSyncResponse:(id)arg1;
- (void)_mergeMetadataItemsFromSyncResponse;
- (BOOL)_shouldStop;
- (void)_signalKVSTransactionCompletion:(id)arg1;
- (void)_signalKVSTransactionCompletion:(id)arg1 withError:(id)arg2;
- (BOOL)_synchronize:(id *)arg1;
- (id)_synchronouslyRunKVSTransaction:(id)arg1;
- (void)cancel;
- (void)cancelWithError:(id)arg1;
- (void)clearTransactionResponseData;
- (id)initWithDataSource:(id)arg1 bagContext:(id)arg2;
- (id)newKVSSyncTransactionWithUpdatedMetadataItemIdentifiers:(id)arg1 processConflicts:(BOOL)arg2;
- (void)synchronizeWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)timeout;
- (id)transaction:(id)arg1 conflictDetectionOrdinalForKey:(id)arg2;
- (void)transaction:(id)arg1 didProcessResponseData:(id)arg2;
- (id)transaction:(id)arg1 keyValuePairForUpdatedKey:(id)arg2;
- (void)transaction:(id)arg1 processDeletedKey:(id)arg2 isDirty:(BOOL *)arg3;
- (void)transaction:(id)arg1 processUpdatedKey:(id)arg2 data:(id)arg3 conflict:(BOOL)arg4 isDirty:(BOOL *)arg5;
- (id)transaction:(id)arg1 syncAnchorForTransactionSyncAnchor:(id)arg2;
- (void)transaction:(id)arg1 willProcessResponseData:(id)arg2;
- (void)transactionController:(id)arg1 transactionDidCancel:(id)arg2 error:(id)arg3;
- (BOOL)transactionController:(id)arg1 transactionDidFail:(id)arg2 error:(id)arg3;
- (void)transactionController:(id)arg1 transactionDidFinish:(id)arg2;

@end

