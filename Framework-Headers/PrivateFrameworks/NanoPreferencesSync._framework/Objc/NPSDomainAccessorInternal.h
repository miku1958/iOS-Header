//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <NanoPreferencesSync/NPSDomainAccessorFilePresenterDelegate-Protocol.h>

@class NPSDomainAccessorFilePresenter, NSMutableDictionary, NSMutableSet, NSString, NSURL, NSUUID;
@protocol OS_dispatch_queue;

@interface NPSDomainAccessorInternal : NSObject <NPSDomainAccessorFilePresenterDelegate>
{
    BOOL _nanoSettingsDirectoryExists;
    BOOL _hasReadFromDisk;
    NSUUID *_pairingID;
    NSString *_pairingStorePath;
    NSString *_domain;
    NSURL *_domainURL;
    NSObject<OS_dispatch_queue> *_internalQueue;
    NSObject<OS_dispatch_queue> *_externalQueue;
    unsigned long long _referenceCounter;
    NSMutableSet *_dirtyKeysForWriting;
    NSMutableDictionary *_map;
    NPSDomainAccessorFilePresenter *_filePresenter;
}

@property (strong, nonatomic) NSMutableSet *dirtyKeysForWriting; // @synthesize dirtyKeysForWriting=_dirtyKeysForWriting;
@property (strong, nonatomic) NSString *domain; // @synthesize domain=_domain;
@property (strong, nonatomic) NSURL *domainURL; // @synthesize domainURL=_domainURL;
@property (strong, nonatomic) NSObject<OS_dispatch_queue> *externalQueue; // @synthesize externalQueue=_externalQueue;
@property (strong, nonatomic) NPSDomainAccessorFilePresenter *filePresenter; // @synthesize filePresenter=_filePresenter;
@property (nonatomic) BOOL hasReadFromDisk; // @synthesize hasReadFromDisk=_hasReadFromDisk;
@property (strong, nonatomic) NSObject<OS_dispatch_queue> *internalQueue; // @synthesize internalQueue=_internalQueue;
@property (strong, nonatomic) NSMutableDictionary *map; // @synthesize map=_map;
@property (nonatomic) BOOL nanoSettingsDirectoryExists; // @synthesize nanoSettingsDirectoryExists=_nanoSettingsDirectoryExists;
@property (strong, nonatomic) NSUUID *pairingID; // @synthesize pairingID=_pairingID;
@property (strong, nonatomic) NSString *pairingStorePath; // @synthesize pairingStorePath=_pairingStorePath;
@property (nonatomic) unsigned long long referenceCounter; // @synthesize referenceCounter=_referenceCounter;

+ (void)applicationDidEnterBackground;
+ (void)applicationDidResume;
+ (id)cfTypeNameForCFPropertyListRef:(void *)arg1;
+ (id)copyDomainListForPairingDataStore:(id)arg1;
+ (void)decrementInternalAccessorReferenceCount:(id)arg1;
+ (BOOL)domainIsValid:(id)arg1;
+ (void)extensionDidBecomeActive;
+ (void)extensionWillResignActive;
+ (void)initialize;
+ (id)internalAccessorForPairingID:(id)arg1 pairingDataStore:(id)arg2 domain:(id)arg3;
+ (void)invalidateAndReleaseUnreferencedAccessors;
+ (void)mergeDirtyKeys:(id)arg1 fromDictionary:(id)arg2 toDictionary:(id)arg3;
+ (id)readDomainURL:(id)arg1 withError:(id *)arg2;
+ (id)urlForDomain:(id)arg1 pairingDataStore:(id)arg2;
+ (BOOL)valueIsValid:(id)arg1;
+ (id)writeDomain:(id)arg1 toURL:(id)arg2;
- (void).cxx_destruct;
- (id)URLForKey:(id)arg1;
- (id)_copyKeyList;
- (id)_dictionaryRepresentation;
- (void)_invalidatePresenter;
- (id)_objectForKey:(id)arg1 error:(id *)arg2;
- (void)_setObject:(id)arg1 forKey:(id)arg2;
- (id)_synchronizeReadOnly:(BOOL)arg1;
- (id)arrayForKey:(id)arg1;
- (BOOL)boolForKey:(id)arg1;
- (BOOL)boolForKey:(id)arg1 keyExistsAndHasValidFormat:(BOOL *)arg2;
- (id)canSynchronizeForReadingURL:(id)arg1;
- (id)canSynchronizeForWritingURL:(id)arg1 readFirst:(BOOL)arg2;
- (id)copyKeyList;
- (id)createNanoSettingsDirectory;
- (id)dataForKey:(id)arg1;
- (void)dealloc;
- (id)dictionaryForKey:(id)arg1;
- (id)dictionaryRepresentation;
- (double)doubleForKey:(id)arg1;
- (double)doubleForKey:(id)arg1 keyExistsAndHasValidFormat:(BOOL *)arg2;
- (void)filePresenterBecameNonCurrent:(id)arg1;
- (float)floatForKey:(id)arg1;
- (float)floatForKey:(id)arg1 keyExistsAndHasValidFormat:(BOOL *)arg2;
- (id)initWithPairingID:(id)arg1 pairingDataStore:(id)arg2 domain:(id)arg3;
- (long long)integerForKey:(id)arg1;
- (long long)integerForKey:(id)arg1 keyExistsAndHasValidFormat:(BOOL *)arg2;
- (void)invalidatePresenter;
- (long long)longForKey:(id)arg1;
- (long long)longForKey:(id)arg1 keyExistsAndHasValidFormat:(BOOL *)arg2;
- (id)objectForKey:(id)arg1;
- (void)objectForKey:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)removeObjectForKey:(id)arg1;
- (void)setBool:(BOOL)arg1 forKey:(id)arg2;
- (void)setDouble:(double)arg1 forKey:(id)arg2;
- (void)setFloat:(float)arg1 forKey:(id)arg2;
- (void)setInteger:(long long)arg1 forKey:(id)arg2;
- (void)setLong:(long long)arg1 forKey:(id)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)setURL:(id)arg1 forKey:(id)arg2;
- (id)stringArrayForKey:(id)arg1;
- (id)stringForKey:(id)arg1;
- (id)synchronize;
- (void)synchronizeWithCompletionHandler:(CDUnknownBlockType)arg1;

@end

