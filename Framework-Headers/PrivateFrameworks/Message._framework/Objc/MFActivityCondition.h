//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <Message/MFActivityCondition-Protocol.h>
#import <Message/MFActivityConditionBuilder-Protocol.h>

@class MFCancelationToken, MFObservable, NSString;
@protocol MFScheduler;

@interface MFActivityCondition : NSObject <MFActivityConditionBuilder, MFActivityCondition>
{
    BOOL _requireExternalPower;
    BOOL _requireWiFi;
    BOOL _requireScreenLocked;
    BOOL _requireLowPowerModeDisabled;
    BOOL _satisfied;
    float _minBatteryLevel;
    long long _maxThermalPressureLevel;
    MFCancelationToken *_cancellationToken;
    id<MFScheduler> _scheduler;
}

@property (strong, nonatomic) MFCancelationToken *cancellationToken; // @synthesize cancellationToken=_cancellationToken;
@property (readonly, nonatomic) MFObservable *conditionsObservable;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long maxThermalPressureLevel; // @synthesize maxThermalPressureLevel=_maxThermalPressureLevel;
@property (nonatomic) float minBatteryLevel; // @synthesize minBatteryLevel=_minBatteryLevel;
@property (nonatomic) BOOL requireExternalPower; // @synthesize requireExternalPower=_requireExternalPower;
@property (nonatomic) BOOL requireLowPowerModeDisabled; // @synthesize requireLowPowerModeDisabled=_requireLowPowerModeDisabled;
@property (nonatomic) BOOL requireScreenLocked; // @synthesize requireScreenLocked=_requireScreenLocked;
@property (nonatomic) BOOL requireWiFi; // @synthesize requireWiFi=_requireWiFi;
@property (nonatomic, getter=isSatisfied) BOOL satisfied; // @synthesize satisfied=_satisfied;
@property (strong, nonatomic) id<MFScheduler> scheduler; // @synthesize scheduler=_scheduler;
@property (readonly) Class superclass;

+ (id)alwaysSatisfiedCondition;
- (void).cxx_destruct;
- (BOOL)_isValidConfiguration;
- (void)dealloc;
- (id)init;
- (id)initWithBuilder:(CDUnknownBlockType)arg1;

@end

