//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <Sharing/SFCompanionServiceManagerClient-Protocol.h>
#import <Sharing/SFCompanionXPCManagerObserver-Protocol.h>

@class NSMutableDictionary, NSString;
@protocol OS_dispatch_queue, OS_dispatch_semaphore, SFCompanionServiceManagerProtocol;

@interface SFCompanionManager : NSObject <SFCompanionServiceManagerClient, SFCompanionXPCManagerObserver>
{
    NSString *_identifier;
    id<SFCompanionServiceManagerProtocol> _managerProxy;
    NSString *_deviceID;
    NSString *_deviceIP;
    NSString *_deviceName;
    NSMutableDictionary *_services;
    NSMutableDictionary *_streamHandlers;
    NSObject<OS_dispatch_queue> *_serviceIdentifierQueue;
    NSObject<OS_dispatch_semaphore> *_managerSemaphore;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (copy) NSString *deviceID; // @synthesize deviceID=_deviceID;
@property (copy) NSString *deviceIP; // @synthesize deviceIP=_deviceIP;
@property (copy) NSString *deviceName; // @synthesize deviceName=_deviceName;
@property (readonly) unsigned long long hash;
@property (copy) NSString *identifier; // @synthesize identifier=_identifier;
@property (strong) id<SFCompanionServiceManagerProtocol> managerProxy; // @synthesize managerProxy=_managerProxy;
@property (strong) NSObject<OS_dispatch_semaphore> *managerSemaphore; // @synthesize managerSemaphore=_managerSemaphore;
@property (strong) NSObject<OS_dispatch_queue> *serviceIdentifierQueue; // @synthesize serviceIdentifierQueue=_serviceIdentifierQueue;
@property (strong) NSMutableDictionary *services; // @synthesize services=_services;
@property (strong) NSMutableDictionary *streamHandlers; // @synthesize streamHandlers=_streamHandlers;
@property (readonly) Class superclass;

+ (id)serviceManager;
- (void).cxx_destruct;
- (void)dealloc;
- (void)disableStreamSupportForIdentifier:(id)arg1;
- (void)getStreamsForData:(id)arg1 withStreamHandler:(CDUnknownBlockType)arg2;
- (id)init;
- (void)retrieveManagerProxy;
- (id)serviceForIdentifier:(id)arg1;
- (void)signalSemaphore;
- (id)streamDataForIdentifier:(id)arg1;
- (void)streamToService:(id)arg1 withFileHandle:(id)arg2 acceptReply:(CDUnknownBlockType)arg3;
- (void)streamsFromFileHandle:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)supportStreamsWithIdentifier:(id)arg1 withStreamHandler:(CDUnknownBlockType)arg2;
- (void)xpcManagerConnectionInterrupted;
- (void)xpcManagerDidInvalidate:(id)arg1;

@end

