//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSDictionary, NSMutableDictionary, NSString, PETAggregateState, PETConfig, RBSAssertion, RBSTarget;
@protocol OS_dispatch_queue;

@interface PETEventTracker2 : NSObject
{
    PETAggregateState *_aggregateState;
    NSObject<OS_dispatch_queue> *_loggingQueue;
    int _loggingQueueSize;
    struct _opaque_pthread_mutex_t _loggingQueueLock;
    BOOL _inited;
    RBSTarget *_rbsTarget;
    RBSAssertion *_rbsAssertion;
    BOOL _rbsShouldInvalidate;
    struct _opaque_pthread_mutex_t _rbsAssertionLock;
    BOOL _isDaemon;
    BOOL _isAsyncEnabled;
    NSString *_rootDir;
    NSString *_logStoresDir;
    PETConfig *_config;
    NSMutableDictionary *_storeCache;
    NSDictionary *_pet1HistogramBuckets;
}

@property (readonly, nonatomic) PETAggregateState *aggregateState; // @synthesize aggregateState=_aggregateState;
@property (strong) PETConfig *config; // @synthesize config=_config;
@property BOOL isAsyncEnabled; // @synthesize isAsyncEnabled=_isAsyncEnabled;
@property (strong) NSString *logStoresDir; // @synthesize logStoresDir=_logStoresDir;
@property (strong) NSDictionary *pet1HistogramBuckets; // @synthesize pet1HistogramBuckets=_pet1HistogramBuckets;
@property (strong) NSString *rootDir; // @synthesize rootDir=_rootDir;
@property (strong) NSMutableDictionary *storeCache; // @synthesize storeCache=_storeCache;

+ (BOOL)_isPET1Key:(id)arg1;
+ (id)defaultRootDir;
+ (id)formattedTextForAggregatedMessage:(id)arg1;
+ (id)formattedTextForUnaggregatedMessage:(id)arg1 messageGroup:(id)arg2 config:(id)arg3;
+ (double)roundToSigFigs:(double)arg1 sigFigs:(unsigned long long)arg2;
+ (id)sharedInstance;
+ (unsigned int)typeIdForMessageName:(id)arg1;
- (void).cxx_destruct;
- (void)_dispatchAsyncForLogging:(CDUnknownBlockType)arg1 txnName:(const char *)arg2;
- (id)_findBucketsForPET1Key:(id)arg1;
- (id)_getLogStore:(id)arg1;
- (void)_init;
- (void)_initWithRootDir:(id)arg1 config:(id)arg2;
- (void)_logMessage:(id)arg1 subGroup:(id)arg2;
- (double)_roundToSigFigs:(double)arg1 forRawMessage:(id)arg2;
- (void)_runBlockWithRBSAssertion:(CDUnknownBlockType)arg1;
- (void)_trackDistributionForMessage:(id)arg1 value:(double)arg2;
- (void)_trackScalarForMessage:(id)arg1 count:(int)arg2 overwrite:(BOOL)arg3;
- (id)_writeMessage:(id)arg1;
- (void)clearLogStores;
- (void)enumerateAggregatedMessagesWithBlock:(CDUnknownBlockType)arg1 clearStore:(BOOL)arg2;
- (void)enumerateMessageGroups:(CDUnknownBlockType)arg1;
- (void)enumerateMessagesWithBlock:(CDUnknownBlockType)arg1 clearStore:(BOOL)arg2;
- (void)enumerateMessagesWithBlock:(CDUnknownBlockType)arg1 messageGroup:(id)arg2 clearStore:(BOOL)arg3;
- (id)initForTestingWithRootDir:(id)arg1;
- (id)initWithAsyncEnabled:(BOOL)arg1;
- (id)initWithRootDir:(id)arg1 config:(id)arg2;
- (void)logMessage:(id)arg1;
- (void)logMessage:(id)arg1 subGroup:(id)arg2;
- (void)trackDistributionForMessage:(id)arg1 value:(double)arg2;
- (void)trackScalarForMessage:(id)arg1;
- (void)trackScalarForMessage:(id)arg1 count:(int)arg2;
- (void)trackScalarForMessage:(id)arg1 updateCount:(int)arg2;

@end

