//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class ACAccount, ALAsset, ALAssetsLibrary, NSArray, NSData, NSString, NSURL, VUDataReader;
@protocol VimeoPostDelegate;

@interface VimeoPost : NSObject
{
    NSURL *_baseURL;
    int _uploadState;
    NSString *_videoID;
    NSString *_ticketID;
    NSURL *_uploadEndpoint;
    BOOL _continuingUpload;
    unsigned long long _countOfBytesStored;
    int _retryCount;
    BOOL _canUploadOverCellular;
    ALAssetsLibrary *_assetsLibrary;
    id<VimeoPostDelegate> _delegate;
    NSURL *_assetURL;
    NSData *_assetData;
    NSString *_title;
    NSString *_postDescription;
    NSArray *_tags;
    unsigned long long _accessType;
    long long _videoSize;
    long long _privacySettings;
    ACAccount *_account;
    ALAsset *_asset;
    NSURL *_exportedVideoURL;
    VUDataReader *_dataReader;
}

@property (nonatomic) unsigned long long accessType; // @synthesize accessType=_accessType;
@property (strong, nonatomic) ACAccount *account; // @synthesize account=_account;
@property (strong, nonatomic) ALAsset *asset; // @synthesize asset=_asset;
@property (strong, nonatomic) NSData *assetData; // @synthesize assetData=_assetData;
@property (strong, nonatomic) NSURL *assetURL; // @synthesize assetURL=_assetURL;
@property (strong, nonatomic) VUDataReader *dataReader; // @synthesize dataReader=_dataReader;
@property (weak, nonatomic) id<VimeoPostDelegate> delegate; // @synthesize delegate=_delegate;
@property (strong, nonatomic) NSURL *exportedVideoURL; // @synthesize exportedVideoURL=_exportedVideoURL;
@property (strong, nonatomic) NSString *postDescription; // @synthesize postDescription=_postDescription;
@property (nonatomic) long long privacySettings; // @synthesize privacySettings=_privacySettings;
@property (strong, nonatomic) NSArray *tags; // @synthesize tags=_tags;
@property (strong, nonatomic) NSString *title; // @synthesize title=_title;
@property (nonatomic) long long videoSize; // @synthesize videoSize=_videoSize;

+ (BOOL)_isUsingCellular;
+ (id)dictionaryWithResponseData:(id)arg1 error:(id *)arg2;
+ (void)getAvailableQuotaForAccount:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void).cxx_destruct;
- (void)_checkQuota;
- (void)_cleanup;
- (void)_commit;
- (void)_getTicket;
- (void)_setDescription;
- (void)_setPrivacy;
- (void)_setTags;
- (void)_setTitle;
- (id)_tags;
- (void)_uploadData;
- (void)_verify;
- (void)_warningWithCode:(int)arg1;
- (id)assetsLibrary;
- (void)failWithError:(id)arg1;
- (void)failWithErrorCode:(int)arg1;
- (id)init;
- (id)initWithDictionary:(id)arg1;
- (unsigned long long)postSize;
- (id)serializedDictionary;
- (BOOL)uploadToAccount:(id)arg1 error:(id *)arg2;

@end

