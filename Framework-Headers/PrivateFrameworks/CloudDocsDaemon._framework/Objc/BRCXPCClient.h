//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <CloudDocsDaemon/BRCForegroundClient-Protocol.h>
#import <CloudDocsDaemon/BRCProcessMonitorDelegate-Protocol.h>

@class BRCAccountSession, BRCClientPrivilegesDescriptor, NSCountedSet, NSMutableDictionary, NSOperationQueue, NSSet, NSString, NSXPCConnection, brc_task_tracker;

__attribute__((visibility("hidden")))
@interface BRCXPCClient : NSObject <BRCProcessMonitorDelegate, BRCForegroundClient>
{
    BRCClientPrivilegesDescriptor *_clientPriviledgesDescriptor;
    BRCAccountSession *_session;
    BOOL _dieOnInvalidate;
    unsigned int _isForeground:1;
    unsigned int _invalidated:1;
    int _clientPid;
    CDStruct_4c969caf auditToken;
    NSCountedSet *_containers;
    NSOperationQueue *_acceptOperationQueue;
    NSMutableDictionary *_runningAcceptOperations;
    brc_task_tracker *_tracker;
    BOOL _isUsingUbiquity;
    NSXPCConnection *_connection;
}

@property (readonly, nonatomic) NSString *bundleID;
@property (readonly, weak, nonatomic) NSXPCConnection *connection; // @synthesize connection=_connection;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSString *defaultContainerID;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) BOOL dieOnInvalidate; // @synthesize dieOnInvalidate=_dieOnInvalidate;
@property (readonly, nonatomic) NSSet *entitledContainerIDs;
@property (readonly, nonatomic) BOOL hasPrivateSharingInterfaceEntitlement;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) NSString *identifier;
@property (nonatomic) BOOL isUsingUbiquity; // @synthesize isUsingUbiquity=_isUsingUbiquity;
@property (strong, nonatomic) BRCAccountSession *session; // @synthesize session=_session;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_addExternalDocumentReferenceTo:(id)arg1 underParent:(id)arg2 forceReparent:(BOOL)arg3 reply:(CDUnknownBlockType)arg4;
- (BOOL)_canCreateContainerWithID:(id)arg1 error:(id *)arg2;
- (id)_disabledBundleIDs;
- (BOOL)_entitlementBooleanValueForKey:(id)arg1;
- (id)_entitlementValueForKey:(id)arg1 ofClass:(Class)arg2;
- (BOOL)_hasAccessToContainerID:(id)arg1 error:(id *)arg2;
- (BOOL)_hasPrivateIPCEntitlementForSelector:(SEL)arg1 error:(id *)arg2;
- (BOOL)_isAutomationEntitled;
- (BOOL)_isContainerProxyEntitled;
- (BOOL)_isContainerProxyWithError:(id *)arg1;
- (void)_setupContainerID:(id)arg1 andSendReply:(CDUnknownBlockType)arg2;
- (void)_startDownloadItemsAtURLs:(id)arg1 pos:(unsigned long long)arg2 options:(unsigned long long)arg3 error:(id)arg4 reply:(CDUnknownBlockType)arg5;
- (void)_startMonitoringProcessIfNeeded;
- (void)_stopMonitoringProcess;
- (void)accessLogicalOrPhysicalURL:(id)arg1 needsWrite:(BOOL)arg2 asynchronously:(BOOL)arg3 handler:(CDUnknownBlockType)arg4;
- (void)addContainer:(id)arg1;
- (BOOL)canAccessPath:(const char *)arg1 needsWrite:(BOOL)arg2;
- (BOOL)canAccessPhysicalURL:(id)arg1;
- (BOOL)cloudEnabledStatus;
- (void)dumpToContext:(id)arg1;
- (id)initWithConnection:(id)arg1;
- (void)invalidate;
- (BOOL)isSandboxed;
- (id)issueContainerExtensionForURL:(id)arg1 error:(id *)arg2;
- (void)process:(int)arg1 didBecomeForeground:(BOOL)arg2;
- (void)removeContainer:(id)arg1;
- (void)setPrivilegesDescriptor:(id)arg1;
- (void)setupNonSandboxedAccessForUbiquityContainers:(id)arg1 forBundleID:(id)arg2;
- (id)setupPrivateContainer:(id)arg1 root:(id)arg2 error:(id *)arg3;
- (void)wait;

@end

