//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <Stocks/SCKDatabaseStoreCoordinatorObserver-Protocol.h>

@class NSArray, NSMutableDictionary, SCKAsyncSerialQueue, SCKDatabaseSchema, SCKStartupQueue;
@protocol OS_dispatch_queue, SCKContainerProxying, SCKDatabaseStoreCoordinator;

@interface SCKDatabase : NSObject <SCKDatabaseStoreCoordinatorObserver>
{
    struct os_unfair_lock_s _observersLock;
    SCKDatabaseSchema *_schema;
    id<SCKDatabaseStoreCoordinator> _storeCoordinator;
    id<SCKContainerProxying> _container;
    NSArray *_mergeHandlers;
    SCKStartupQueue *_startupQueue;
    SCKAsyncSerialQueue *_ckSyncQueue;
    NSObject<OS_dispatch_queue> *_callbackQueue;
    NSMutableDictionary *_observersByZoneName;
    long long _status;
    NSMutableDictionary *_zoneSnapshotsByZoneName;
}

@property (strong, nonatomic) NSObject<OS_dispatch_queue> *callbackQueue; // @synthesize callbackQueue=_callbackQueue;
@property (strong, nonatomic) SCKAsyncSerialQueue *ckSyncQueue; // @synthesize ckSyncQueue=_ckSyncQueue;
@property (strong, nonatomic) id<SCKContainerProxying> container; // @synthesize container=_container;
@property (strong, nonatomic) NSArray *mergeHandlers; // @synthesize mergeHandlers=_mergeHandlers;
@property (strong, nonatomic) NSMutableDictionary *observersByZoneName; // @synthesize observersByZoneName=_observersByZoneName;
@property (nonatomic) struct os_unfair_lock_s observersLock; // @synthesize observersLock=_observersLock;
@property (strong, nonatomic) SCKDatabaseSchema *schema; // @synthesize schema=_schema;
@property (strong, nonatomic) SCKStartupQueue *startupQueue; // @synthesize startupQueue=_startupQueue;
@property long long status; // @synthesize status=_status;
@property (strong, nonatomic) id<SCKDatabaseStoreCoordinator> storeCoordinator; // @synthesize storeCoordinator=_storeCoordinator;
@property (strong, nonatomic) NSMutableDictionary *zoneSnapshotsByZoneName; // @synthesize zoneSnapshotsByZoneName=_zoneSnapshotsByZoneName;

- (void).cxx_destruct;
- (void)_createZoneInContainerWithSchema:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_deleteAndRecreateAllZonesWithCompletion:(CDUnknownBlockType)arg1;
- (id)_emptyZonesNeedingFirstSync;
- (void)_enqueueStartupSequenceWithFeatures:(long long)arg1;
- (void)_fetchDatabaseAndZoneChangesWithCompletion:(CDUnknownBlockType)arg1;
- (void)_fetchDatabaseChangesWithCompletion:(CDUnknownBlockType)arg1;
- (void)_fetchZoneChangesForZones:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_recoverFromIdentityLossWithCompletion:(CDUnknownBlockType)arg1;
- (void)_reloadSnapshotOfZone:(id)arg1 fromStore:(id)arg2;
- (void)_runCKOperation:(id)arg1;
- (id)_sanitizeErrorForClients:(id)arg1;
- (void)_saveZoneToContainer:(id)arg1 allowRecoveryAttempt:(BOOL)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_saveZonesToContainer:(id)arg1 allowRecoveryAttempt:(BOOL)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_squashZoneForMerge:(id)arg1 zoneStore:(id)arg2;
- (id)_zoneWithSchema:(id)arg1 zoneStore:(id)arg2;
- (id)_zonesNeedingFetch;
- (id)_zonesNeedingSave;
- (void)addObserver:(id)arg1 forZone:(id)arg2;
- (void)checkSyncingEnabledWithCompletion:(CDUnknownBlockType)arg1;
- (void)handleRemoteNotification:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)initWithSchema:(id)arg1 store:(id)arg2 features:(long long)arg3 containerProxy:(id)arg4;
- (id)initWithSchema:(id)arg1 store:(id)arg2 features:(long long)arg3 mergeHandlers:(id)arg4 containerProxy:(id)arg5;
- (id)initWithSchema:(id)arg1 store:(id)arg2 migrationPlan:(id)arg3 containerProxy:(id)arg4;
- (id)initWithSchema:(id)arg1 store:(id)arg2 migrationPlan:(id)arg3 features:(long long)arg4 containerProxy:(id)arg5;
- (void)modifyContentsOfZone:(id)arg1 withCommand:(id)arg2;
- (void)pollForChangesWithCondition:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)readContentsOfZone:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)removeObserver:(id)arg1 forZone:(id)arg2;
- (void)savePendingChangesToServerWithCompletion:(CDUnknownBlockType)arg1;
- (void)storeCoordinatorDiscoveredExternalChanges:(id)arg1;
- (void)synchronize;
- (BOOL)t_flushChangesWithTimeout:(double)arg1;

@end

