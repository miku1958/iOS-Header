//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSIndexSet, NSMutableArray, NSMutableIndexSet, NSMutableSet, NSPredicate, NSSet, NSString, NSTimer, NSValueTransformer;
@protocol CATCollectionControllerDelegate;

@interface CATCollectionController : NSObject
{
    NSMutableArray *mPendingArrangedObjects;
    NSMutableArray *mPendingInsertedObjects;
    NSMutableArray *mPendingDeletedObjects;
    NSMutableSet *mContent;
    id mTarget;
    NSString *mKeyPath;
    NSMutableIndexSet *mChangingSelection;
    BOOL mDelegateKnowsContentIsChanging;
    NSSet *mKeysAffectingArrangement;
    NSMutableSet *mObjectsToRearrange;
    NSTimer *mRearrangeTimer;
    NSValueTransformer *mTransformer;
    id mOriginalObjects;
    BOOL _automaticallyRearrangesObjects;
    id<CATCollectionControllerDelegate> _delegate;
    NSArray *_sortDescriptors;
    NSPredicate *_filterPredicate;
    NSIndexSet *_selectionIndexes;
    NSArray *_arrangedObjects;
}

@property (strong) NSArray *arrangedObjects; // @synthesize arrangedObjects=_arrangedObjects;
@property BOOL automaticallyRearrangesObjects; // @synthesize automaticallyRearrangesObjects=_automaticallyRearrangesObjects;
@property (readonly, nonatomic) NSSet *content;
@property (weak) id<CATCollectionControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property (strong) NSPredicate *filterPredicate; // @synthesize filterPredicate=_filterPredicate;
@property (readonly) NSArray *selectedObjects;
@property (copy) NSIndexSet *selectionIndexes; // @synthesize selectionIndexes=_selectionIndexes;
@property (strong) NSArray *sortDescriptors; // @synthesize sortDescriptors=_sortDescriptors;

- (void).cxx_destruct;
- (void)addObject:(id)arg1;
- (void)addObserversToObject:(id)arg1 forKeyPaths:(id)arg2;
- (void)arrangeObject:(id)arg1;
- (unsigned long long)arrangedIndexOfObject:(id)arg1;
- (id)arrangedObjectAtIndex:(unsigned long long)arg1;
- (id)arrangedObjectsAtIndexes:(id)arg1;
- (void)bindContentToObject:(id)arg1 withKeyPath:(id)arg2;
- (void)bindContentToObject:(id)arg1 withKeyPath:(id)arg2 usingTransformer:(id)arg3;
- (void)changeContent:(CDUnknownBlockType)arg1;
- (void)changeObject:(id)arg1 atIndex:(unsigned long long)arg2 forChangeType:(unsigned long long)arg3 newIndex:(unsigned long long)arg4;
- (void)dealloc;
- (id)init;
- (id)initWithObjects:(id)arg1;
- (unsigned long long)newIndexForObject:(id)arg1 inArrangedObjects:(id)arg2;
- (void)notifyArrangedObjectsDidChangeWithPreviousArrangedObjects:(id)arg1;
- (void)notifyArrangedObjectsWillChange;
- (unsigned long long)numberOfArrangedObjects;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)rearrangeObjects;
- (void)rearrangeTimerDidFire:(id)arg1;
- (void)removeObject:(id)arg1;
- (void)removeObserversFromObject:(id)arg1 forKeyPaths:(id)arg2;
- (void)resolveArrangedObjectsAtIndexes:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)scheduleRearrangeTimerIfNeed;
- (void)unbindContent;
- (void)updateKeysAffectingArrangementForceUpdate:(BOOL)arg1 includeAllContent:(BOOL)arg2;
- (void)updateObject:(id)arg1;

@end

