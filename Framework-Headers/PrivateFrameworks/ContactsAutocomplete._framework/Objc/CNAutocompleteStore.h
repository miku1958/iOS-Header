//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class CNAutocompleteStoreQueryHelper, CNAutocompleteStoreReproStringRecorder, CNAutocompleteUserSession, CNCancelationToken;
@protocol CNAutocompleteProbeProvider, CNAutocompleteSearchProvider, CNScheduler;

@interface CNAutocompleteStore : NSObject
{
    double _fetchCoalescingInterval;
    CNAutocompleteStoreQueryHelper *_queryHelper;
    CNCancelationToken *_currentFetchToken;
    CNAutocompleteUserSession *_userSession;
    CNAutocompleteStoreReproStringRecorder *_reproStringRecorder;
    id<CNAutocompleteProbeProvider> _probeProvider;
    id<CNScheduler> _scheduler;
}

@property (weak, nonatomic) CNCancelationToken *currentFetchToken; // @synthesize currentFetchToken=_currentFetchToken;
@property (nonatomic) double fetchCoalescingInterval; // @synthesize fetchCoalescingInterval=_fetchCoalescingInterval;
@property (readonly, nonatomic) id<CNAutocompleteProbeProvider> probeProvider; // @synthesize probeProvider=_probeProvider;
@property (readonly, nonatomic) CNAutocompleteStoreQueryHelper *queryHelper; // @synthesize queryHelper=_queryHelper;
@property (strong, nonatomic) CNAutocompleteStoreReproStringRecorder *reproStringRecorder; // @synthesize reproStringRecorder=_reproStringRecorder;
@property (readonly, nonatomic) id<CNScheduler> scheduler; // @synthesize scheduler=_scheduler;
@property (readonly, nonatomic) id<CNAutocompleteSearchProvider> searchProvider;
@property (strong, nonatomic) CNAutocompleteUserSession *userSession; // @synthesize userSession=_userSession;

+ (double)defaultFetchCoalescingInterval;
- (void).cxx_destruct;
- (id)executeFetchRequest:(id)arg1;
- (id)executeFetchRequest:(id)arg1 afterDelay:(double)arg2 delegate:(id)arg3;
- (id)executeFetchRequest:(id)arg1 delegate:(id)arg2;
- (void)ignoreResult:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)init;
- (id)initWithDelegate:(id)arg1;
- (id)initWithDelegate:(id)arg1 searchProvider:(id)arg2 probeProvider:(id)arg3 scheduler:(id)arg4;
- (id)scheduleFetchRequest:(id)arg1;
- (id)scheduleFetchRequest:(id)arg1 delegate:(id)arg2;
- (void)userSelectedResult:(id)arg1 atSortedIndex:(unsigned long long)arg2;

@end

