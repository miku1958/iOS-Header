//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/NSObject.h>

#import <PersistentConnection/PCLoggingDelegate-Protocol.h>

@class NSDate, NSRunLoop, NSString, PCDispatchTimer;
@protocol OS_dispatch_queue;

@interface PCSimpleTimer : NSObject <PCLoggingDelegate>
{
    double _fireTime;
    double _startTime;
    double _lastUpdateTime;
    double _earlyFireDelta;
    BOOL _triggerOnGMTChange;
    BOOL _disableSystemWaking;
    NSDate *_scheduledWakeDate;
    NSString *_serviceIdentifier;
    id _target;
    SEL _selector;
    id _userInfo;
    BOOL _userVisible;
    PCDispatchTimer *_preventSleepTimer;
    PCDispatchTimer *_fireTimer;
    BOOL _sleepIsImminent;
    unsigned int _powerAssertionID;
    id _timeChangeSource;
    NSRunLoop *_timerRunLoop;
    NSString *_timerMode;
    int _significantTimeChangeToken;
    NSObject<OS_dispatch_queue> *_queue;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) BOOL disableSystemWaking; // @synthesize disableSystemWaking=_disableSystemWaking;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) NSString *loggingIdentifier; // @synthesize loggingIdentifier=_serviceIdentifier;
@property (readonly) Class superclass;
@property (nonatomic, getter=isUserVisible) BOOL userVisible;

+ (double)currentMachTimeInterval;
+ (id)lastSystemWakeDate;
- (void)_fireTimerFired;
- (id)_getTimerMode;
- (id)_getTimerRunLoop;
- (void)_performBlockOnQueue:(CDUnknownBlockType)arg1;
- (void)_powerNotificationSleepIsImminent;
- (void)_powerNotificationSleepIsNotImminent;
- (void)_preventSleepFired;
- (void)_scheduleTimer;
- (void)_setPowerMonitoringEnabled:(BOOL)arg1;
- (void)_setSignificantTimeChangeMonitoringEnabled:(BOOL)arg1;
- (void)_significantTimeChange;
- (void)_updateTimers;
- (void)dealloc;
- (BOOL)firingIsImminent;
- (id)initWithAbsoluteTime:(double)arg1 serviceIdentifier:(id)arg2 target:(id)arg3 selector:(SEL)arg4 userInfo:(id)arg5 triggerOnGMTChange:(BOOL)arg6;
- (id)initWithFireDate:(id)arg1 serviceIdentifier:(id)arg2 target:(id)arg3 selector:(SEL)arg4 userInfo:(id)arg5;
- (id)initWithTimeInterval:(double)arg1 serviceIdentifier:(id)arg2 target:(id)arg3 selector:(SEL)arg4 userInfo:(id)arg5;
- (void)invalidate;
- (BOOL)isValid;
- (void)scheduleInQueue:(id)arg1;
- (void)scheduleInRunLoop:(id)arg1;
- (void)scheduleInRunLoop:(id)arg1 inMode:(id)arg2;
- (void)updateFireTime:(double)arg1 triggerOnGMTChange:(BOOL)arg2;
- (id)userInfo;

@end

