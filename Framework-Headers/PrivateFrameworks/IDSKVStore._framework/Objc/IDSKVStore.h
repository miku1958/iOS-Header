//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class CSDBThreadedRecordStore, NSString;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface IDSKVStore : NSObject
{
    NSObject<OS_dispatch_queue> *_ivarQueue;
    NSObject<OS_dispatch_source> *_databaseCloseTimer;
    double _databaseLastUpdateTime;
    unsigned int _dataProtectionClass;
    NSString *_storeName;
    NSString *_path;
    CSDBThreadedRecordStore *_messageStore;
}

@property (nonatomic) unsigned int dataProtectionClass; // @synthesize dataProtectionClass=_dataProtectionClass;
@property (strong, nonatomic) CSDBThreadedRecordStore *messageStore; // @synthesize messageStore=_messageStore;
@property (copy, nonatomic) NSString *path; // @synthesize path=_path;
@property (copy, nonatomic) NSString *storeName; // @synthesize storeName=_storeName;

+ (void)_initializeMessageStoreIfNeeded:(id)arg1 path:(id)arg2 dataProtectionClass:(unsigned int)arg3;
+ (void)_invalidateCachesForMessageStore:(id)arg1;
- (void).cxx_destruct;
- (void)__closeDatabaseOnIvarQueue;
- (void)_clearDatabaseCloseTimerOnIvarQueue;
- (void)_onIvarQueue_deleteDatesBefore:(id)arg1 after:(id)arg2;
- (void)_onIvarQueue_deleteSerializedValueForKey:(id)arg1 valueType:(BOOL)arg2;
- (void)_onIvarQueue_deleteUpToRowID:(unsigned long long)arg1 valueType:(BOOL)arg2;
- (void)_onIvarQueue_performBlock:(CDUnknownBlockType)arg1 initializeStore:(BOOL)arg2;
- (void)_onIvarQueue_performBlock:(CDUnknownBlockType)arg1 initializeStore:(BOOL)arg2 waitUntilDone:(BOOL)arg3;
- (void)_onIvarQueue_persistSerializedValue:(id)arg1 forKey:(id)arg2 valueType:(BOOL)arg3;
- (id)_onIvarQueue_serializedValueForKey:(id)arg1 valueType:(BOOL)arg2;
- (id)_onIvarQueue_serializedValuesUpToLimit:(unsigned long long)arg1 valueType:(BOOL)arg2 deleteContext:(id *)arg3;
- (void)_performInitialHousekeepingOnIvarQueue;
- (void)_setDatabaseCloseTimerOnIvarQueue;
- (void)closeDatabaseSynchronously:(BOOL)arg1;
- (id)dataForKey:(id)arg1 error:(id *)arg2;
- (id)datasUpToLimit:(unsigned long long)arg1 deleteContext:(id *)arg2 error:(id *)arg3;
- (BOOL)deleteBatchWithContext:(id)arg1 error:(id *)arg2;
- (void)deleteDatabase;
- (BOOL)deleteEntriesBeforeDate:(id)arg1 afterDate:(id)arg2 error:(id *)arg3;
- (id)initWithPath:(id)arg1 storeName:(id)arg2 dataProtectionClass:(unsigned int)arg3;
- (BOOL)persistData:(id)arg1 forKey:(id)arg2 error:(id *)arg3;

@end

