//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <TemplateKit/TLKView.h>

#import <TemplateKit/NUIArrangementContainer-Protocol.h>
#import <TemplateKit/NUIBoxArrangementDataSource-Protocol.h>

@class NSString, NUIBoxArrangement, TLKAppearance, TLKArrangementItem, TLKImage, UIImageView;

@interface TLKImageView : TLKView <NUIBoxArrangementDataSource, NUIArrangementContainer>
{
    BOOL _useButtonColoring;
    TLKImage *_tlkImage;
    unsigned long long _prominence;
    TLKAppearance *_appearanceOverride;
    long long _verticalAlignment;
    long long _horizontalAlignment;
    UIImageView *_imageView;
    TLKArrangementItem *_sizingHelper;
    NUIBoxArrangement *_boxArrangement;
    struct CGSize _minimumSize;
    struct CGSize _maximumSize;
    struct CGRect _rectOfShadow;
}

@property (strong, nonatomic) TLKAppearance *appearanceOverride; // @synthesize appearanceOverride=_appearanceOverride;
@property (strong, nonatomic) NUIBoxArrangement *boxArrangement; // @synthesize boxArrangement=_boxArrangement;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long horizontalAlignment; // @synthesize horizontalAlignment=_horizontalAlignment;
@property (strong, nonatomic) UIImageView *imageView; // @synthesize imageView=_imageView;
@property (nonatomic) struct CGSize maximumSize; // @synthesize maximumSize=_maximumSize;
@property (nonatomic) struct CGSize minimumSize; // @synthesize minimumSize=_minimumSize;
@property (nonatomic) unsigned long long prominence; // @synthesize prominence=_prominence;
@property (nonatomic) struct CGRect rectOfShadow; // @synthesize rectOfShadow=_rectOfShadow;
@property (strong, nonatomic) TLKArrangementItem *sizingHelper; // @synthesize sizingHelper=_sizingHelper;
@property (readonly) Class superclass;
@property (strong, nonatomic) TLKImage *tlkImage; // @synthesize tlkImage=_tlkImage;
@property (nonatomic) BOOL useButtonColoring; // @synthesize useButtonColoring=_useButtonColoring;
@property (nonatomic) long long verticalAlignment; // @synthesize verticalAlignment=_verticalAlignment;

+ (BOOL)imageIsEligibleForShadow:(id)arg1 isTemplate:(BOOL)arg2;
+ (Class)layerClass;
+ (struct CGSize)roundedSizeForSize:(struct CGSize)arg1;
+ (BOOL)sizeIsShadowWorthy:(struct CGSize)arg1;
- (void).cxx_destruct;
- (void)_dynamicUserInterfaceTraitDidChange;
- (id)actualImageView;
- (id)boxArrangement:(id)arg1 itemAtIndex:(long long)arg2 horizontalAlignment:(long long *)arg3 verticalAlignment:(long long *)arg4;
- (struct CGSize)constrainedSizeForImageSize:(struct CGSize)arg1;
- (struct CGSize)contentLayoutSizeFittingSize:(struct CGSize)arg1 forArrangedSubview:(id)arg2;
- (void)didMoveToWindow;
- (long long)effectiveUserInterfaceLayoutDirection;
- (id)init;
- (struct CGSize)intrinsicContentSize;
- (void)invalidateIntrinsicContentSizeIfNecessary;
- (struct CGRect)layoutFrameForArrangedSubview:(id)arg1 withProposedContentFrame:(struct CGRect)arg2;
- (void)layoutSubviews;
- (long long)numberOfItemsInBoxArrangement:(id)arg1;
- (void)observedPropertiesChanged;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)systemLayoutSizeFittingSize:(struct CGSize)arg1;
- (void)tlk_updateForAppearance:(id)arg1;
- (void)updateShadow;
- (id)viewForFirstBaselineLayout;
- (id)viewForLastBaselineLayout;

@end

