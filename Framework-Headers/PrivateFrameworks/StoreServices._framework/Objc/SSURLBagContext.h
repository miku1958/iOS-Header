//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <StoreServices/NSCopying-Protocol.h>
#import <StoreServices/SSXPCCoding-Protocol.h>

@class NSData, NSDictionary, NSLock, NSMutableDictionary, NSNumber, NSString;

@interface SSURLBagContext : NSObject <SSXPCCoding, NSCopying>
{
    long long _allowedRetryCount;
    BOOL _allowsBootstrapCellularData;
    BOOL _allowsExpiredBags;
    long long _bagType;
    NSData *_clientAuditTokenData;
    NSMutableDictionary *_httpHeaders;
    BOOL _ignoresCaches;
    NSLock *_lock;
    NSNumber *_userIdentifier;
    BOOL _usesCachedBagsOnly;
}

@property (copy, nonatomic) NSDictionary *allHTTPHeaders;
@property (nonatomic) long long allowedRetryCount; // @synthesize allowedRetryCount=_allowedRetryCount;
@property (nonatomic) BOOL allowsBootstrapCellularData; // @synthesize allowsBootstrapCellularData=_allowsBootstrapCellularData;
@property (nonatomic) BOOL allowsExpiredBags; // @synthesize allowsExpiredBags=_allowsExpiredBags;
@property (nonatomic) long long bagType; // @synthesize bagType=_bagType;
@property (readonly, nonatomic) NSString *cacheKey;
@property (strong, nonatomic) NSData *clientAuditTokenData; // @synthesize clientAuditTokenData=_clientAuditTokenData;
@property (readonly, nonatomic) NSString *clientBundleIdentifier;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) BOOL ignoresCaches; // @synthesize ignoresCaches=_ignoresCaches;
@property (readonly) Class superclass;
@property (strong, nonatomic) NSNumber *userIdentifier; // @synthesize userIdentifier=_userIdentifier;
@property (nonatomic) BOOL usesCachedBagsOnly; // @synthesize usesCachedBagsOnly=_usesCachedBagsOnly;

+ (id)contextWithBagType:(long long)arg1;
- (id)_init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copyXPCEncoding;
- (void)dealloc;
- (id)init;
- (id)initWithXPCEncoding:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (void)setValue:(id)arg1 forHTTPHeaderField:(id)arg2;
- (id)valueForHTTPHeaderField:(id)arg1;

@end

