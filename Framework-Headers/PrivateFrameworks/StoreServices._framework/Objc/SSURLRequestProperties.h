//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <StoreServices/NSCopying-Protocol.h>
#import <StoreServices/NSMutableCopying-Protocol.h>
#import <StoreServices/NSSecureCoding-Protocol.h>
#import <StoreServices/SSXPCCoding-Protocol.h>

@class NSArray, NSData, NSDictionary, NSInputStream, NSString, NSURL;
@protocol OS_dispatch_queue;

@interface SSURLRequestProperties : NSObject <SSXPCCoding, NSSecureCoding, NSCopying, NSMutableCopying>
{
    NSDictionary *_additionalMetrics;
    long long _allowedRetryCount;
    BOOL _allowsBootstrapCellularData;
    unsigned long long _cachePolicy;
    NSString *_clientAuditBundleIdentifier;
    NSData *_clientAuditTokenData;
    NSString *_clientIdentifier;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    long long _expectedContentLength;
    NSData *_httpBody;
    NSInputStream *_httpBodyStream;
    NSDictionary *_httpHeaders;
    NSString *_httpMethod;
    BOOL _isITunesStoreRequest;
    long long _kbsyncType;
    BOOL _largeDownload;
    long long _machineDataStyle;
    unsigned long long _networkServiceType;
    NSDictionary *_requestParameters;
    BOOL _requiresCellularDataNetwork;
    BOOL _requiresExtendedValidationCertificates;
    BOOL _requiresExternal;
    BOOL _requiresHTTPS;
    BOOL _shouldDecodeResponse;
    BOOL _shouldDisableCellular;
    BOOL _shouldDisableCellularFallback;
    BOOL _shouldDisableReversePush;
    BOOL _shouldDisableReversePushSampling;
    BOOL _shouldProcessProtocol;
    BOOL _shouldSendSecureToken;
    BOOL _shouldSetCookies;
    double _timeoutInterval;
    NSString *_urlBagKey;
    long long _urlBagType;
    CDUnknownBlockType _urlBagURLBlock;
    NSArray *_urls;
    NSArray *_userAgentComponents;
}

@property (readonly, copy) NSData *HTTPBody;
@property (readonly, strong) NSInputStream *HTTPBodyStream;
@property (readonly, copy) NSDictionary *HTTPHeaders;
@property (readonly, copy) NSString *HTTPMethod;
@property (readonly, getter=isITunesStoreRequest) BOOL ITunesStoreRequest;
@property (readonly) long long KBSyncType;
@property (readonly, strong) NSURL *URL;
@property (readonly, copy) NSString *URLBagKey;
@property (readonly) long long URLBagType;
@property (readonly, copy) CDUnknownBlockType URLBagURLBlock;
@property (readonly, copy) NSArray *URLs;
@property (readonly, copy) NSDictionary *additionalMetrics;
@property (readonly) long long allowedRetryCount;
@property (readonly) BOOL allowsBootstrapCellularData;
@property (readonly) unsigned long long cachePolicy;
@property (readonly) BOOL canBeResolved;
@property (readonly, copy) NSString *clientAuditBundleIdentifier;
@property (readonly, copy) NSData *clientAuditTokenData;
@property (readonly) NSString *clientBundleIdentifier;
@property (readonly, copy) NSString *clientIdentifier;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) long long expectedContentLength;
@property (readonly) unsigned long long hash;
@property (readonly, getter=isLargeDownload) BOOL largeDownload;
@property (readonly) long long machineDataStyle;
@property (readonly) unsigned long long networkServiceType;
@property (readonly, copy) NSDictionary *requestParameters;
@property (readonly) BOOL requiresCellularDataNetwork;
@property (readonly) BOOL requiresExtendedValidationCertificates;
@property (readonly) BOOL requiresExternal;
@property (readonly) BOOL requiresHTTPS;
@property (readonly) BOOL shouldAddKBSyncData;
@property (readonly) BOOL shouldDecodeResponse;
@property (readonly) BOOL shouldDisableCellular;
@property (readonly) BOOL shouldDisableCellularFallback;
@property (readonly) BOOL shouldDisableReversePush;
@property (readonly) BOOL shouldDisableReversePushSampling;
@property (readonly) BOOL shouldProcessProtocol;
@property (readonly) BOOL shouldSendSecureToken;
@property (readonly) BOOL shouldSetCookies;
@property (readonly) Class superclass;
@property (readonly) double timeoutInterval;
@property (readonly, copy) NSArray *userAgentComponents;

+ (BOOL)supportsSecureCoding;
- (void).cxx_destruct;
- (id)_initCommon;
- (id)copyURLRequest;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copyXPCEncoding;
- (void)encodeWithCoder:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithURL:(id)arg1;
- (id)initWithURLRequest:(id)arg1;
- (id)initWithXPCEncoding:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;

@end

