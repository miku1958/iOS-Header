//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <PhotoLibraryServices/PLManagedObjectContextPTPNotificationDelegate-Protocol.h>

@class NSFileManager, NSMutableSet, NSSet, NSString, PFMediaCapabilities, PLPTPdFormatConversionManager, PLPhotoLibrary;
@protocol OS_dispatch_queue, PhotoLibraryPTPDelegate;

@interface PLPTPdAssetManager : NSObject <PLManagedObjectContextPTPNotificationDelegate>
{
    NSObject<PhotoLibraryPTPDelegate> *_delegate;
    PLPTPdFormatConversionManager *_formatConversionManager;
    NSSet *_availableAssetIDs;
    PLPhotoLibrary *_photoLibrary;
    int _libraryStatus;
    NSMutableSet *_ptpDeletedAssets;
    NSObject<OS_dispatch_queue> *availableAssetsQueue;
    NSFileManager *fileManager;
}

@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) NSObject<PhotoLibraryPTPDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (strong, nonatomic) NSFileManager *fileManager; // @synthesize fileManager;
@property (readonly) unsigned long long hash;
@property (strong) PFMediaCapabilities *peerMediaCapabilities;
@property (readonly, nonatomic) PLPhotoLibrary *photoLibrary;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)_allAssetObjectIDs;
- (id)_dataByJPEGCompressingCGImage:(struct CGImage *)arg1 orSource:(struct CGImageSource *)arg2 toLengthLimit:(long long)arg3 initialCompressionQuality:(float)arg4 size:(struct CGSize)arg5 orientation:(long long)arg6;
- (void)_expungeAsset:(id)arg1 withReason:(id)arg2;
- (id)_generateThumbnailForAsset:(id)arg1 fromOriginalImagePath:(id)arg2 size:(struct CGSize)arg3 compressionQuality:(float)arg4;
- (void)_inverseAffineTransformForExifOrientation:(long long)arg1 width:(double)arg2 height:(double)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_performBlockAndWait:(CDUnknownBlockType)arg1;
- (id)_performResultBlockAndWait:(CDUnknownBlockType)arg1;
- (id)_performResultTransactionAndWait:(CDUnknownBlockType)arg1;
- (void)_performTransactionAndWait:(CDUnknownBlockType)arg1;
- (id)_ptpAssetEnumeratorAllAssets;
- (id)_ptpAssetsForAssetWithID:(id)arg1;
- (id)_ptpThumbnailForFullSizeRenderWithAssetID:(id)arg1 size:(struct CGSize)arg2 compressionQuality:(float)arg3;
- (id)_ptpThumbnailForOriginalVideoWithAssetID:(id)arg1 size:(struct CGSize)arg2 compressionQuality:(float)arg3;
- (id)_ptpThumbnailForOriginalWithAssetID:(id)arg1 size:(struct CGSize)arg2 compressionQuality:(float)arg3;
- (id)_ptpThumbnailForPenultimateImageWithAssetID:(id)arg1 size:(struct CGSize)arg2 compressionQuality:(float)arg3;
- (id)_ptpThumbnailForSpatialOverCaptureImageWithAssetID:(id)arg1 size:(struct CGSize)arg2 compressionQuality:(float)arg3;
- (id)_ptpThumbnailForSpatialOverCaptureVideoWithAssetID:(id)arg1 size:(struct CGSize)arg2 compressionQuality:(float)arg3;
- (struct CGSize)_validateSize:(struct CGSize)arg1;
- (id)adjustmentFilePathForAsset:(id)arg1 requiresTemporaryFileCleanup:(BOOL *)arg2;
- (id)assetReaderForFormatConvertedPTPAsset:(id)arg1 ofManagedAsset:(id)arg2 path:(id)arg3;
- (void)beginSignpostForThumbnailGenerationForAsset:(id)arg1 inputResourceTypeLabel:(id)arg2;
- (id)dataForThumbnailFileAtPath:(id)arg1 rotatedToOrientation:(long long)arg2 size:(struct CGSize)arg3 compressionQuality:(float)arg4;
- (void)dealloc;
- (id)embeddedThumbnailDataForAsset:(id)arg1 smallerThanDataLengthLimit:(unsigned long long)arg2;
- (void)endSignpostForThumbnailGenerationForAsset:(id)arg1;
- (id)fetchObjectIDsForAssetsExposedToPTPFromObjectIDs:(id)arg1;
- (void)handlePhotoLibraryAvailableNotification;
- (id)init;
- (BOOL)libraryIsAvailable;
- (id)managedObjectContext;
- (void)managedObjectContext:(id)arg1 libraryChangedWithInsertedAssetIDs:(id)arg2 deletedAssetIDs:(id)arg3 changedAssetIDs:(id)arg4 adjustedAssetIDs:(id)arg5;
- (struct CGSize)masterThumbSize;
- (id)ptpAssetReaderForAssetHandle:(id)arg1;
- (BOOL)ptpCanDeleteFiles;
- (BOOL)ptpDeletePhotoForAssetHandle:(id)arg1;
- (void)ptpEnumerateAllAssetsUsingBlock:(CDUnknownBlockType)arg1;
- (void)ptpEnumerateAssetsWithPrimaryKeys:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)ptpImagePropertiesForAssetHandle:(id)arg1;
- (id)ptpThumbnailForAssetHandle:(id)arg1 size:(struct CGSize)arg2 compressionQuality:(float)arg3;
- (BOOL)requestedSize:(struct CGSize)arg1 fitsInSourceSize:(struct CGSize)arg2;

@end

