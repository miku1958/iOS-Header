//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/NSObject.h>

#import <Rapport/NSXPCListenerDelegate-Protocol.h>

@class CUBluetoothClient, CUBonjourAdvertiser, CUBonjourBrowser, CUPairingManager, CUTCPServer, NSData, NSMutableDictionary, NSString, NSXPCListener, RPCompanionLinkDevice;
@protocol OS_dispatch_queue;

@interface RPCompanionLinkDaemon : NSObject <NSXPCListenerDelegate>
{
    CUBonjourAdvertiser *_bonjourAdvertiser;
    CUBonjourBrowser *_bonjourBrowser;
    NSData *_btAdvAddr;
    CUBluetoothClient *_btClient;
    BOOL _invalidateCalled;
    BOOL _invalidateDone;
    NSData *_homeKitAuthTag;
    NSData *_homeKitIRK;
    NSData *_homeKitLTPK;
    NSData *_homeKitNonce;
    NSData *_homeKitRotatingID;
    NSData *_homeKitUniqueIDData;
    NSString *_homeKitUniqueIDStr;
    RPCompanionLinkDevice *_localDevice;
    NSData *_pairingAltIRK;
    NSData *_pairingAuthTag;
    struct NSMutableDictionary *_pairingPeers;
    CUPairingManager *_pairingMonitor;
    struct NSMutableDictionary *_tcpClientConnections;
    struct NSMutableSet *_tcpServerConnections;
    CUTCPServer *_tcpServer;
    struct NSMutableSet *_xpcConnections;
    NSXPCListener *_xpcListener;
    unsigned int _xpcLastID;
    BOOL _prefClientEnabled;
    NSString *_prefDeviceRole;
    unsigned int _prefMaxConnectionCount;
    BOOL _prefServerEnabled;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    struct NSMutableDictionary *_activeDevices;
}

@property (readonly, nonatomic) NSMutableDictionary *activeDevices; // @synthesize activeDevices=_activeDevices;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (strong, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_activate;
- (void)_clientBonjourChangedDevice:(id)arg1;
- (void)_clientBonjourEnsureStarted;
- (void)_clientBonjourEnsureStopped;
- (void)_clientBonjourFoundDevice:(id)arg1;
- (void)_clientBonjourLostDevice:(id)arg1;
- (void)_clientConnectionStart:(id)arg1 uniqueID:(id)arg2;
- (void)_clientEnsureStarted;
- (void)_clientEnsureStopped;
- (void)_connectionStateChanged:(unsigned int)arg1 connection:(id)arg2;
- (BOOL)_destinationID:(id)arg1 matchesConnection:(id)arg2;
- (void)_forEachMatchingDestinationID:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (BOOL)_homeKitAuthMatchForBonjourDevice:(id)arg1;
- (id)_homeKitDecryptRotatingIDForBonjourDevice:(id)arg1;
- (void)_homeKitUpdateInfo:(BOOL)arg1;
- (void)_invalidate;
- (void)_invalidated;
- (void)_localDeviceUpdate;
- (id)_pairedPeerForBonjourDevice:(id)arg1;
- (void)_pairingMonitorEnsureStarted;
- (void)_pairingMonitorEnsureStopped;
- (void)_pairingMonitorHomeKitIdentityUpdated:(id)arg1 error:(id)arg2;
- (void)_pairingMonitorIdentityUpdated:(id)arg1 error:(id)arg2;
- (void)_pairingMonitorPeerAdded:(id)arg1;
- (void)_pairingMonitorPeerChanged:(id)arg1;
- (void)_pairingMonitorPeerRemoved:(id)arg1;
- (void)_pairingUpdateInfo:(BOOL)arg1;
- (void)_receivedEventID:(id)arg1 event:(id)arg2;
- (void)_receivedRequestID:(id)arg1 request:(id)arg2 responseHandler:(CDUnknownBlockType)arg3;
- (void)_serverBTAddressMonitorEnsureStarted;
- (void)_serverBTAddressMonitorEnsureStopped;
- (void)_serverBonjourEnsureStarted;
- (void)_serverBonjourEnsureStopped;
- (void)_serverBonjourUpdateTXT;
- (void)_serverEnsureStarted;
- (void)_serverEnsureStopped;
- (void)_serverTCPEnsureStarted;
- (void)_serverTCPEnsureStopped;
- (void)_serverTCPHandleConnectionEnded:(id)arg1;
- (void)_serverTCPHandleConnectionStarted:(id)arg1;
- (id)_uniqueID;
- (void)_update;
- (void)_xpcConnectionInvalidated:(id)arg1;
- (void)activate;
- (id)detailedDescription;
- (id)init;
- (void)invalidate;
- (BOOL)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (void)prefsChanged;
- (void)sendEventID:(id)arg1 event:(id)arg2 destinationID:(id)arg3 options:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)sendRequestID:(id)arg1 request:(id)arg2 destinationID:(id)arg3 xpcID:(unsigned int)arg4 responseHandler:(CDUnknownBlockType)arg5;

@end

