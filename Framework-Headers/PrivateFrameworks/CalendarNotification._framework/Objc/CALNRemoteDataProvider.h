//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <CalendarNotification/BBRemoteDataProvider-Protocol.h>

@class BBDataProviderProxy, CALNPersistedNotificationsContext, EKTimedEventStorePurger, NSMutableDictionary, NSString, NSTimer;
@protocol OS_dispatch_queue;

@interface CALNRemoteDataProvider : NSObject <BBRemoteDataProvider>
{
    NSObject<OS_dispatch_queue> *_alertQueue;
    NSObject<OS_dispatch_queue> *_notificationsQueue;
    NSObject<OS_dispatch_queue> *_databaseQueue;
    NSMutableDictionary *_alarmBulletins;
    NSMutableDictionary *_notificationBulletins;
    BOOL _ignoreLowLevelDatabaseChangedNotifications;
    NSTimer *_syncTimer;
    BOOL _pendingChanges;
    CDUnknownBlockType _fetchNotificationReferences;
    BOOL _notificationsNeedLoad;
    CALNPersistedNotificationsContext *_context;
    BBDataProviderProxy *_proxy;
    EKTimedEventStorePurger *_timedEventStorePurger;
}

@property (readonly) NSObject<OS_dispatch_queue> *alertQueue; // @synthesize alertQueue=_alertQueue;
@property (readonly) CALNPersistedNotificationsContext *context; // @synthesize context=_context;
@property (readonly) NSObject<OS_dispatch_queue> *databaseQueue; // @synthesize databaseQueue=_databaseQueue;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (strong) BBDataProviderProxy *proxy; // @synthesize proxy=_proxy;
@property (readonly) Class superclass;
@property (strong, nonatomic) EKTimedEventStorePurger *timedEventStorePurger; // @synthesize timedEventStorePurger=_timedEventStorePurger;

+ (id)logHandle;
+ (id)requestedDarwinNotifications;
- (void).cxx_destruct;
- (void)_calDatabaseChangedNotificationReceived;
- (void)_calendarNotificationSettingChanged;
- (void)_killSyncTimer;
- (BOOL)_loadNotifications;
- (void)_resetSyncTimer;
- (void)_significantTimeChanged;
- (void)_syncDidEnd;
- (void)_syncDidStart;
- (void)_syncTimerFired:(id)arg1;
- (void)_timeZoneChanged:(id)arg1;
- (void)acknowledgeAlerts:(id)arg1 includeRefiringAlerts:(BOOL)arg2;
- (void)acknowledgeLocationAlertWithURL:(id)arg1 entityID:(id)arg2;
- (id)alarmBulletins;
- (id)alarmForCalendarItem:(id)arg1 matchingExternalID:(id)arg2;
- (void)alertInfosFired:(id)arg1;
- (void)bulletinAcknowledgedWithResponse:(id)arg1 acknowledgeAlarm:(BOOL)arg2 extraActions:(CDUnknownBlockType)arg3;
- (id)bulletinRequestForAlertInfo:(id)arg1;
- (id)bulletinRequestWithCalendarNotification:(id)arg1;
- (id)bulletinRequestWithRecordID:(id)arg1 publisherBulletinID:(id)arg2;
- (id)bulletinsWithRequestParameters:(id)arg1 lastCleared:(id)arg2;
- (void)clearAlerts:(id)arg1;
- (id)clearedInfoForBulletins:(id)arg1 lastClearedInfo:(id)arg2;
- (id)closeActionForAlertInfo:(id)arg1;
- (void)dataProviderDidLoad;
- (void)databaseChanged;
- (void)dealloc;
- (id)defaultURLForAlertInfo:(id)arg1;
- (id)entityScheme;
- (id)eventStore;
- (id)eventStoreWithDispatch:(BOOL)arg1;
- (id)expirationDateForAlertInfo:(id)arg1;
- (void)fetchDataFromContext;
- (void)firstUnlock;
- (void)handleBulletinActionResponse:(id)arg1;
- (void)handleDarwinNotification:(id)arg1;
- (id)initWithNotificationFetchBlock:(CDUnknownBlockType)arg1;
- (id)messageStringForAlertInfo:(id)arg1;
- (id)notificationBulletins;
- (void)notificationCountChanged:(id)arg1;
- (void)notificationsChanged;
- (void)postBulletinForAlertInfo:(id)arg1;
- (void)protectedAcknowledgeAlarm:(BOOL)arg1 forBulletinWithEntityID:(id)arg2 externalID:(id)arg3 extraActions:(CDUnknownBlockType)arg4;
- (id)protectedEventStore;
- (id)protectedItemForBulletinRecordID:(id)arg1;
- (void)protectedRemoveBulletinForID:(id)arg1;
- (void)protectedSaveBulletin:(id)arg1 forAlertInfo:(id)arg2 usingID:(id)arg3;
- (void)reloadNotifications;
- (void)reloadNotificationsIfNeeded;
- (void)removeAlerts:(id)arg1;
- (BOOL)saveNotificationBulletin:(id)arg1 replace:(BOOL)arg2;
- (id)sectionIdentifier;
- (BOOL)shouldModfyBulletinForAlert:(id)arg1;
- (BOOL)shouldPostBulletinForAlertInfo:(id)arg1;
- (BOOL)shouldWithdrawBeforePostingBulletinForAlert:(id)arg1;
- (BOOL)shouldWithdrawBulletin:(id)arg1 forItem:(id)arg2;
- (id)sortDescriptors;
- (id)supplementaryActionsForAlertInfo:(id)arg1 bulletin:(id)arg2 compactLayout:(BOOL)arg3;
- (BOOL)syncsBulletinDismissal;
- (id)titleStringForAlertInfo:(id)arg1;
- (void)unalertedNotificationsReceived:(id)arg1 withNotificationReferences:(id)arg2;
- (id)viewActionForAlertInfo:(id)arg1;
- (void)willPostBulletinForAlertInfo:(id)arg1;
- (void)withdrawAlertBulletin:(id)arg1;
- (void)withdrawNotificationBulletin:(id)arg1;

@end

