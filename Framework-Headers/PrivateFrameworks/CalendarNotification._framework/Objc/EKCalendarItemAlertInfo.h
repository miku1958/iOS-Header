//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <CalendarNotification/NSCopying-Protocol.h>

@class EKTravelEngineHypothesis, NSData, NSDate, NSString, NSTimeZone, NSURL, NSUserActivity;

@interface EKCalendarItemAlertInfo : NSObject <NSCopying>
{
    BOOL _allDay;
    BOOL _tentative;
    BOOL _acknowledged;
    BOOL _refiring;
    BOOL _isOffsetFromTravelTimeStart;
    BOOL _isPseudoEvent;
    BOOL _hasGeoLocationCoordinates;
    BOOL _hasOrganizerThatIsNotCurrentUser;
    BOOL _isSuggestedLocation;
    BOOL _isOnSharedCalendar;
    BOOL _hasDisplayedLeaveByMessage;
    BOOL _hasDisplayedLeaveNowMessage;
    BOOL _hasDisplayedRunningLateMessage;
    NSString *_publisherBulletinID;
    NSString *_title;
    NSString *_location;
    NSDate *_eventDate;
    NSDate *_endDate;
    NSTimeZone *_eventTimeZone;
    NSUserActivity *_appLink;
    NSURL *_action;
    NSURL *_entityID;
    long long _proximity;
    NSString *_externalID;
    NSString *_dismissalID;
    NSString *_alarmID;
    NSData *_mapKitHandle;
    NSString *_organizerEmailAddress;
    NSString *_startLocationRouting;
    NSString *_locationAddress;
    EKTravelEngineHypothesis *_latestHypothesis;
    NSDate *_lastFireTimeOfAlertOffsetFromTravelTime;
    NSDate *_lastTimeBulletinAdded;
    NSURL *_conferenceURL;
    unsigned long long _currentRouteHypothesizerNotificationType;
    NSDate *_fireDate;
    struct CLLocationCoordinate2D _geoLocationCoordinates;
}

@property (readonly, nonatomic) BOOL acknowledged; // @synthesize acknowledged=_acknowledged;
@property (readonly, nonatomic) NSURL *action; // @synthesize action=_action;
@property (readonly, nonatomic) NSString *alarmID; // @synthesize alarmID=_alarmID;
@property (readonly, nonatomic) BOOL allDay; // @synthesize allDay=_allDay;
@property (readonly, nonatomic) NSUserActivity *appLink; // @synthesize appLink=_appLink;
@property (strong, nonatomic) NSURL *conferenceURL; // @synthesize conferenceURL=_conferenceURL;
@property (nonatomic) unsigned long long currentRouteHypothesizerNotificationType; // @synthesize currentRouteHypothesizerNotificationType=_currentRouteHypothesizerNotificationType;
@property (readonly, nonatomic) NSString *dismissalID; // @synthesize dismissalID=_dismissalID;
@property (readonly, nonatomic) NSDate *endDate; // @synthesize endDate=_endDate;
@property (readonly, nonatomic) NSURL *entityID; // @synthesize entityID=_entityID;
@property (readonly, nonatomic) NSDate *eventDate; // @synthesize eventDate=_eventDate;
@property (readonly, nonatomic) NSTimeZone *eventTimeZone; // @synthesize eventTimeZone=_eventTimeZone;
@property (readonly, nonatomic) NSString *externalID; // @synthesize externalID=_externalID;
@property (strong, nonatomic) NSDate *fireDate; // @synthesize fireDate=_fireDate;
@property (nonatomic) struct CLLocationCoordinate2D geoLocationCoordinates; // @synthesize geoLocationCoordinates=_geoLocationCoordinates;
@property (nonatomic) BOOL hasDisplayedLeaveByMessage; // @synthesize hasDisplayedLeaveByMessage=_hasDisplayedLeaveByMessage;
@property (nonatomic) BOOL hasDisplayedLeaveNowMessage; // @synthesize hasDisplayedLeaveNowMessage=_hasDisplayedLeaveNowMessage;
@property (nonatomic) BOOL hasDisplayedRunningLateMessage; // @synthesize hasDisplayedRunningLateMessage=_hasDisplayedRunningLateMessage;
@property (nonatomic) BOOL hasGeoLocationCoordinates; // @synthesize hasGeoLocationCoordinates=_hasGeoLocationCoordinates;
@property (nonatomic) BOOL hasOrganizerThatIsNotCurrentUser; // @synthesize hasOrganizerThatIsNotCurrentUser=_hasOrganizerThatIsNotCurrentUser;
@property (readonly, nonatomic) BOOL isOffsetFromTravelTimeStart; // @synthesize isOffsetFromTravelTimeStart=_isOffsetFromTravelTimeStart;
@property (nonatomic) BOOL isOnSharedCalendar; // @synthesize isOnSharedCalendar=_isOnSharedCalendar;
@property (readonly, nonatomic) BOOL isPseudoEvent; // @synthesize isPseudoEvent=_isPseudoEvent;
@property (readonly, nonatomic) BOOL isPurelyATimeToLeaveAlert;
@property (nonatomic) BOOL isSuggestedLocation; // @synthesize isSuggestedLocation=_isSuggestedLocation;
@property (strong, nonatomic) NSDate *lastFireTimeOfAlertOffsetFromTravelTime; // @synthesize lastFireTimeOfAlertOffsetFromTravelTime=_lastFireTimeOfAlertOffsetFromTravelTime;
@property (strong, nonatomic) NSDate *lastTimeBulletinAdded; // @synthesize lastTimeBulletinAdded=_lastTimeBulletinAdded;
@property (strong, nonatomic) EKTravelEngineHypothesis *latestHypothesis; // @synthesize latestHypothesis=_latestHypothesis;
@property (readonly, nonatomic) NSString *location; // @synthesize location=_location;
@property (strong, nonatomic) NSString *locationAddress; // @synthesize locationAddress=_locationAddress;
@property (strong, nonatomic) NSData *mapKitHandle; // @synthesize mapKitHandle=_mapKitHandle;
@property (strong, nonatomic) NSString *organizerEmailAddress; // @synthesize organizerEmailAddress=_organizerEmailAddress;
@property (readonly, nonatomic) long long proximity; // @synthesize proximity=_proximity;
@property (readonly, nonatomic) NSString *publisherBulletinID; // @synthesize publisherBulletinID=_publisherBulletinID;
@property (readonly, nonatomic) NSString *recordID;
@property (readonly, nonatomic) BOOL refiring; // @synthesize refiring=_refiring;
@property (strong, nonatomic) NSString *startLocationRouting; // @synthesize startLocationRouting=_startLocationRouting;
@property (readonly, nonatomic) BOOL tentative; // @synthesize tentative=_tentative;
@property (readonly, nonatomic) NSString *title; // @synthesize title=_title;

- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (unsigned long long)hash;
- (id)initWithTitle:(id)arg1 location:(id)arg2 date:(id)arg3 endDate:(id)arg4 timeZone:(id)arg5 allDay:(BOOL)arg6 tentative:(BOOL)arg7 publisherBulletinID:(id)arg8 entityID:(id)arg9 appLink:(id)arg10 action:(id)arg11 proximity:(long long)arg12 externalID:(id)arg13 acknowledged:(BOOL)arg14 dismissalID:(id)arg15 alarmID:(id)arg16 isOffsetFromTravelTimeStart:(BOOL)arg17 refiring:(BOOL)arg18 pseudoEvent:(BOOL)arg19;
- (BOOL)isEqual:(id)arg1;
- (void)resetTimeToLeaveDisplayState;

@end

