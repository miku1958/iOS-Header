//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <FileProviderDaemon/FPDDomainIndexerDelegate-Protocol.h>
#import <FileProviderDaemon/FPDFileCoordinationProviderDelegate-Protocol.h>

@class FPDDomainIndexer, FPDProvider, FPPacer, FPProviderDomain, NSArray, NSData, NSDictionary, NSFileProviderDomain, NSMutableDictionary, NSNumber, NSOperationQueue, NSString, NSURL;
@protocol FPDDomainBackend, FPDDomainIndexChangeDelegate, FPDExtensionSessionProtocol, OS_dispatch_queue, OS_dispatch_source, OS_os_log;

@interface FPDDomain : NSObject <FPDFileCoordinationProviderDelegate, FPDDomainIndexerDelegate>
{
    NSMutableDictionary *_coordinatorMetadataPerURL;
    NSOperationQueue *_providedItemsOperationQueue;
    NSDictionary *_fileCoordinationProviderByURL;
    id<FPDExtensionSessionProtocol> _session;
    Class _fpfsClass;
    BOOL _cantStartup;
    BOOL _isObservingRoot;
    BOOL _indexerStarted;
    BOOL _isUsingFPFS;
    BOOL _invalidated;
    NSObject<OS_dispatch_source> *_timer;
    NSURL *_previouslyAccessedSecurityScopedURL;
    FPPacer *_rootCreationPacer;
    BOOL _started;
    BOOL _userEnabled;
    BOOL _ejectable;
    BOOL _unableToStartup;
    BOOL _forceNoFPFSForTesting;
    id<FPDDomainIndexChangeDelegate> _indexChangeDelegate;
    NSString *_identifier;
    NSFileProviderDomain *_nsDomainOrNilForDefault;
    NSFileProviderDomain *_nsDomain;
    NSNumber *_shouldDropIndexOrNil;
    NSObject<OS_dispatch_queue> *_serialQueue;
    NSObject<OS_os_log> *_log;
    NSArray *_extensionStorageURLs;
    NSString *_purposeIdentifier;
    id<FPDDomainBackend> _defaultBackend;
    id<FPDDomainBackend> _extensionBackend;
    id<FPDDomainBackend> _deactivatedBackend;
    FPDProvider *_provider;
    NSMutableDictionary *_filePresenters;
    FPDDomainIndexer *_indexer;
    NSData *_fpfsRootBookmarkData;
}

@property (readonly, nonatomic) id<FPDDomainBackend> deactivatedBackend; // @synthesize deactivatedBackend=_deactivatedBackend;
@property (readonly, copy) NSString *debugDescription;
@property (strong, nonatomic) id<FPDDomainBackend> defaultBackend; // @synthesize defaultBackend=_defaultBackend;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) FPDDomain *domainIfNotDisabledByFPFSSettings;
@property (nonatomic) BOOL ejectable; // @synthesize ejectable=_ejectable;
@property (readonly, nonatomic) id<FPDDomainBackend> extensionBackend; // @synthesize extensionBackend=_extensionBackend;
@property (readonly, nonatomic) NSArray *extensionStorageURLs; // @synthesize extensionStorageURLs=_extensionStorageURLs;
@property (strong, nonatomic) NSMutableDictionary *filePresenters; // @synthesize filePresenters=_filePresenters;
@property (nonatomic) BOOL forceNoFPFSForTesting; // @synthesize forceNoFPFSForTesting=_forceNoFPFSForTesting;
@property (readonly, nonatomic) NSString *fp_prettyDescription;
@property (strong, nonatomic) NSData *fpfsRootBookmarkData; // @synthesize fpfsRootBookmarkData=_fpfsRootBookmarkData;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property (weak, nonatomic) id<FPDDomainIndexChangeDelegate> indexChangeDelegate; // @synthesize indexChangeDelegate=_indexChangeDelegate;
@property (strong, nonatomic) FPDDomainIndexer *indexer; // @synthesize indexer=_indexer;
@property (readonly, nonatomic) BOOL isConnectedToAppExtension;
@property (readonly, nonatomic) NSObject<OS_os_log> *log; // @synthesize log=_log;
@property (readonly, nonatomic) NSFileProviderDomain *nsDomain; // @synthesize nsDomain=_nsDomain;
@property (strong, nonatomic) NSFileProviderDomain *nsDomainOrNilForDefault; // @synthesize nsDomainOrNilForDefault=_nsDomainOrNilForDefault;
@property (readonly, weak, nonatomic) FPDProvider *provider; // @synthesize provider=_provider;
@property (readonly, nonatomic) FPProviderDomain *providerDomain;
@property (readonly, nonatomic) NSString *providerDomainID;
@property (readonly, nonatomic) NSString *purposeIdentifier; // @synthesize purposeIdentifier=_purposeIdentifier;
@property (readonly, nonatomic) NSArray *rootURLs;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *serialQueue; // @synthesize serialQueue=_serialQueue;
@property (readonly, nonatomic) id<FPDExtensionSessionProtocol> session; // @synthesize session=_session;
@property (strong, nonatomic) NSNumber *shouldDropIndexOrNil; // @synthesize shouldDropIndexOrNil=_shouldDropIndexOrNil;
@property (nonatomic) BOOL started; // @synthesize started=_started;
@property (readonly) Class superclass;
@property (nonatomic) BOOL unableToStartup; // @synthesize unableToStartup=_unableToStartup;
@property (nonatomic) BOOL userEnabled; // @synthesize userEnabled=_userEnabled;

- (void).cxx_destruct;
- (void)_cancelProvidingItemAtURL:(id)arg1 toReaderWithID:(id)arg2;
- (id)_fileReactorID;
- (id)_physicalURLForURL:(id)arg1;
- (void)_provideItemAtURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_provideItemAtURL:(id)arg1 toReaderWithID:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_providedItemAtURL:(id)arg1 didGainPresenterWithID:(id)arg2;
- (void)_providedItemAtURL:(id)arg1 didLosePresenterWithID:(id)arg2;
- (void)_providedItemAtURL:(id)arg1 withPresenterWithID:(id)arg2 didMoveToURL:(id)arg3;
- (id)_providedItemsOperationQueue;
- (void)_registerFileCoordinatorWithCompletion:(CDUnknownBlockType)arg1;
- (id)_removeProgressForProvidingItemAtURL:(id)arg1 toReaderWithID:(id)arg2;
- (void)_setupRecoveryTimer;
- (BOOL)_shouldDisconnect;
- (BOOL)_shouldDisconnectDueToLowDiskSpace;
- (id)_siblingDelegateForURL:(id)arg1;
- (void)_startObservingRootAndResumeIndexerWithCompletion:(CDUnknownBlockType)arg1;
- (void)_startWithCompletion:(CDUnknownBlockType)arg1;
- (void)_unregisterFromFileCoordinator;
- (BOOL)_wantsPresenterNotifications;
- (void)_writerWithID:(id)arg1 didFinishWritingForURL:(id)arg2;
- (void)cancelPendingCoordinations;
- (void)cleanupDomainKeepingArchiveFolder:(BOOL)arg1;
- (void)createRootAndObserveIfNeededWithCompletion:(CDUnknownBlockType)arg1;
- (BOOL)createRootByImportingDirectoryAtURL:(id)arg1 error:(id *)arg2;
- (void)createRootURLWithCompletion:(CDUnknownBlockType)arg1;
- (void)daemonSideItemChange:(id)arg1 changedFields:(unsigned long long)arg2 request:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)didChangeItemID:(id)arg1 request:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)downloadItemWithItemID:(id)arg1 request:(id)arg2 progress:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)dumpInternalStateTo:(id)arg1 request:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)dumpStateTo:(id)arg1 limitNumberOfItems:(BOOL)arg2;
- (void)enumerateWithSettings:(id)arg1 lifetimeExtender:(id)arg2 observer:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)extensionIndexer:(id)arg1 didChangeNeedsAuthentification:(BOOL)arg2;
- (void)extensionIndexer:(id)arg1 didIndexOneBatchWithError:(id)arg2 updatedItems:(id)arg3 deletedIDs:(id)arg4 anchor:(id)arg5 anchorPersisted:(CDUnknownBlockType)arg6;
- (void)fetchEnumeratorWithSettings:(id)arg1 observer:(id)arg2 request:(id)arg3 lifetimeExtender:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)fetchOperationServiceOrEndpointWithRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)finishSetup;
- (void)forceFSIngestionForItemID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)forceIngestionAtURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)forceIngestionForItemID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)initWithIdentifier:(id)arg1 nsDomain:(id)arg2 extensionStorageURLs:(id)arg3 purposeIdentifier:(id)arg4 fpfsClass:(Class)arg5 provider:(id)arg6;
- (void)invalidate;
- (void)invalidateSession;
- (BOOL)isDefaultDomain;
- (BOOL)isHiddenDefaultDomain;
- (BOOL)isProviderForURL:(id)arg1;
- (BOOL)isUsingFPFS;
- (id)materializedURLForItemID:(id)arg1;
- (long long)nonEvictableSpace;
- (void)startInOrderToDropIndex;
- (void)startWithCompletion:(CDUnknownBlockType)arg1;
- (BOOL)supportsFPFS;
- (void)valuesForAttributes:(id)arg1 forURL:(id)arg2 request:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)workingSetDidChangeWithCompletionHandler:(CDUnknownBlockType)arg1;

@end

