//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AttributeTable {
    CDUnknownFunctionPointerType *_field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field2;
    struct sqlite3 *_field3;
    struct shared_ptr<degas::Statement> _field4;
    struct shared_ptr<degas::Statement> _field5;
    struct shared_ptr<degas::Statement> _field6;
    struct shared_ptr<degas::Statement> _field7;
    struct shared_ptr<degas::Statement> _field8;
};

struct Bitmap {
    unsigned long long _field1;
    unsigned long long _field2;
    struct vector<degas::BitsetPtr, std::__1::allocator<degas::BitsetPtr>> _field3;
    BOOL _field4;
};

struct BitmapTable {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field1;
    struct sqlite3 *_field2;
    struct Bitmap *_field3;
};

struct BitsetPtr;

struct Database {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field1;
    struct sqlite3 *_field2;
    struct LabelTable _field3;
    struct MetadataTable _field4;
    struct NodeTable _field5;
    struct EdgeTable _field6;
    struct AttributeTable _field7;
    struct map<unsigned long long, degas::AttributeInstanceTable, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, degas::AttributeInstanceTable>>> _field8;
    struct map<unsigned long long, degas::AttributeInstanceTable, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, degas::AttributeInstanceTable>>> _field9;
    struct Statement *_field10;
    struct Statement *_field11;
    struct BitmapTable _field12;
};

struct EdgeCursor {
    struct shared_ptr<degas::Statement> _field1;
};

struct EdgeTable {
    CDUnknownFunctionPointerType *_field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field2;
    struct sqlite3 *_field3;
    struct shared_ptr<degas::Statement> _field4;
    struct shared_ptr<degas::Statement> _field5;
    struct shared_ptr<degas::Statement> _field6;
    struct shared_ptr<degas::Statement> _field7;
    struct shared_ptr<degas::Statement> _field8;
    struct shared_ptr<degas::Statement> _field9;
};

struct LabelTable {
    CDUnknownFunctionPointerType *_field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field2;
    struct sqlite3 *_field3;
    struct shared_ptr<degas::Statement> _field4;
    struct shared_ptr<degas::Statement> _field5;
    struct shared_ptr<degas::Statement> _field6;
    struct shared_ptr<degas::Statement> _field7;
    struct shared_ptr<degas::Statement> _field8;
    struct shared_ptr<degas::Statement> _field9;
};

struct MetadataTable {
    CDUnknownFunctionPointerType *_field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field2;
    struct sqlite3 *_field3;
    struct shared_ptr<degas::Statement> _field4;
    struct shared_ptr<degas::Statement> _field5;
    struct shared_ptr<degas::Statement> _field6;
    int _field7;
};

struct NodeCursor {
    struct shared_ptr<degas::Statement> _field1;
};

struct NodeTable {
    CDUnknownFunctionPointerType *_field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field2;
    struct sqlite3 *_field3;
    struct shared_ptr<degas::Statement> _field4;
    struct shared_ptr<degas::Statement> _field5;
    struct shared_ptr<degas::Statement> _field6;
    struct shared_ptr<degas::Statement> _field7;
    struct shared_ptr<degas::Statement> _field8;
    struct shared_ptr<degas::Statement> _field9;
};

struct Statement;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *_field1;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long _field1;
                    unsigned long long _field2;
                    char *_field3;
                } _field1;
                struct __short {
                    union {
                        unsigned char _field1;
                        char _field2;
                    } _field1;
                    char _field2[23];
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct map<unsigned long long, degas::AttributeInstanceCursor, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, degas::AttributeInstanceCursor>>> {
    struct __tree<std::__1::__value_type<unsigned long long, degas::AttributeInstanceCursor>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, degas::AttributeInstanceCursor>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, degas::AttributeInstanceCursor>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, degas::AttributeInstanceCursor>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, degas::AttributeInstanceCursor>, std::__1::less<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned long long, degas::AttributeInstanceTable, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, degas::AttributeInstanceTable>>> {
    struct __tree<std::__1::__value_type<unsigned long long, degas::AttributeInstanceTable>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, degas::AttributeInstanceTable>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, degas::AttributeInstanceTable>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, degas::AttributeInstanceTable>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, degas::AttributeInstanceTable>, std::__1::less<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned long long, degas::DataType, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, degas::DataType>>> {
    struct __tree<std::__1::__value_type<unsigned long long, degas::DataType>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, degas::DataType>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, degas::DataType>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, degas::DataType>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, degas::DataType>, std::__1::less<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct os_unfair_lock_s {
    unsigned int _os_unfair_lock_opaque;
};

struct shared_ptr<degas::Statement> {
    struct Statement *_field1;
    struct __shared_weak_count *_field2;
};

struct sqlite3;

struct vector<degas::BitsetPtr, std::__1::allocator<degas::BitsetPtr>> {
    struct BitsetPtr *_field1;
    struct BitsetPtr *_field2;
    struct __compressed_pair<degas::BitsetPtr *, std::__1::allocator<degas::BitsetPtr>> {
        struct BitsetPtr *_field1;
    } _field3;
};

#pragma mark Typedef'd Structures

// Template types
typedef struct map<unsigned long long, degas::AttributeInstanceCursor, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, degas::AttributeInstanceCursor>>> {
    struct __tree<std::__1::__value_type<unsigned long long, degas::AttributeInstanceCursor>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, degas::AttributeInstanceCursor>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, degas::AttributeInstanceCursor>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, degas::AttributeInstanceCursor>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, degas::AttributeInstanceCursor>, std::__1::less<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_f5a6a24a;

typedef struct map<unsigned long long, degas::DataType, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, degas::DataType>>> {
    struct __tree<std::__1::__value_type<unsigned long long, degas::DataType>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, degas::DataType>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, degas::DataType>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, degas::DataType>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, degas::DataType>, std::__1::less<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_d80ba52d;

