//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/NSMutableData.h>

#import <MIME/NSCopying-Protocol.h>
#import <MIME/NSMutableCopying-Protocol.h>

@interface MFMutableData : NSMutableData <NSCopying, NSMutableCopying>
{
    void *_bytes;
    unsigned long long _length;
    unsigned long long _mappedLength;
    unsigned long long _capacity;
    unsigned long long _threshold;
    char *_path;
    int _fd;
    unsigned long long _flushFrom;
    BOOL _flush;
    BOOL _immutable;
    BOOL _vm;
}

- (void)_flushToDisk:(unsigned long long)arg1 capacity:(unsigned long long)arg2;
- (id)_initWithFd:(int)arg1 path:(id)arg2 mutable:(BOOL)arg3;
- (void)_mapMutableData:(BOOL)arg1;
- (void)appendBytes:(const void *)arg1 length:(unsigned long long)arg2;
- (void)appendData:(id)arg1;
- (const void *)bytes;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithBytes:(const void *)arg1 length:(unsigned long long)arg2;
- (id)initWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2;
- (id)initWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2 freeWhenDone:(BOOL)arg3;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithContentsOfFile:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (id)initWithContentsOfMappedFile:(id)arg1;
- (id)initWithContentsOfURL:(id)arg1;
- (id)initWithContentsOfURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (id)initWithData:(id)arg1;
- (id)initWithLength:(unsigned long long)arg1;
- (unsigned long long)length;
- (BOOL)mf_immutable;
- (void)mf_makeImmutable;
- (void *)mutableBytes;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (void)setLength:(unsigned long long)arg1;
- (void)setMappingThreshold:(unsigned int)arg1;
- (id)subdataWithRange:(struct _NSRange)arg1;
- (BOOL)writeToFile:(id)arg1 atomically:(BOOL)arg2;
- (BOOL)writeToFile:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (BOOL)writeToURL:(id)arg1 atomically:(BOOL)arg2;
- (BOOL)writeToURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;

@end

