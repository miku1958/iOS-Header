//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <RunningBoardServices/NSCopying-Protocol.h>
#import <RunningBoardServices/NSSecureCoding-Protocol.h>
#import <RunningBoardServices/RBSProcessMatching-Protocol.h>
#import <RunningBoardServices/RBSXPCSecureCoding-Protocol.h>

@class NSString, NSUUID, RBSProcessIdentifier;

@interface RBSProcessIdentity : NSObject <RBSProcessMatching, RBSXPCSecureCoding, NSSecureCoding, NSCopying>
{
    int _pid;
    NSString *_description;
    unsigned long long _hash;
}

@property (readonly, nonatomic, getter=isXPCService) BOOL XPCService;
@property (readonly, nonatomic, getter=isAnonymous) BOOL anonymous;
@property (readonly, nonatomic, getter=isApplication) BOOL application;
@property (readonly, copy, nonatomic) NSString *applicationJobLabel;
@property (readonly, nonatomic, getter=isDaemon) BOOL daemon;
@property (readonly, copy, nonatomic) NSString *daemonJobLabel;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) unsigned char defaultManageFlags;
@property (readonly, copy) NSString *description; // @synthesize description=_description;
@property (readonly, nonatomic, getter=isEmbeddedApplication) BOOL embeddedApplication;
@property (readonly, copy, nonatomic) NSString *embeddedApplicationIdentifier;
@property (readonly, nonatomic) unsigned int euid;
@property (readonly, nonatomic, getter=isExtension) BOOL extension;
@property (readonly) unsigned long long hash; // @synthesize hash=_hash;
@property (readonly, copy, nonatomic) RBSProcessIdentifier *hostIdentifier;
@property (readonly, copy, nonatomic) RBSProcessIdentity *hostIdentity;
@property (readonly, nonatomic) BOOL inheritsCoalitionBand;
@property (readonly, nonatomic) int platform;
@property (readonly, nonatomic) NSString *shortDescription;
@property (readonly) Class superclass;
@property (readonly, nonatomic) NSUUID *uuid;
@property (readonly, copy, nonatomic) NSString *xpcServiceIdentifier;

+ (id)_identityForXPCServiceIdentifier:(id)arg1 hostInstance:(id)arg2 UUID:(id)arg3 variant:(long long)arg4;
+ (id)_identityForXPCServiceIdentifier:(id)arg1 variant:(long long)arg2;
+ (id)_identityForXPCServicePath:(id)arg1 properties:(id)arg2 pid:(int)arg3 euid:(unsigned int)arg4 host:(id)arg5;
+ (id)_identityForXPCServicePath:(id)arg1 type:(unsigned long long)arg2 pid:(int)arg3 euid:(unsigned int)arg4 host:(id)arg5 UUID:(id)arg6;
+ (id)extensionIdentityForPlugInKitIdentifier:(id)arg1 hostIdentifier:(id)arg2 UUID:(id)arg3;
+ (id)identityForApplicationJobLabel:(id)arg1;
+ (id)identityForApplicationJobLabel:(id)arg1 bundleID:(id)arg2 platform:(int)arg3;
+ (id)identityForDaemonJobLabel:(id)arg1;
+ (id)identityForEmbeddedApplicationIdentifier:(id)arg1;
+ (id)identityForEmbeddedApplicationIdentifier:(id)arg1 euid:(unsigned int)arg2;
+ (id)identityForEmbeddedApplicationIdentifier:(id)arg1 jobLabel:(id)arg2 euid:(unsigned int)arg3 platform:(int)arg4;
+ (id)identityForExecutablePath:(id)arg1 pid:(int)arg2 euid:(unsigned int)arg3;
+ (id)identityForLaunchProperties:(id)arg1 pid:(int)arg2 euid:(unsigned int)arg3;
+ (id)identityForPlugInKitIdentifier:(id)arg1;
+ (id)identityForXPCServiceIdentifier:(id)arg1;
+ (id)identityForXPCServicePath:(id)arg1 host:(id)arg2;
+ (id)identityForXPCServiceProperties:(id)arg1 pid:(int)arg2 euid:(unsigned int)arg3 host:(id)arg4;
+ (id)identityOfCurrentProcess;
+ (BOOL)shouldManageExtensionWithExtensionPoint:(id)arg1;
+ (BOOL)supportsRBSXPCSecureCoding;
+ (BOOL)supportsSecureCoding;
- (void).cxx_destruct;
- (id)_init;
- (id)_initOpaqueWithPid:(int)arg1 name:(id)arg2 euid:(unsigned int)arg3;
- (BOOL)_matchesIdentity:(id)arg1;
- (id)copyWithEuid:(unsigned int)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)encodeForJob;
- (void)encodeWithCoder:(id)arg1;
- (void)encodeWithRBSXPCCoder:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithDecodeFromJob:(id)arg1;
- (id)initWithRBSXPCCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToIdentity:(id)arg1;
- (BOOL)matchesProcess:(id)arg1;
- (id)processPredicate;

@end

