//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class AMSSQLiteConnectionOptions, NSError, NSMapTable, NSMutableArray;
@protocol AMSSQLiteConnectionDelegate;

__attribute__((visibility("hidden")))
@interface AMSSQLiteConnection : NSObject
{
    NSMutableArray *_afterTransactionBlocks;
    struct sqlite3 *_database;
    id<AMSSQLiteConnectionDelegate> _delegate;
    BOOL _didResetForCorruption;
    NSMapTable *_preparedStatements;
    long long _transactionDepth;
    BOOL _transactionWantsRollback;
    AMSSQLiteConnectionOptions *_options;
}

@property (readonly, copy, nonatomic) NSError *currentError;
@property (weak, nonatomic) id<AMSSQLiteConnectionDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, nonatomic) long long lastChangeCount;
@property (readonly, copy, nonatomic) AMSSQLiteConnectionOptions *options; // @synthesize options=_options;

- (void).cxx_destruct;
- (BOOL)_close;
- (BOOL)_executeStatement:(id)arg1 error:(id *)arg2;
- (BOOL)_executeWithError:(id *)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)_finalizeAllStatements;
- (void)_flushAfterTransactionBlocks;
- (BOOL)_open;
- (BOOL)_openAndAllowRetry:(BOOL)arg1;
- (BOOL)_performResetAfterCorruptionError;
- (id)_prepareStatement:(id)arg1 error:(id *)arg2;
- (BOOL)_resetAfterCorruptionError;
- (BOOL)_resetAfterIOError;
- (id)_statementForPreparedStatement:(id)arg1 error:(id *)arg2;
- (id)_verifiedStatementForPreparedStatement:(id)arg1 error:(id *)arg2;
- (id)_verifiedStatementForSQL:(id)arg1 error:(id *)arg2;
- (BOOL)close;
- (void)dealloc;
- (void)dispatchAfterTransaction:(CDUnknownBlockType)arg1;
- (void)executePreparedQuery:(id)arg1 withResults:(CDUnknownBlockType)arg2;
- (BOOL)executePreparedStatement:(id)arg1 error:(id *)arg2;
- (BOOL)executePreparedStatement:(id)arg1 error:(id *)arg2 bindings:(CDUnknownBlockType)arg3;
- (void)executeQuery:(id)arg1 withResults:(CDUnknownBlockType)arg2;
- (BOOL)executeStatement:(id)arg1 error:(id *)arg2;
- (BOOL)executeStatement:(id)arg1 error:(id *)arg2 bindings:(CDUnknownBlockType)arg3;
- (BOOL)executeWithError:(id *)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (BOOL)finalizePreparedStatement:(id)arg1 error:(id *)arg2;
- (id)initWithOptions:(id)arg1;
- (BOOL)open;
- (void)performTransaction:(CDUnknownBlockType)arg1;
- (id)prepareStatement:(id)arg1 error:(id *)arg2;
- (BOOL)truncate;

@end

