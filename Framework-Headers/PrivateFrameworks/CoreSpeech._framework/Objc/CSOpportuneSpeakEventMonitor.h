//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <CoreSpeech/CSEventMonitor.h>

#import <CoreSpeech/CSOpportuneSpeakBehaviorMonitorDelegate-Protocol.h>

@class CSAudioRecordContext, NSObject, NSString, NSUUID;
@protocol OS_dispatch_queue;

@interface CSOpportuneSpeakEventMonitor : CSEventMonitor <CSOpportuneSpeakBehaviorMonitorDelegate>
{
    BOOL _isOpportuneSpeakListening;
    NSObject<OS_dispatch_queue> *_queue;
    NSString *_audioProviderUUID;
    CSAudioRecordContext *_audioRecordContext;
    NSUUID *_token;
}

@property (strong, nonatomic) NSString *audioProviderUUID; // @synthesize audioProviderUUID=_audioProviderUUID;
@property (strong, nonatomic) CSAudioRecordContext *audioRecordContext; // @synthesize audioRecordContext=_audioRecordContext;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) BOOL isOpportuneSpeakListening; // @synthesize isOpportuneSpeakListening=_isOpportuneSpeakListening;
@property (strong, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property (readonly) Class superclass;
@property (strong, nonatomic) NSUUID *token; // @synthesize token=_token;

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)_notifyStopOpportuneSpeakWithDelay:(double)arg1;
- (void)_startMonitoringWithQueue:(id)arg1;
- (void)_stopMonitoring;
- (id)init;
- (BOOL)isStreaming;
- (void)opportuneSpeakBehaviorMonitor:(id)arg1 didStartStreamWithContext:(id)arg2 audioProviderUUID:(id)arg3 successfully:(BOOL)arg4 option:(id)arg5;
- (void)opportuneSpeakBehaviorMonitor:(id)arg1 didStopStream:(id)arg2;
- (void)opportuneSpeakBehaviorMonitor:(id)arg1 willStartStreamWithContext:(id)arg2 audioProviderUUID:(id)arg3 option:(id)arg4;
- (void)opportuneSpeakBehaviorMonitor:(id)arg1 willStopStream:(id)arg2;

@end

