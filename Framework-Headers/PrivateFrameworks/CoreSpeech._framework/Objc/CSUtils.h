//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@interface CSUtils : NSObject
{
}

+ (void)URLsInDirectory:(id)arg1 matchingPattern:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (id)_contentsOfDirectoryAtURL:(id)arg1 matchingPattern:(id)arg2 includingPropertiesForKeys:(id)arg3 error:(id *)arg4;
+ (id)_sharedDisposeLoggingQueue;
+ (void)_sortedURLsInDirectory:(id)arg1 matchingPattern:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (struct AudioStreamBasicDescription)aiffFileASBD;
+ (id)alertMuteBehaviorDict;
+ (id)alertMuteSettings;
+ (void)apply12dBGain:(id)arg1;
+ (void)applyGain:(float)arg1 toBuffer:(id)arg2;
+ (void)applyNegative12dBGain:(id)arg1;
+ (id)assetHashInResourcePath:(id)arg1;
+ (void)clearLogFilesInDirectory:(id)arg1 matchingPattern:(id)arg2 exceedNumber:(unsigned long long)arg3;
+ (id)convertToFloatLPCMBufFromShortLPCMBuf:(id)arg1;
+ (id)convertToShortLPCMBufFromFloatLPCMBuf:(id)arg1;
+ (id)deviceBuildVersion;
+ (id)deviceHwRevision;
+ (id)deviceProductType;
+ (id)deviceProductVersion;
+ (id)deviceUserAssignedName;
+ (unsigned long long)getAssetTypeForNamespace:(id)arg1;
+ (id)getFixedHighPrioritySerialQueueWithLabel:(id)arg1;
+ (id)getFixedPrioritySerialQueueWithLabel:(id)arg1 fixedPriority:(int)arg2;
+ (double)getHostClockFrequency;
+ (unsigned int)getNumElementInBitset:(unsigned long long)arg1;
+ (id)getSiriLanguageWithFallback:(id)arg1;
+ (void)getTrialIdsForAssetType:(unsigned long long)arg1 withCompletion:(CDUnknownBlockType)arg2;
+ (BOOL)hasRemoteBuiltInMic;
+ (BOOL)hasRemoteCoreSpeech;
+ (id)hearstVoiceTriggerRecordContext:(id)arg1;
+ (unsigned long long)hostTimeFromSampleCount:(unsigned long long)arg1 anchorHostTime:(unsigned long long)arg2 anchorSampleCount:(unsigned long long)arg3;
+ (float)hostTimeToSeconds:(unsigned long long)arg1;
+ (double)hostTimeToTimeInterval:(unsigned long long)arg1;
+ (BOOL)isIOSDeviceSupportingBargeIn;
+ (BOOL)isRecordContextAutoPrompt:(id)arg1;
+ (BOOL)isRecordContextHearstDoubleTap:(id)arg1;
+ (BOOL)isRecordContextHearstVoiceTrigger:(id)arg1;
+ (BOOL)isRecordContextHomeButtonPress:(id)arg1;
+ (BOOL)isRecordContextJarvisButtonPress:(id)arg1;
+ (BOOL)isRecordContextJarvisVoiceTrigger:(id)arg1;
+ (BOOL)isRecordContextRaiseToSpeak:(id)arg1;
+ (BOOL)isRecordContextSpeakerIdTrainingTrigger:(id)arg1;
+ (BOOL)isRecordContextVoiceTrigger:(id)arg1;
+ (void)iterateBitset:(unsigned long long)arg1 block:(CDUnknownBlockType)arg2;
+ (id)jarvisVoiceTriggerRecordContext:(id)arg1;
+ (struct AudioStreamBasicDescription)lpcmASBD;
+ (struct AudioStreamBasicDescription)lpcmFloatASBD;
+ (struct AudioStreamBasicDescription)lpcmInt16ASBD;
+ (struct AudioStreamBasicDescription)lpcmInt16NarrowBandASBD;
+ (struct AudioStreamBasicDescription)lpcmInterleavedASBD;
+ (struct AudioStreamBasicDescription)lpcmInterleavedASBDWithSampleRate:(float)arg1 numberOfChannels:(unsigned int)arg2;
+ (struct AudioStreamBasicDescription)lpcmInterleavedWithRemoteVADASBD;
+ (struct AudioStreamBasicDescription)lpcmMonoInterleavedWithRemoteVADASBD;
+ (struct AudioStreamBasicDescription)lpcmMonoNonInterleavedWithRemoteVADASBD;
+ (struct AudioStreamBasicDescription)lpcmNarrowBandASBD;
+ (struct AudioStreamBasicDescription)lpcmNonInterleavedASBD;
+ (struct AudioStreamBasicDescription)lpcmNonInterleavedASBDWithSampleRate:(float)arg1 numberOfChannels:(unsigned int)arg2;
+ (struct AudioStreamBasicDescription)lpcmNonInterleavedWithRemoteVADASBD;
+ (id)lpcmRecordSettings;
+ (unsigned long long)macHostTimeFromBridgeHostTime:(unsigned long long)arg1;
+ (struct AudioStreamBasicDescription)opusASBD;
+ (struct AudioStreamBasicDescription)opusNarrowBandASBD;
+ (id)opusRecordSettings;
+ (BOOL)readAudioChunksFrom:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (id)recordContextString:(id)arg1;
+ (void)removeLogFilesInDirectory:(id)arg1 matchingPattern:(id)arg2 beforeDays:(float)arg3;
+ (id)rootQueueWithFixedPriority:(int)arg1;
+ (unsigned long long)sampleCountFromHostTime:(unsigned long long)arg1 anchorHostTime:(unsigned long long)arg2 anchorSampleCount:(unsigned long long)arg3;
+ (unsigned long long)secondsToHostTime:(float)arg1;
+ (BOOL)shouldDeinterleaveAudioOnCS;
+ (BOOL)shouldDelayPhaticForMyriadDecision;
+ (BOOL)shouldDownloadVTAssetsOnDaemon;
+ (BOOL)shouldRunVTOnCS;
+ (struct AudioStreamBasicDescription)speexASBD;
+ (id)speexRecordSettings;
+ (BOOL)supportAdBlocker;
+ (BOOL)supportBeepCanceller;
+ (BOOL)supportBluetoothDeviceVoiceTrigger;
+ (BOOL)supportCSTwoShotDecision;
+ (BOOL)supportCircularBuffer;
+ (BOOL)supportCompactPlus;
+ (BOOL)supportContinuousAudioFingerprint;
+ (BOOL)supportContinuousVoiceTrigger;
+ (BOOL)supportHandsFree;
+ (BOOL)supportHearstVoiceTrigger;
+ (BOOL)supportHybridEndpointer;
+ (BOOL)supportJarvisVoiceTrigger;
+ (BOOL)supportKeywordDetector;
+ (BOOL)supportLanguageDetector;
+ (BOOL)supportLazySessionActivation;
+ (BOOL)supportOpportunisticZLL;
+ (BOOL)supportPhatic;
+ (BOOL)supportPremiumAssets;
+ (BOOL)supportPremiumModel;
+ (BOOL)supportPremiumWatchAssets;
+ (BOOL)supportRaiseToSpeak;
+ (BOOL)supportRemoraVoiceTrigger;
+ (BOOL)supportSAT;
+ (BOOL)supportSelfTriggerSuppression;
+ (BOOL)supportSessionActivateDelay;
+ (BOOL)supportSmartVolume;
+ (BOOL)supportTTS;
+ (BOOL)supportZeroFilter;
+ (BOOL)supportsSpeakerRecognitionAssets;
+ (BOOL)supportsVoiceTriggerFides;
+ (double)systemUpTime;
+ (id)timeStampWithSaltGrain;
+ (struct AudioStreamBasicDescription)utteranceFileASBD;
+ (id)voiceTriggerRecordContext;
+ (BOOL)xpcConnection:(id)arg1 hasEntitlement:(id)arg2;

@end

