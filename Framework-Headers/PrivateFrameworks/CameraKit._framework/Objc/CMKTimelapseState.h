//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <CameraKit/NSCoding-Protocol.h>
#import <CameraKit/NSCopying-Protocol.h>

@class CLLocation, NSDate, NSString;

@interface CMKTimelapseState : NSObject <NSCoding, NSCopying>
{
    BOOL _usingFrontCamera;
    BOOL _allFramesWritten;
    int _captureOrientation;
    float _focusLensPosition;
    NSString *_timelapseUUID;
    NSDate *_startTime;
    CLLocation *_startLocation;
    NSDate *_lastFrameResponseTime;
    NSDate *_stopTime;
    long long _stopReasons;
    double _captureTimeInterval;
    long long _frameIndexStride;
    long long _nextFrameIndex;
}

@property (nonatomic) BOOL allFramesWritten; // @synthesize allFramesWritten=_allFramesWritten;
@property (nonatomic) int captureOrientation; // @synthesize captureOrientation=_captureOrientation;
@property (readonly, nonatomic) double captureTimeInterval; // @synthesize captureTimeInterval=_captureTimeInterval;
@property (readonly, nonatomic) long long connectionMode;
@property (nonatomic) float focusLensPosition; // @synthesize focusLensPosition=_focusLensPosition;
@property (readonly, nonatomic) long long frameIndexStride; // @synthesize frameIndexStride=_frameIndexStride;
@property (strong, nonatomic) NSDate *lastFrameResponseTime; // @synthesize lastFrameResponseTime=_lastFrameResponseTime;
@property (readonly, nonatomic) long long nextFrameIndex; // @synthesize nextFrameIndex=_nextFrameIndex;
@property (strong, nonatomic) CLLocation *startLocation; // @synthesize startLocation=_startLocation;
@property (strong, nonatomic) NSDate *startTime; // @synthesize startTime=_startTime;
@property (nonatomic) long long stopReasons; // @synthesize stopReasons=_stopReasons;
@property (strong, nonatomic) NSDate *stopTime; // @synthesize stopTime=_stopTime;
@property (strong, nonatomic) NSString *timelapseUUID; // @synthesize timelapseUUID=_timelapseUUID;
@property (nonatomic, getter=isUsingFrontCamera) BOOL usingFrontCamera; // @synthesize usingFrontCamera=_usingFrontCamera;

+ (double)maxTimeToWaitForWrittenFrameAfterStop;
+ (id)stateWithContentsOfFile:(id)arg1;
- (void).cxx_destruct;
- (BOOL)_commonCMKTimelapseStateInitWithCoder:(id)arg1;
- (BOOL)addStopReasons:(long long)arg1 stopTime:(id)arg2;
- (BOOL)canContinueCapture;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)filePathForNextFrameIndex;
- (void)forceCompleted;
- (BOOL)incrementFrameIndex;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToState:(id)arg1;
- (BOOL)isReadyForWritingMovie;
- (BOOL)mergeSecondaryState:(id)arg1;
- (BOOL)writeToFile:(id)arg1 createDirectoryIfNeeded:(BOOL)arg2;

@end

