//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <TextInput/NSCopying-Protocol.h>
#import <TextInput/NSSecureCoding-Protocol.h>

@class NSString, TIDocumentState, TIKeyboardCandidate, TIKeyboardLayout, TIKeyboardLayoutState, TITextInputTraits;

@interface TIKeyboardState : NSObject <NSCopying, NSSecureCoding>
{
    union {
        long long integerValue;
        struct {
            unsigned int userSelectedCurrentCandidate:1;
            unsigned int shouldSkipCandidateSelection:1;
            unsigned int suppressingCandidateSelection:1;
            unsigned int needsCandidateMetadata:1;
            unsigned int keyboardEventsLagging:1;
            unsigned int hardwareKeyboardMode:1;
            unsigned int splitKeyboardMode:1;
            unsigned int wordLearningEnabled:1;
            unsigned int autocorrectionEnabled:1;
            unsigned int shortcutConversionEnabled:1;
            unsigned int candidateSelectionPredictionEnabled:1;
            unsigned int autocapitalizationEnabled:1;
        } fields;
    } _mask;
    union {
        long long integerValue;
        struct {
            unsigned int displayed:1;
            unsigned int autoDisplayMode:1;
        } fields;
    } _autocorrectionListUIState;
    int _shiftState;
    NSString *_clientIdentifier;
    NSString *_inputMode;
    NSString *_recipientIdentifier;
    TIKeyboardLayout *_keyLayout;
    TIKeyboardLayoutState *_layoutState;
    TIDocumentState *_documentState;
    NSString *_inputForMarkedText;
    NSString *_searchStringForMarkedText;
    TIKeyboardCandidate *_currentCandidate;
    TITextInputTraits *_textInputTraits;
    NSString *_responseContext;
}

@property (nonatomic) BOOL autocapitalizationEnabled;
@property (nonatomic) unsigned long long autocapitalizationType;
@property (nonatomic) BOOL autocorrectionEnabled;
@property (nonatomic) BOOL autocorrectionListUIAutoDisplayMode;
@property (nonatomic) BOOL autocorrectionListUIDisplayed;
@property (nonatomic) BOOL candidateSelectionPredictionEnabled;
@property (copy, nonatomic) NSString *clientIdentifier; // @synthesize clientIdentifier=_clientIdentifier;
@property (strong, nonatomic) TIKeyboardCandidate *currentCandidate; // @synthesize currentCandidate=_currentCandidate;
@property (strong, nonatomic) TIDocumentState *documentState; // @synthesize documentState=_documentState;
@property (nonatomic) BOOL hardwareKeyboardMode;
@property (copy, nonatomic) NSString *inputForMarkedText; // @synthesize inputForMarkedText=_inputForMarkedText;
@property (copy, nonatomic) NSString *inputMode; // @synthesize inputMode=_inputMode;
@property (strong, nonatomic) TIKeyboardLayout *keyLayout; // @synthesize keyLayout=_keyLayout;
@property (nonatomic) BOOL keyboardEventsLagging;
@property (nonatomic) unsigned long long keyboardType;
@property (copy, nonatomic) TIKeyboardLayoutState *layoutState; // @synthesize layoutState=_layoutState;
@property (nonatomic) BOOL needsCandidateMetadata;
@property (copy, nonatomic) NSString *recipientIdentifier; // @synthesize recipientIdentifier=_recipientIdentifier;
@property (copy, nonatomic) NSString *responseContext; // @synthesize responseContext=_responseContext;
@property (copy, nonatomic) NSString *searchStringForMarkedText; // @synthesize searchStringForMarkedText=_searchStringForMarkedText;
@property (nonatomic) BOOL secureTextEntry;
@property (nonatomic) int shiftState; // @synthesize shiftState=_shiftState;
@property (nonatomic) BOOL shortcutConversionEnabled;
@property (nonatomic) BOOL shouldSkipCandidateSelection;
@property (nonatomic) BOOL splitKeyboardMode;
@property (nonatomic) BOOL suppressingCandidateSelection;
@property (strong, nonatomic) TITextInputTraits *textInputTraits; // @synthesize textInputTraits=_textInputTraits;
@property (nonatomic) BOOL userSelectedCurrentCandidate;
@property (nonatomic) BOOL wordLearningEnabled;

+ (BOOL)supportsSecureCoding;
- (void)_createTextInputTraitsIfNecessary;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

