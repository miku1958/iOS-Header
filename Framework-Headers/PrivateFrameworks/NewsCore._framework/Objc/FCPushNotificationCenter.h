//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <NewsCore/FCPushNotificationHandling-Protocol.h>

@class FCAsyncSerialQueue, FCCKDatabase, NSMapTable, NSMutableDictionary, NSString;

@interface FCPushNotificationCenter : NSObject <FCPushNotificationHandling>
{
    BOOL _syncingEnabled;
    FCCKDatabase *_privateDatabase;
    FCAsyncSerialQueue *_fetchQueue;
    NSMutableDictionary *_subscriptionsByID;
    NSMapTable *_recordZoneObservers;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (strong, nonatomic) FCAsyncSerialQueue *fetchQueue; // @synthesize fetchQueue=_fetchQueue;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) FCCKDatabase *privateDatabase; // @synthesize privateDatabase=_privateDatabase;
@property (strong, nonatomic) NSMapTable *recordZoneObservers; // @synthesize recordZoneObservers=_recordZoneObservers;
@property (strong, nonatomic) NSMutableDictionary *subscriptionsByID; // @synthesize subscriptionsByID=_subscriptionsByID;
@property (readonly) Class superclass;
@property (nonatomic, getter=isSyncingEnabled) BOOL syncingEnabled; // @synthesize syncingEnabled=_syncingEnabled;

- (void).cxx_destruct;
- (void)_deleteLocalDataForRecordZoneIDs:(id)arg1;
- (void)_fetchChangesForRecordZoneIDs:(id)arg1;
- (void)_handlePrivateDatabaseNotification:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_handleRecordZoneNotification:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_saveDatabaseServerChangeToken:(id)arg1;
- (void)addObserver:(id)arg1 forChangesToRecordZone:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)deleteSubscriptionWithID:(id)arg1 inDatabase:(id)arg2;
- (void)disableSyncing;
- (void)enableSyncing;
- (void)ensureSubscriptionExistsWithID:(id)arg1 database:(id)arg2 recordZone:(id)arg3 createBlock:(CDUnknownBlockType)arg4;
- (void)fetchAllSubscriptionsInDatabase:(id)arg1;
- (void)handleRemoteNotification:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)init;
- (id)initWithPrivateDatabase:(id)arg1 storeDirectory:(id)arg2;
- (void)prepareForUse;
- (void)removeAllRecordZoneSubscriptionsInDatabase:(id)arg1;
- (void)removeRecordZoneObserver:(id)arg1;
- (id)serverChangeTokenKey;
- (id)subscriptionIDForRecordZoneWithName:(id)arg1;

@end

