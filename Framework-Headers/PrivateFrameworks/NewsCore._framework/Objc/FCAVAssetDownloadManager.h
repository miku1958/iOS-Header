//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <NewsCore/AVAssetDownloadDelegate-Protocol.h>

@class FCAsyncOnceOperation, FCThreadSafeMutableDictionary, NFLazy, NSString;
@protocol FCAVAssetCacheType, FCAVAssetKeyCacheType;

@interface FCAVAssetDownloadManager : NSObject <AVAssetDownloadDelegate>
{
    id<FCAVAssetCacheType> _assetCache;
    id<FCAVAssetKeyCacheType> _keyCache;
    FCAsyncOnceOperation *_restoreBackgroundDownloadsOnce;
    NFLazy *_URLSession;
    FCThreadSafeMutableDictionary *_activeDownloadsByAssetID;
}

@property (readonly, nonatomic) NFLazy *URLSession; // @synthesize URLSession=_URLSession;
@property (readonly, nonatomic) FCThreadSafeMutableDictionary *activeDownloadsByAssetID; // @synthesize activeDownloadsByAssetID=_activeDownloadsByAssetID;
@property (readonly, nonatomic) id<FCAVAssetCacheType> assetCache; // @synthesize assetCache=_assetCache;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) id<FCAVAssetKeyCacheType> keyCache; // @synthesize keyCache=_keyCache;
@property (readonly, nonatomic) FCAsyncOnceOperation *restoreBackgroundDownloadsOnce; // @synthesize restoreBackgroundDownloadsOnce=_restoreBackgroundDownloadsOnce;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)URLSession:(id)arg1 assetDownloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)_callCompletionHandlersForAssetID:(id)arg1 interestToken:(id)arg2 error:(id)arg3;
- (void)_completeRequestForAssetID:(id)arg1 withDownloadedURL:(id)arg2 remoteURL:(id)arg3 error:(id)arg4;
- (void)_ensureAssetIsPurgeable:(id)arg1;
- (id)_handleAssetDownloadFromNetwork:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (BOOL)_isAssetInCache:(id)arg1;
- (id)_restoreBackgroundDownloadsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (BOOL)_shouldUseAVAssetDownloadForAsset:(id)arg1;
- (id)downloadAsset:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)init;
- (id)initWithAssetCache:(id)arg1 keyCache:(id)arg2;
- (id)interestTokenForCachedAsset:(id)arg1;
- (void)restoreBackgroundDownloadsWithCompletionHandler:(CDUnknownBlockType)arg1;

@end

