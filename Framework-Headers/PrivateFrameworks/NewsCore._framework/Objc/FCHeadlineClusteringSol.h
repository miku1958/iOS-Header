//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <NewsCore/FCHeadlineClustering-Protocol.h>

@class FCHeadlineClusteringRules, FCSolHeuristic, NSDictionary, NSMutableArray, NSMutableSet, NSSet, NSString;

@interface FCHeadlineClusteringSol : NSObject <FCHeadlineClustering>
{
    FCHeadlineClusteringRules *_rules;
    NSSet *_articleIds;
    NSDictionary *_articlesByTag;
    NSDictionary *_tagsByArticle;
    NSDictionary *_tagScores;
    NSDictionary *_headlinesById;
    NSSet *_hardOrphans;
    FCSolHeuristic *_heuristic;
    FCSolHeuristic *_autoFavoriteHeuristic;
    NSMutableArray *_articleGroups;
    NSMutableSet *_groupableTags;
}

@property (strong, nonatomic) NSMutableArray *articleGroups; // @synthesize articleGroups=_articleGroups;
@property (strong, nonatomic) NSSet *articleIds; // @synthesize articleIds=_articleIds;
@property (strong, nonatomic) NSDictionary *articlesByTag; // @synthesize articlesByTag=_articlesByTag;
@property (strong, nonatomic) FCSolHeuristic *autoFavoriteHeuristic; // @synthesize autoFavoriteHeuristic=_autoFavoriteHeuristic;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (strong, nonatomic) NSMutableSet *groupableTags; // @synthesize groupableTags=_groupableTags;
@property (strong, nonatomic) NSSet *hardOrphans; // @synthesize hardOrphans=_hardOrphans;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) NSDictionary *headlinesById; // @synthesize headlinesById=_headlinesById;
@property (strong, nonatomic) FCSolHeuristic *heuristic; // @synthesize heuristic=_heuristic;
@property (strong, nonatomic) FCHeadlineClusteringRules *rules; // @synthesize rules=_rules;
@property (readonly) Class superclass;
@property (strong, nonatomic) NSDictionary *tagScores; // @synthesize tagScores=_tagScores;
@property (strong, nonatomic) NSDictionary *tagsByArticle; // @synthesize tagsByArticle=_tagsByArticle;

- (void).cxx_destruct;
- (id)clusterHeadlinesByTopic:(id)arg1 subscribedTags:(id)arg2 personalizer:(id)arg3 rules:(id)arg4 translationProvider:(id)arg5 unpaidHeadlineIDs:(id)arg6;
- (id)computeBestGrouping:(id)arg1 tagScores:(id)arg2 headlinesById:(id)arg3;
- (void)computeGrouping:(id)arg1 topK:(double)arg2;
- (double)computeGroupingUtility:(id)arg1;
- (void)filterOverflowedOrphans:(id)arg1;
- (void)optimizeForLayout:(id)arg1;
- (id)sortedScoredArticles:(id)arg1 length:(long long)arg2 asc:(BOOL)arg3;
- (double)specificityScoreForTag:(id)arg1;

@end

