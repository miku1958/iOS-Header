//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <NewsCore/FCHeadlineClustering-Protocol.h>

@class FCHeadlineClusteringRules, FCSolHeuristic, NSDictionary, NSSet, NSString;

@interface FCHeadlineClusteringSol : NSObject <FCHeadlineClustering>
{
    FCHeadlineClusteringRules *_rules;
    NSSet *_subscribedTagIDs;
    NSSet *_articleIds;
    NSDictionary *_articlesByTag;
    NSDictionary *_tagsByArticle;
    NSDictionary *_articleScoresByTag;
    NSDictionary *_headlinesById;
    NSSet *_groupableTags;
    NSSet *_hardOrphans;
    FCSolHeuristic *_heuristic;
}

@property (strong, nonatomic) NSSet *articleIds; // @synthesize articleIds=_articleIds;
@property (strong, nonatomic) NSDictionary *articleScoresByTag; // @synthesize articleScoresByTag=_articleScoresByTag;
@property (strong, nonatomic) NSDictionary *articlesByTag; // @synthesize articlesByTag=_articlesByTag;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (strong, nonatomic) NSSet *groupableTags; // @synthesize groupableTags=_groupableTags;
@property (strong, nonatomic) NSSet *hardOrphans; // @synthesize hardOrphans=_hardOrphans;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) NSDictionary *headlinesById; // @synthesize headlinesById=_headlinesById;
@property (strong, nonatomic) FCSolHeuristic *heuristic; // @synthesize heuristic=_heuristic;
@property (strong, nonatomic) FCHeadlineClusteringRules *rules; // @synthesize rules=_rules;
@property (strong, nonatomic) NSSet *subscribedTagIDs; // @synthesize subscribedTagIDs=_subscribedTagIDs;
@property (readonly) Class superclass;
@property (strong, nonatomic) NSDictionary *tagsByArticle; // @synthesize tagsByArticle=_tagsByArticle;

- (void).cxx_destruct;
- (id)assignArticles:(id)arg1 groups:(id)arg2 maxClusterSize:(long long)arg3;
- (id)clusterHeadlinesByTopic:(id)arg1 subscribedTopicIDs:(id)arg2 rules:(id)arg3;
- (id)computeBestGrouping:(id)arg1 subscribedTagIDs:(id)arg2 articleScoresByTag:(id)arg3 headlinesById:(id)arg4;
- (id)computeBestMoveWithTag:(id)arg1 groupableArticles:(id)arg2 solos:(id)arg3 ungroupedArticles:(id)arg4 remainingTags:(id)arg5 groups:(id)arg6 topK:(double)arg7;
- (void)computeGrouping:(id)arg1 topK:(double)arg2;
- (double)computeGroupingUtility:(id)arg1;
- (id)computeNewOrphansWithUngroupedArticles:(id)arg1 remainingTags:(id)arg2;
- (void)createMoveWithTag:(id)arg1 articles:(id)arg2 remainingTags:(id)arg3 ungroupedArticles:(id)arg4 moves:(id)arg5 groups:(id)arg6;
- (void)filterOverflowedOrphans:(id)arg1;
- (id)generateCombosWithSet:(id)arg1 tag:(id)arg2 chooseSize:(long long)arg3;
- (void)mergeGroups:(id)arg1;
- (double)normalizedAboutnessForArticle:(id)arg1 tag:(id)arg2;
- (void)optimizeForLayout:(id)arg1;
- (double)personalizationScoreForArticle:(id)arg1;
- (BOOL)reassignedArticleInGroups:(id)arg1 withTag:(id)arg2;
- (void)regroupOrphans:(id)arg1;
- (id)scoredArticleWithID:(id)arg1 tag:(id)arg2;
- (id)sortedScoredArticles:(id)arg1 tag:(id)arg2 length:(long long)arg3 asc:(BOOL)arg4;
- (double)weightedScoreForArticle:(id)arg1 tag:(id)arg2;

@end

