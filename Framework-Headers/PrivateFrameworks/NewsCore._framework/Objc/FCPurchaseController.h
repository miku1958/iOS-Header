//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <NewsCore/FCUserInfoObserving-Protocol.h>
#import <NewsCore/NSURLSessionDelegate-Protocol.h>

@class FCCloudContext, FCKeyValueStore, NSArray, NSDate, NSDictionary, NSMutableDictionary, NSSet, NSString, NSURLSession;
@protocol OS_dispatch_queue;

@interface FCPurchaseController : NSObject <FCUserInfoObserving, NSURLSessionDelegate>
{
    NSArray *_purchasesDiscoveredTagIDs;
    NSMutableDictionary *_purchaseLookUpEntriesByTagID;
    NSMutableDictionary *_webAccessEntriesByTagID;
    NSMutableDictionary *_ongoingPurchaseEntriesByProductID;
    NSMutableDictionary *_paymenQueueByProductID;
    FCCloudContext *_cloudContext;
    NSURLSession *_session;
    FCKeyValueStore *_localStore;
    NSDictionary *_readOnlyPurchaseLookUpEntriesByTagID;
    NSDate *_lastEntitlementCheckTime;
    NSObject<OS_dispatch_queue> *_readWriteQueue;
}

@property (readonly, nonatomic) NSSet *allPurchasedTagIDs;
@property (readonly, nonatomic) NSSet *allTagIDs;
@property (strong, nonatomic) FCCloudContext *cloudContext; // @synthesize cloudContext=_cloudContext;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (copy, nonatomic) NSDate *lastEntitlementCheckTime; // @synthesize lastEntitlementCheckTime=_lastEntitlementCheckTime;
@property (readonly, nonatomic) NSString *lastSignedInItunesAccountName;
@property (strong, nonatomic) FCKeyValueStore *localStore; // @synthesize localStore=_localStore;
@property (strong, nonatomic) NSMutableDictionary *ongoingPurchaseEntriesByProductID; // @synthesize ongoingPurchaseEntriesByProductID=_ongoingPurchaseEntriesByProductID;
@property (strong, nonatomic) NSMutableDictionary *paymenQueueByProductID; // @synthesize paymenQueueByProductID=_paymenQueueByProductID;
@property (strong, nonatomic) NSMutableDictionary *purchaseLookUpEntriesByTagID; // @synthesize purchaseLookUpEntriesByTagID=_purchaseLookUpEntriesByTagID;
@property (strong, nonatomic) NSArray *purchasesDiscoveredTagIDs; // @synthesize purchasesDiscoveredTagIDs=_purchasesDiscoveredTagIDs;
@property (copy) NSDictionary *readOnlyPurchaseLookUpEntriesByTagID; // @synthesize readOnlyPurchaseLookUpEntriesByTagID=_readOnlyPurchaseLookUpEntriesByTagID;
@property (strong, nonatomic) NSObject<OS_dispatch_queue> *readWriteQueue; // @synthesize readWriteQueue=_readWriteQueue;
@property (strong, nonatomic) NSURLSession *session; // @synthesize session=_session;
@property (readonly) Class superclass;
@property (strong, nonatomic) NSMutableDictionary *webAccessEntriesByTagID; // @synthesize webAccessEntriesByTagID=_webAccessEntriesByTagID;

- (void).cxx_destruct;
- (id)_allPurchasedTagIDs;
- (void)_applicationDidEnterBackground:(id)arg1;
- (void)_initializeAppStorePurchaseDiscoveredList;
- (id)_ongoingPurchaseEntryIDForProductIdentifier:(id)arg1;
- (id)_purchaseLookUpEntryIDForTagID:(id)arg1;
- (void)_removeFromPurchasedChannelsListWithTagIDs:(id)arg1;
- (id)_webAccessEntryIDForTagID:(id)arg1;
- (void)addAppStoreDiscoveredChannelsToFavorites:(id)arg1;
- (void)addAppStorePurchaseWithTagID:(id)arg1 purchaseID:(id)arg2;
- (void)addExpiredPurchaseWithTagID:(id)arg1 purchaseID:(id)arg2 purchaseType:(unsigned long long)arg3 isNewsAppPurchase:(BOOL)arg4 expirationDate:(id)arg5;
- (void)addPurchaseWithTagID:(id)arg1 purchaseID:(id)arg2 purchaseType:(unsigned long long)arg3 isNewsAppPurchase:(BOOL)arg4;
- (void)addToPurchasedChannelsListWithEntry:(id)arg1;
- (void)addToWebAccessEntryListWithEntry:(id)arg1;
- (id)allAppStorePurchasedTagIDs;
- (id)allAppStorePurchasedTagIDsByPurchaseID;
- (BOOL)atleastOneValidAppStorePurchase;
- (void)checkIntegrityOfPurchaseWithID:(id)arg1 callbackQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)cleanupExpiredPurchaseLookupEntriesIfNeeded;
- (void)cleanupStaleOngoingPurchaseEntries;
- (void)clearAllAppStorePurchases;
- (void)clearAllOngoingPurchaseEntries;
- (void)clearAllPurchases;
- (id)createPaymentQueueWithProductIdentifier:(id)arg1 tagID:(id)arg2 purchaseID:(id)arg3 webAccessOptIn:(BOOL)arg4 appAdamID:(id)arg5 storeExternalVersion:(id)arg6;
- (void)dealloc;
- (id)expiredPurchaseChannelIDs;
- (void)feldsparEntitlementCheckWithCallbackQueue:(id)arg1 ignoreCache:(BOOL)arg2 completion:(CDUnknownBlockType)arg3;
- (void)fetchChannelIDsForPurchaseIDs:(id)arg1 callbackQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)fetchOperationForPurchaseLookupWithPurchaseIDs:(id)arg1;
- (void)finishPurchaseTransactionWithProductID:(id)arg1;
- (void)forceExpireAllSubscriptionsIfNeeded;
- (void)handleAccessTokenChangeWithTagID:(id)arg1 addToPurchasedDiscoverdList:(BOOL)arg2;
- (void)handleAccessTokenVerificationFailureWithTagID:(id)arg1;
- (void)handleAccessTokenVerificationSuccessWithTagID:(id)arg1 subscribed:(BOOL)arg2;
- (void)handleWebAcccessFailureWithTagID:(id)arg1 purchaseID:(id)arg2 email:(id)arg3 purchaseReceipt:(id)arg4;
- (void)handleWebAccessSuccessWithTagID:(id)arg1;
- (void)hasShownRenewalNoticeForPurchasedChannelsListWithTagIDs:(id)arg1;
- (id)init;
- (id)initWithCloudContext:(id)arg1;
- (BOOL)isPaidSubscriber;
- (BOOL)isPaidSubscriberFromAppStore;
- (BOOL)isPaidSubscriberFromNews;
- (BOOL)isPaidSubscriberFromWeb;
- (BOOL)isPurchaseOngoingForTagID:(id)arg1;
- (BOOL)isPurchaseTimeElapsedWithEntry:(id)arg1;
- (BOOL)isTagIDPurchased:(id)arg1;
- (BOOL)isTagPurchased:(id)arg1;
- (void)loadLocalCachesFromStore;
- (void)notifyPurchaseListChanged;
- (void)performHTTPRequestForVerifyAccessTokenWithURL:(id)arg1 accessToken:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)purchaseLookUpEntryForTagID:(id)arg1;
- (void)removeFromAppStorePurchasesDiscoveredList:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)removeFromPurchasedChannelsListWithTagIDs:(id)arg1;
- (void)removeOngoingPurchaseEntryForProductID:(id)arg1;
- (void)removeWebPurchaseForTagID:(id)arg1;
- (void)saveToDisk;
- (void)setLastSignedInItunesAccountNameWithName:(id)arg1;
- (void)shouldShowSignedInWithDifferentiTunesAccountAlertWithAccount:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)shouldShowiTunesSignedOutAlertWithAccount:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)silentRemoveFromPurchasedChannelsListWithTagIDs:(id)arg1;
- (void)simulatePurchaseWithTagID:(id)arg1 productIdentifier:(id)arg2 purchaseID:(id)arg3 appAdamID:(id)arg4 storeExternalVersion:(id)arg5 webAccessOptIn:(BOOL)arg6;
- (void)startPurchaseWithTagID:(id)arg1 productIdentifier:(id)arg2 purchaseID:(id)arg3 appAdamID:(id)arg4 storeExternalVersion:(id)arg5 price:(id)arg6 webAccessOptIn:(BOOL)arg7 payment:(id)arg8 completion:(CDUnknownBlockType)arg9;
- (void)submitWebAccessWithTagID:(id)arg1 purchaseID:(id)arg2 emailAddress:(id)arg3 purchaseReceipt:(id)arg4 serialCompletion:(CDUnknownBlockType)arg5 completion:(CDUnknownBlockType)arg6;
- (id)subscriptionNotSupportedChannelIDs;
- (void)updatePurchaseEntryToExpired:(id)arg1;
- (void)updatePurchaseEntryToExpiredForTagIDs:(id)arg1;
- (void)updatePurchaseEntryToSubcsriptionNotSupported:(id)arg1;
- (void)updatePurchaseEntryToValid:(id)arg1 purchaseType:(unsigned long long)arg2;
- (void)userInfo:(id)arg1 didAddAccessTokenForTagID:(id)arg2;
- (void)userInfo:(id)arg1 didChangeAccessTokenForTagID:(id)arg2;
- (void)verifyAccessTokenWithTagID:(id)arg1 accessToken:(id)arg2 serialCompletion:(CDUnknownBlockType)arg3 callbackQueue:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (id)webAccessEntryForTagID:(id)arg1;

@end

