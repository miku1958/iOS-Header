//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <NewsCore/FCOperation.h>

#import <NewsCore/FCOfflineFetchOperationType-Protocol.h>

@class FCThreadSafeMutableArray, NSObject, NSString;
@protocol FCContentContext, FCFlintHelper, OS_dispatch_queue;

@interface FCOfflineArticleFetchOperation : FCOperation <FCOfflineFetchOperationType>
{
    BOOL cachedOnly;
    CDUnknownBlockType archiveHandler;
    NSObject<OS_dispatch_queue> *archiveQueue;
    CDUnknownBlockType fetchCompletionHandler;
    NSObject<OS_dispatch_queue> *fetchCompletionQueue;
    CDUnknownBlockType progressHandler;
    NSObject<OS_dispatch_queue> *progressQueue;
    id<FCContentContext> _context;
    id<FCFlintHelper> _flintHelper;
    NSString *_articleID;
    FCThreadSafeMutableArray *_resultInterestTokens;
}

@property (copy, nonatomic) CDUnknownBlockType archiveHandler; // @synthesize archiveHandler;
@property (strong, nonatomic) NSObject<OS_dispatch_queue> *archiveQueue; // @synthesize archiveQueue;
@property (readonly, copy, nonatomic) NSString *articleID; // @synthesize articleID=_articleID;
@property (nonatomic) BOOL cachedOnly; // @synthesize cachedOnly;
@property (readonly, nonatomic) id<FCContentContext> context; // @synthesize context=_context;
@property (copy, nonatomic) CDUnknownBlockType fetchCompletionHandler; // @synthesize fetchCompletionHandler;
@property (strong, nonatomic) NSObject<OS_dispatch_queue> *fetchCompletionQueue; // @synthesize fetchCompletionQueue;
@property (readonly, nonatomic) id<FCFlintHelper> flintHelper; // @synthesize flintHelper=_flintHelper;
@property (copy, nonatomic) CDUnknownBlockType progressHandler; // @synthesize progressHandler;
@property (strong, nonatomic) NSObject<OS_dispatch_queue> *progressQueue; // @synthesize progressQueue;
@property (readonly, nonatomic) FCThreadSafeMutableArray *resultInterestTokens; // @synthesize resultInterestTokens=_resultInterestTokens;

- (void).cxx_destruct;
- (void)_handleArchive:(id)arg1;
- (void)_handleInterestToken:(id)arg1;
- (id)_promiseANFForHeadline:(id)arg1;
- (id)_promiseHeadline;
- (id)_promiseIssueCoverForHeadline:(id)arg1;
- (id)_promiseNarrativeTrackForHeadline:(id)arg1;
- (id)initWithContext:(id)arg1 flintHelper:(id)arg2 articleID:(id)arg3;
- (void)operationWillFinishWithError:(id)arg1;
- (void)performOperation;
- (BOOL)validateOperation;

@end

