//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <NewsCore/FCOperation.h>

#import <NewsCore/FCOfflineFetchOperationType-Protocol.h>

@class FCCachePolicy, FCThreadSafeMutableArray, NSObject, NSString;
@protocol FCContentContext, FCFlintHelper, OS_dispatch_queue;

@interface FCOfflineIssueFetchOperation : FCOperation <FCOfflineFetchOperationType>
{
    BOOL cachedOnly;
    CDUnknownBlockType archiveHandler;
    NSObject<OS_dispatch_queue> *archiveQueue;
    CDUnknownBlockType fetchCompletionHandler;
    NSObject<OS_dispatch_queue> *fetchCompletionQueue;
    CDUnknownBlockType progressHandler;
    NSObject<OS_dispatch_queue> *progressQueue;
    double _progress;
    id<FCContentContext> _context;
    id<FCFlintHelper> _flintHelper;
    NSString *_issueID;
    FCThreadSafeMutableArray *_resultInterestTokens;
    FCCachePolicy *_issueRecordCachePolicy;
}

@property (copy, nonatomic) CDUnknownBlockType archiveHandler; // @synthesize archiveHandler;
@property (strong, nonatomic) NSObject<OS_dispatch_queue> *archiveQueue; // @synthesize archiveQueue;
@property (nonatomic) BOOL cachedOnly; // @synthesize cachedOnly;
@property (strong, nonatomic) id<FCContentContext> context; // @synthesize context=_context;
@property (copy, nonatomic) CDUnknownBlockType fetchCompletionHandler; // @synthesize fetchCompletionHandler;
@property (strong, nonatomic) NSObject<OS_dispatch_queue> *fetchCompletionQueue; // @synthesize fetchCompletionQueue;
@property (strong, nonatomic) id<FCFlintHelper> flintHelper; // @synthesize flintHelper=_flintHelper;
@property (copy, nonatomic) NSString *issueID; // @synthesize issueID=_issueID;
@property (strong, nonatomic) FCCachePolicy *issueRecordCachePolicy; // @synthesize issueRecordCachePolicy=_issueRecordCachePolicy;
@property double progress; // @synthesize progress=_progress;
@property (copy, nonatomic) CDUnknownBlockType progressHandler; // @synthesize progressHandler;
@property (strong, nonatomic) NSObject<OS_dispatch_queue> *progressQueue; // @synthesize progressQueue;
@property (readonly, nonatomic) FCThreadSafeMutableArray *resultInterestTokens; // @synthesize resultInterestTokens=_resultInterestTokens;

- (void).cxx_destruct;
- (void)_handleArchive:(id)arg1;
- (void)_handleInterestToken:(id)arg1;
- (id)_itemIdentifiersForKey:(id)arg1 fromMetadataJSONData:(id)arg2;
- (id)_pdfArchiveURLForIssue:(id)arg1;
- (id)_promiseANFArticlesForArticleIDs:(id)arg1 withDownloadProgressMin:(double)arg2 downloadProgressMax:(double)arg3;
- (id)_promiseANFArticlesForIssue:(id)arg1;
- (id)_promiseANFPagesForIssue:(id)arg1;
- (id)_promiseCoverImageForIssue:(id)arg1;
- (id)_promiseIssue;
- (id)_promiseMetadataForIssue:(id)arg1;
- (id)_promisePDFPagesForIssue:(id)arg1;
- (id)_promiseReplicaAdPagesForIssue:(id)arg1 withDownloadProgressMin:(double)arg2 downloadProgressMax:(double)arg3;
- (id)_resourceIDsFromMetadataJSONData:(id)arg1;
- (void)_updateProgress:(double)arg1;
- (BOOL)canRetryWithError:(id)arg1 retryAfter:(id *)arg2;
- (id)init;
- (id)initWithContext:(id)arg1 flintHelper:(id)arg2 issue:(id)arg3;
- (id)initWithContext:(id)arg1 flintHelper:(id)arg2 issueID:(id)arg3;
- (unsigned long long)maxRetries;
- (void)operationWillFinishWithError:(id)arg1;
- (void)performOperation;
- (void)resetForRetry;
- (BOOL)validateOperation;

@end

