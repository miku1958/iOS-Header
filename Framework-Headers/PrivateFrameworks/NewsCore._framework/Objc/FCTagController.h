//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <NewsCore/FCCoreConfigurationObserving-Protocol.h>
#import <NewsCore/FCJSONEncodableObjectProviding-Protocol.h>
#import <NewsCore/FCOperationThrottlerDelegate-Protocol.h>
#import <NewsCore/FCTagsFetchOperationDelegate-Protocol.h>

@class FCAssetManager, FCCKContentDatabase, FCOperationThrottler, FCTagRecordSource, NSCache, NSMutableDictionary, NSString;
@protocol FCCoreConfigurationManager;

@interface FCTagController : NSObject <FCTagsFetchOperationDelegate, FCCoreConfigurationObserving, FCOperationThrottlerDelegate, FCJSONEncodableObjectProviding>
{
    FCCKContentDatabase *_contentDatabase;
    FCAssetManager *_assetManager;
    FCTagRecordSource *_tagRecordSource;
    id<FCCoreConfigurationManager> _configurationManager;
    NSCache *_fastCache;
    FCOperationThrottler *_tagPrefetchThrottler;
    NSMutableDictionary *_prefetchedTags;
}

@property (strong, nonatomic) FCAssetManager *assetManager; // @synthesize assetManager=_assetManager;
@property (strong, nonatomic) id<FCCoreConfigurationManager> configurationManager; // @synthesize configurationManager=_configurationManager;
@property (strong, nonatomic) FCCKContentDatabase *contentDatabase; // @synthesize contentDatabase=_contentDatabase;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (strong, nonatomic) NSCache *fastCache; // @synthesize fastCache=_fastCache;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) NSMutableDictionary *prefetchedTags; // @synthesize prefetchedTags=_prefetchedTags;
@property (nonatomic) BOOL shouldPrefetchGlobalTags;
@property (readonly) Class superclass;
@property (strong, nonatomic) FCOperationThrottler *tagPrefetchThrottler; // @synthesize tagPrefetchThrottler=_tagPrefetchThrottler;
@property (strong, nonatomic) FCTagRecordSource *tagRecordSource; // @synthesize tagRecordSource=_tagRecordSource;

+ (BOOL)isTagAllowed:(id)arg1;
+ (BOOL)isTagAllowedInContentStoreFront:(id)arg1;
- (void).cxx_destruct;
- (id)_cachedTagForTagID:(id)arg1 fastCacheOnly:(BOOL)arg2;
- (id)_cachedTagsForTagIDs:(id)arg1 fastCacheOnly:(BOOL)arg2;
- (void)_fetchTagForTagID:(id)arg1 qualityOfService:(long long)arg2 callbackQueue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_fetchTagsForTagIDs:(id)arg1 qualityOfService:(long long)arg2 callbackQueue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_refreshTagsBasedOnAgeForTagIDs:(id)arg1;
- (void)configurationManager:(id)arg1 configurationDidChange:(id)arg2;
- (void)dealloc;
- (id)expectedFastCachedTagForID:(id)arg1;
- (id)fastCachedTagForID:(id)arg1;
- (id)fastCachedTagsForIDs:(id)arg1;
- (id)fetchOperationForTagsWithIDs:(id)arg1;
- (id)fetchOperationForTagsWithIDs:(id)arg1 includeChildren:(BOOL)arg2;
- (id)fetchOperationForTagsWithIDs:(id)arg1 includeParents:(BOOL)arg2;
- (void)fetchTagForTagID:(id)arg1 maximumCachedAge:(double)arg2 qualityOfService:(long long)arg3 callbackQueue:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)fetchTagForTagID:(id)arg1 qualityOfService:(long long)arg2 callbackQueue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)fetchTagsForTagIDs:(id)arg1 maximumCachedAge:(double)arg2 qualityOfService:(long long)arg3 callbackQueue:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)fetchTagsForTagIDs:(id)arg1 qualityOfService:(long long)arg2 callbackQueue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)init;
- (id)initWithContentDatabase:(id)arg1 assetManager:(id)arg2 tagRecordSource:(id)arg3 configurationManager:(id)arg4;
- (id)jsonEncodableObject;
- (void)operationThrottler:(id)arg1 performAsyncOperationWithCompletion:(CDUnknownBlockType)arg2;
- (void)saveTagsToCache:(id)arg1;
- (id)slowCachedTagForID:(id)arg1;
- (id)slowCachedTagsForIDs:(id)arg1;
- (void)tagsFetchOperation:(id)arg1 didFetchTags:(id)arg2;
- (id)tagsForTagIDs:(id)arg1;
- (id)tagsForTagIDs:(id)arg1 maximumCachedAge:(double)arg2 predicate:(CDUnknownBlockType)arg3;
- (id)tagsForTagIDs:(id)arg1 predicate:(CDUnknownBlockType)arg2;

@end

