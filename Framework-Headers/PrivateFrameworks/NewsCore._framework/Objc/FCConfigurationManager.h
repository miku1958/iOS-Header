//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <NewsCore/FCCoreConfigurationManager-Protocol.h>
#import <NewsCore/FCFeldsparIDProviderObserving-Protocol.h>
#import <NewsCore/FCMagazinesConfigurationManager-Protocol.h>
#import <NewsCore/FCNewsAppConfigurationManager-Protocol.h>

@class FCAsyncSerialQueue, FCContextConfiguration, FCKeyValueStore, FCNewsAppConfig, NSArray, NSData, NSDictionary, NSHashTable, NSString, RCConfigurationManager;
@protocol FCCoreConfiguration, FCFeldsparIDProvider, FCNewsAppConfiguration, FCNewsAppConfiguration><FCJSONEncodableObjectProviding, OS_dispatch_queue;

@interface FCConfigurationManager : NSObject <FCFeldsparIDProviderObserving, FCNewsAppConfigurationManager, FCCoreConfigurationManager, FCMagazinesConfigurationManager>
{
    BOOL _shouldIgnoreCache;
    BOOL _attemptedAppConfigFetch;
    BOOL _runningUnitTests;
    RCConfigurationManager *_remoteConfigurationManager;
    FCContextConfiguration *_contextConfiguration;
    id<FCFeldsparIDProvider> _feldsparIDProvider;
    NSString *_appShortVersionString;
    NSObject<OS_dispatch_queue> *_accessQueue;
    NSObject<OS_dispatch_queue> *_appConfigFetchQueue;
    FCAsyncSerialQueue *_remoteConfigManagerSerialQueue;
    FCKeyValueStore *_localStore;
    FCNewsAppConfig *_currentAppConfiguration;
    NSArray *_treatmentIDs;
    NSArray *_segmentSetIDs;
    NSDictionary *_cachedWidgetConfigurationDict;
    NSData *_currentMagazinesConfiguration;
    NSHashTable *_appConfigObservers;
    NSHashTable *_coreConfigObservers;
}

@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *accessQueue; // @synthesize accessQueue=_accessQueue;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *appConfigFetchQueue; // @synthesize appConfigFetchQueue=_appConfigFetchQueue;
@property (strong, nonatomic) NSHashTable *appConfigObservers; // @synthesize appConfigObservers=_appConfigObservers;
@property (readonly, nonatomic) id<FCNewsAppConfiguration> appConfiguration;
@property (readonly, copy, nonatomic) NSString *appShortVersionString; // @synthesize appShortVersionString=_appShortVersionString;
@property (nonatomic) BOOL attemptedAppConfigFetch; // @synthesize attemptedAppConfigFetch=_attemptedAppConfigFetch;
@property (strong, nonatomic) NSDictionary *cachedWidgetConfigurationDict; // @synthesize cachedWidgetConfigurationDict=_cachedWidgetConfigurationDict;
@property (readonly, nonatomic) id<FCCoreConfiguration> configuration;
@property (readonly, nonatomic) FCContextConfiguration *contextConfiguration; // @synthesize contextConfiguration=_contextConfiguration;
@property (strong, nonatomic) NSHashTable *coreConfigObservers; // @synthesize coreConfigObservers=_coreConfigObservers;
@property (copy, nonatomic) FCNewsAppConfig *currentAppConfiguration; // @synthesize currentAppConfiguration=_currentAppConfiguration;
@property (copy, nonatomic) NSData *currentMagazinesConfiguration; // @synthesize currentMagazinesConfiguration=_currentMagazinesConfiguration;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, copy, nonatomic) NSString *feldsparID;
@property (readonly, nonatomic) id<FCFeldsparIDProvider> feldsparIDProvider; // @synthesize feldsparIDProvider=_feldsparIDProvider;
@property (readonly, nonatomic) id<FCNewsAppConfiguration> fetchedAppConfiguration;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) id<FCNewsAppConfiguration><FCJSONEncodableObjectProviding> jsonEncodableAppConfiguration;
@property (strong, nonatomic) FCKeyValueStore *localStore; // @synthesize localStore=_localStore;
@property (readonly, nonatomic) NSData *magazinesConfigurationData;
@property (readonly, nonatomic) id<FCNewsAppConfiguration> possiblyUnfetchedAppConfiguration;
@property (readonly, nonatomic) FCAsyncSerialQueue *remoteConfigManagerSerialQueue; // @synthesize remoteConfigManagerSerialQueue=_remoteConfigManagerSerialQueue;
@property (readonly, nonatomic) RCConfigurationManager *remoteConfigurationManager; // @synthesize remoteConfigurationManager=_remoteConfigurationManager;
@property (nonatomic, getter=isRunningUnitTests) BOOL runningUnitTests; // @synthesize runningUnitTests=_runningUnitTests;
@property (copy, nonatomic) NSArray *segmentSetIDs; // @synthesize segmentSetIDs=_segmentSetIDs;
@property (nonatomic) BOOL shouldIgnoreCache; // @synthesize shouldIgnoreCache=_shouldIgnoreCache;
@property (readonly) Class superclass;
@property (copy, nonatomic) NSArray *treatmentIDs; // @synthesize treatmentIDs=_treatmentIDs;

+ (id)internalOverrideAdditionalSegmentSetIDs;
+ (id)internalOverrideSegmentSetIDs;
+ (id)overrideAppConfigID;
- (void).cxx_destruct;
- (id)_changeTagsInRecords:(id)arg1;
- (id)_changeTagsInWidgetConfigurationDict:(id)arg1;
- (BOOL)_checkIfShouldIgnoreCache;
- (void)_configurationDidChangeSignificantConfigChange:(BOOL)arg1;
- (id)_configurationSettingsWithRequestInfos:(id)arg1 feldsparID:(id)arg2 storefrontID:(id)arg3 contextConfiguration:(id)arg4 useBackgroundRefreshRate:(BOOL)arg5;
- (unsigned long long)_configurationSourceForSourceName:(id)arg1;
- (id)_deviceInfo;
- (void)_fetchAppConfigurationIfNeededWithCompletionQueue:(id)arg1 forceRefresh:(BOOL)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_fetchRemoteAppWidgetConfigurationIfNeededUseBackgroundRefreshRate:(BOOL)arg1 completionQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_fetchRemoteMagazinesConfigurationIfNeededWithCompletionQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_loadConfigurationFromStore:(id)arg1;
- (id)_mergeCachedDataWithWidgetConfigurationData:(id)arg1;
- (id)_mergeRecords:(id)arg1 withCachedRecords:(id)arg2;
- (id)_permanentURLForRequestKey:(id)arg1 storefrontID:(id)arg2;
- (id)_recordIDForRequestKey:(id)arg1 storefrontID:(id)arg2;
- (void)_refreshAppConfigurationWithConfigurationSettings:(id)arg1 force:(BOOL)arg2 completionQueue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (unsigned long long)_remoteConfigurationEnvironmentForContextIdentifier:(long long)arg1;
- (id)_requestInfoForRequestKey:(id)arg1 storefrontID:(id)arg2 additionalChangeTags:(id)arg3;
- (id)_responseKeyForRequestKey:(id)arg1;
- (id)_storefrontID;
- (void)addAppConfigObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)feldsparIDProviderDidChangeFeldsparID:(id)arg1;
- (void)fetchAppConfigurationIfNeededWithCompletion:(CDUnknownBlockType)arg1;
- (void)fetchAppConfigurationIfNeededWithCompletionQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fetchAppWidgetConfigurationUseBackgroundRefreshRate:(BOOL)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fetchConfigurationIfNeededWithCompletion:(CDUnknownBlockType)arg1;
- (void)fetchConfigurationIfNeededWithCompletionQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fetchMagazinesConfigurationIfNeededWithCompletionQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fetchTrendingSearchesIfNeededWithCompletion:(CDUnknownBlockType)arg1;
- (id)init;
- (id)initForTesting;
- (id)initWithContextConfiguration:(id)arg1 contentHostDirectoryFileURL:(id)arg2 feldsparIDProvider:(id)arg3;
- (id)initWithContextConfiguration:(id)arg1 contentHostDirectoryFileURL:(id)arg2 feldsparIDProvider:(id)arg3 appShortVersionString:(id)arg4;
- (void)refreshAppConfigurationIfNeededWithCompletionQueue:(id)arg1 refreshCompletion:(CDUnknownBlockType)arg2;
- (void)removeAppConfigObserver:(id)arg1;
- (void)removeObserver:(id)arg1;

@end

