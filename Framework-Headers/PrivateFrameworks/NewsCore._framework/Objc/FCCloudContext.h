//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <NewsCore/FCCacheFlushing-Protocol.h>
#import <NewsCore/FCContentContext-Protocol.h>
#import <NewsCore/FCPrivateDataContext-Protocol.h>
#import <NewsCore/FCTestingContext-Protocol.h>

@class FCAppConfiguration, FCArticleController, FCAssetManager, FCClientEndpointConnection, FCCommandQueue, FCFeedManager, FCFlintResourceManager, FCNetworkBehaviorMonitor, FCNotificationController, FCNotificationsEndpointConnection, FCPersonalizationData, FCPrivateChannelMembershipController, FCPurchaseController, FCReadingHistory, FCReadingList, FCSubscriptionController, FCSubscriptionList, FCTagController, FCTagSettings, FCUserInfo, NSString;
@protocol FCContentContext, FCContentContextInternal, FCFlintHelper, FCPrivateDataContext, FCPrivateDataContextInternal, FCPushNotificationHandling;

@interface FCCloudContext : NSObject <FCTestingContext, FCContentContext, FCPrivateDataContext, FCCacheFlushing>
{
    BOOL _deviceIsiPad;
    BOOL _runningPPT;
    FCSubscriptionController *_subscriptionController;
    FCFeedManager *_feedManager;
    FCNetworkBehaviorMonitor *_networkBehaviorMonitor;
    FCClientEndpointConnection *_endpointConnection;
    FCCommandQueue *_endpointCommandQueue;
    FCNotificationsEndpointConnection *_notificationsEndpointConnection;
    FCCommandQueue *_notificationsEndpointCommandQueue;
    FCNotificationController *_notificationController;
    FCPurchaseController *_purchaseController;
    id<FCFlintHelper> _flintHelper;
    id<FCContentContext> _contentContext;
    id<FCPrivateDataContext> _privateDataContext;
}

@property (readonly, nonatomic) FCAppConfiguration *appConfiguration;
@property (readonly, nonatomic) FCArticleController *articleController;
@property (readonly, nonatomic) FCAssetManager *assetManager;
@property (strong, nonatomic) id<FCContentContext> contentContext; // @synthesize contentContext=_contentContext;
@property (readonly, copy, nonatomic) NSString *contentDirectory;
@property (readonly, copy, nonatomic) NSString *contentStoreFrontID;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) BOOL deviceIsiPad; // @synthesize deviceIsiPad=_deviceIsiPad;
@property (readonly, nonatomic) FCCommandQueue *endpointCommandQueue; // @synthesize endpointCommandQueue=_endpointCommandQueue;
@property (readonly, nonatomic) FCClientEndpointConnection *endpointConnection; // @synthesize endpointConnection=_endpointConnection;
@property (readonly, nonatomic) FCFeedManager *feedManager; // @synthesize feedManager=_feedManager;
@property (weak, nonatomic) id<FCFlintHelper> flintHelper; // @synthesize flintHelper=_flintHelper;
@property (readonly, nonatomic) FCFlintResourceManager *flintResourceManager;
@property (readonly, nonatomic) BOOL hasBeenRateLimited;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) id<FCContentContextInternal> internalContentContext;
@property (readonly, nonatomic) id<FCPrivateDataContextInternal> internalPrivateDataContext;
@property (readonly, nonatomic) FCNetworkBehaviorMonitor *networkBehaviorMonitor; // @synthesize networkBehaviorMonitor=_networkBehaviorMonitor;
@property (readonly, nonatomic) FCNotificationController *notificationController; // @synthesize notificationController=_notificationController;
@property (readonly, nonatomic) FCCommandQueue *notificationsEndpointCommandQueue; // @synthesize notificationsEndpointCommandQueue=_notificationsEndpointCommandQueue;
@property (readonly, nonatomic) FCNotificationsEndpointConnection *notificationsEndpointConnection; // @synthesize notificationsEndpointConnection=_notificationsEndpointConnection;
@property (readonly, nonatomic) FCPersonalizationData *personalizationData;
@property (readonly, nonatomic) FCPrivateChannelMembershipController *privateChannelMembershipController;
@property (strong, nonatomic) id<FCPrivateDataContext> privateDataContext; // @synthesize privateDataContext=_privateDataContext;
@property (readonly, copy, nonatomic) NSString *privateDataDirectory;
@property (readonly, nonatomic, getter=isPrivateDataSyncingEnabled) BOOL privateDataSyncingEnabled;
@property (readonly, nonatomic) id<FCPushNotificationHandling> privatePushNotificationHandler;
@property (readonly, nonatomic) FCPurchaseController *purchaseController; // @synthesize purchaseController=_purchaseController;
@property (readonly, nonatomic) FCReadingHistory *readingHistory;
@property (readonly, nonatomic) FCReadingList *readingList;
@property (nonatomic, getter=isRunningPPT) BOOL runningPPT; // @synthesize runningPPT=_runningPPT;
@property (readonly, nonatomic) FCSubscriptionController *subscriptionController; // @synthesize subscriptionController=_subscriptionController;
@property (readonly, nonatomic) FCSubscriptionList *subscriptionList;
@property (readonly) Class superclass;
@property (readonly, nonatomic) FCTagController *tagController;
@property (readonly, nonatomic) FCTagSettings *tagSettings;
@property (readonly, nonatomic) FCUserInfo *userInfo;

+ (void)initialize;
+ (id)testingContext;
- (void).cxx_destruct;
- (void)clearCloudKitCaches;
- (void)enableFlushingWithFlushingThreshold:(unsigned long long)arg1;
- (id)fetchEndOfArticleDataForHeadline:(id)arg1 initialRelatedHeadlineCount:(unsigned long long)arg2 initialPublisherHeadlineCount:(unsigned long long)arg3 totalRelatedHeadlineCount:(unsigned long long)arg4 totalPublisherHeadlineCount:(unsigned long long)arg5 completion:(CDUnknownBlockType)arg6;
- (void)getCoverImageForFeed:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)init;
- (id)initForTesting;
- (id)initWithContentContext:(id)arg1 privateDataContext:(id)arg2 networkBehaviorMonitor:(id)arg3;
- (id)initWithContentHostDirectory:(id)arg1 privateDataHostDirectory:(id)arg2 privateDataActionProvider:(id)arg3 networkBehaviorMonitor:(id)arg4 desiredHeadlineFieldOptions:(unsigned long long)arg5 feedUsage:(long long)arg6 lockStoreFrontIfNeeded:(BOOL)arg7 deviceIsiPad:(BOOL)arg8;
- (id)insertTestArticle;
- (id)insertTestArticlesWithCount:(unsigned long long)arg1;
- (id)notificationsController;
- (id)privateStoreWithName:(id)arg1 version:(unsigned long long)arg2 options:(unsigned long long)arg3;

@end

