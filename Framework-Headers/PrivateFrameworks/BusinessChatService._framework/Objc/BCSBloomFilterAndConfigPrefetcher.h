//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSMutableSet;
@protocol BCSBloomFilterAndConfigRemoteFetching, BCSConfigCaching, BCSFeatureFlagArbitrating, BCSMetricFactoryProtocol, BCSPrefetchTrigger, BCSShardCacheQueryable, BCSShardCacheSkipping, BCSShardItemInstantiating, BCSUserDefaultsProviding;

@interface BCSBloomFilterAndConfigPrefetcher : NSObject
{
    id<BCSConfigCaching> _configCache;
    id<BCSShardCacheQueryable> _shardCache;
    id<BCSShardCacheSkipping> _shardCacheSkipper;
    id<BCSBloomFilterAndConfigRemoteFetching> _bloomFilterAndConfigRemoteFetch;
    id<BCSPrefetchTrigger> _prefetchTrigger;
    id<BCSShardItemInstantiating> _shardInstantiator;
    id<BCSFeatureFlagArbitrating> _featureFlagAribiter;
    id<BCSUserDefaultsProviding> _userDefaults;
    id<BCSMetricFactoryProtocol> _metricFactory;
    NSMutableSet *_triggers;
}

@property (strong, nonatomic) id<BCSBloomFilterAndConfigRemoteFetching> bloomFilterAndConfigRemoteFetch; // @synthesize bloomFilterAndConfigRemoteFetch=_bloomFilterAndConfigRemoteFetch;
@property (strong, nonatomic) id<BCSConfigCaching> configCache; // @synthesize configCache=_configCache;
@property (strong, nonatomic) id<BCSFeatureFlagArbitrating> featureFlagAribiter; // @synthesize featureFlagAribiter=_featureFlagAribiter;
@property (strong, nonatomic) id<BCSMetricFactoryProtocol> metricFactory; // @synthesize metricFactory=_metricFactory;
@property (strong, nonatomic) id<BCSPrefetchTrigger> prefetchTrigger; // @synthesize prefetchTrigger=_prefetchTrigger;
@property (strong, nonatomic) id<BCSShardCacheQueryable> shardCache; // @synthesize shardCache=_shardCache;
@property (strong, nonatomic) id<BCSShardCacheSkipping> shardCacheSkipper; // @synthesize shardCacheSkipper=_shardCacheSkipper;
@property (strong, nonatomic) id<BCSShardItemInstantiating> shardInstantiator; // @synthesize shardInstantiator=_shardInstantiator;
@property (strong, nonatomic) NSMutableSet *triggers; // @synthesize triggers=_triggers;
@property (strong, nonatomic) id<BCSUserDefaultsProviding> userDefaults; // @synthesize userDefaults=_userDefaults;

- (void).cxx_destruct;
- (long long)_hoursSinceLastSuccessfulPrefetchForType:(long long)arg1;
- (void)_notePrefetchForType:(long long)arg1 finishedSuccessfully:(BOOL)arg2;
- (void)_prefetchBloomFilterAndConfigIfNecessaryWithXPCActivity:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (BOOL)_shouldPrefetchType:(long long)arg1;
- (void)addPrefetchTrigger:(id)arg1;
- (id)initWithConfigCache:(id)arg1 shardCache:(id)arg2 shardCacheSkipper:(id)arg3 shardInstantiator:(id)arg4 featureFlagArbiter:(id)arg5 businessLinkRemoteFetcher:(id)arg6 userDefaults:(id)arg7 metricFactory:(id)arg8;

@end

