//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/NSObject.h>

#import <OpusKit/AVAudioPlayerDelegate-Protocol.h>

@class AVPlayer, NSArray, NSMutableDictionary, NSOperationQueue, NSString, OKAudioDucker, OKMediaItem, OKPresentation;
@protocol OKAudioPlaylistDelegate, OS_dispatch_queue;

@interface OKAudioPlaylist : NSObject <AVAudioPlayerDelegate>
{
    NSArray *_mediaItems;
    NSMutableDictionary *_players;
    BOOL _playing;
    BOOL _loops;
    long long _currentPlayerIndex;
    AVPlayer *_currentMedia;
    OKAudioDucker *_ducker;
    OKPresentation *_presentation;
    id<OKAudioPlaylistDelegate> _delegate;
    NSOperationQueue *_mediaItemOperationQueue;
    NSObject<OS_dispatch_queue> *_accessQueue;
    double _playingMusicCurrentTime;
    double _playingMusicDuration;
}

@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) id<OKAudioPlaylistDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) BOOL loops; // @synthesize loops=_loops;
@property (readonly, nonatomic) OKMediaItem *playingItem;
@property (nonatomic) double playingMusicCurrentTime; // @synthesize playingMusicCurrentTime=_playingMusicCurrentTime;
@property (readonly, nonatomic) double playingMusicDuration; // @synthesize playingMusicDuration=_playingMusicDuration;
@property (readonly) Class superclass;
@property (nonatomic) float volume;

- (void)_playMediaItem:(id)arg1 forMediaItem:(id)arg2;
- (void)audioFinishedPlaying:(id)arg1;
- (void)beginDuckingToLevel:(double)arg1 fadeDuration:(double)arg2;
- (void)beginFadingWithDuration:(double)arg1;
- (id)currentMedia;
- (void)dealloc;
- (void)endDucking;
- (void)endFading;
- (id)initWithAudioItems:(id)arg1 presentation:(id)arg2;
- (id)initWithAudioURLs:(id)arg1 presentation:(id)arg2;
- (BOOL)isPlaying;
- (void)next;
- (void)play;
- (void)prev;
- (void)rewind;
- (void)setCurrentMedia:(id)arg1;
- (void)setPlaying:(BOOL)arg1;
- (void)stop;

@end

