//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <OpusKit/OKWidgetNode.h>

#import <OpusKit/OKViewControllerAudioSupport-Protocol.h>

@class AVPlayer, AVPlayerLayer, NSString, NSURL, OKAudioDucker, SCNMaterialProperty, SCNPlane;

@interface OKWidgetMediaNode : OKWidgetNode <OKViewControllerAudioSupport>
{
    NSURL *_videoURL;
    AVPlayer *_videoPlayer;
    AVPlayerLayer *_videoPlayerLayer;
    BOOL _autoplay;
    BOOL _loop;
    BOOL _shouldPlayVideoWhenAvailable;
    float _rate;
    float _seekToTime;
    OKAudioDucker *_audioDucker;
    float _requiredDuckLevel;
    float _audioVolume;
    NSString *_audioTrackID;
    NSURL *_mediaURL;
    long long _contentMode;
    SCNPlane *_mediaHolder;
    BOOL _loadRessourceNeeded;
    SCNMaterialProperty *_diffuse;
    double _lastResolution;
    struct SCNVector3 _visionVector;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

+ (void)setupJavascriptContext:(id)arg1;
+ (id)supportedSettings;
- (void)_cancelThumbnailOperations:(id)arg1;
- (void)_reloadThumbnailContent;
- (void)_reloadThumbnailContent:(BOOL)arg1;
- (void)applyLayoutSettings;
- (void)beginDuckingToLevel:(double)arg1 fadeDuration:(double)arg2;
- (void)beginFadingWithDuration:(double)arg1;
- (struct SCNVector3)calculateAspectFill:(id)arg1;
- (struct CGSize)calculateBestResolutionForMediaNode;
- (double)currentTime;
- (void)dealloc;
- (double)duration;
- (void)endDucking;
- (id)initWithWidget:(id)arg1;
- (void)loadRessourcesIfNeeded;
- (void)pauseVideo:(id)arg1;
- (void)playVideo:(id)arg1;
- (void)playerItemDidReachEnd:(id)arg1;
- (BOOL)prepareForDisplay;
- (void)prepareForRefresh;
- (BOOL)prepareForUnload;
- (BOOL)prepareForWarmup;
- (void)reloadMediaURL:(id)arg1 size:(struct CGSize)arg2 lowQuality:(BOOL)arg3 highQuality:(BOOL)arg4 identifier:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (double)requiredDuckLevel;
- (void)resetVideo;
- (void)seekToTime:(double)arg1;
- (void)setPlaybackAudioVolume:(double)arg1;
- (void)setSettingAudioRequiredDuckLevel:(float)arg1;
- (void)setSettingAudioVolume:(float)arg1;
- (void)setSettingAutoplay:(BOOL)arg1;
- (void)setSettingContentMode:(long long)arg1;
- (void)setSettingHeight:(double)arg1;
- (void)setSettingLoop:(BOOL)arg1;
- (void)setSettingRate:(float)arg1;
- (void)setSettingSeekToTime:(float)arg1;
- (void)setSettingUrl:(id)arg1;
- (void)setSettingWidth:(double)arg1;
- (void)setVideoURL:(id)arg1;
- (float)settingAudioVolume;
- (long long)settingContentMode;
- (BOOL)settingLoop;
- (id)settingObjectForKey:(id)arg1;
- (float)settingRate;
- (float)settingSeekToTime;
- (id)settingUrl;
- (BOOL)settingsAutoplay;
- (void)unloadRessources;
- (id)valueForUndefinedKey:(id)arg1;
- (struct SCNVector3)visionVector;

@end

