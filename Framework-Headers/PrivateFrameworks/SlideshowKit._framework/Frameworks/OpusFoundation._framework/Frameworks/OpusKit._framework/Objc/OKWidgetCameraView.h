//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <OpusKit/OKWidgetView.h>

@class AVCaptureDeviceInput, AVCaptureSession, NSObject, NSString, OKWidgetCameraPreviewView;
@protocol OS_dispatch_queue;

@interface OKWidgetCameraView : OKWidgetView
{
    NSObject<OS_dispatch_queue> *_sessionQueue;
    AVCaptureSession *_session;
    AVCaptureDeviceInput *_videoDeviceInput;
    AVCaptureDeviceInput *_audioDeviceInput;
    BOOL _deviceAuthorized;
    id _runtimeErrorHandlingObserver;
    id _deviceConnectedObserver;
    id _deviceDisconnectedObserver;
    OKWidgetCameraPreviewView *_previewView;
    long long _inputType;
    NSString *_inputDeviceName;
    float _volume;
}

@property (nonatomic, getter=isDeviceAuthorized) BOOL deviceAuthorized; // @synthesize deviceAuthorized=_deviceAuthorized;
@property (nonatomic) id deviceConnectedObserver; // @synthesize deviceConnectedObserver=_deviceConnectedObserver;
@property (nonatomic) id deviceDisconnectedObserver; // @synthesize deviceDisconnectedObserver=_deviceDisconnectedObserver;
@property (readonly, nonatomic, getter=isSessionRunningAndDeviceAuthorized) BOOL sessionRunningAndDeviceAuthorized;

+ (id)deviceWithInputType:(long long)arg1 inputDeviceName:(id)arg2;
+ (id)keyPathsForValuesAffectingSessionRunningAndDeviceAuthorized;
+ (void)setupJavascriptContext:(id)arg1;
+ (id)supportedSettings;
- (void)__stopRunning;
- (void)_prepareSessionIfNeeded;
- (void)_startRunning;
- (void)_stopRunning;
- (void)checkDeviceAuthorizationStatus;
- (void)dealloc;
- (id)initWithWidget:(id)arg1;
- (void)layoutSubviews;
- (BOOL)prepareForDisplay:(BOOL)arg1;
- (BOOL)prepareForUnload:(BOOL)arg1;
- (BOOL)prepareForWarmup:(BOOL)arg1;
- (void)setSettingInput:(long long)arg1;
- (void)setSettingInputDeviceName:(id)arg1;
- (void)setSettingVolume:(float)arg1;

@end

