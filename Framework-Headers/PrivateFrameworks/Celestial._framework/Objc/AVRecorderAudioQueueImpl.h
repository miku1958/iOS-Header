//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/NSObject.h>

#import <Celestial/AVRecorderImpl-Protocol.h>

@class NSMutableDictionary, NSString;

@interface AVRecorderAudioQueueImpl : NSObject <AVRecorderImpl>
{
    BOOL _isActive;
    BOOL _isRecording;
    BOOL _isWriting;
    NSMutableDictionary *_attributes;
    unsigned int _fileType;
    unsigned int _audioCodec;
    long long _maxPCMFramesToRecord;
    BOOL _haveRecordedMaxPCMFrames;
    struct AudioStreamBasicDescription _recordingFormat;
    struct OpaqueAudioFileID *_audioFile;
    struct OpaqueAudioQueue *_audioQueue;
    unsigned int _numDeviceChannels;
    struct AudioQueueLevelMeterState *_audioLevels;
    struct AudioQueueLevelMeterState *_audioLevelsDB;
    unsigned long long _totalBytesRecorded;
    unsigned long long _totalPacketsRecorded;
    unsigned long long _totalFramesRecorded;
    struct AudioQueueBuffer *_buffers[3];
    BOOL _bufferUsed[3];
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

- (BOOL)activate:(id *)arg1;
- (id)attributeForKey:(id)arg1;
- (BOOL)audioCurrentAverageDecibelLevels:(float *)arg1 andPeakDecibelLevels:(float *)arg2;
- (BOOL)audioCurrentAverageVolumeLevels:(float *)arg1 andPeakVolumeLevels:(float *)arg2;
- (BOOL)audioCurrentAverageVolumeLevels:(float *)arg1 andPeakVolumeLevels:(float *)arg2 useDB:(BOOL)arg3;
- (unsigned long long)audioNumDeviceChannels;
- (BOOL)autoFocusAtPoint:(struct CGPoint)arg1;
- (void)copyEncoderCookieToFile;
- (void)deactivate;
- (void)dealloc;
- (id)filePath;
- (void)haveABuffer:(struct AudioQueueBuffer *)arg1 withTimeStamp:(const struct AudioTimeStamp *)arg2 andNumPackets:(unsigned int)arg3 andPacketDescs:(const struct AudioStreamPacketDescription *)arg4;
- (id)init;
- (id)initWithAttributes:(id)arg1;
- (BOOL)isActive;
- (BOOL)isRecording;
- (float)micVolume;
- (double)recordedDuration;
- (long long)recordedFileSizeInBytes;
- (void)setAttribute:(id)arg1 forKey:(id)arg2;
- (void)setFilePath:(id)arg1;
- (void)setMicVolume:(float)arg1;
- (BOOL)start;
- (void)stop;
- (BOOL)takePhoto;

@end

