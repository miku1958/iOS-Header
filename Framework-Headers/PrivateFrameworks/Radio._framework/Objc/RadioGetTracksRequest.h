//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Radio/RadioRequest.h>

@class NSArray, NSData, NSDictionary, NSNumber, NSString, RadioPlayEventCollection, RadioPlaybackContext, RadioStationMatchContext, SSURLConnectionRequest, SSVPlaybackLease;

@interface RadioGetTracksRequest : RadioRequest
{
    unsigned long long _globalVersion;
    BOOL _includeCleanTracksOnly;
    unsigned long long _numberOfTracks;
    SSURLConnectionRequest *_request;
    BOOL _shouldIncludeStationInResponse;
    NSString *_stationHash;
    long long _stationID;
    NSString *_stationStringID;
    BOOL _shouldIncludeAsset;
    BOOL _skipPromptForSeamlessPlayback;
    NSNumber *_accountUniqueIdentifier;
    NSDictionary *_additionalRequestParameters;
    NSData *_heartbeatTokenData;
    SSVPlaybackLease *_playbackLease;
    RadioPlayEventCollection *_playEventCollection;
    NSArray *_playActivityFeedEvents;
    RadioPlaybackContext *_playbackContext;
    long long _reasonType;
    RadioStationMatchContext *_stationMatchContext;
}

@property (readonly, copy, nonatomic) NSNumber *accountUniqueIdentifier; // @synthesize accountUniqueIdentifier=_accountUniqueIdentifier;
@property (copy, nonatomic) NSDictionary *additionalRequestParameters; // @synthesize additionalRequestParameters=_additionalRequestParameters;
@property (copy, nonatomic) NSData *heartbeatTokenData; // @synthesize heartbeatTokenData=_heartbeatTokenData;
@property (nonatomic) BOOL includeCleanTracksOnly; // @synthesize includeCleanTracksOnly=_includeCleanTracksOnly;
@property (nonatomic) unsigned long long numberOfTracks; // @synthesize numberOfTracks=_numberOfTracks;
@property (copy, nonatomic) NSArray *playActivityFeedEvents; // @synthesize playActivityFeedEvents=_playActivityFeedEvents;
@property (copy, nonatomic) RadioPlayEventCollection *playEventCollection; // @synthesize playEventCollection=_playEventCollection;
@property (copy, nonatomic) RadioPlaybackContext *playbackContext; // @synthesize playbackContext=_playbackContext;
@property (strong, nonatomic) SSVPlaybackLease *playbackLease; // @synthesize playbackLease=_playbackLease;
@property (nonatomic) long long reasonType; // @synthesize reasonType=_reasonType;
@property (nonatomic) BOOL shouldIncludeAsset; // @synthesize shouldIncludeAsset=_shouldIncludeAsset;
@property (nonatomic) BOOL shouldIncludeStationInResponse; // @synthesize shouldIncludeStationInResponse=_shouldIncludeStationInResponse;
@property (nonatomic) BOOL skipPromptForSeamlessPlayback; // @synthesize skipPromptForSeamlessPlayback=_skipPromptForSeamlessPlayback;
@property (strong, nonatomic) RadioStationMatchContext *stationMatchContext; // @synthesize stationMatchContext=_stationMatchContext;

- (void).cxx_destruct;
- (id)_playbackContextForStation:(id)arg1;
- (void)cancel;
- (id)init;
- (id)initWithGlobalVersion:(unsigned long long)arg1;
- (id)initWithStation:(id)arg1 globalVersion:(unsigned long long)arg2;
- (id)initWithStationStringID:(id)arg1 globalVersion:(unsigned long long)arg2;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;

@end

