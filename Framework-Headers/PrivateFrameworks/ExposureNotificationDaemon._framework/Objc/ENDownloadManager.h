//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class ENDownloadManagerState, ENSecureArchiveFileWrapper, NSArray, NSBackgroundActivityScheduler, NSURL, NSURLSession;
@protocol OS_dispatch_queue;

@interface ENDownloadManager : NSObject
{
    NSURL *_directoryURL;
    BOOL _invalidated;
    NSObject<OS_dispatch_queue> *_queue;
    NSArray *_pendingEndpoints;
    ENSecureArchiveFileWrapper *_stateFileWrapper;
    NSBackgroundActivityScheduler *_fetchScheduler;
    NSURLSession *_URLSession;
    ENDownloadManagerState *_state;
}

@property (strong, nonatomic) NSURLSession *URLSession; // @synthesize URLSession=_URLSession;
@property (readonly, nonatomic) NSBackgroundActivityScheduler *fetchScheduler; // @synthesize fetchScheduler=_fetchScheduler;
@property (readonly, nonatomic) ENDownloadManagerState *state; // @synthesize state=_state;

- (void).cxx_destruct;
- (double)_aggregateDownloadIntervalFromEndpoints:(id)arg1;
- (void)_backgroundActivityFiredWithCompletion:(CDUnknownBlockType)arg1;
- (id)_baseDirectoryPathForEndpointWithState:(id)arg1;
- (BOOL)_copyDownloadedFileAtPath:(id)arg1 toPath:(id)arg2 removeExisting:(BOOL)arg3 error:(id *)arg4;
- (id)_createTestEndpoint;
- (void)_downloadIndexWithTask:(id)arg1;
- (void)_downloadNextFileFromServerWithTask:(id)arg1;
- (id)_downloadsDirectoryPathForEndpointState:(id)arg1;
- (void)_handleFileDownloadFinishedForTask:(id)arg1 serverFilePath:(id)arg2 downloadedFilePath:(id)arg3;
- (void)_handleIndexFileDownloadFinishedForTask:(id)arg1 filePath:(id)arg2;
- (id)_indexFilePathForEndpointState:(id)arg1;
- (id)_nextFilePathToDownloadWithEndpointState:(id)arg1;
- (void)_performDownloadsWithScheduler:(id)arg1 atDate:(id)arg2 forced:(BOOL)arg3 completion:(CDUnknownBlockType)arg4;
- (BOOL)_readStateIfNecessaryWithError:(id *)arg1;
- (BOOL)_saveState;
- (BOOL)_saveStateWithError:(id *)arg1;
- (BOOL)_shouldFetchFromEndpointWithState:(id)arg1 time:(double)arg2;
- (void)_updateFetchSchedule;
- (void)activate;
- (id)countOfAvailableDownloadsWithError:(id *)arg1;
- (id)createScheduler;
- (BOOL)enumerateDownloadsWithError:(id *)arg1 handler:(CDUnknownBlockType)arg2;
- (id)initWithDirectoryURL:(id)arg1 queue:(id)arg2;
- (id)initWithQueue:(id)arg1;
- (void)invalidate;
- (void)performDownloadsAtDate:(id)arg1 forced:(BOOL)arg2 completion:(CDUnknownBlockType)arg3;
- (void)performDownloadsForced:(BOOL)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setDownloadEndpoints:(id)arg1;
- (void)update;

@end

