//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSMutableArray, NSMutableString;

__attribute__((visibility("hidden")))
@interface CPMLSchema : NSObject
{
    NSMutableArray *schema;
    NSMutableString *schemaHeader;
    NSMutableString *schemaHeaderWithType;
    NSMutableArray *attribute;
    NSMutableArray *schemaHDef;
    NSMutableArray *nsRemapTable;
    NSMutableArray *_categoricalDataList;
    NSMutableArray *_replaceMissingValue;
    NSMutableArray *_matchReplaceValue;
    int yColumnPosition;
    NSMutableArray *availableOptions;
    NSMutableArray *_indexColumnList;
}

@property (readonly, nonatomic) NSMutableArray *attribute; // @synthesize attribute;
@property (readonly, nonatomic) NSMutableArray *availableOptions; // @synthesize availableOptions;
@property (readonly, nonatomic) NSMutableArray *indexColumnList; // @synthesize indexColumnList=_indexColumnList;
@property (readonly, nonatomic) NSMutableArray *nsRemapTable; // @synthesize nsRemapTable;
@property (readonly, nonatomic) NSMutableString *schemaHeader; // @synthesize schemaHeader;
@property (readonly, nonatomic) NSMutableString *schemaHeaderWithType; // @synthesize schemaHeaderWithType;

- (void).cxx_destruct;
- (id)getColumnName:(unsigned long long)arg1;
- (int)getColumnPosition:(id)arg1;
- (int)getSchemaType:(unsigned long long)arg1;
- (id)getSubstituteValue:(unsigned long long)arg1;
- (unsigned long long)getTotalAttributes;
- (id)getUserDefinedCategoricalData:(unsigned long long)arg1;
- (unsigned long long)getUserDefinedCategoricalDataCount:(unsigned long long)arg1;
- (int)getVectorContent:(unsigned long long)arg1;
- (int)getYColumnPosition;
- (BOOL)hasOptions:(unsigned long long)arg1;
- (id)init:(id)arg1;
- (id)initWithPlist:(id)arg1;
- (BOOL)isColumnContinous:(unsigned int)arg1;
- (BOOL)isIntType:(unsigned long long)arg1;
- (BOOL)isNumType:(unsigned long long)arg1;
- (BOOL)isRealType:(unsigned long long)arg1;
- (BOOL)isStringType:(unsigned long long)arg1;
- (BOOL)isVectorType:(unsigned long long)arg1;
- (BOOL)matchSubstituteValue:(unsigned long long)arg1 theValue:(id)arg2;

@end

