//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <HealthDaemon/NSCopying-Protocol.h>
#import <HealthDaemon/NSMutableCopying-Protocol.h>

@class HDDatabaseTransactionContextStatistics, NSMutableSet, NSSet;

@interface HDDatabaseTransactionContext : NSObject <NSCopying, NSMutableCopying>
{
    long long _journalType;
    long long _cacheScope;
    unsigned long long _options;
    NSMutableSet *_accessibilityAssertions;
    HDDatabaseTransactionContextStatistics *_statistics;
}

@property (readonly, copy, nonatomic) NSSet *accessibilityAssertions;
@property (readonly, nonatomic) long long cacheScope; // @synthesize cacheScope=_cacheScope;
@property (readonly, nonatomic, getter=isEmpty) BOOL empty;
@property (readonly, nonatomic) BOOL highPriority;
@property (readonly, nonatomic) long long journalType; // @synthesize journalType=_journalType;
@property (readonly, nonatomic) BOOL requiresNewDatabaseConnection;
@property (readonly, nonatomic) BOOL requiresProtectedData;
@property (readonly, nonatomic) BOOL requiresWrite;
@property (readonly, nonatomic) BOOL skipJournalMerge;
@property (readonly, nonatomic) HDDatabaseTransactionContextStatistics *statistics; // @synthesize statistics=_statistics;

+ (id)_cachedContextForOptions:(unsigned long long)arg1;
+ (id)contextForReading;
+ (id)contextForReadingProtectedData;
+ (id)contextForWriting;
+ (id)contextForWritingProtectedData;
+ (id)highPriorityContext;
- (void).cxx_destruct;
- (void)_applyOptions:(unsigned long long)arg1 enable:(BOOL)arg2;
- (id)_initWithOptions:(unsigned long long)arg1;
- (id)_initWithOptions:(unsigned long long)arg1 journalType:(long long)arg2 cacheScope:(long long)arg3 assertions:(id)arg4 statistics:(id)arg5;
- (BOOL)containsContext:(id)arg1 error:(id *)arg2;
- (id)copyForReadingProtectedData;
- (id)copyForWriting;
- (id)copyForWritingProtectedData;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (unsigned long long)hash;
- (id)init;
- (BOOL)isEqual:(id)arg1;
- (id)mergedContextWithContext:(id)arg1 error:(id *)arg2;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;

@end

