//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class HDClient, HDDaemon, NSMutableArray, NSUUID;
@protocol OS_dispatch_queue;

@interface HDAuthorizationServer : NSObject
{
    int _invalidated;
    HDClient *_client;
    HDDaemon *_daemon;
    NSObject<OS_dispatch_queue> *_queue;
    NSMutableArray *_authorizationRequestIdentifiers;
    NSUUID *_transactionSessionIdentifier;
}

@property (strong, nonatomic) NSMutableArray *authorizationRequestIdentifiers; // @synthesize authorizationRequestIdentifiers=_authorizationRequestIdentifiers;
@property (readonly) HDClient *client; // @synthesize client=_client;
@property (weak, nonatomic) HDDaemon *daemon; // @synthesize daemon=_daemon;
@property (nonatomic) int invalidated; // @synthesize invalidated=_invalidated;
@property (strong, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property (strong, nonatomic) NSUUID *transactionSessionIdentifier; // @synthesize transactionSessionIdentifier=_transactionSessionIdentifier;

- (void).cxx_destruct;
- (id)_authorizationStatusForTypes:(id)arg1 error:(id *)arg2;
- (void)_invalidate;
- (void)_performIfAuthorizedForTypes:(id)arg1 sharing:(BOOL)arg2 onQueue:(id)arg3 usingBlock:(CDUnknownBlockType)arg4 errorHandler:(CDUnknownBlockType)arg5;
- (void)_queue_beginAuthorizationRequestDelegateTransactionWithSessionIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_queue_enqueueAuthorizationRequestForBundleIdentifier:(id)arg1 writeTypes:(id)arg2 readTypes:(id)arg3 authorizationNeededHandler:(CDUnknownBlockType)arg4 requestCompletionHandler:(CDUnknownBlockType)arg5;
- (BOOL)_shouldBypassAuthorization;
- (id)allAuthorizationRecordsForBundleIdentifier:(id)arg1 error:(id *)arg2;
- (id)allAuthorizationRecordsForType:(id)arg1 error:(id *)arg2;
- (id)authorizationStatusForType:(id)arg1 error:(id *)arg2;
- (void)beginAuthorizationRequestDelegateTransactionWithRequestRecord:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)beginAuthorizationRequestDelegateTransactionWithSessionIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)clientSourceIdentifierWithError:(id *)arg1;
- (void)endAuthorizationRequestDelegateTransactionWithError:(id)arg1;
- (void)enqueueAuthorizationRequestToWriteTypes:(id)arg1 readTypes:(id)arg2 authorizationNeededHandler:(CDUnknownBlockType)arg3 requestCompletionHandler:(CDUnknownBlockType)arg4;
- (id)filterSamplesForReadAuthorization:(id)arg1;
- (void)handleAuthorizationRequestsForBundleIdentifier:(id)arg1 promptHandler:(CDUnknownBlockType)arg2 requestCompletionHandler:(CDUnknownBlockType)arg3;
- (void)handleAuthorizationRequestsWithPromptHandler:(CDUnknownBlockType)arg1 requestCompletionHandler:(CDUnknownBlockType)arg2;
- (id)initWithClient:(id)arg1 daemon:(id)arg2 queue:(id)arg3;
- (void)invalidate;
- (BOOL)isAuthorizationStatusDeterminedForTypes:(id)arg1 error:(id *)arg2;
- (BOOL)isAuthorizedToReadType:(id)arg1 withRestrictedSourceIdentifier:(id *)arg2 authorizationAnchor:(id *)arg3;
- (void)performIfAuthorizedToDeleteObjectsWithTypes:(id)arg1 onQueue:(id)arg2 usingBlock:(CDUnknownBlockType)arg3 errorHandler:(CDUnknownBlockType)arg4;
- (void)performIfAuthorizedToReadTypes:(id)arg1 onQueue:(id)arg2 usingBlock:(CDUnknownBlockType)arg3 errorHandler:(CDUnknownBlockType)arg4;
- (void)performIfAuthorizedToSaveObjectsWithTypes:(id)arg1 onQueue:(id)arg2 usingBlock:(CDUnknownBlockType)arg3 errorHandler:(CDUnknownBlockType)arg4;
- (id)readAuthorizationWithTypes:(id)arg1 error:(id *)arg2;
- (void)requestAuthorizationForBundleIdentifier:(id)arg1 writeTypes:(id)arg2 readTypes:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (BOOL)resetAuthorizationStatusForBundleIdentifier:(id)arg1 error:(id *)arg2;
- (void)setAuthorizationStatuses:(id)arg1 forBundleIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;

@end

