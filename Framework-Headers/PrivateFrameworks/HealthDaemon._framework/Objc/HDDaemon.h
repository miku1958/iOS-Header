//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <HealthDaemon/HDDataCollectionManagerDelegate-Protocol.h>
#import <HealthDaemon/HDDiagnosticObject-Protocol.h>
#import <HealthDaemon/HDHealthDaemon-Protocol.h>
#import <HealthDaemon/NSXPCListenerDelegate-Protocol.h>

@class HDAchievementDoctorManager, HDAppLauncher, HDAppSubscriptionManager, HDAuthorizationManager, HDBackgroundTaskScheduler, HDCoachingDiagnosticManager, HDContentProtectionManager, HDCurrentActivitySummaryHelper, HDDaemonSyncEngine, HDDataCollectionManager, HDDataManager, HDDataProvenanceManager, HDDatabase, HDDatabasePruningManager, HDDeviceManager, HDHealthServiceManager, HDMetadataManager, HDMigrationManager, HDNanoSyncManager, HDPluginManager, HDProcessStateManager, HDRoutineGateway, HDServiceConnectionManager, HDSourceManager, HDUnitPreferencesManager, HDUserCharacteristicsManager, HDWorkoutManager, NSMutableArray, NSMutableSet, NSString, NSURL, NSXPCListener;
@protocol HDHealthDataCollectionManager, HDHealthDataManager, HDHealthDatabase, HDHealthMetadataManager, HDSyncEngine, HDViewOnWakeService, OS_dispatch_queue;

@interface HDDaemon : NSObject <HDDataCollectionManagerDelegate, HDDiagnosticObject, NSXPCListenerDelegate, HDHealthDaemon>
{
    NSString *_homeDirectoryPath;
    NSMutableSet *_servers;
    NSObject<OS_dispatch_queue> *_mainQueue;
    HDDaemonSyncEngine *_syncEngine;
    HDContentProtectionManager *_contentProtectionManager;
    HDUserCharacteristicsManager *_userCharacteristicsManager;
    HDBackgroundTaskScheduler *_backgroundTaskScheduler;
    HDProcessStateManager *_processStateManager;
    HDPluginManager *_pluginManager;
    HDDataProvenanceManager *_dataProvenanceManager;
    HDAchievementDoctorManager *_achievementDoctorManager;
    HDDatabasePruningManager *_databasePruningManager;
    HDRoutineGateway *_routineGateway;
    struct MGNotificationTokenStruct *_deviceNameChangesToken;
    NSXPCListener *_serviceListener;
    NSMutableArray *_daemonLaunchObservers;
    BOOL _daemonReady;
    int _didStart;
    HDAppLauncher *_appLauncher;
    HDAuthorizationManager *_authorizationManager;
    HDDatabase *_database;
    HDDataCollectionManager *_dataCollectMgr;
    HDDataManager *_dataMgr;
    HDHealthServiceManager *_serviceManager;
    HDServiceConnectionManager *_serviceConnectionManager;
    HDSourceManager *_sourceManager;
    HDDeviceManager *_deviceManager;
    HDMetadataManager *_metadataManager;
    HDAppSubscriptionManager *_subscriptionManager;
    HDMigrationManager *_migrationManager;
    HDUnitPreferencesManager *_unitPreferencesManager;
    HDNanoSyncManager *_nanoSyncManager;
    HDWorkoutManager *_workoutManager;
    id<HDViewOnWakeService> _viewOnWakeService;
    HDCoachingDiagnosticManager *_coachingDiagnosticManager;
    HDCurrentActivitySummaryHelper *_currentActivitySummaryHelper;
}

@property (strong, nonatomic) HDAppLauncher *appLauncher; // @synthesize appLauncher=_appLauncher;
@property (strong, nonatomic) HDAuthorizationManager *authorizationManager; // @synthesize authorizationManager=_authorizationManager;
@property (readonly) HDBackgroundTaskScheduler *backgroundTaskScheduler;
@property (strong, nonatomic) HDCoachingDiagnosticManager *coachingDiagnosticManager; // @synthesize coachingDiagnosticManager=_coachingDiagnosticManager;
@property (readonly) HDContentProtectionManager *contentProtectionManager;
@property (strong, nonatomic) HDCurrentActivitySummaryHelper *currentActivitySummaryHelper; // @synthesize currentActivitySummaryHelper=_currentActivitySummaryHelper;
@property (strong, nonatomic) HDDataCollectionManager *dataCollectMgr; // @synthesize dataCollectMgr=_dataCollectMgr;
@property (strong, nonatomic) HDDataManager *dataMgr; // @synthesize dataMgr=_dataMgr;
@property (readonly) HDDataProvenanceManager *dataProvenanceManager;
@property (strong, nonatomic) HDDatabase *database; // @synthesize database=_database;
@property (strong, nonatomic) HDDatabasePruningManager *databasePruningManager; // @synthesize databasePruningManager=_databasePruningManager;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (strong, nonatomic) HDDeviceManager *deviceManager; // @synthesize deviceManager=_deviceManager;
@property (readonly) unsigned long long hash;
@property (readonly) id<HDHealthDataCollectionManager> healthDataCollectionManager;
@property (readonly) id<HDHealthDataManager> healthDataManager;
@property (readonly) id<HDHealthDatabase> healthDatabase;
@property (readonly) HDDeviceManager *healthDeviceManager;
@property (readonly) id<HDHealthMetadataManager> healthMetadataManager;
@property (readonly) HDHealthServiceManager *healthServiceManager;
@property (readonly) HDSourceManager *healthSourceManager;
@property (readonly) NSString *homeDirectoryPath;
@property (readonly) NSURL *homeDirectoryURL;
@property (readonly) BOOL isAppleWatch;
@property (readonly) NSObject<OS_dispatch_queue> *mainQueue;
@property (strong, nonatomic) HDMetadataManager *metadataManager; // @synthesize metadataManager=_metadataManager;
@property (strong, nonatomic) HDMigrationManager *migrationManager; // @synthesize migrationManager=_migrationManager;
@property (strong, nonatomic) HDNanoSyncManager *nanoSyncManager; // @synthesize nanoSyncManager=_nanoSyncManager;
@property (readonly) HDPluginManager *pluginManager;
@property (readonly) HDProcessStateManager *processStateManager;
@property (strong, nonatomic) HDRoutineGateway *routineGateway; // @synthesize routineGateway=_routineGateway;
@property (strong, nonatomic) HDServiceConnectionManager *serviceConnectionManager; // @synthesize serviceConnectionManager=_serviceConnectionManager;
@property (strong, nonatomic) HDHealthServiceManager *serviceManager; // @synthesize serviceManager=_serviceManager;
@property (strong, nonatomic) HDSourceManager *sourceManager; // @synthesize sourceManager=_sourceManager;
@property (strong, nonatomic) HDAppSubscriptionManager *subscriptionManager; // @synthesize subscriptionManager=_subscriptionManager;
@property (readonly) Class superclass;
@property (readonly) id<HDSyncEngine> syncEngine;
@property (strong, nonatomic) HDUnitPreferencesManager *unitPreferencesManager; // @synthesize unitPreferencesManager=_unitPreferencesManager;
@property (readonly) HDUserCharacteristicsManager *userCharacteristicsManager;
@property (strong, nonatomic) id<HDViewOnWakeService> viewOnWakeService; // @synthesize viewOnWakeService=_viewOnWakeService;
@property (strong, nonatomic) HDWorkoutManager *workoutManager; // @synthesize workoutManager=_workoutManager;

+ (BOOL)_shouldInitializeDaemon;
- (void).cxx_destruct;
- (id)IDSServiceWithIdentifier:(id)arg1;
- (void)_applyPPTUpdatesWithDatabase:(id)arg1;
- (void)_localeChanged:(id)arg1;
- (BOOL)_motionTrackingAvailable;
- (id)_newContentProtectionMangaer;
- (id)_newDatabase;
- (id)_newMainQueue;
- (id)_newNanoSyncManager;
- (id)_newProcessStateManager;
- (id)_newUserCharacteristicsManager;
- (void)_notifyDaemonLaunchObservers;
- (void)_periodicUpdates;
- (BOOL)_persistDataAndNotify:(id)arg1 provenance:(id)arg2 error:(id *)arg3;
- (void)_registerForDeviceNameChanges;
- (void)_registerLaunchEventDynamicallyForNotification:(const char *)arg1;
- (void)_resetPrivacySettings;
- (void)_setUpDistnotedEventHandler;
- (void)_setUpLaunchEventHandlers;
- (void)_setUpNotifydEventHandler;
- (void)_setUpPedometerLaunchEventHandler;
- (void)_setUpSignalHandlers;
- (void)_setupMemoryWarningHandler;
- (id)_setupSignal:(int)arg1 handler:(CDUnknownBlockType)arg2;
- (void)_terminating;
- (void)_terminationCleanup;
- (void)_unregisterLaunchEventDynamicallyForNotification:(const char *)arg1;
- (void)beginTransaction:(id)arg1;
- (void)dealloc;
- (id)diagnosticDescription;
- (void)didUpdateActiveWorkoutServers;
- (void)endTransaction:(id)arg1;
- (id)firstPartyWorkoutSnapshot;
- (BOOL)hasAnyActiveWorkouts;
- (BOOL)healthDataReceived:(id)arg1 provenance:(id)arg2 error:(id *)arg3;
- (id)healthDomainAccessorWithPairedDevice:(id)arg1;
- (id)healthLiteUserDefaultsDomain;
- (id)init;
- (id)initWithHomeDirectoryPath:(id)arg1;
- (void)invalidateActivityAlertSuppressionForIdentifier:(id)arg1;
- (void)invalidateAndWait;
- (BOOL)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (id)nanoPairedDeviceRegistry;
- (id)newClientWithConnection:(id)arg1;
- (void)nukeAllWorkoutServers;
- (id)pairedSyncCoordinatorWithServiceName:(id)arg1;
- (void)pauseAllActiveWorkoutsWithCompletion:(CDUnknownBlockType)arg1;
- (void)performBlockWithPowerAssertionIdentifier:(id)arg1 transactionName:(id)arg2 powerAssertionInterval:(double)arg3 block:(CDUnknownBlockType)arg4;
- (BOOL)persistAndNotifyDataObject:(id)arg1 device:(id)arg2 error:(id *)arg3;
- (BOOL)persistAndNotifyDataObjects:(id)arg1 device:(id)arg2 error:(id *)arg3;
- (id)pluginDataCollectorsForCollectionManager:(id)arg1;
- (void)registerForDaemonReady:(id)arg1;
- (void)registerForLaunchNotification:(const char *)arg1;
- (void)setCurrentActivityCacheOverrideDate:(id)arg1 timeZone:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)setDataCollectionOptions:(id)arg1 forKey:(id)arg2 type:(id)arg3 clientUUID:(id)arg4;
- (void)start;
- (void)suppressActivityAlertsForIdentifier:(id)arg1 suppressionReason:(long long)arg2 timeoutUntilDate:(id)arg3;
- (void)terminate;
- (void)unregisterForLaunchNotification:(const char *)arg1;

@end

