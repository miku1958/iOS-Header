//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <HealthDaemon/HDDiagnosticObject-Protocol.h>
#import <HealthDaemon/HDHealthDaemon-Protocol.h>
#import <HealthDaemon/HDXPCListenerDelegate-Protocol.h>

@class HDAchievementAssetManager, HDAchievementDefinitionAlertManager, HDAchievementDoctorManager, HDAppLauncher, HDBackgroundTaskScheduler, HDCloudSyncCoordinator, HDCoachingDiagnosticManager, HDCompanionAchievementManager, HDCompanionWorkoutCreditManager, HDContentProtectionManager, HDDemoDataGenerator, HDDynamicAchievementDefinitionDataStore, HDFitnessAppBadgeManager, HDPluginManager, HDPrimaryProfile, HDProcessStateManager, HDProfileManager, HDQueryManager, HDXPCListener, NSMutableArray, NSMutableSet, NSString, NSURL, _HKBehavior;
@protocol HDAchievementDefinitionAlertNotifier, HDAchievementDefinitionAlertSuppressor, HDAchievementEvaluationDelegate, HDDaemonTester, HDNanoAlertSuppressionService, OS_dispatch_queue;

@interface HDDaemon : NSObject <HDDiagnosticObject, HDXPCListenerDelegate, HDHealthDaemon>
{
    _HKBehavior *_behavior;
    NSString *_healthDirectoryPath;
    NSMutableSet *_endpoints;
    NSObject<OS_dispatch_queue> *_mainQueue;
    int _languageChangeNotifyToken;
    HDAchievementDefinitionAlertManager *_achievementDefinitionAlertManager;
    id<HDAchievementDefinitionAlertNotifier> _achievementDefinitionAlertNotifier;
    id<HDAchievementDefinitionAlertSuppressor> _achievementDefinitionAlertSuppressor;
    HDBackgroundTaskScheduler *_backgroundTaskScheduler;
    HDContentProtectionManager *_contentProtectionManager;
    HDCloudSyncCoordinator *_cloudSyncCoordinator;
    HDDemoDataGenerator *_demoDataFactory;
    HDPluginManager *_pluginManager;
    HDProcessStateManager *_processStateManager;
    HDProfileManager *_profileManager;
    HDDynamicAchievementDefinitionDataStore *_dynamicAchievementDefinitionStore;
    HDPrimaryProfile *_primaryProfile;
    struct MGNotificationTokenStruct *_deviceNameChangesToken;
    NSMutableArray *_daemonLaunchObservers;
    BOOL _daemonReady;
    int _didStart;
    NSString *_medicalIDDirectoryPath;
    HDAchievementDoctorManager *_achievementDoctorManager;
    HDAchievementAssetManager *_achievementAssetManager;
    HDCompanionAchievementManager *_companionAchievementManager;
    id<HDNanoAlertSuppressionService> _alertSuppressionService;
    HDDynamicAchievementDefinitionDataStore *_dynamicAchievementDefinitionDataStore;
    HDCoachingDiagnosticManager *_coachingDiagnosticManager;
    HDCompanionWorkoutCreditManager *_companionWorkoutCreditManager;
    HDFitnessAppBadgeManager *_fitnessAppBadgeManager;
    HDQueryManager *_queryManager;
    id<HDAchievementEvaluationDelegate> _achievementEvaluationDelegate;
    HDXPCListener *_serviceListener;
    HDAppLauncher *_appLauncher;
    id<HDDaemonTester> _daemonTester;
}

@property (strong, nonatomic) HDAchievementAssetManager *achievementAssetManager; // @synthesize achievementAssetManager=_achievementAssetManager;
@property (strong, nonatomic) HDAchievementDefinitionAlertManager *achievementDefinitionAlertManager; // @synthesize achievementDefinitionAlertManager=_achievementDefinitionAlertManager;
@property (strong, nonatomic) HDAchievementDoctorManager *achievementDoctorManager; // @synthesize achievementDoctorManager=_achievementDoctorManager;
@property (weak, nonatomic) id<HDAchievementEvaluationDelegate> achievementEvaluationDelegate; // @synthesize achievementEvaluationDelegate=_achievementEvaluationDelegate;
@property (strong, nonatomic) id<HDNanoAlertSuppressionService> alertSuppressionService; // @synthesize alertSuppressionService=_alertSuppressionService;
@property (readonly, nonatomic) HDAppLauncher *appLauncher; // @synthesize appLauncher=_appLauncher;
@property (readonly) HDBackgroundTaskScheduler *backgroundTaskScheduler;
@property (readonly) _HKBehavior *behavior;
@property (readonly, nonatomic) HDCloudSyncCoordinator *cloudSyncCoordinator; // @synthesize cloudSyncCoordinator=_cloudSyncCoordinator;
@property (readonly, nonatomic) HDCoachingDiagnosticManager *coachingDiagnosticManager; // @synthesize coachingDiagnosticManager=_coachingDiagnosticManager;
@property (strong, nonatomic) HDCompanionAchievementManager *companionAchievementManager; // @synthesize companionAchievementManager=_companionAchievementManager;
@property (readonly, nonatomic) HDCompanionWorkoutCreditManager *companionWorkoutCreditManager; // @synthesize companionWorkoutCreditManager=_companionWorkoutCreditManager;
@property (readonly, nonatomic) HDContentProtectionManager *contentProtectionManager;
@property (weak, nonatomic) id<HDDaemonTester> daemonTester; // @synthesize daemonTester=_daemonTester;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (strong, nonatomic) HDDynamicAchievementDefinitionDataStore *dynamicAchievementDefinitionDataStore; // @synthesize dynamicAchievementDefinitionDataStore=_dynamicAchievementDefinitionDataStore;
@property (readonly, nonatomic) HDFitnessAppBadgeManager *fitnessAppBadgeManager; // @synthesize fitnessAppBadgeManager=_fitnessAppBadgeManager;
@property (readonly) unsigned long long hash;
@property (readonly, copy) NSString *healthDirectoryPath;
@property (readonly, copy) NSURL *healthDirectoryURL;
@property (readonly, copy) NSString *medicalIDDirectoryPath; // @synthesize medicalIDDirectoryPath=_medicalIDDirectoryPath;
@property (readonly) HDPluginManager *pluginManager;
@property (readonly, nonatomic) HDPrimaryProfile *primaryProfile; // @synthesize primaryProfile=_primaryProfile;
@property (readonly, nonatomic) HDProcessStateManager *processStateManager;
@property (readonly, nonatomic) HDProfileManager *profileManager;
@property (readonly, nonatomic) HDQueryManager *queryManager; // @synthesize queryManager=_queryManager;
@property (readonly, nonatomic) HDXPCListener *serviceListener; // @synthesize serviceListener=_serviceListener;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)IDSServiceWithIdentifier:(id)arg1;
- (id)_bundleIdentifiersToTerminateAfterObliteration;
- (void)_handleSigterm;
- (void)_localeOrLanguageChanged:(id)arg1;
- (BOOL)_motionTrackingAvailable;
- (id)_newBackgroundTaskScheduler;
- (id)_newBehavior;
- (id)_newCloudSyncCoordinator;
- (id)_newCompanionWorkoutCreditManager;
- (id)_newContentProtectionManager;
- (id)_newMainQueue;
- (id)_newPluginManager;
- (id)_newPrimaryProfile;
- (id)_newProcessStateManager;
- (id)_newProfileManager;
- (void)_notifyDaemonLaunchObservers;
- (void)_periodicUpdates;
- (void)_registerForDeviceNameChanges;
- (void)_registerLaunchEventDynamicallyForNotification:(const char *)arg1;
- (void)_resetPrivacySettings;
- (void)_setUpDistnotedEventHandler;
- (void)_setUpLaunchEventHandlers;
- (void)_setUpNotifydEventHandler;
- (void)_setUpPedometerLaunchEventHandler;
- (void)_setUpSignalHandlers;
- (void)_setupMemoryWarningHandler;
- (id)_setupSignal:(int)arg1 handler:(CDUnknownBlockType)arg2;
- (BOOL)_shouldInitializeDaemon;
- (void)_terminationCleanup;
- (void)_unregisterLaunchEventDynamicallyForNotification:(const char *)arg1;
- (void)_updateCurrentDeviceName;
- (id)createXPCListenerWithMachServiceName:(id)arg1;
- (void)dealloc;
- (id)diagnosticDescription;
- (void)exitClean:(BOOL)arg1 reason:(id)arg2;
- (id)exportObjectForListener:(id)arg1 client:(id)arg2 error:(id *)arg3;
- (id)healthDirectorySizeInBytes;
- (id)healthDomainAccessorWithPairedDevice:(id)arg1;
- (id)healthLiteUserDefaultsDomain;
- (id)init;
- (id)initWithContainerDirectoryPath:(id)arg1;
- (id)initWithHealthDirectoryPath:(id)arg1 medicalIDDirectoryPath:(id)arg2;
- (void)invalidateAllServersForProfile:(id)arg1;
- (void)invalidateAndWait;
- (id)mainQueue;
- (id)nanoPairedDeviceRegistry;
- (void)obliterateAndTerminateWithOptions:(unsigned long long)arg1 reason:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)pairedSyncCoordinatorWithServiceName:(id)arg1;
- (void)performBlockWithPowerAssertionIdentifier:(id)arg1 transactionName:(id)arg2 powerAssertionInterval:(double)arg3 block:(CDUnknownBlockType)arg4;
- (void)registerForDaemonReady:(id)arg1;
- (void)registerForLaunchNotification:(const char *)arg1;
- (void)start;
- (void)terminateClean:(BOOL)arg1 reason:(id)arg2;
- (void)unitTest_didCreateProfile:(id)arg1;
- (void)unitTest_queryServerDidInit:(id)arg1;
- (void)unregisterForLaunchNotification:(const char *)arg1;

@end

