//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <HealthDaemon/HDDataCollectionManagerDelegate-Protocol.h>
#import <HealthDaemon/HDDatabaseMigrationDelegate-Protocol.h>
#import <HealthDaemon/HDDiagnosticObject-Protocol.h>
#import <HealthDaemon/HDHealthDaemon-Protocol.h>
#import <HealthDaemon/NSXPCListenerDelegate-Protocol.h>

@class HDAchievementDoctorManager, HDAppLauncher, HDAppSubscriptionManager, HDAuthorizationManager, HDBackgroundTaskScheduler, HDCoachingDiagnosticManager, HDContentProtectionManager, HDDaemonSyncEngine, HDDataCollectionManager, HDDataManager, HDDataProvenanceManager, HDDatabase, HDDatabasePruningManager, HDDeviceManager, HDHealthDeviceManager, HDMetadataManager, HDMigrationManager, HDNanoSyncManager, HDPluginManager, HDProcessStateManager, HDSourceManager, HDUnitPreferencesManager, HDUserCharacteristicsManager, HDWorkoutManager, NSMutableArray, NSMutableSet, NSString, NSXPCListener;
@protocol HDDaemonDeviceManager, HDHealthDataCollectionManager, HDHealthDataManager, HDHealthDatabase, HDHealthMetadataManager, HDPairedWatchBundleIdentifierProvider, HDSyncEngine, HDViewOnWakeService, OS_dispatch_queue;

@interface HDDaemon : NSObject <HDDataCollectionManagerDelegate, HDDiagnosticObject, HDDatabaseMigrationDelegate, NSXPCListenerDelegate, HDHealthDaemon>
{
    NSString *_homeDirectoryPath;
    NSMutableSet *_servers;
    NSObject<OS_dispatch_queue> *_queue;
    HDDaemonSyncEngine *_syncEngine;
    HDContentProtectionManager *_contentProtectionManager;
    HDUserCharacteristicsManager *_userCharacteristicsManager;
    HDBackgroundTaskScheduler *_backgroundTaskScheduler;
    HDProcessStateManager *_processStateManager;
    HDPluginManager *_pluginManager;
    HDDataProvenanceManager *_dataProvenanceManager;
    HDAchievementDoctorManager *_achievementDoctorManager;
    HDDatabasePruningManager *_databasePruningManager;
    struct MGNotificationTokenStruct *_deviceNameChangesToken;
    NSXPCListener *_serviceListener;
    NSMutableArray *_daemonLaunchObservers;
    BOOL _daemonReady;
    HDAppLauncher *_appLauncher;
    HDAuthorizationManager *_authorizationManager;
    HDDatabase *_database;
    HDDataCollectionManager *_dataCollectMgr;
    HDDataManager *_dataMgr;
    HDHealthDeviceManager *_deviceManager;
    HDSourceManager *_sourceManager;
    HDDeviceManager *_sourceDeviceManager;
    HDMetadataManager *_metadataManager;
    HDAppSubscriptionManager *_subscriptionManager;
    HDMigrationManager *_migrationManager;
    HDUnitPreferencesManager *_unitPreferencesManager;
    HDNanoSyncManager *_nanoSyncManager;
    HDWorkoutManager *_workoutManager;
    id<HDViewOnWakeService> _viewOnWakeService;
    HDCoachingDiagnosticManager *_coachingDiagnosticManager;
    id<HDPairedWatchBundleIdentifierProvider> _pairedWatchBundleIDProvider;
}

@property (strong, nonatomic) HDAppLauncher *appLauncher; // @synthesize appLauncher=_appLauncher;
@property (strong, nonatomic) HDAuthorizationManager *authorizationManager; // @synthesize authorizationManager=_authorizationManager;
@property (readonly) HDBackgroundTaskScheduler *backgroundTaskScheduler;
@property (strong, nonatomic) HDCoachingDiagnosticManager *coachingDiagnosticManager; // @synthesize coachingDiagnosticManager=_coachingDiagnosticManager;
@property (readonly) HDContentProtectionManager *contentProtectionManager;
@property (strong, nonatomic) HDDataCollectionManager *dataCollectMgr; // @synthesize dataCollectMgr=_dataCollectMgr;
@property (strong, nonatomic) HDDataManager *dataMgr; // @synthesize dataMgr=_dataMgr;
@property (readonly) HDDataProvenanceManager *dataProvenanceManager;
@property (strong, nonatomic) HDDatabase *database; // @synthesize database=_database;
@property (strong, nonatomic) HDDatabasePruningManager *databasePruningManager; // @synthesize databasePruningManager=_databasePruningManager;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (strong, nonatomic) HDHealthDeviceManager *deviceManager; // @synthesize deviceManager=_deviceManager;
@property (readonly) unsigned long long hash;
@property (readonly) id<HDHealthDataCollectionManager> healthDataCollectionManager;
@property (readonly) id<HDHealthDataManager> healthDataManager;
@property (readonly) id<HDHealthDatabase> healthDatabase;
@property (readonly) id<HDDaemonDeviceManager> healthDeviceManager;
@property (readonly) id<HDHealthMetadataManager> healthMetadataManager;
@property (readonly) HDDeviceManager *healthSourceDeviceManager;
@property (readonly) HDSourceManager *healthSourceManager;
@property (readonly) NSString *homeDirectoryPath;
@property (readonly) BOOL isAppleWatch;
@property (strong, nonatomic) HDMetadataManager *metadataManager; // @synthesize metadataManager=_metadataManager;
@property (strong, nonatomic) HDMigrationManager *migrationManager; // @synthesize migrationManager=_migrationManager;
@property (strong, nonatomic) HDNanoSyncManager *nanoSyncManager; // @synthesize nanoSyncManager=_nanoSyncManager;
@property (weak, nonatomic) id<HDPairedWatchBundleIdentifierProvider> pairedWatchBundleIDProvider; // @synthesize pairedWatchBundleIDProvider=_pairedWatchBundleIDProvider;
@property (readonly) HDPluginManager *pluginManager;
@property (readonly) HDProcessStateManager *processStateManager;
@property (strong, nonatomic) HDDeviceManager *sourceDeviceManager; // @synthesize sourceDeviceManager=_sourceDeviceManager;
@property (strong, nonatomic) HDSourceManager *sourceManager; // @synthesize sourceManager=_sourceManager;
@property (strong, nonatomic) HDAppSubscriptionManager *subscriptionManager; // @synthesize subscriptionManager=_subscriptionManager;
@property (readonly) Class superclass;
@property (readonly) id<HDSyncEngine> syncEngine;
@property (strong, nonatomic) HDUnitPreferencesManager *unitPreferencesManager; // @synthesize unitPreferencesManager=_unitPreferencesManager;
@property (readonly) HDUserCharacteristicsManager *userCharacteristicsManager;
@property (strong, nonatomic) id<HDViewOnWakeService> viewOnWakeService; // @synthesize viewOnWakeService=_viewOnWakeService;
@property (strong, nonatomic) HDWorkoutManager *workoutManager; // @synthesize workoutManager=_workoutManager;

+ (BOOL)_shouldInitializeDaemon;
- (void).cxx_destruct;
- (void)_localeChanged:(id)arg1;
- (BOOL)_motionTrackingAvailable;
- (id)_newProcessStateManager;
- (id)_newUserCharacteristicsManager;
- (void)_notifyDaemonLaunchObservers;
- (void)_periodicUpdates;
- (BOOL)_persistDataAndNotify:(id)arg1 provenance:(id)arg2 error:(id *)arg3;
- (void)_registerForDeviceNameChanges;
- (void)_registerLaunchEventDynamicallyForNotification:(const char *)arg1;
- (void)_resetPrivacySettings;
- (void)_setUpDistnotedEventHandler;
- (void)_setUpLaunchEventHandler;
- (void)_setUpLaunchEventHandlerCompanion;
- (void)_setUpLaunchEventHandlers;
- (void)_setUpNotifydEventHandler;
- (void)_setUpSignalHandlers;
- (void)_setupMemoryWarningHandler;
- (id)_setupSignal:(int)arg1 handler:(CDUnknownBlockType)arg2;
- (void)_terminating;
- (void)_terminationCleanup;
- (void)_unregisterLaunchEventDynamicallyForNotification:(const char *)arg1;
- (void)beginTransaction:(id)arg1;
- (id)currentlyPairedWatchIdentifier;
- (id)databaseMigratorWithDatabase:(id)arg1;
- (void)dealloc;
- (id)diagnosticDescription;
- (void)didUpdateActiveWorkoutServers;
- (void)endTransaction:(id)arg1;
- (BOOL)hasAnyActiveWorkouts;
- (BOOL)healthDataReceived:(id)arg1 provenance:(id)arg2 error:(id *)arg3;
- (id)init;
- (id)initWithHomeDirectoryPath:(id)arg1;
- (id)initWithHomeDirectoryPath:(id)arg1 contentProtectionManager:(id)arg2 queue:(id)arg3;
- (void)invalidateActivityAlertSuppressionForIdentifier:(id)arg1;
- (void)invalidateAndWait;
- (BOOL)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (id)newClientWithConnection:(id)arg1;
- (void)nukeAllWorkoutServers;
- (void)pauseAllActiveWorkoutsWithCompletion:(CDUnknownBlockType)arg1;
- (void)performBlockWithPowerAssertionIdentifier:(id)arg1 transactionName:(id)arg2 powerAssertionInterval:(double)arg3 block:(CDUnknownBlockType)arg4;
- (BOOL)persistAndNotifyDataObject:(id)arg1 device:(id)arg2 error:(id *)arg3;
- (BOOL)persistAndNotifyDataObjects:(id)arg1 device:(id)arg2 error:(id *)arg3;
- (id)pluginDataCollectorsForCollectionManager:(id)arg1;
- (void)registerForDaemonReady:(id)arg1;
- (void)registerForLaunchNotification:(const char *)arg1;
- (void)runDaemon;
- (void)setDataCollectionOptions:(id)arg1 forKey:(id)arg2 type:(id)arg3 clientUUID:(id)arg4;
- (void)setPairedWatchBundleIdentifierProvider:(id)arg1;
- (void)suppressActivityAlertsForIdentifier:(id)arg1 suppressionReason:(long long)arg2 timeoutUntilDate:(id)arg3;
- (void)syncImmediatelyWithReason:(id)arg1;
- (void)terminate;
- (void)unregisterForLaunchNotification:(const char *)arg1;
- (void)updateActivityCacheForNewWorkoutSamples;

@end

