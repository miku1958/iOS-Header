//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <HealthDaemon/HDDataObserver-Protocol.h>
#import <HealthDaemon/HDDatabaseProtectedDataObserver-Protocol.h>
#import <HealthDaemon/HKQueryServerInterface-Protocol.h>

@class HDProfile, HDXPCClient, HKObjectType, HKQuantityType, HKQueryServerConfiguration, HKSampleType, NSDictionary, NSString, NSUUID, _HKFilter;
@protocol HDQueryServerDelegate, HKQueryClientInterface><NSXPCProxyCreating, OS_dispatch_queue;

@interface HDQueryServer : NSObject <HDDatabaseProtectedDataObserver, HKQueryServerInterface, HDDataObserver>
{
    BOOL _didEndActivationTransaction;
    BOOL _observingData;
    NSDictionary *_baseDataEntityEncodingOptions;
    HKQueryServerConfiguration *_configuration;
    CDUnknownBlockType _queryDidFinishHandler;
    int _shouldFinish;
    int _shouldPause;
    NSObject<OS_dispatch_queue> *_unitTestQueryQueue;
    NSUUID *_queryUUID;
    _HKFilter *_filter;
    id<HKQueryClientInterface><NSXPCProxyCreating> _clientProxy;
    HDXPCClient *_client;
    HDProfile *_profile;
    id<HDQueryServerDelegate> _delegate;
    long long _queryState;
    double _collectionInterval;
    HKObjectType *_objectType;
    CDUnknownBlockType _unitTest_queryServerSetShouldPauseHandler;
    CDUnknownBlockType _unitTest_queryServerWillChangeStateHandler;
    NSObject<OS_dispatch_queue> *_queryQueue;
}

@property (readonly, nonatomic) HDXPCClient *client; // @synthesize client=_client;
@property (readonly) BOOL clientHasActiveWorkout;
@property (readonly) BOOL clientIsInForeground;
@property (readonly, nonatomic) id<HKQueryClientInterface><NSXPCProxyCreating> clientProxy; // @synthesize clientProxy=_clientProxy;
@property (nonatomic) double collectionInterval; // @synthesize collectionInterval=_collectionInterval;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, weak, nonatomic) id<HDQueryServerDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) _HKFilter *filter; // @synthesize filter=_filter;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) HKObjectType *objectType; // @synthesize objectType=_objectType;
@property (readonly, weak, nonatomic) HDProfile *profile; // @synthesize profile=_profile;
@property (readonly, nonatomic) HKQuantityType *quantityType;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *queryQueue; // @synthesize queryQueue=_queryQueue;
@property (readonly, nonatomic) long long queryState; // @synthesize queryState=_queryState;
@property (readonly, copy, nonatomic) NSUUID *queryUUID; // @synthesize queryUUID=_queryUUID;
@property (readonly, nonatomic) HKSampleType *sampleType;
@property (readonly) Class superclass;
@property (copy, nonatomic) CDUnknownBlockType unitTest_queryServerSetShouldPauseHandler; // @synthesize unitTest_queryServerSetShouldPauseHandler=_unitTest_queryServerSetShouldPauseHandler;
@property (copy, nonatomic) CDUnknownBlockType unitTest_queryServerWillChangeStateHandler; // @synthesize unitTest_queryServerWillChangeStateHandler=_unitTest_queryServerWillChangeStateHandler;

- (void).cxx_destruct;
- (id)_activationTransactionString;
- (id)_collectionObserverState;
- (void)_currentWorkoutDidChange:(id)arg1;
- (void)_pauseServerValidate:(BOOL)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (id)_predicateString;
- (id)_queryStateString;
- (void)_queue_beginObservingDataTypes;
- (void)_queue_closeActivationTransactionIfNecessary;
- (void)_queue_endObservingDataTypes;
- (void)_queue_setQueryState:(long long)arg1;
- (void)_queue_start;
- (void)_queue_startDataCollection;
- (void)_queue_startQueryIfNecessary;
- (void)_queue_stop;
- (void)_queue_stopDataCollection;
- (void)_queue_transitionToFinished;
- (void)_queue_transitionToPaused;
- (void)_queue_transitionToRunning;
- (void)_queue_transitionToSuspendedState:(long long)arg1;
- (BOOL)_queue_validateConfiguration:(id *)arg1;
- (id)_sampleTypeToObserveForUpdates;
- (void)_scheduleStartQuery;
- (BOOL)_shouldExecuteWhenProtectedDataIsUnavailable;
- (BOOL)_shouldListenForUpdates;
- (BOOL)_shouldObserveAllSampleTypes;
- (BOOL)_shouldObserveOnPause;
- (BOOL)_shouldStopProcessingQuery;
- (BOOL)_shouldSuspendQuery;
- (void)activateServerWithCompletion:(CDUnknownBlockType)arg1;
- (void)clientStateChanged;
- (void)database:(id)arg1 protectedDataDidBecomeAvailable:(BOOL)arg2;
- (void)deactivateServerWithCompletion:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)diagnosticDescription;
- (id)filteredSamplesForClientWithSamples:(id)arg1;
- (id)initWithQueryUUID:(id)arg1 configuration:(id)arg2 clientProxy:(id)arg3 client:(id)arg4 delegate:(id)arg5 profile:(id)arg6;
- (id)initWithQueryUUID:(id)arg1 dataObject:(id)arg2 clientProxy:(id)arg3 client:(id)arg4 delegate:(id)arg5 profile:(id)arg6;
- (id)newDataEntityEnumerator;
- (void)onQueue:(CDUnknownBlockType)arg1;
- (void)pauseServer;
- (void)pauseServerValidateWithCompletion:(CDUnknownBlockType)arg1;
- (id)readAuthorizationStatusForType:(id)arg1 error:(id *)arg2;
- (void)remote_deactivateServer;
- (id)requiredEntitlements;
- (void)resumeServer;
- (CDUnknownBlockType)sampleAuthorizationFilter;
- (void)samplesAdded:(id)arg1 anchor:(id)arg2;
- (void)samplesOfTypesWereRemoved:(id)arg1 anchor:(id)arg2;
- (void)scheduleDatabaseAccessOnQueueWithBlock:(CDUnknownBlockType)arg1;
- (void)setQueryDidFinishHandler:(CDUnknownBlockType)arg1;
- (void)setShouldPause:(BOOL)arg1;

@end

