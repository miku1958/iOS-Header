//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <HealthDaemon/HDStatisticsBuilder.h>

@class HDCumulativeCollectionCalculator, HDLastIntervalInfo, HKStatistics;

@interface HDCumulativeStatisticsBuilder : HDStatisticsBuilder
{
    HDCumulativeCollectionCalculator *_collectionCalculator;
    double _bucketStartTime;
    double _bucketEndTime;
    double _bucketLength;
    double _sum;
    long long _anchor;
    HDLastIntervalInfo *_lastIntervalInfo;
    HKStatistics *_lastStatistics;
}

@property (strong, nonatomic) HDLastIntervalInfo *lastIntervalInfo; // @synthesize lastIntervalInfo=_lastIntervalInfo;
@property (strong, nonatomic) HKStatistics *lastStatistics; // @synthesize lastStatistics=_lastStatistics;

- (void).cxx_destruct;
- (id)_addToLastBucket:(id)arg1 error:(id *)arg2;
- (void)_addValue:(double)arg1 startDate:(double)arg2 endDate:(double)arg3 valuePerSecond:(double)arg4 seconds:(double)arg5 sourceId:(long long)arg6;
- (id)_initialStatisticsForCollection:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 sampleCount:(long long)arg4 shouldStopProcessing:(CDUnknownBlockType)arg5 error:(id *)arg6;
- (id)_initialStatisticsForStartDate:(id)arg1 endDate:(id)arg2 shouldStopProcessing:(CDUnknownBlockType)arg3 error:(id *)arg4;
- (id)_mergedSumsForStartDate:(id)arg1 endDate:(id)arg2 predicate:(id)arg3 orderedSourceIds:(id)arg4 unit:(id)arg5 bySource:(id)arg6 dataCount:(unsigned long long *)arg7 shouldStopProcessing:(CDUnknownBlockType)arg8 database:(id)arg9;
- (id)_newStatisticsWithTimePeriod:(id)arg1 samples:(id)arg2 error:(id *)arg3;
- (void)_setupStatistics:(id)arg1 withSum:(double)arg2 unit:(id)arg3 collectionCalculator:(id)arg4 sourceManager:(id)arg5;
- (id)_statisticsArrayWithStartDate:(id)arg1 endDate:(id)arg2 timePeriods:(id)arg3 shouldStopProcessing:(CDUnknownBlockType)arg4 error:(id *)arg5;
- (id)_statisticsForStartDate:(id)arg1 endDate:(id)arg2 predicate:(id)arg3 shouldStopProcessing:(CDUnknownBlockType)arg4 error:(id *)arg5;
- (id)_statisticsWithTimePeriod:(id)arg1 samples:(id)arg2 lastPeriod:(BOOL)arg3 error:(id *)arg4;
- (id)_sumQuantityBySourceFromIdsAndValues:(id)arg1 unit:(id)arg2 sourceManager:(id)arg3;
- (id)updateStatistics:(id)arg1 withSamples:(id)arg2 error:(id *)arg3;
- (id)updateStatisticsCollection:(id)arg1 withSamples:(id)arg2 anchor:(id)arg3 error:(id *)arg4;

@end

