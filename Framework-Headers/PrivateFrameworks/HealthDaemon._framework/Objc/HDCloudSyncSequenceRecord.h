//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <HealthDaemon/HDCloudSyncRecord.h>

@class CKRecordID, HDCloudSyncCodableSequence, HDSyncAnchorMap, NSSet, NSUUID;

@interface HDCloudSyncSequenceRecord : HDCloudSyncRecord
{
    HDCloudSyncCodableSequence *_underlyingSequence;
    NSUUID *_storeIdentifier;
}

@property (nonatomic, getter=isActive) BOOL active;
@property (readonly, nonatomic) long long baselineEpoch;
@property (readonly, nonatomic) long long changeIndex;
@property (readonly, nonatomic) long long childRecordCount;
@property (copy, nonatomic) CKRecordID *firstUnfrozenChangeRecord;
@property (readonly, nonatomic) HDSyncAnchorMap *frozenSyncAnchorMap;
@property (readonly, copy, nonatomic) NSSet *includedIdentifiers;
@property (nonatomic) int protocolVersion;
@property (readonly, nonatomic) int slot;
@property (readonly, copy, nonatomic) NSUUID *storeIdentifier; // @synthesize storeIdentifier=_storeIdentifier;
@property (readonly, nonatomic) HDSyncAnchorMap *syncAnchorMap;

+ (id)_recordIDForStoreRecord:(id)arg1 slot:(int)arg2;
+ (id)_recordNameForSequenceSlot:(int)arg1;
+ (BOOL)hasFutureSchema:(id)arg1;
+ (BOOL)isSequenceRecord:(id)arg1;
+ (id)recordIDWithIndividualZoneID:(id)arg1 sequenceSlot:(int)arg2;
+ (id)recordIDWithOwnerIdentifier:(id)arg1 storeIdentifier:(id)arg2 zoneID:(id)arg3 sequenceSlot:(int)arg4;
+ (id)recordIDsForOwnerIdentifier:(id)arg1 storeIdentifier:(id)arg2 zoneID:(id)arg3;
+ (id)recordIDsWithIndividualZoneID:(id)arg1;
+ (id)recordType;
+ (id)recordWithCKRecord:(id)arg1 error:(id *)arg2;
+ (BOOL)requiresUnderlyingMessage;
- (void).cxx_destruct;
- (void)_unitTest_setChildRecordCount:(unsigned long long)arg1;
- (void)decrementChildRecordCount:(unsigned long long)arg1;
- (id)description;
- (unsigned long long)hash;
- (void)incrementChangeIndex;
- (void)incrementChildRecordCount;
- (id)initForSequenceSlot:(int)arg1 syncAnchorMap:(id)arg2 active:(BOOL)arg3 changeIndex:(unsigned long long)arg4 childRecordCount:(unsigned long long)arg5 baselineEpoch:(long long)arg6 includedIdentifiers:(id)arg7 protocolVersion:(int)arg8 storeRecordID:(id)arg9 record:(id)arg10 schemaVersion:(long long)arg11;
- (id)initForSequenceSlot:(int)arg1 syncAnchorMap:(id)arg2 changeIndex:(unsigned long long)arg3 baselineEpoch:(long long)arg4 includedIdentifiers:(id)arg5 storeRecord:(id)arg6;
- (id)initWithCKRecord:(id)arg1 schemaVersion:(long long)arg2;
- (id)initWithCKRecord:(id)arg1 schemaVersion:(long long)arg2 underlyingSequence:(id)arg3;
- (BOOL)isEqual:(id)arg1;
- (void)replaceSyncAnchorMapWithSyncAnchorMap:(id)arg1;
- (void)resetChangeIndex:(unsigned long long)arg1;
- (id)serializeUnderlyingMessage;
- (void)updateFrozenSyncAnchorMapWithSyncAnchorMap:(id)arg1;
- (void)updateSyncAnchorMapWithSyncAnchorMap:(id)arg1;

@end

