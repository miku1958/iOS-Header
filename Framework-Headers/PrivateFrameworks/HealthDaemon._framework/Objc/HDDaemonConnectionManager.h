//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <HealthDaemon/HDXPCListenerClientProvider-Protocol.h>
#import <HealthDaemon/HDXPCListenerDelegate-Protocol.h>

@class HDDaemon, HDXPCListener, NSArray, NSMapTable, NSMutableSet, NSString;
@protocol OS_dispatch_queue;

@interface HDDaemonConnectionManager : NSObject <HDXPCListenerDelegate, HDXPCListenerClientProvider>
{
    HDDaemon *_daemon;
    NSObject<OS_dispatch_queue> *_listenerQueue;
    struct os_unfair_lock_s _lock;
    NSMapTable *_processesByAuditToken;
    NSMutableSet *_endpoints;
    HDXPCListener *_serviceListener;
    CDUnknownBlockType _processCreationHandler;
}

@property (readonly, copy) NSArray *clientProcesses;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (copy, nonatomic) CDUnknownBlockType processCreationHandler; // @synthesize processCreationHandler=_processCreationHandler;
@property (readonly, nonatomic) HDXPCListener *serviceListener; // @synthesize serviceListener=_serviceListener;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_configureListener:(id)arg1;
- (id)_processForConnection:(id)arg1 error:(id *)arg2;
- (id)clientForListener:(id)arg1 connection:(id)arg2 error:(id *)arg3;
- (id)createAnonymousListenerWithLabel:(id)arg1;
- (id)createListenerWithMachServiceName:(id)arg1;
- (void)endpointInvalidated:(id)arg1;
- (id)exportObjectForListener:(id)arg1 client:(id)arg2 error:(id *)arg3;
- (id)initWithMachServiceName:(id)arg1 daemon:(id)arg2;
- (void)invalidate;
- (void)invalidateAllServersForProfile:(id)arg1;
- (void)resume;

@end

