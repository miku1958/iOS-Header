//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <HealthDaemon/HDJournalChapter-Protocol.h>

@class HDKeyValueDomain, HDSQLiteDatabase, NSDate, NSNumber, NSString, NSURL;

@interface HDDatabaseJournalDatabase : NSObject <HDJournalChapter>
{
    NSURL *_databaseURL;
    HDSQLiteDatabase *_database;
    NSNumber *_size;
    NSDate *_modificationDate;
    HDKeyValueDomain *_keyValueDomain;
    long long _enumeratedBytesThreshold;
    HDKeyValueDomain *_unitTesting_keyValueDomainOverride;
    CDUnknownBlockType _unitTesting_didCreateDatabaseConnectionHandler;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) BOOL isOpen;
@property (readonly, copy, nonatomic) NSString *journalPath;
@property (readonly, nonatomic) double modificationTime;
@property (readonly, copy, nonatomic) NSString *name;
@property (readonly, nonatomic) long long size;
@property (readonly) Class superclass;
@property (copy, nonatomic) CDUnknownBlockType unitTesting_didCreateDatabaseConnectionHandler; // @synthesize unitTesting_didCreateDatabaseConnectionHandler=_unitTesting_didCreateDatabaseConnectionHandler;
@property (strong, nonatomic) HDKeyValueDomain *unitTesting_keyValueDomainOverride; // @synthesize unitTesting_keyValueDomainOverride=_unitTesting_keyValueDomainOverride;
@property (strong, nonatomic) HDSQLiteDatabase *unitTesting_underlyingDatabase;

+ (BOOL)_appendData:(id)arg1 entryClass:(Class)arg2 database:(id)arg3 error:(id *)arg4;
+ (BOOL)_createSchemaForDatabase:(id)arg1 error:(id *)arg2;
+ (unsigned int)_enumerateEntriesInDatabase:(id)arg1 anchor:(long long *)arg2 enumeratedBytesThreshold:(long long)arg3 error:(id *)arg4 handler:(CDUnknownBlockType)arg5;
+ (long long)_getIDForString:(id)arg1 database:(id)arg2 error:(id *)arg3;
+ (BOOL)_insertData:(id)arg1 osBuildStringID:(long long)arg2 classNameStringID:(long long)arg3 database:(id)arg4 error:(id *)arg5;
+ (long long)_maxEntryAnchorInDatabase:(id)arg1 error:(id *)arg2;
+ (BOOL)_openDatabase:(id)arg1 error:(id *)arg2;
+ (long long)_readSchemaVersionForDatabase:(id)arg1 error:(id *)arg2;
+ (BOOL)_validateOrCreateSchemaForDatabase:(id)arg1 error:(id *)arg2;
- (void).cxx_destruct;
- (void)_clearCachedProperties;
- (void)_createDatabaseConnectionWithURL:(id)arg1;
- (void)_faultCachedProperties;
- (id)_getIdentifierAndCreationDate:(id *)arg1 error:(id *)arg2;
- (long long)_hasEmptySchemaWithError:(id *)arg1;
- (id)_keyValueDomainForProfile:(id)arg1;
- (BOOL)appendData:(id)arg1 entryClass:(Class)arg2 error:(id *)arg3;
- (BOOL)canAppendData:(id)arg1;
- (void)close;
- (BOOL)createAndOpenForWritingWithError:(id *)arg1;
- (void)dealloc;
- (unsigned int)enumerateEntriesWithProfile:(id)arg1 transaction:(id)arg2 error:(id *)arg3 handler:(CDUnknownBlockType)arg4;
- (BOOL)flushDataToDisk:(id *)arg1;
- (id)getIdentifierAndCreationDate:(id *)arg1 error:(id *)arg2;
- (id)init;
- (id)initWithURL:(id)arg1;
- (BOOL)openForReadingWithError:(id *)arg1;
- (unsigned int)readVersionWithError:(id *)arg1;
- (BOOL)removeWithError:(id *)arg1;
- (void)unitTesting_setEnumeratedBytesThreshold:(long long)arg1;

@end

