//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <HealthDaemon/HDActiveQuantityDataAggregator.h>

@class NSMutableSet;

@interface HDSeriesQuantityDataAggregator : HDActiveQuantityDataAggregator
{
    struct os_unfair_lock_s _lock;
    NSMutableSet *_lock_failedSeriesUUIDs;
}

+ (id)_anySampleThatOverlapsWithSeries:(id)arg1 lastDatum:(id)arg2 provenance:(id)arg3 profile:(id)arg4 error:(id *)arg5;
+ (void)_checkForOverlapWithSeries:(id)arg1 lastDatum:(id)arg2 provenance:(id)arg3 profile:(id)arg4;
- (void).cxx_destruct;
- (id)_codableDatumsFromData:(id)arg1;
- (void)_failSeriesWithUUID:(id)arg1;
- (BOOL)_hasFailedSeriesWithUUID:(id)arg1;
- (id)_startSeriesWithDatum:(id)arg1 device:(id)arg2;
- (BOOL)_successForPersistenceError:(id)arg1 series:(id)arg2 error:(id *)arg3;
- (id)_validatedState:(id)arg1;
- (void)addDatum:(id)arg1 toAccumulatedData:(id)arg2;
- (id)aggregateForState:(id)arg1 collector:(id)arg2 device:(id)arg3 requestedAggregationDate:(id)arg4 mode:(long long)arg5 options:(unsigned long long)arg6 error:(id *)arg7;
- (id)initForQuantityType:(id)arg1 dataCollectionManager:(id)arg2;
- (id)initialAggregationState;
- (BOOL)requiresNewSeriesForDatum:(id)arg1 lastDatum:(id)arg2 seriesLength:(long long)arg3 currentSeries:(id)arg4 configuration:(id)arg5 aggregationInterval:(double)arg6;
- (BOOL)shouldFreezeCurrentSeries:(id)arg1 lastDatum:(id)arg2 seriesLength:(long long)arg3 configuration:(id)arg4 aggregationInterval:(double)arg5;

@end

