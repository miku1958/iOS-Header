//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <SpringBoardHome/SBHLibraryCategoryMapProviderSourceDelegate-Protocol.h>

@class NSArray, NSHashTable, NSMutableArray, NSMutableSet, NSString, SBHLibraryCategoryMap;
@protocol OS_dispatch_queue, SBHLibraryCategoryMapProviderSource;

@interface SBHLibraryCategoryMapProvider : NSObject <SBHLibraryCategoryMapProviderSourceDelegate>
{
    NSHashTable *_observers;
    NSObject<OS_dispatch_queue> *_serializationQueue;
    NSObject<OS_dispatch_queue> *_callbackQueue;
    NSObject<OS_dispatch_queue> *_workQueue;
    id<SBHLibraryCategoryMapProviderSource> _libraryCategoryMapProviderSource;
    NSString *_cacheFilePath;
    NSMutableSet *_forbiddenApplicationIdentifiers;
    NSMutableArray *_pendingRefreshRequests;
    NSArray *_inflightRefreshRequests;
    BOOL _refreshIsScheduled;
    BOOL _isCategoryMapOverriddenForTesting;
    long long _sessionIdentifier;
    id _clearCacheNotificationHandle;
    SBHLibraryCategoryMap *_libraryCategoryMap;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) SBHLibraryCategoryMap *libraryCategoryMap; // @synthesize libraryCategoryMap=_libraryCategoryMap;
@property (readonly) Class superclass;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;

+ (id)baseFilePath;
+ (id)cacheDirectory;
+ (id)categoryMapCacheFilePathForVersion:(id)arg1 source:(id)arg2;
+ (id)categoryMapFromURL:(id)arg1 error:(id *)arg2;
+ (void)clearCachesForReason:(id)arg1;
+ (unsigned long long)derivedOptionsFromArrayOfRequests:(id)arg1;
- (void).cxx_destruct;
- (void)_callbackQueue_notifyObserverCategoryMapWasRefreshedWithOptions:(unsigned long long)arg1 refreshedCategoryMap:(id)arg2;
- (void)_callbackQueue_notifyObserversBeginningRefreshSession:(long long)arg1 requests:(id)arg2;
- (void)_callbackQueue_notifyObserversCategoryMapDidntNeedRefresh;
- (void)_callbackQueue_notifyObserversCategoryMapRefreshFailedWithError:(id)arg1;
- (void)_callbackQueue_notifyObserversFinishedRefreshSession:(long long)arg1 requests:(id)arg2;
- (void)_callbackQueue_notifyObserversWillReEnqueueFailedRequests:(id)arg1;
- (void)_callbackQueue_notifyObserversWillRefresh:(long long)arg1 options:(unsigned long long)arg2;
- (void)_callbackQueue_notifyObserversWillSunsetFailedRequests:(id)arg1;
- (id)_copyOfObservers;
- (void)_kickoffInitialHydration;
- (unsigned long long)_nextSessionIdentifier;
- (void)_setupClearCacheNotification;
- (void)_workQueue_cancelAnyScheduledRefresh;
- (void)_workQueue_performNextRequest;
- (void)_workQueue_queueUpNextRequests:(id)arg1 runNow:(BOOL)arg2;
- (void)_workQueue_scheduleRefreshIfNotScheduled;
- (BOOL)_workQueue_updateLibraryCategoryMap:(id)arg1 withSessionId:(unsigned long long)arg2 shouldPersist:(BOOL)arg3 reason:(id)arg4;
- (void)addObserver:(id)arg1;
- (void)clearOverride;
- (BOOL)forbidApplicationIdentifier:(id)arg1;
- (BOOL)hasCachedLibraryCategoryMapOnFileSystem;
- (id)initWithSource:(id)arg1;
- (void)overrideCategoryMapForTesting:(id)arg1;
- (void)overrideCategoryMapForTestingAtURL:(id)arg1 error:(id *)arg2;
- (void)removeObserver:(id)arg1;
- (id)requestLibraryCategoryMapRefreshWithOptions:(unsigned long long)arg1 reason:(id)arg2;
- (void)requestLibraryCategoryMapUpdateWithRefreshOptions:(unsigned long long)arg1 source:(id)arg2;
- (void)resetForbiddenApplicationIdentifiers;
- (BOOL)unforbidApplicationIdentifier:(id)arg1;

@end

