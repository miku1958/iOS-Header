//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <FrontBoard/FBApplicationDataStoreRepository-Protocol.h>

@class NSMutableDictionary, NSString, NSURL;
@protocol FBApplicationDataStoreRepositoryDelegate, FBApplicationDataStoreRepositoryReadingDelegate, OS_dispatch_queue;

@interface FBPlistApplicationDataStoreRepository : NSObject <FBApplicationDataStoreRepository>
{
    NSURL *_storeURL;
    NSMutableDictionary *_state;
    BOOL _dirty;
    unsigned long long _batchCount;
    int _autoFlushDuration;
    id<FBApplicationDataStoreRepositoryDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_stateQueue;
    NSObject<OS_dispatch_queue> *_writeQueue;
}

@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<FBApplicationDataStoreRepositoryReadingDelegate> delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (BOOL)_isEligibleForSaving:(id)arg1;
- (void)_load;
- (void)_notifyDelegateOfChangeForKeys:(id)arg1 application:(id)arg2;
- (void)_notifyDelegateOfStoreInvalidationForIdentifier:(id)arg1;
- (id)_stateQueue_addStoreForIdentifierIfNecessary:(id)arg1;
- (void)_stateQueue_markDirty;
- (id)_stateQueue_objectForKey:(id)arg1 forIdentifier:(id)arg2;
- (id)_stateQueue_objectsForKeys:(id)arg1;
- (void)_stateQueue_removeStoreForIdentifier:(id)arg1;
- (id)_stateQueue_storeForIdentifier:(id)arg1;
- (void)_writeQueue_flushSynchronously;
- (id)allObjectsForKeys:(id)arg1;
- (id)applicationIdentifiersWithState;
- (void)beginBatchedUpdate;
- (void)close;
- (BOOL)containsKey:(id)arg1 forApplication:(id)arg2;
- (void)dealloc;
- (void)endBatchedUpdate;
- (void)flushSynchronously;
- (id)initWithStorePath:(id)arg1;
- (BOOL)isDirty;
- (id)keysForApplication:(id)arg1;
- (id)location;
- (id)objectForKey:(id)arg1 forApplication:(id)arg2;
- (void)removeAllObjectsForApplication:(id)arg1;
- (void)removeObjectForKey:(id)arg1 forApplication:(id)arg2;
- (void)removeObjectsForKeys:(id)arg1 forApplication:(id)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2 forApplication:(id)arg3;

@end

