//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <DiagnosticExtensionsDaemon/DEDWorkerProtocol-Protocol.h>

@class DEDConfiguration, DEDController, DEDDiagnosticCollector, NSOperationQueue, NSString;
@protocol OS_dispatch_queue, OS_os_log;

@interface DEDDaemon : NSObject <DEDWorkerProtocol>
{
    BOOL _embeddedInApp;
    NSObject<OS_os_log> *_log;
    DEDConfiguration *_config;
    DEDController *_controller;
    NSOperationQueue *_backgroundOpQueue;
    NSOperationQueue *_userInitiatedOpQueue;
    NSObject<OS_dispatch_queue> *_diskAccessQueue;
    DEDDiagnosticCollector *__diagnosticCollector;
}

@property (strong) DEDDiagnosticCollector *_diagnosticCollector; // @synthesize _diagnosticCollector=__diagnosticCollector;
@property (strong) NSOperationQueue *backgroundOpQueue; // @synthesize backgroundOpQueue=_backgroundOpQueue;
@property (strong) DEDConfiguration *config; // @synthesize config=_config;
@property (strong) DEDController *controller; // @synthesize controller=_controller;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (strong) NSObject<OS_dispatch_queue> *diskAccessQueue; // @synthesize diskAccessQueue=_diskAccessQueue;
@property BOOL embeddedInApp; // @synthesize embeddedInApp=_embeddedInApp;
@property (readonly) unsigned long long hash;
@property (strong) NSObject<OS_os_log> *log; // @synthesize log=_log;
@property (readonly) Class superclass;
@property (strong) NSOperationQueue *userInitiatedOpQueue; // @synthesize userInitiatedOpQueue=_userInitiatedOpQueue;

+ (id)sharedInstance;
- (void).cxx_destruct;
- (id)_blockOnFakeSysidagnoseWithIdentifer:(id)arg1 withBugSession:(id)arg2;
- (id)_controller;
- (void)_getSessionStatusWithSession:(id)arg1;
- (void)_logOperations;
- (void)_streamOperationStatus;
- (void)adoptFiles:(id)arg1 forSession:(id)arg2;
- (id)attachmentHandler;
- (void)cancelSession:(id)arg1;
- (void)commitSession:(id)arg1;
- (void)configureForEmbedded:(BOOL)arg1;
- (id)diagnosticCollector;
- (void)getSessionStatusWithSession:(id)arg1;
- (id)init;
- (void)listAvailableExtensionsForSession:(id)arg1;
- (BOOL)observesOperations;
- (void)pingSession:(id)arg1;
- (void)start;
- (void)startDiagnosticWithIdentifier:(id)arg1 parameters:(id)arg2 session:(id)arg3;
- (void)terminateExtension:(id)arg1 info:(id)arg2 session:(id)arg3;
- (long long)transportType;

@end

