//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <SPOwner/NSObject-Protocol.h>
#import <SPOwner/SPBeaconScanningXPCProtocol-Protocol.h>

@class NSArray, NSData, NSDate, NSDateInterval, NSSet, NSString, NSUUID, SPBeacon, SPBeaconLocation, SPCommand, SPUnauthorizedTrackingAdvertisement, SPUnauthorizedTrackingObservation;

@protocol SPOwnerSessionXPCProtocol <NSObject, SPBeaconScanningXPCProtocol>
- (oneway void)acceptUTForBeaconUUID:(NSUUID *)arg1;
- (oneway void)allBeaconsWithCompletion:(void (^)(NSSet *))arg1;
- (oneway void)beaconForUUID:(NSUUID *)arg1 completion:(void (^)(SPBeacon *))arg2;
- (oneway void)beaconStoreStatusWithCompletion:(void (^)(BOOL))arg1;
- (oneway void)beaconsToMaintainPersistentConnection:(void (^)(NSSet *))arg1;
- (oneway void)didDetectUnauthorizedTrackingWithCompletion:(NSArray *)arg1 completion:(void (^)(NSError *))arg2;
- (oneway void)didUpdateUnauthorizedTrackingWithCompletion:(SPUnauthorizedTrackingObservation *)arg1 completion:(void (^)(NSError *))arg2;
- (oneway void)didWithdrawUnauthorizedTrackingWithCompletion:(NSArray *)arg1 completion:(void (^)(NSError *))arg2;
- (oneway void)disableUTAppAlert:(BOOL)arg1 completion:(void (^)(NSError *))arg2;
- (oneway void)executeCommand:(SPCommand *)arg1 completion:(void (^)(NSError *))arg2;
- (oneway void)fakeClassicPairingWithMACAddress:(NSData *)arg1 completion:(void (^)(NSError *))arg2;
- (oneway void)fetchUnauthorizedEncryptedPayload:(NSUUID *)arg1 completion:(void (^)(NSURL *))arg2;
- (oneway void)forceDistributeKeysWithCompletion:(void (^)(NSError *))arg1;
- (oneway void)forceKeySyncForBeaconUUID:(NSUUID *)arg1 lastObservationDate:(NSDate *)arg2 lastObservationIndex:(unsigned long long)arg3 completion:(void (^)(NSError *))arg4;
- (oneway void)forceUpdateKeyAlignmentRecordForUUID:(NSUUID *)arg1 completion:(void (^)(NSError *))arg2;
- (oneway void)forceUpdateKeyMapsForUUID:(NSUUID *)arg1 completion:(void (^)(NSError *))arg2;
- (oneway void)ignoreBeaconByUUID:(NSUUID *)arg1 until:(unsigned long long)arg2;
- (oneway void)ignoreBeaconByUUID:(NSUUID *)arg1 untilDate:(NSDate *)arg2 completion:(void (^)(NSError *))arg3;
- (oneway void)ignoreTrackingFor:(SPUnauthorizedTrackingAdvertisement *)arg1 until:(unsigned long long)arg2 completion:(void (^)(NSError *))arg3;
- (oneway void)ignoreTrackingForUUID:(NSUUID *)arg1 until:(unsigned long long)arg2 completion:(void (^)(NSError *))arg3;
- (oneway void)ignoringUnauthorizedTrackingWithCompletion:(SPUnauthorizedTrackingAdvertisement *)arg1 completion:(void (^)(NSDate *, NSError *))arg2;
- (oneway void)isUTAppAlertDisabled:(void (^)(BOOL))arg1;
- (oneway void)latestLocationsForIdentifiers:(NSArray *)arg1 fetchLimit:(NSDate *)arg2 sources:(NSSet *)arg3 completion:(void (^)(NSDictionary *))arg4;
- (oneway void)playUnauthorizedSoundOnBeaconUUID:(NSUUID *)arg1 completion:(void (^)(NSError *))arg2;
- (oneway void)rawSearchResultsForIdentifier:(NSUUID *)arg1 dateInterval:(NSDateInterval *)arg2 completion:(void (^)(NSArray *))arg3;
- (oneway void)removeBeacon:(SPBeacon *)arg1 completion:(void (^)(NSError *))arg2;
- (oneway void)sendRegisterIntentWithCompletion:(void (^)(double, NSError *))arg1;
- (oneway void)sendUnregisterIntentWithCompletion:(void (^)(NSError *))arg1;
- (oneway void)shareBeacon:(SPBeacon *)arg1 handles:(NSArray *)arg2 expiration:(NSDate *)arg3 completion:(void (^)(NSDictionary *))arg4;
- (oneway void)tagSeparationStateChanged:(NSString *)arg1 beaconUUID:(NSUUID *)arg2 location:(SPBeaconLocation *)arg3 completion:(void (^)(NSError *))arg4;
- (oneway void)unacceptedBeaconsWithCompletion:(void (^)(NSSet *))arg1;
- (oneway void)unauthorizedTrackingTypeWithCompletion:(SPUnauthorizedTrackingAdvertisement *)arg1 completion:(void (^)(unsigned long long, NSError *))arg2;
- (oneway void)unknownBeaconsForUUIDs:(NSArray *)arg1 completion:(void (^)(NSArray *))arg2;
- (oneway void)updateBatteryStatus:(unsigned char)arg1 beaconUUID:(NSUUID *)arg2 completion:(void (^)(NSError *))arg3;
- (oneway void)updateBeaconObservations:(NSArray *)arg1 completion:(void (^)(NSError *))arg2;
- (oneway void)waitForBeaconStoreAvailableWithCompletion:(void (^)(void))arg1;
@end

