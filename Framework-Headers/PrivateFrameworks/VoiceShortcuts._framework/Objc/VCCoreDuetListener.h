//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSMutableDictionary, VCDaemonXPCEventHandler, VCTriggerEventQueue, WFWorkflowRunCoordinator;
@protocol OS_dispatch_queue, VCDatabaseProvider, _CDUserContext;

@interface VCCoreDuetListener : NSObject
{
    WFWorkflowRunCoordinator *_runCoordinator;
    NSObject<OS_dispatch_queue> *_queue;
    id<_CDUserContext> _userContext;
    id<VCDatabaseProvider> _databaseProvider;
    VCDaemonXPCEventHandler *_eventHandler;
    VCTriggerEventQueue *_eventQueue;
    NSMutableDictionary *_registrations;
}

@property (readonly, nonatomic) id<VCDatabaseProvider> databaseProvider; // @synthesize databaseProvider=_databaseProvider;
@property (readonly, nonatomic) VCDaemonXPCEventHandler *eventHandler; // @synthesize eventHandler=_eventHandler;
@property (strong, nonatomic) VCTriggerEventQueue *eventQueue; // @synthesize eventQueue=_eventQueue;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property (readonly, nonatomic) NSMutableDictionary *registrations; // @synthesize registrations=_registrations;
@property (readonly, nonatomic) WFWorkflowRunCoordinator *runCoordinator; // @synthesize runCoordinator=_runCoordinator;
@property (readonly, nonatomic) id<_CDUserContext> userContext; // @synthesize userContext=_userContext;

- (void).cxx_destruct;
- (void)checkTriggerStateWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)checkTriggerStateWithKeyPath:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)databaseWithError:(id *)arg1;
- (void)dealloc;
- (void)deleteTriggerWithIdentifier:(id)arg1 allowedDeletionClasses:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)deleteTriggerWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)deviceDidUnlockForFirstTime;
- (void)fetchCurrentSunriseSunsetTimes;
- (void)fireTriggerWithIdentifier:(id)arg1 force:(BOOL)arg2 eventInfo:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)getConfiguredTriggerDescriptionsWithCompletion:(CDUnknownBlockType)arg1;
- (void)handleCallbackForTriggerWithIdentifier:(id)arg1 info:(id)arg2;
- (void)handleSunriseSunsetChanged;
- (id)initWithDatabaseProvider:(id)arg1 eventHandler:(id)arg2 runCoordinator:(id)arg3;
- (BOOL)isCallbackRegisteredWithIdentifier:(id)arg1;
- (void)queue_fireTriggerWithIdentifier:(id)arg1 force:(BOOL)arg2 eventInfo:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (BOOL)queue_registerAllTriggers:(id *)arg1;
- (void)registerAllTriggersWithCompletion:(CDUnknownBlockType)arg1;
- (void)registerCallback:(id)arg1 withIdentifier:(id)arg2;
- (void)registerSunriseSunsetCallbackIfNeeded;
- (BOOL)registerTrigger:(id)arg1 error:(id *)arg2;
- (void)registerTriggerWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)removeStalePendingNotifications;
- (void)unregisterAllTriggers;
- (void)unregisterCallbackForIdentifier:(id)arg1;
- (void)unregisterTriggerWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;

@end

