//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <VoiceShortcuts/CKSyncEngineDataSource-Protocol.h>
#import <VoiceShortcuts/WFDatabaseObjectObserver-Protocol.h>

@class CKRecordZoneID, CKSyncEngine, NSMutableDictionary, NSString, VCCKApplicationStateObserver, WFDatabase;

@interface VCCKShortcutSyncService : NSObject <CKSyncEngineDataSource, WFDatabaseObjectObserver>
{
    WFDatabase *_database;
    CKSyncEngine *_syncEngine;
    VCCKApplicationStateObserver *_applicationObserver;
    NSMutableDictionary *_workflowFilesForIdentifiers;
}

@property (readonly, nonatomic) VCCKApplicationStateObserver *applicationObserver; // @synthesize applicationObserver=_applicationObserver;
@property (readonly, nonatomic) WFDatabase *database; // @synthesize database=_database;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) CKRecordZoneID *shortcutsZoneID;
@property (readonly) Class superclass;
@property (readonly, nonatomic) CKSyncEngine *syncEngine; // @synthesize syncEngine=_syncEngine;
@property (readonly, nonatomic) NSMutableDictionary *workflowFilesForIdentifiers; // @synthesize workflowFilesForIdentifiers=_workflowFilesForIdentifiers;

- (void).cxx_destruct;
- (void)addRecordIDsToSave:(id)arg1 recordIDsToDelete:(id)arg2;
- (void)applyLegacyOrderedWorkflowIDsToRootCollection:(id)arg1;
- (id)calculateSubsetForRemoteOrdering:(id)arg1 withLocalOrdering:(id)arg2;
- (void)createShortcutsZone;
- (void)databaseDidChange:(id)arg1 modified:(id)arg2 inserted:(id)arg3 removed:(id)arg4;
- (void)dealloc;
- (void)fetchAndModifyChangesInShortcutsZone;
- (void)fetchAndModifyChangesInShortcutsZoneWithCompletion:(CDUnknownBlockType)arg1;
- (void)fetchChangesInShortcutsZone;
- (void)fetchChangesInShortcutsZoneWithCompletion:(CDUnknownBlockType)arg1;
- (id)folderRecordForRecordID:(id)arg1;
- (void)handleDeletedRecordWithID:(id)arg1;
- (void)handleFetchedCollectionOrderingRecord:(id)arg1;
- (void)handleFetchedDeletionOfRecordWithID:(id)arg1;
- (void)handleFetchedFolderRecord:(id)arg1;
- (void)handleFetchedLegacyOrderingRecord:(id)arg1;
- (void)handleFetchedSyncFlagsRecord:(id)arg1;
- (void)handleFetchedWorkflowRecord:(id)arg1;
- (void)handleNameConflictsForFetchedWorkflowRecord:(id)arg1 identifier:(id)arg2 shouldMarkFetchedRecordAsTombstone:(BOOL *)arg3;
- (void)handleSavedFolderRecord:(id)arg1;
- (void)handleSavedSyncFlagsRecord:(id)arg1;
- (void)handleSavedWorkflowOrderingRecord:(id)arg1;
- (void)handleSavedWorkflowRecord:(id)arg1;
- (void)handleSendFolderConflictWithClientRecord:(id)arg1 serverRecord:(id)arg2 ancestorRecord:(id)arg3;
- (void)handleSendSyncFlagsConflictWithClientRecord:(id)arg1 serverRecord:(id)arg2 ancestorRecord:(id)arg3;
- (void)handleSendWorkflowConflictWithClientRecord:(id)arg1 serverRecord:(id)arg2 ancestorRecord:(id)arg3;
- (void)handleSendWorkflowOrderingConflictWithClientRecord:(id)arg1 serverRecord:(id)arg2 ancestorRecord:(id)arg3;
- (void)handleServerRecordChangedError:(id)arg1;
- (void)handleUnknownItemErrorForRecord:(id)arg1;
- (id)initWithContainer:(id)arg1 database:(id)arg2 applicationObserver:(id)arg3;
- (BOOL)mergeLocalOrderingChangesWithRemoteOrderingChangesFromOrderingRecord:(id)arg1;
- (id)mergedOrderingFromLocalOrdering:(id)arg1 previousOrdering:(id)arg2 remoteOrdering:(id)arg3;
- (void)modifyPendingChangesInShortcutsZoneWithCompletion:(CDUnknownBlockType)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)rootCollectionRecord;
- (void)sendChangedFolders;
- (void)sendChangedWorkflows;
- (void)sendSyncFlagsIfNeeded;
- (void)sendWorkflowOrderingsIfNeeded;
- (void)start;
- (void)startObservingUserDefaults;
- (void)stopObservingUserDefaults;
- (void)syncEngine:(id)arg1 didDeleteRecordWithID:(id)arg2;
- (void)syncEngine:(id)arg1 didDeleteRecordZoneWithID:(id)arg2;
- (void)syncEngine:(id)arg1 didFetchRecord:(id)arg2;
- (void)syncEngine:(id)arg1 didReceiveDatabaseNotification:(id)arg2;
- (void)syncEngine:(id)arg1 didSaveRecord:(id)arg2;
- (void)syncEngine:(id)arg1 didSaveRecordZone:(id)arg2;
- (void)syncEngine:(id)arg1 didUpdateMetadata:(id)arg2;
- (void)syncEngine:(id)arg1 failedToDeleteRecordWithID:(id)arg2 error:(id)arg3;
- (void)syncEngine:(id)arg1 failedToDeleteRecordZoneWithID:(id)arg2 error:(id)arg3;
- (void)syncEngine:(id)arg1 failedToSaveRecord:(id)arg2 error:(id)arg3;
- (void)syncEngine:(id)arg1 failedToSaveRecordZone:(id)arg2 error:(id)arg3;
- (id)syncEngine:(id)arg1 recordToSaveForRecordID:(id)arg2;
- (void)syncEngine:(id)arg1 recordWithIDWasDeleted:(id)arg2 recordType:(id)arg3;
- (void)syncEngine:(id)arg1 zoneWithIDChanged:(id)arg2;
- (void)syncEngine:(id)arg1 zoneWithIDWasDeleted:(id)arg2;
- (void)syncEngine:(id)arg1 zoneWithIDWasPurged:(id)arg2;
- (id)syncFlagsRecord;
- (void)updateSyncTokenInDatabaseWithBlock:(CDUnknownBlockType)arg1;
- (id)workflowOrderingRecordForRecordID:(id)arg1;
- (id)workflowRecordForRecordID:(id)arg1;
- (id)workflowRecordForReference:(id)arg1 properties:(id)arg2;

@end

