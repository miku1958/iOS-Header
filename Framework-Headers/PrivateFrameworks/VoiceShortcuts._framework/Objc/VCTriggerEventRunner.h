//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <VoiceShortcuts/WFWorkflowRunCoordinatorObserver-Protocol.h>

@class NSString, WFConfiguredTrigger, WFWorkflowRunCoordinator, WFWorkflowRunEvent, WFWorkflowRunningContext;
@protocol VCDatabaseProvider, VCTriggerEventRunnerDelegate;

@interface VCTriggerEventRunner : NSObject <WFWorkflowRunCoordinatorObserver>
{
    id<VCDatabaseProvider> _databaseProvider;
    id<VCTriggerEventRunnerDelegate> _delegate;
    WFWorkflowRunEvent *_inProgressRunEvent;
    WFConfiguredTrigger *_inProgressTrigger;
    WFWorkflowRunningContext *_inProgressRunningContext;
    WFWorkflowRunCoordinator *_runCoordinator;
}

@property (readonly, nonatomic) id<VCDatabaseProvider> databaseProvider; // @synthesize databaseProvider=_databaseProvider;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) id<VCTriggerEventRunnerDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) WFWorkflowRunEvent *inProgressRunEvent; // @synthesize inProgressRunEvent=_inProgressRunEvent;
@property (strong, nonatomic) WFWorkflowRunningContext *inProgressRunningContext; // @synthesize inProgressRunningContext=_inProgressRunningContext;
@property (strong, nonatomic) WFConfiguredTrigger *inProgressTrigger; // @synthesize inProgressTrigger=_inProgressTrigger;
@property (readonly, nonatomic) WFWorkflowRunCoordinator *runCoordinator; // @synthesize runCoordinator=_runCoordinator;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)initWithDatabaseProvider:(id)arg1 delegate:(id)arg2 runCoordinator:(id)arg3;
- (BOOL)isRunningWorkflowWithIdentifier:(id)arg1;
- (void)logPowerLogEventForConfiguredTrigger:(id)arg1 workflowReference:(id)arg2;
- (void)runCoordinator:(id)arg1 didFinishRunningWorkflowWithError:(id)arg2 runningContext:(id)arg3 cancelled:(BOOL)arg4;
- (BOOL)startRunningWorkflow:(id)arg1 forTrigger:(id)arg2 eventInfo:(id)arg3;

@end

