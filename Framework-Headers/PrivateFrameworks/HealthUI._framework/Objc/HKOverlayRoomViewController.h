//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <HealthUI/HKViewController.h>

#import <HealthUI/HKDisplayTypeSectionedContextViewDelegate-Protocol.h>
#import <HealthUI/HKInteractiveChartViewObserver-Protocol.h>
#import <HealthUI/HKSampleTypeDateRangeControllerObserver-Protocol.h>
#import <HealthUI/HKSampleTypeUpdateControllerObserver-Protocol.h>

@class HKDisplayType, HKDisplayTypeSectionedContextView, HKInteractiveChartOverlayViewController, HKOverlayContextLocation, HKOverlayRoomApplicationItems, HKValueRange, NSArray, NSDate, NSDateInterval, NSObject, NSString;
@protocol HKOverlayRoomViewControllerLayoutDelegate, OS_dispatch_queue;

@interface HKOverlayRoomViewController : HKViewController <HKDisplayTypeSectionedContextViewDelegate, HKInteractiveChartViewObserver, HKSampleTypeDateRangeControllerObserver, HKSampleTypeUpdateControllerObserver>
{
    BOOL _shouldSelectInitialOverlay;
    BOOL _userHasOverriddenPreferredOverlay;
    HKOverlayRoomApplicationItems *_applicationItems;
    HKDisplayType *_primaryDisplayType;
    NSDate *_displayDate;
    long long _controllerMode;
    HKInteractiveChartOverlayViewController *_chartController;
    HKValueRange *_initialVisibleDateRange;
    id<HKOverlayRoomViewControllerLayoutDelegate> _layoutDelegate;
    long long _currentChartTimeScope;
    NSDateInterval *_currentChartDateInterval;
    HKOverlayContextLocation *_currentSelectedContextLocation;
    HKDisplayTypeSectionedContextView *_sectionedContextView;
    NSArray *_overlayContextSections;
    HKOverlayContextLocation *_initialSelectedContextLocation;
    NSObject<OS_dispatch_queue> *_contextUpdateQueue;
}

@property (strong, nonatomic) HKOverlayRoomApplicationItems *applicationItems; // @synthesize applicationItems=_applicationItems;
@property (strong, nonatomic) HKInteractiveChartOverlayViewController *chartController; // @synthesize chartController=_chartController;
@property (strong, nonatomic) NSObject<OS_dispatch_queue> *contextUpdateQueue; // @synthesize contextUpdateQueue=_contextUpdateQueue;
@property (nonatomic) long long controllerMode; // @synthesize controllerMode=_controllerMode;
@property (copy, nonatomic) NSDateInterval *currentChartDateInterval; // @synthesize currentChartDateInterval=_currentChartDateInterval;
@property (nonatomic) long long currentChartTimeScope; // @synthesize currentChartTimeScope=_currentChartTimeScope;
@property (strong, nonatomic) HKOverlayContextLocation *currentSelectedContextLocation; // @synthesize currentSelectedContextLocation=_currentSelectedContextLocation;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, copy, nonatomic) NSDate *displayDate; // @synthesize displayDate=_displayDate;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) HKOverlayContextLocation *initialSelectedContextLocation; // @synthesize initialSelectedContextLocation=_initialSelectedContextLocation;
@property (strong, nonatomic) HKValueRange *initialVisibleDateRange; // @synthesize initialVisibleDateRange=_initialVisibleDateRange;
@property (weak, nonatomic) id<HKOverlayRoomViewControllerLayoutDelegate> layoutDelegate; // @synthesize layoutDelegate=_layoutDelegate;
@property (strong, nonatomic) NSArray *overlayContextSections; // @synthesize overlayContextSections=_overlayContextSections;
@property (strong, nonatomic) HKDisplayType *primaryDisplayType; // @synthesize primaryDisplayType=_primaryDisplayType;
@property (strong, nonatomic) HKDisplayTypeSectionedContextView *sectionedContextView; // @synthesize sectionedContextView=_sectionedContextView;
@property (nonatomic) BOOL shouldSelectInitialOverlay; // @synthesize shouldSelectInitialOverlay=_shouldSelectInitialOverlay;
@property (readonly) Class superclass;
@property (nonatomic) BOOL userHasOverriddenPreferredOverlay; // @synthesize userHasOverriddenPreferredOverlay=_userHasOverriddenPreferredOverlay;

- (void).cxx_destruct;
- (BOOL)_canSelectOverlayLocation:(id)arg1;
- (long long)_contextItemCount;
- (id)_contextViewBackgroundColor;
- (id)_currentChartEffectiveVisibleRange;
- (id)_currentIndexPath;
- (id)_findNavigationController;
- (void)_invalidateContextItems;
- (void)_layoutNoVerticalExpansion:(id)arg1;
- (id)_makeSeparatorView;
- (void)_pinView:(id)arg1 toSafeAreaOf:(id)arg2;
- (void)_refreshContextItemsAndUpdateChart:(BOOL)arg1;
- (void)_refreshUpdatedItemsWithChartUpdate:(BOOL)arg1 invalidateChartItems:(BOOL)arg2;
- (void)_selectContextItemAtLocation:(id)arg1 animated:(BOOL)arg2;
- (void)_selectPreferredItem;
- (void)_setupInterface;
- (void)_setupOverlayContextItems;
- (void)_setupPrimaryDisplayType;
- (BOOL)_shouldUpdateContextItemsForChanges:(id)arg1;
- (void)_showAllFilters:(id)arg1;
- (void)_updateChartForOverlaySelection:(id)arg1 previousSelection:(id)arg2;
- (void)_updateContextTiles;
- (id)contextSectionsForMode:(long long)arg1 applicationItems:(id)arg2 overlayChartController:(id)arg3;
- (BOOL)contextView:(id)arg1 canSelectItemAtIndexPath:(id)arg2;
- (void)contextView:(id)arg1 didDeselectItemAtIndexPath:(id)arg2;
- (void)contextView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (void)contextViewDidInvalidateLayout:(id)arg1;
- (id)controllerTitleWithApplicationItems:(id)arg1;
- (id)createChartOverlayViewController;
- (id)createViewControllerForMode:(long long)arg1 displayDate:(id)arg2 applicationItems:(id)arg3;
- (void)dealloc;
- (void)didChangeFromContextItem:(id)arg1 toContextItem:(id)arg2;
- (void)didUpdateFromDateZoom:(long long)arg1 toDateZoom:(long long)arg2 newVisibleRange:(id)arg3;
- (void)didUpdateSeriesWithNewValueRange:(id)arg1;
- (void)didUpdateVisibleValueRange:(id)arg1 changeContext:(long long)arg2;
- (void)fetchContextItemsIfNeededWithDateInterval:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)initWithDisplayDate:(id)arg1 applicationItems:(id)arg2 mode:(long long)arg3;
- (id)initialSelectedContextForMode:(long long)arg1;
- (id)primaryDisplayTypeWithApplicationItems:(id)arg1;
- (void)refreshOverlayContextItems;
- (void)reloadOverlayContextItems;
- (void)sampleTypeDateRangeController:(id)arg1 didUpdateDateRanges:(id)arg2;
- (id)showAllFiltersButtonTitle;
- (BOOL)supportsShowAllFilters;
- (void)updateController:(id)arg1 didReceiveHighFrequencyUpdateForType:(id)arg2;
- (void)updateController:(id)arg1 didReceiveUpdateForType:(id)arg2 samplesAdded:(id)arg3 objectsRemoved:(id)arg4;
- (void)viewDidLoad;

@end

