//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIView.h>

#import <FuseUI/MPUTextDrawingCacheInvalidationObserver-Protocol.h>
#import <FuseUI/MusicArtworkViewDelegate-Protocol.h>
#import <FuseUI/MusicEntityViewPlaybackStatusObserving-Protocol.h>

@class MusicArtworkView, MusicEntityPlaybackProgressApplier, MusicEntityPlaybackStatus, MusicEntityViewContentDescriptor, MusicPlayButton, NSMapTable, NSMutableArray, NSString, UIControl, UIImage, UIImageView, UITraitCollection;
@protocol MusicEntityValueProviding;

@interface MusicEntityAbstractLockupView : UIView <MPUTextDrawingCacheInvalidationObserver, MusicArtworkViewDelegate, MusicEntityViewPlaybackStatusObserving>
{
    BOOL _artworkConfigurationBlockEnabled;
    MusicArtworkView *_artworkView;
    UITraitCollection *_cachedTraitCollection;
    MusicEntityPlaybackStatus *_currentPlaybackStatus;
    BOOL _hasDirtyPlaybackStatusUpdate;
    double _lastUsedArtworkViewAspectRatio;
    double _playbackCurrentTimeOriginatingTime;
    MusicEntityPlaybackProgressApplier *_playbackProgressApplier;
    MusicPlayButton *_playButton;
    NSMutableArray *_recycledTextButtons;
    NSMutableArray *_recycledTextDrawingViews;
    NSMapTable *_textDescriptorsToRecycledTextButtons;
    NSMapTable *_textDescriptorsToTextDrawingViews;
    BOOL _wasUpdatedForAsynchronousPropertyLoadCompleted;
    BOOL _entityDisabled;
    BOOL _highlighted;
    BOOL _usingPlaceholderArt;
    UIImage *_artworkOverrideImage;
    id<MusicEntityValueProviding> _entityValueProvider;
    MusicEntityPlaybackStatus *_playbackStatus;
    MusicEntityViewContentDescriptor *_contentDescriptor;
}

@property (readonly, nonatomic, getter=_currentTextLabelAlpha) double _currentTextLabelAlpha;
@property (readonly, nonatomic, getter=_addButton) UIControl *addButton;
@property (strong, nonatomic) UIImage *artworkOverrideImage; // @synthesize artworkOverrideImage=_artworkOverrideImage;
@property (readonly, nonatomic, getter=_artworkView) UIImageView *artworkView;
@property (strong, nonatomic, getter=_contentDescriptor, setter=_setContentDescriptor:) MusicEntityViewContentDescriptor *contentDescriptor; // @synthesize contentDescriptor=_contentDescriptor;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, getter=isEntityDisabled) BOOL entityDisabled; // @synthesize entityDisabled=_entityDisabled;
@property (strong, nonatomic) id<MusicEntityValueProviding> entityValueProvider; // @synthesize entityValueProvider=_entityValueProvider;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic, getter=isHighlighted) BOOL highlighted; // @synthesize highlighted=_highlighted;
@property (readonly, nonatomic, getter=_playButton) MusicPlayButton *playButton;
@property (copy, nonatomic) MusicEntityPlaybackStatus *playbackStatus; // @synthesize playbackStatus=_playbackStatus;
@property (readonly) Class superclass;
@property (readonly, nonatomic, getter=isUsingPlaceholderArt) BOOL usingPlaceholderArt; // @synthesize usingPlaceholderArt=_usingPlaceholderArt;

+ (double)_maximumTextHeightForTextDescriptors:(id)arg1 traitCollection:(id)arg2;
- (void).cxx_destruct;
- (void)_applyPlaybackStatus:(id)arg1;
- (void)_artworkViewImageDidChange;
- (void)_configureArtworkCatalog:(id)arg1;
- (void)_configureArtworkView:(id)arg1 forContentArtworkDescriptor:(id)arg2 entityValueProvider:(id)arg3;
- (void)_configurePlayButtonForLayingOverArtworkRelativeToFrame:(struct CGRect)arg1;
- (void)_configurePlayButtonVisualProperties:(id)arg1;
- (void)_contentDescriptorDidChange:(id)arg1;
- (id)_effectiveArtworkBackgroundColor;
- (void)_entityDisabledDidChange;
- (void)_getViewToProposedFrameMap:(id *)arg1 withTextDescriptors:(id)arg2 availableContentBounds:(struct CGRect)arg3 exclusionRectangle:(struct CGRect)arg4 totalTextHeight:(double *)arg5;
- (void)_handleArtworkImageUpdate:(id)arg1 idealArtworkSize:(struct CGSize)arg2;
- (void)_handleArtworkViewTapped;
- (void)_handleContentDescriptorDidInvalidate:(id)arg1;
- (void)_handlePlayButtonTappedWithAction:(unsigned long long)arg1;
- (void)_layoutArtworkViewWithAvailableContentBounds:(struct CGRect)arg1 layoutDirection:(long long)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)_layoutPlayButtonUsingBlock:(CDUnknownBlockType)arg1;
- (id)_newArtworkView;
- (void)_playButtonTapped:(id)arg1;
- (void)_playbackStatusDidChange:(id)arg1;
- (void)_recycleTextViewsForTextDescriptors:(id)arg1;
- (BOOL)_shouldArtworkViewRespectHighlightProperty;
- (BOOL)_shouldEnableArtworkViewUserInteraction;
- (BOOL)_shouldShowPlayButton;
- (id)_viewForTextDescriptor:(id)arg1;
- (void)dealloc;
- (void)didMoveToWindow;
- (void)musicArtworkViewDidTouchUpInside:(id)arg1;
- (void)setHighlighted:(BOOL)arg1 animated:(BOOL)arg2;
- (void)textDrawingCacheWasInvalidated:(id)arg1;
- (id)traitCollection;
- (void)traitCollectionDidChange:(id)arg1;
- (void)updateForAsynchronousPropertyLoadCompleted;

@end

