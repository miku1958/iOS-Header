//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <FuseUI/MusicPlaybackProgressScrubbing-Protocol.h>

@class MPAVController, MPUContentItemIdentifierCollection, MusicPlaybackProgressScrubberController, NSHashTable, NSString;
@protocol MusicPlaybackProgressScrubberDelegate;

@interface MusicEntityPlaybackStatusController : NSObject <MusicPlaybackProgressScrubbing>
{
    BOOL _alwaysLive;
    MPUContentItemIdentifierCollection *_currentContainerIdentifierCollection;
    MPUContentItemIdentifierCollection *_currentItemIdentifierCollection;
    double _playbackCurrentTime;
    double _playbackCurrentTimeOriginatingTime;
    long long _playbackDisplayState;
    double _playbackDuration;
    float _playbackRate;
    NSHashTable *_observers;
    MusicPlaybackProgressScrubberController *_playbackProgressScrubberController;
    MPAVController *_player;
}

@property (nonatomic, getter=isAlwaysLive) BOOL alwaysLive;
@property (readonly, nonatomic) long long currentScrubSpeed;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) double effectiveCurrentTime;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) MPAVController *player; // @synthesize player=_player;
@property (nonatomic) float rate;
@property (weak, nonatomic) id<MusicPlaybackProgressScrubberDelegate> scrubberDelegate;
@property (nonatomic, getter=isScrubbingEnabled) BOOL scrubbingEnabled;
@property (readonly) Class superclass;
@property (nonatomic) double totalDuration;

- (void).cxx_destruct;
- (void)_enumerateObserversUsingBlock:(CDUnknownBlockType)arg1;
- (void)_feederContentItemIdentifierCollectionDidChangeNotification:(id)arg1;
- (void)_getContainerIdentifierCollection:(out id *)arg1 itemIdentifierCollection:(out id *)arg2 forItem:(id)arg3;
- (void)_itemContentItemIdentifierCollectionDidChangeNotification:(id)arg1;
- (id)_playbackStatusForPlaybackDisplayState:(long long)arg1;
- (void)_playerContentsDidChangeNotification:(id)arg1;
- (void)_playerItemWillChangeNotification:(id)arg1;
- (void)_playerPlaybackStateDidChangeNotification:(id)arg1;
- (void)_sendPlaybackStatusDidChange;
- (BOOL)_setCurrentTime:(double)arg1;
- (void)_updateCurrentPlaybackIdentifierSet;
- (void)addPlaybackStatusObserver:(id)arg1;
- (void)cancelScrubbing;
- (void)dealloc;
- (id)initWithPlayer:(id)arg1;
- (double)playbackCurrentTime;
- (id)playbackStatusForContainerIdentifierCollection:(id)arg1 itemIdentifierCollection:(id)arg2;
- (void)removePlaybackStatusObserver:(id)arg1;
- (void)setCurrentTime:(double)arg1;

@end

