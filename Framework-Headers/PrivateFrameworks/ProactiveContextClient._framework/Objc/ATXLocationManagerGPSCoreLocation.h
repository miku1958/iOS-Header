//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <ProactiveContextClient/ATXLocationManagerGPS-Protocol.h>
#import <ProactiveContextClient/CLLocationManagerDelegate-Protocol.h>

@class CLLocation, CLLocationManager, CLRegion, NSCondition, NSMutableSet, NSString;
@protocol ATXLocationManagerGPSDelegate, OS_dispatch_queue;

@interface ATXLocationManagerGPSCoreLocation : NSObject <CLLocationManagerDelegate, ATXLocationManagerGPS>
{
    CLLocationManager *_locationManager;
    NSObject<OS_dispatch_queue> *_clQueue;
    NSCondition *_updateCondition;
    BOOL _locationEnabled;
    BOOL _preciseLocationEnabled;
    BOOL _updatePending;
    NSMutableSet *_locationBlocksToInvoke;
    NSCondition *_requestStateCondition;
    CLRegion *_regionRequested;
    long long _state;
    id<ATXLocationManagerGPSDelegate> _delegate;
}

@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<ATXLocationManagerGPSDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) CLLocation *location;
@property (readonly, nonatomic) BOOL locationEnabled;
@property (readonly, nonatomic) BOOL preciseLocationEnabled;
@property (readonly) Class superclass;

+ (id)sharedInstance;
- (void).cxx_destruct;
- (id)_existingRegionWithIdentifierOnCLQueue:(id)arg1;
- (id)_init;
- (void)_requestStateIfNeededForRegion:(id)arg1;
- (void)_startUpdateIfNeededWithPreciseLocation:(BOOL)arg1;
- (void)_updateConditionAndInvokeLocationBlocks:(id)arg1 error:(id)arg2;
- (void)beginMonitoringRegion:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)locationManager:(id)arg1 didDetermineState:(long long)arg2 forRegion:(id)arg3;
- (void)locationManager:(id)arg1 didEnterRegion:(id)arg2;
- (void)locationManager:(id)arg1 didExitRegion:(id)arg2;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didStartMonitoringForRegion:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (void)locationManager:(id)arg1 monitoringDidFailForRegion:(id)arg2 withError:(id)arg3;
- (void)locationManagerDidChangeAuthorization:(id)arg1;
- (long long)stateForRegion:(id)arg1 withTimeout:(double)arg2;
- (void)stopMonitoringRegionWithIdentifier:(id)arg1;
- (void)updateLocationWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)updateLocationWithTimeout:(double)arg1 requestPreciseLocation:(BOOL)arg2;

@end

