//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <EmailFoundation/EFCancelable-Protocol.h>

@class NSDate;
@protocol EFFuture, EFFutureDelegate, EFScheduler;

@protocol EFFuture <EFCancelable>

@property (readonly, getter=isCancelled) BOOL cancelled;
@property (weak) id<EFFutureDelegate> delegate;
@property (readonly, getter=isFinished) BOOL finished;
@property (readonly, nonatomic) id result;
@property (readonly, nonatomic) id resultIfAvailable;

- (void)addFailureBlock:(void (^)(NSError *))arg1;
- (void)addSuccessBlock:(void (^)(id))arg1;
- (void)always:(void (^)(void))arg1;
- (id<EFFuture>)map:(id (^)(id))arg1;
- (void)onScheduler:(id<EFScheduler>)arg1 addFailureBlock:(void (^)(NSError *))arg2;
- (void)onScheduler:(id<EFScheduler>)arg1 addSuccessBlock:(void (^)(id))arg2;
- (void)onScheduler:(id<EFScheduler>)arg1 always:(void (^)(void))arg2;
- (id<EFFuture>)onScheduler:(id<EFScheduler>)arg1 map:(id (^)(id))arg2;
- (id<EFFuture>)onScheduler:(id<EFScheduler>)arg1 recover:(id<EFFuture> (^)(NSError *))arg2;
- (id<EFFuture>)onScheduler:(id<EFScheduler>)arg1 then:(id<EFFuture> (^)(id))arg2;
- (id<EFFuture>)recover:(id<EFFuture> (^)(NSError *))arg1;
- (id)result:(id *)arg1;
- (id)resultBeforeDate:(NSDate *)arg1 error:(id *)arg2;
- (id)resultIfAvailable:(id *)arg1;
- (id)resultWithTimeout:(double)arg1 error:(id *)arg2;
- (id<EFFuture>)then:(id<EFFuture> (^)(id))arg1;
- (BOOL)tryCancel;
@end

