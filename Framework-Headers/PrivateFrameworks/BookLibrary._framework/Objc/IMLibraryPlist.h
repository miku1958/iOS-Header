//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSString;

@interface IMLibraryPlist : NSObject
{
    long long _kind;
    NSString *_path;
    NSString *_directory;
}

@property (copy, nonatomic) NSString *directory; // @synthesize directory=_directory;
@property (nonatomic) long long kind; // @synthesize kind=_kind;
@property (copy, nonatomic) NSString *path; // @synthesize path=_path;
@property (readonly, nonatomic) NSString *sidecarPath;

+ (id)accessDateFromPlistEntry:(id)arg1;
+ (id)albumFromPlistEntry:(id)arg1;
+ (id)assetIDFromItunesMetadataEntry:(id)arg1;
+ (id)assetIDFromPlistEntry:(id)arg1;
+ (id)assetIDFromPlistEntry:(id)arg1 forAssetAtPath:(id)arg2;
+ (id)assetTypeFromPlistEntry:(id)arg1;
+ (id)authorFromPlistEntry:(id)arg1;
+ (id)backupFolderNameFromPlistEntry:(id)arg1;
+ (id)bookEpubIdFromPlistEntry:(id)arg1;
+ (id)booksArrayFromPlistEntry:(id)arg1;
+ (id)booksRepositoryPath;
+ (id)coverHashFromItunesMetadataEntry:(id)arg1;
+ (id)coverPathFromItunesMetadataEntry:(id)arg1;
+ (id)coverPathFromPlistEntry:(id)arg1;
+ (id)coverWritingModeFromPlistEntry:(id)arg1;
+ (id)deletesArrayFromPlistEntry:(id)arg1;
+ (id)endOfBookExperiencesFromItunesMetadataEntry:(id)arg1;
+ (id)entryForAssetID:(id)arg1 contents:(id)arg2;
+ (id)entryForAssetURL:(id)arg1 contents:(id)arg2;
+ (id)experienceConfidenceFromExperienceParamEntry:(id)arg1;
+ (id)experienceKindFromExperienceEntry:(id)arg1;
+ (id)experienceLocationFromExperienceEntry:(id)arg1;
+ (id)experienceLocationTypeFromExperienceEntry:(id)arg1;
+ (id)experienceParamsFromExperienceEntry:(id)arg1;
+ (id)experienceVersionFromExperienceEntry:(id)arg1;
+ (id)extensionFromPlistEntry:(id)arg1;
+ (id)feedURLFromPlistEntry:(id)arg1;
+ (id)folderNameFromPlistEntry:(id)arg1;
+ (id)genreFromPlistEntry:(id)arg1;
+ (id)humanReadablePublicationVersionFromPlistEntry:(id)arg1;
+ (id)importDateFromPlistEntry:(id)arg1;
+ (id)isEphemeralFromPlistEntry:(id)arg1;
+ (id)isExplicitContentFromPlistEntry:(id)arg1;
+ (id)isItunesUFromPlistEntry:(id)arg1;
+ (id)isManagedBookFromURL:(id)arg1;
+ (id)isProofedAssetFromPlistEntry:(id)arg1;
+ (id)isSampleFromPlistEntry:(id)arg1;
+ (BOOL)isThinnedAssetFromPlistEntry:(id)arg1;
+ (id)keyNameForAccessDate;
+ (id)keyNameForAssetType;
+ (id)keyNameForAuthor;
+ (id)keyNameForBackupPath;
+ (id)keyNameForBookDescription;
+ (id)keyNameForBooksArray;
+ (id)keyNameForComments;
+ (id)keyNameForCoverWritingMode;
+ (id)keyNameForDeletesArray;
+ (id)keyNameForExplicitContent;
+ (id)keyNameForFirstOpened;
+ (id)keyNameForGeneration;
+ (id)keyNameForGenre;
+ (id)keyNameForHighWaterMark;
+ (id)keyNameForHumanReadablePublicationVersion;
+ (id)keyNameForImportDate;
+ (id)keyNameForIsEphemeral;
+ (id)keyNameForLanguages;
+ (id)keyNameForLastOpened;
+ (id)keyNameForPageProgression;
+ (id)keyNameForPath;
+ (id)keyNameForPrimaryLanguage;
+ (id)keyNameForProofedAsset;
+ (id)keyNameForPublicationVersion;
+ (id)keyNameForRating;
+ (id)keyNameForReadingLocation;
+ (id)keyNameForScrollDirection;
+ (id)keyNameForSortAuthor;
+ (id)keyNameForSortTitle;
+ (id)keyNameForStoreId;
+ (id)keyNameForStoreId2;
+ (id)keyNameForSubject;
+ (id)keyNameForTitle;
+ (id)keyNameForUniqueId;
+ (id)keyNameForYear;
+ (id)languageFromPlistEntry:(id)arg1;
+ (id)languagesFromPlistEntry:(id)arg1;
+ (id)libraryPlistWithKind:(long long)arg1;
+ (id)lookupAssetURLStringFromAssetID:(id)arg1 contents:(id)arg2;
+ (id)lookupBackupFolderNameFromAssetID:(id)arg1 contents:(id)arg2;
+ (id)lookupCoverWritingModeFromAssetID:(id)arg1 contents:(id)arg2;
+ (id)lookupFolderNameFromAssetID:(id)arg1 contents:(id)arg2;
+ (id)lookupHumanReadablePublicationVersionFromAssetID:(id)arg1 contents:(id)arg2;
+ (BOOL)lookupIsThinnedFromAssetID:(id)arg1 contents:(id)arg2;
+ (id)lookupLanguageFromAssetID:(id)arg1 contents:(id)arg2;
+ (id)lookupPageProgressionFromAssetID:(id)arg1 contents:(id)arg2;
+ (id)lookupPublicationVersionFromAssetID:(id)arg1 contents:(id)arg2;
+ (id)lookupPublicationVersionNumberFromAssetID:(id)arg1 contents:(id)arg2;
+ (id)lookupScrollDirectionFromAssetID:(id)arg1 contents:(id)arg2;
+ (id)managedRepositoryPath;
+ (id)mimeTypeFromPlistEntry:(id)arg1;
+ (id)packageFileHashFromItunesMetadataEntry:(id)arg1;
+ (id)pageProgressionFromPlistEntry:(id)arg1;
+ (id)permlinkFromPlistEntry:(id)arg1;
+ (id)persistentIDFromPlistEntry:(id)arg1;
+ (id)primaryLanguageFromPlistEntry:(id)arg1;
+ (id)proofingRepositoryPath;
+ (id)publicationVersionFromPlistEntry:(id)arg1;
+ (id)publicationVersionNumberFromPlistEntry:(id)arg1;
+ (id)publisherUniqueIDFromItunesMetadataEntry:(id)arg1;
+ (id)purchasesRepositoryPath;
+ (id)sampleRepositoryPath;
+ (id)scrollDirectionFromPlistEntry:(id)arg1;
+ (void)setAccessDate:(id)arg1 toPlistEntry:(id)arg2;
+ (void)setBooksArray:(id)arg1 toPlistEntry:(id)arg2;
+ (void)setDeletesArray:(id)arg1 toPlistEntry:(id)arg2;
+ (id)sharedContainerURL;
+ (id)sharedRepositoryPath;
+ (id)sortAuthorFromPlistEntry:(id)arg1;
+ (id)sortTitleFromPlistEntry:(id)arg1;
+ (id)stashedSampleRepositoryPath;
+ (id)storeIDsforThinnedBooksFromContents:(id)arg1;
+ (id)storeIdFromPlistEntry:(id)arg1;
+ (id)temporaryItemIdentifierFromPlistEntry:(id)arg1;
+ (id)titleFromItunesMetadataEntry:(id)arg1;
+ (id)titleFromPlistEntry:(id)arg1;
+ (id)uniqueIDFromItunesMetadataEntry:(id)arg1;
+ (id)uniqueIdFromPlistEntry:(id)arg1;
- (void).cxx_destruct;
- (id)_initWithDirectory:(id)arg1 fileName:(id)arg2;
- (void)addDeletedFiles:(id)arg1;
- (BOOL)bumpModificationDate;
- (id)calculateChecksum;
- (id)contents;
- (BOOL)isPathInDirectory:(id)arg1;
- (id)p_contents:(id)arg1;
- (void)p_rewriteSidecarWithDeletes:(id)arg1;
- (void)removeDeletedPaths:(id)arg1;
- (id)unfilteredContents;
- (id)unfilteredSidecarContents;

@end

