//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSManagedObjectModel, NSPersistentStoreCoordinator, NSString;

@interface BLJaliscoServerSource : NSObject
{
    long long _modelSentinel;
    long long _pscSentinel;
    NSPersistentStoreCoordinator *_psc;
    NSManagedObjectModel *_model;
    NSString *_identifier;
    NSString *_databaseContainerPath;
}

@property (strong, nonatomic) NSString *databaseContainerPath; // @synthesize databaseContainerPath=_databaseContainerPath;
@property (copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;

+ (void)preWarm;
+ (void)setSharedSource:(id)arg1;
+ (id)sharedSource;
- (void).cxx_destruct;
- (id)_itemsFetchRequestIncludingHiddenItems:(BOOL)arg1 dsids:(id)arg2;
- (id)allItemsFetchRequestForDSIDs:(id)arg1;
- (void)dealloc;
- (id)existingEntitiesWithName:(id)arg1 matchingPredicate:(id)arg2 fromManagedObjectContext:(id)arg3 limit:(unsigned long long)arg4 error:(id *)arg5;
- (id)existingServerDatabaseWithPredicate:(id)arg1 fromManagedObjectContext:(id)arg2 error:(id *)arg3;
- (id)existingServerInfoWithPredicate:(id)arg1 fromManagedObjectContext:(id)arg2 error:(id *)arg3;
- (id)existingServerItemWithPredicate:(id)arg1 fromManagedObjectContext:(id)arg2 error:(id *)arg3;
- (id)fetchRequestForAllCloudIDs:(id)arg1 dsids:(id)arg2;
- (id)fetchRequestForAllStoreIDs:(id)arg1;
- (id)fetchRequestForAllStoreIDs:(id)arg1 dsids:(id)arg2;
- (id)fetchRequestForAllStoreIDs:(id)arg1 dsids:(id)arg2 isImported:(BOOL)arg3;
- (id)fetchRequestForAllStoreIDs:(id)arg1 dsids:(id)arg2 isImported:(BOOL)arg3 includeHidden:(BOOL)arg4;
- (id)fetchRequestForBuyParameters:(id)arg1;
- (id)fetchRequestForNeedsImport:(BOOL)arg1;
- (id)fetchRequestForNotInStoreAccountIDs:(id)arg1;
- (id)fetchRequestForStoreIDs:(id)arg1 dsids:(id)arg2;
- (id)init;
- (id)initWithIdentifier:(id)arg1 databaseContainerPath:(id)arg2;
- (id)itemsFetchRequestForDSIDs:(id)arg1;
- (id)managedObjectModel;
- (id)newManagedObjectContext;
- (id)newManagedObjectContextWithPrivateQueueConcurrency;
- (BOOL)p_createPersistentDirectoryIfNeeded;
- (BOOL)p_databaseExistsAtPrivateiBooksContainerLocation;
- (BOOL)p_databaseExistsAtSharediBooksContainerLocation;
- (id)p_oldPersistentStoreDirectory;
- (id)p_persistentStoreDirectory;
- (id)p_persistentStoreFullPathAtPrivateiBooksLocation;
- (id)p_persistentStoreFullPathAtSharediBooksLocation;
- (id)persistentStoreCoordinator;
- (id)predicateForItems:(BOOL)arg1 dsids:(id)arg2;
- (id)predicateForNeedsImport:(BOOL)arg1;
- (id)predicateForStoreAccountID:(id)arg1 storeIDs:(id)arg2;
- (id)serverDatabaseForDSID:(id)arg1 fromManagedObjectContext:(id)arg2 error:(id *)arg3;
- (id)serverDatabaseForDSID:(id)arg1 withIdentifier:(id)arg2 fromManagedObjectContext:(id)arg3 error:(id *)arg4;
- (id)serverInfoForDSID:(id)arg1 fromManagedObjectContext:(id)arg2 error:(id *)arg3;
- (id)serverItemWithStoreID:(id)arg1 inDatabaseWithIdentifier:(id)arg2 forDSID:(id)arg3 fromManagedObjectContext:(id)arg4 error:(id *)arg5;
- (BOOL)truncateDatabaseError:(id *)arg1;
- (BOOL)workaround_18397698;

@end

