//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

@class NSUUID;

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct TopoID {
    struct TopoReplica replica;
    unsigned int clock;
};

struct TopoIDRange {
    struct TopoID _field1;
    unsigned int _field2;
};

struct TopoReplica {
    NSUUID *uuid;
    unsigned int index;
};

struct TopoSubstring {
    struct TopoIDRange _field1;
    struct vector<TopoID, std::__1::allocator<TopoID>> _field2;
    vector_c5c053b6 _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct pair<TopoID, TopoID>;

struct pair<TopoIDRange, id<TTMergeableStringStorage>>;

struct vector<TopoID, std::__1::allocator<TopoID>> {
    struct TopoID *_field1;
    struct TopoID *_field2;
    struct __compressed_pair<TopoID *, std::__1::allocator<TopoID>> {
        struct TopoID *_field1;
    } _field3;
};

struct vector<TopoIDRange, std::__1::allocator<TopoIDRange>> {
    struct TopoIDRange *_field1;
    struct TopoIDRange *_field2;
    struct __compressed_pair<TopoIDRange *, std::__1::allocator<TopoIDRange>> {
        struct TopoIDRange *_field1;
    } _field3;
};

struct vector<TopoSubstring *, std::__1::allocator<TopoSubstring *>> {
    struct TopoSubstring **__begin_;
    struct TopoSubstring **__end_;
    struct __compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *>> {
        struct TopoSubstring **__value_;
    } __end_cap_;
};

struct vector<_NSRange, std::__1::allocator<_NSRange>> {
    struct _NSRange *_field1;
    struct _NSRange *_field2;
    struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange>> {
        struct _NSRange *_field1;
    } _field3;
};

struct vector<std::__1::pair<TopoID, TopoID>, std::__1::allocator<std::__1::pair<TopoID, TopoID>>> {
    struct pair<TopoID, TopoID> *__begin_;
    struct pair<TopoID, TopoID> *__end_;
    struct __compressed_pair<std::__1::pair<TopoID, TopoID>*, std::__1::allocator<std::__1::pair<TopoID, TopoID>>> {
        struct pair<TopoID, TopoID> *__value_;
    } __end_cap_;
};

struct vector<std::__1::pair<TopoIDRange, id<TTMergeableStringStorage>>, std::__1::allocator<std::__1::pair<TopoIDRange, id<TTMergeableStringStorage>>>> {
    struct pair<TopoIDRange, id<TTMergeableStringStorage>> *_field1;
    struct pair<TopoIDRange, id<TTMergeableStringStorage>> *_field2;
    struct __compressed_pair<std::__1::pair<TopoIDRange, id<TTMergeableStringStorage>>*, std::__1::allocator<std::__1::pair<TopoIDRange, id<TTMergeableStringStorage>>>> {
        struct pair<TopoIDRange, id<TTMergeableStringStorage>> *_field1;
    } _field3;
};

#pragma mark Typedef'd Structures

// Template types
typedef struct vector<TopoIDRange, std::__1::allocator<TopoIDRange>> {
    struct TopoIDRange *_field1;
    struct TopoIDRange *_field2;
    struct __compressed_pair<TopoIDRange *, std::__1::allocator<TopoIDRange>> {
        struct TopoIDRange *_field1;
    } _field3;
} vector_4b213608;

typedef struct vector<TopoSubstring *, std::__1::allocator<TopoSubstring *>> {
    struct TopoSubstring **__begin_;
    struct TopoSubstring **__end_;
    struct __compressed_pair<TopoSubstring **, std::__1::allocator<TopoSubstring *>> {
        struct TopoSubstring **__value_;
    } __end_cap_;
} vector_c5c053b6;

typedef struct vector<_NSRange, std::__1::allocator<_NSRange>> {
    struct _NSRange *_field1;
    struct _NSRange *_field2;
    struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange>> {
        struct _NSRange *_field1;
    } _field3;
} vector_7053a16b;

typedef struct vector<std::__1::pair<TopoID, TopoID>, std::__1::allocator<std::__1::pair<TopoID, TopoID>>> {
    struct pair<TopoID, TopoID> *__begin_;
    struct pair<TopoID, TopoID> *__end_;
    struct __compressed_pair<std::__1::pair<TopoID, TopoID>*, std::__1::allocator<std::__1::pair<TopoID, TopoID>>> {
        struct pair<TopoID, TopoID> *__value_;
    } __end_cap_;
} vector_0ee2fe7a;

typedef struct vector<std::__1::pair<TopoIDRange, id<TTMergeableStringStorage>>, std::__1::allocator<std::__1::pair<TopoIDRange, id<TTMergeableStringStorage>>>> {
    struct pair<TopoIDRange, id<TTMergeableStringStorage>> *_field1;
    struct pair<TopoIDRange, id<TTMergeableStringStorage>> *_field2;
    struct __compressed_pair<std::__1::pair<TopoIDRange, id<TTMergeableStringStorage>>*, std::__1::allocator<std::__1::pair<TopoIDRange, id<TTMergeableStringStorage>>>> {
        struct pair<TopoIDRange, id<TTMergeableStringStorage>> *_field1;
    } _field3;
} vector_4788519f;

