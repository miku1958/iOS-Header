//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <AccessibilityUtilities/AVSpeechSynthesizerDelegate-Protocol.h>

@class AVSpeechSynthesizer, AVSpeechUtterance, AXDispatchTimer, AXLanguageTag, AXLanguageTaggedContent, NSArray, NSMutableArray, NSString;
@protocol AXOratorDelegate;

@interface AXOrator : NSObject <AVSpeechSynthesizerDelegate>
{
    AVSpeechUtterance *_statusUtterance;
    BOOL _contentIsSpeakable;
    AXDispatchTimer *_audioSessionTimer;
    BOOL _spellOutContent;
    BOOL _shouldSpeakNextItemOnResume;
    BOOL _preferredLanguageWasSpecified;
    BOOL _isProcessingContentForSpeech;
    id<AXOratorDelegate> _delegate;
    long long _speakingContext;
    AXLanguageTaggedContent *_selectedContent;
    double _audioSessionInactiveTimeout;
    NSString *_voiceIdentifier;
    AXLanguageTaggedContent *_speakingContent;
    NSArray *_speakingContentTokenRanges;
    unsigned long long _numberOfTokensToSkip;
    AVSpeechSynthesizer *_speechSynthesizer;
    NSMutableArray *_speechSequenceItems;
    NSString *_lastUtteranceLanguageCode;
    AVSpeechUtterance *_lastUtterance;
    AXLanguageTag *_lastUtteranceLanguageTag;
    NSString *_currentLanguageCode;
    NSMutableArray *_additionalContentToProcess;
    struct _NSRange _lastSpokenSubstringRange;
    struct _NSRange _lastUtteranceSubstringRange;
}

@property (strong, nonatomic) NSMutableArray *additionalContentToProcess; // @synthesize additionalContentToProcess=_additionalContentToProcess;
@property (nonatomic) double audioSessionInactiveTimeout; // @synthesize audioSessionInactiveTimeout=_audioSessionInactiveTimeout;
@property (copy, nonatomic) NSString *content;
@property (strong, nonatomic) NSString *currentLanguageCode; // @synthesize currentLanguageCode=_currentLanguageCode;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<AXOratorDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) BOOL isProcessingContentForSpeech; // @synthesize isProcessingContentForSpeech=_isProcessingContentForSpeech;
@property (nonatomic) struct _NSRange lastSpokenSubstringRange; // @synthesize lastSpokenSubstringRange=_lastSpokenSubstringRange;
@property (strong, nonatomic) AVSpeechUtterance *lastUtterance; // @synthesize lastUtterance=_lastUtterance;
@property (strong, nonatomic) NSString *lastUtteranceLanguageCode; // @synthesize lastUtteranceLanguageCode=_lastUtteranceLanguageCode;
@property (strong, nonatomic) AXLanguageTag *lastUtteranceLanguageTag; // @synthesize lastUtteranceLanguageTag=_lastUtteranceLanguageTag;
@property (nonatomic) struct _NSRange lastUtteranceSubstringRange; // @synthesize lastUtteranceSubstringRange=_lastUtteranceSubstringRange;
@property (nonatomic) unsigned long long numberOfTokensToSkip; // @synthesize numberOfTokensToSkip=_numberOfTokensToSkip;
@property (nonatomic) BOOL preferredLanguageWasSpecified; // @synthesize preferredLanguageWasSpecified=_preferredLanguageWasSpecified;
@property (strong, nonatomic) AXLanguageTaggedContent *selectedContent; // @synthesize selectedContent=_selectedContent;
@property (nonatomic) BOOL shouldSpeakNextItemOnResume; // @synthesize shouldSpeakNextItemOnResume=_shouldSpeakNextItemOnResume;
@property (strong, nonatomic) AXLanguageTaggedContent *speakingContent; // @synthesize speakingContent=_speakingContent;
@property (strong, nonatomic) NSArray *speakingContentTokenRanges; // @synthesize speakingContentTokenRanges=_speakingContentTokenRanges;
@property (nonatomic) long long speakingContext; // @synthesize speakingContext=_speakingContext;
@property (strong, nonatomic) NSMutableArray *speechSequenceItems; // @synthesize speechSequenceItems=_speechSequenceItems;
@property (strong, nonatomic) AVSpeechSynthesizer *speechSynthesizer; // @synthesize speechSynthesizer=_speechSynthesizer;
@property (nonatomic) BOOL spellOutContent; // @synthesize spellOutContent=_spellOutContent;
@property (readonly) Class superclass;
@property (strong, nonatomic) NSString *voiceIdentifier; // @synthesize voiceIdentifier=_voiceIdentifier;

- (void).cxx_destruct;
- (BOOL)_canSpeakTaggedContent:(id)arg1;
- (BOOL)_changeSpeakingSpeed:(double)arg1 usingLanugageSpecificRate:(BOOL)arg2;
- (void)_clearAllContentState;
- (long long)_currentTokenIndex:(BOOL)arg1;
- (id)_getLangCodeForItem:(id)arg1;
- (void)_processAdditionalContentInPreparationForSpeech;
- (void)_respeakUtteranceIfNeeded;
- (BOOL)_skipByUnit:(BOOL)arg1 boundary:(unsigned long long)arg2;
- (void)_speakNextItemInSequence;
- (void)_speakNextTokenFromCurrentTokenIndex:(long long)arg1 forward:(BOOL)arg2 boundary:(unsigned long long)arg3;
- (id)_speechSequenceItemsStartingAtContentLocation:(unsigned long long)arg1;
- (void)_startSpeakingSequence;
- (BOOL)_successWithCode:(long long)arg1 error:(id *)arg2;
- (void)_tokenizeContentIfNeeded;
- (void)_updateAudioSessionCategory;
- (void)_updateSequenceForSpellOutBehavior;
- (BOOL)_useLanguageSpecificSpeakingRate;
- (void)addAdditionalContentToSpeechQueue:(id)arg1;
- (BOOL)canResumeWithContent:(id)arg1;
- (void)clearSelectedContent;
- (BOOL)contentIsSpeakable;
- (double)currentSpeechRateForAdjustment;
- (BOOL)fastForwardWithBoundary:(unsigned long long)arg1;
- (id)init;
- (BOOL)isPaused;
- (BOOL)isSpeaking;
- (BOOL)pauseSpeaking:(id *)arg1;
- (BOOL)resumeSpeaking:(id *)arg1;
- (BOOL)resumeSpeakingAfterDelay:(double)arg1 error:(id *)arg2;
- (BOOL)rewindWithBoundary:(unsigned long long)arg1;
- (BOOL)setSpeakingRate:(double)arg1;
- (BOOL)speakFaster;
- (BOOL)speakSlower;
- (void)speakStatusWithLanguage:(id)arg1 rate:(id)arg2;
- (float)speechRate;
- (void)speechSynthesizer:(id)arg1 didCancelSpeechUtterance:(id)arg2;
- (void)speechSynthesizer:(id)arg1 didContinueSpeechUtterance:(id)arg2;
- (void)speechSynthesizer:(id)arg1 didFinishSpeechUtterance:(id)arg2;
- (void)speechSynthesizer:(id)arg1 didPauseSpeechUtterance:(id)arg2;
- (void)speechSynthesizer:(id)arg1 didStartSpeechUtterance:(id)arg2;
- (void)speechSynthesizer:(id)arg1 willSpeakRangeOfSpeechString:(struct _NSRange)arg2 utterance:(id)arg3;
- (BOOL)startSpeakingWithPreferredLanguage:(id)arg1 delayBeforeStart:(double)arg2 error:(id *)arg3;
- (BOOL)startSpeakingWithPreferredLanguage:(id)arg1 error:(id *)arg2;
- (BOOL)stopSpeaking:(id *)arg1;

@end

