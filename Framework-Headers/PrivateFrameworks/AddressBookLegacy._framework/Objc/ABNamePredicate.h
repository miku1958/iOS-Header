//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <AddressBookLegacy/ABPredicate.h>

@class NSArray, NSString;

@interface ABNamePredicate : ABPredicate
{
    void *_addressBook;
    void *_tokenizations;
    struct __CFArray *_tokenizationSortKeys;
    BOOL _matchWholeWords;
    BOOL _matchPersonOrCompanyNamesExclusively;
    BOOL _matchPreferredName;
    BOOL _generateExceprts;
    NSString *_name;
    NSArray *_sources;
    NSArray *_groups;
    NSArray *_scopedContactIdentifiers;
}

@property (copy, nonatomic) NSString *accountIdentifier;
@property (nonatomic) void *addressBook;
@property (nonatomic) BOOL generateExceprts; // @synthesize generateExceprts=_generateExceprts;
@property (nonatomic) void *group;
@property (strong, nonatomic) NSArray *groups; // @synthesize groups=_groups;
@property (nonatomic) BOOL matchPersonOrCompanyNamesExclusively; // @synthesize matchPersonOrCompanyNamesExclusively=_matchPersonOrCompanyNamesExclusively;
@property (nonatomic) BOOL matchPreferredName; // @synthesize matchPreferredName=_matchPreferredName;
@property (nonatomic) BOOL matchWholeWords; // @synthesize matchWholeWords=_matchWholeWords;
@property (copy, nonatomic) NSString *name; // @synthesize name=_name;
@property (strong, nonatomic) NSArray *scopedContactIdentifiers; // @synthesize scopedContactIdentifiers=_scopedContactIdentifiers;
@property (nonatomic) void *source;
@property (strong, nonatomic) NSArray *sources; // @synthesize sources=_sources;

- (id)_matchClauseForColumns:(id)arg1 requiringAllTerms:(BOOL)arg2;
- (id)_personNameKeys;
- (id)_personNonNameKeys;
- (void)ab_bindJoinClauseComponentOfStatement:(struct CPSqliteStatement *)arg1 withBindingOffset:(int *)arg2 predicateIdentifier:(int)arg3;
- (void)ab_bindWhereClauseComponentOfStatement:(struct CPSqliteStatement *)arg1 withBindingOffset:(int *)arg2 predicateIdentifier:(int)arg3;
- (id)ab_metadataForMatchingRow:(struct CPSqliteStatement *)arg1 columnOffset:(int)arg2;
- (void)dealloc;
- (id)emphasizedExcerptStringForMatchString:(id)arg1;
- (id)init;
- (BOOL)isValid;
- (id)predicateFormat;
- (id)queryJoinsInCompound:(BOOL)arg1 predicateIdentifier:(int)arg2;
- (id)queryRankStringForPredicateIdentifier:(int)arg1;
- (id)querySelectPropertiesForPredicateIdentifier:(int)arg1;
- (id)queryWhereStringForPredicateIdentifier:(int)arg1;
- (void *)tokenizations;

@end

