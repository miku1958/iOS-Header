//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <AssetViewer/ASVGlyphStateDelegate-Protocol.h>

@class ASVAnimTime, ASVBasicSpring, ASVDeviceController, ASVDotsRenderer, ASVGlyphState, ASVMetalSplineData, ASVQuaternionSpring, ASVSpringDouble3, ASVStateSpring, CALayer, MISSING_TYPE, NSString;

@interface ASVGlyphRenderer : NSObject <ASVGlyphStateDelegate>
{
    CALayer *_layer;
    float _edgeFactor;
    float _insideFactor;
    ASVGlyphState *_state;
    float _strokeWeight;
    ASVAnimTime *_time;
    ASVQuaternionSpring *_rotationSpring;
    ASVSpringDouble3 *_scaleSpring;
    ASVSpringDouble3 *_translationSpring;
    ASVStateSpring *_cubeResolveSpring;
    ASVStateSpring *_planeResolveSpring;
    ASVStateSpring *_alphaSpring;
    ASVBasicSpring *_orientationSpring;
    CDStruct_0e8a9a91 _rotation;
    struct {
        double angle;
        MISSING_TYPE *axis;
    } _angularVelocity;
    CDStruct_14d5dc5e _R;
    CDStruct_14d5dc5e _MVP;
    CDStruct_14d5dc5e _mvp_ortho;
    CDStruct_14d5dc5e _mvp_persp;
    ASVMetalSplineData *_splineData;
    ASVDotsRenderer *_dotsRenderer;
    ASVDeviceController *_deviceController;
    struct CGSize _lastDrawableSize;
    BOOL _dirty_tesselation_factors;
    float _rotationAngleY;
    float _a_vel;
}

@property (nonatomic) float a_vel; // @synthesize a_vel=_a_vel;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) float rotationAngleY; // @synthesize rotationAngleY=_rotationAngleY;
@property (readonly, nonatomic) ASVGlyphState *state;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)drawWithTimeDelta:(double)arg1 drawable:(id)arg2 commandBuffer:(id)arg3;
- (id)initWithLayer:(id)arg1 device:(id)arg2 pixelFormat:(unsigned long long)arg3 sampleCount:(int)arg4 deviceMaskImage:(id)arg5;
- (void)quaternionTargetChanged;
- (void)resetData;
- (void)resizeIfNeeded:(id)arg1;
- (void)scaleTargetChanged;
- (void)setOrientationAngle:(float)arg1;
- (void)snapStateChanged;
- (void)translationTargetChanged;

@end

