//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <HMFoundation/HMFObject.h>

#import <HMFoundation/HMFLogging-Protocol.h>
#import <HMFoundation/NSNetServiceDelegate-Protocol.h>

@class HMFNetAddress, HMFUnfairLock, NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSNetService, NSObject, NSString;
@protocol HMFNetServiceDelegate, OS_dispatch_queue;

@interface HMFNetService : HMFObject <HMFLogging, NSNetServiceDelegate>
{
    HMFUnfairLock *_lock;
    NSString *_type;
    NSString *_name;
    NSString *_domain;
    unsigned long long _port;
    NSArray *_addresses;
    NSMutableDictionary *_TXTRecord;
    NSNetService *_internal;
    BOOL _resolving;
    HMFNetAddress *_hostName;
    id<HMFNetServiceDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_clientQueue;
    NSMutableArray *_resolveBlocks;
}

@property (readonly, copy, nonatomic) NSDictionary *TXTRecord;
@property (readonly, copy) NSArray *addresses;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *clientQueue; // @synthesize clientQueue=_clientQueue;
@property (readonly, copy) NSString *debugDescription;
@property (weak) id<HMFNetServiceDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly, copy, nonatomic) NSString *domain; // @synthesize domain=_domain;
@property (readonly) unsigned long long hash;
@property (readonly, copy) HMFNetAddress *hostName; // @synthesize hostName=_hostName;
@property (readonly, nonatomic) NSNetService *internal; // @synthesize internal=_internal;
@property (readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
@property (readonly, nonatomic) unsigned long long port;
@property (readonly, nonatomic) NSMutableArray *resolveBlocks; // @synthesize resolveBlocks=_resolveBlocks;
@property (nonatomic, getter=isResolving) BOOL resolving; // @synthesize resolving=_resolving;
@property (readonly) Class superclass;
@property (readonly, copy, nonatomic) NSString *type; // @synthesize type=_type;

+ (id)errorFromNetServiceErrorDict:(id)arg1;
+ (id)logCategory;
+ (id)shortDescription;
- (void).cxx_destruct;
- (void)_reallyResolveWithTimeout:(double)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)bestAddress;
- (void)confirmWithTimeout:(double)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)descriptionWithPointer:(BOOL)arg1;
- (id)init;
- (id)initWithDomain:(id)arg1 type:(id)arg2 name:(id)arg3;
- (id)initWithNetService:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)logIdentifier;
- (void)netService:(id)arg1 didNotResolve:(id)arg2;
- (void)netService:(id)arg1 didUpdateTXTRecordData:(id)arg2;
- (void)netServiceDidResolveAddress:(id)arg1;
- (void)netServiceDidStop:(id)arg1;
- (void)netServiceWillResolve:(id)arg1;
- (void)notifyUpdatedAddresses:(id)arg1;
- (void)removeAllTXTRecordObjects;
- (void)resolveWithTimeout:(double)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)setAddresses:(id)arg1;
- (void)setHostname:(id)arg1;
- (void)setTXTRecord:(id)arg1;
- (id)shortDescription;
- (void)startMonitoring;
- (void)updateTXTRecordWithData:(id)arg1;

@end

