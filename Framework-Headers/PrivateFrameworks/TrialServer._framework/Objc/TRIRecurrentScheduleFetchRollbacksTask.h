//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <TrialServer/TRIBaseTask.h>

#import <TrialServer/TRITask-Protocol.h>

@class NSArray, NSDate, NSString;
@protocol TRITaskAttributing, TRITaskQueueStateProviding;

@interface TRIRecurrentScheduleFetchRollbacksTask : TRIBaseTask <TRITask>
{
    id<TRITaskAttributing> _taskAttribution;
    BOOL _isRepeatedInstance;
    int taskType;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSArray *dependencies;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (copy, nonatomic) NSDate *startTime;
@property (weak, nonatomic) id<TRITaskQueueStateProviding> stateProvider;
@property (readonly) Class superclass;
@property (readonly, nonatomic) NSArray *tags;
@property (readonly, nonatomic) NSString *taskName;
@property (readonly, nonatomic) int taskType; // @synthesize taskType;

+ (id)parseFromData:(id)arg1;
+ (BOOL)supportsSecureCoding;
+ (id)taskWithAttribution:(id)arg1;
- (void).cxx_destruct;
- (id)_asPersistedTask;
- (BOOL)_experimentsExistUsingContext:(id)arg1;
- (id)_fetchRollbacksTaskUsingContext:(id)arg1;
- (id)_nextRecurrentTaskUsingContext:(id)arg1;
- (BOOL)_shouldScheduleUsingContext:(id)arg1 withTaskQueue:(id)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithTaskAttribution:(id)arg1 isRepeatedInstance:(BOOL)arg2;
- (BOOL)isEqual:(id)arg1;
- (id)runUsingContext:(id)arg1 withTaskQueue:(id)arg2;
- (id)serialize;

@end

