//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Silex/SXJSONObject.h>

#import <Silex/SXConditionHints-Protocol.h>

@class NSString;

@interface SXConditionHints : SXJSONObject <SXConditionHints>
{
}

@property (readonly, nonatomic) long long configurationKey; // @dynamic configurationKey;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) long long horizontalSizeClass; // @dynamic horizontalSizeClass;
@property (readonly, nonatomic) long long maxColumns; // @dynamic maxColumns;
@property (readonly, nonatomic) long long maxContentSizeCategory; // @dynamic maxContentSizeCategory;
@property (readonly, nonatomic) long long maxSpecVersion; // @dynamic maxSpecVersion;
@property (readonly, nonatomic) long long maxViewportAspectRatio; // @dynamic maxViewportAspectRatio;
@property (readonly, nonatomic) long long maxViewportWidth; // @dynamic maxViewportWidth;
@property (readonly, nonatomic) long long minColumns; // @dynamic minColumns;
@property (readonly, nonatomic) long long minContentSizeCategory; // @dynamic minContentSizeCategory;
@property (readonly, nonatomic) long long minSpecVersion; // @dynamic minSpecVersion;
@property (readonly, nonatomic) long long minViewportAspectRatio; // @dynamic minViewportAspectRatio;
@property (readonly, nonatomic) long long minViewportWidth; // @dynamic minViewportWidth;
@property (readonly, nonatomic) long long newsletter; // @dynamic newsletter;
@property (readonly, nonatomic) long long platform; // @dynamic platform;
@property (readonly, nonatomic) long long preferredColorScheme; // @dynamic preferredColorScheme;
@property (readonly, nonatomic) long long subscriptionStatus; // @dynamic subscriptionStatus;
@property (readonly) Class superclass;
@property (readonly, nonatomic) long long testing; // @dynamic testing;
@property (readonly, nonatomic) long long verticalSizeClass; // @dynamic verticalSizeClass;
@property (readonly, nonatomic) long long viewLocation; // @dynamic viewLocation;

+ (id)jsonPropertyNameForObjCPropertyName:(id)arg1;
- (long long)configurationKeyWithValue:(id)arg1 withType:(int)arg2;
- (long long)horizontalSizeClassWithValue:(id)arg1 withType:(int)arg2;
- (long long)maxColumnsWithValue:(id)arg1 withType:(int)arg2;
- (long long)maxContentSizeCategoryWithValue:(id)arg1 withType:(int)arg2;
- (long long)maxSpecVersionWithValue:(id)arg1 withType:(int)arg2;
- (long long)maxViewportAspectRatioWithValue:(id)arg1 withType:(int)arg2;
- (long long)maxViewportWidthWithValue:(id)arg1 withType:(int)arg2;
- (long long)minColumnsWithValue:(id)arg1 withType:(int)arg2;
- (long long)minContentSizeCategoryWithValue:(id)arg1 withType:(int)arg2;
- (long long)minSpecVersionWithValue:(id)arg1 withType:(int)arg2;
- (long long)minViewportAspectRatioWithValue:(id)arg1 withType:(int)arg2;
- (long long)minViewportWidthWithValue:(id)arg1 withType:(int)arg2;
- (long long)newsletterWithValue:(id)arg1 withType:(int)arg2;
- (long long)platformWithValue:(id)arg1 withType:(int)arg2;
- (long long)preferredColorSchemeWithValue:(id)arg1 withType:(int)arg2;
- (long long)subscriptionStatusWithValue:(id)arg1 withType:(int)arg2;
- (long long)ternaryValueForJSONValue:(id)arg1 type:(int)arg2;
- (long long)testingWithValue:(id)arg1 withType:(int)arg2;
- (long long)verticalSizeClassWithValue:(id)arg1 withType:(int)arg2;
- (long long)viewLocationWithValue:(id)arg1 withType:(int)arg2;

@end

