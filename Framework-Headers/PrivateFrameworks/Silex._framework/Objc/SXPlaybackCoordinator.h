//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <Silex/SXMediaSelectionControllerDataSource-Protocol.h>
#import <Silex/SXMediaSelectionControllerDelegate-Protocol.h>
#import <Silex/SXVideoMetadataProviding-Protocol.h>
#import <Silex/SXVolumeObserver-Protocol.h>

@class NSArray, NSHashTable, NSString, SXAVPlayer, SXKeyValueObserver;
@protocol SXVideoPlaybackHost, SXVideoProviding;

@interface SXPlaybackCoordinator : NSObject <SXVideoMetadataProviding, SXMediaSelectionControllerDelegate, SXMediaSelectionControllerDataSource, SXVolumeObserver>
{
    BOOL _hasMediaSelectionOptions;
    BOOL _requiresReadyToDisplay;
    BOOL _muted;
    BOOL _playbackRequested;
    BOOL _initiatedPlayback;
    id<SXVideoProviding> _video;
    unsigned long long _state;
    NSObject<SXVideoPlaybackHost> *_host;
    NSHashTable *_observers;
    SXAVPlayer *_player;
    CDUnknownBlockType _cancelHandler;
    SXKeyValueObserver *_playerItemPresentationSizeObserver;
    SXKeyValueObserver *_readyForDisplayObserver;
    struct CGSize _dimensions;
}

@property (copy, nonatomic) CDUnknownBlockType cancelHandler; // @synthesize cancelHandler=_cancelHandler;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) struct CGSize dimensions; // @synthesize dimensions=_dimensions;
@property (readonly, nonatomic) double duration;
@property (readonly, nonatomic) double framerate;
@property (nonatomic) BOOL hasMediaSelectionOptions; // @synthesize hasMediaSelectionOptions=_hasMediaSelectionOptions;
@property (readonly) unsigned long long hash;
@property (weak, nonatomic) NSObject<SXVideoPlaybackHost> *host; // @synthesize host=_host;
@property (nonatomic) BOOL initiatedPlayback; // @synthesize initiatedPlayback=_initiatedPlayback;
@property (readonly, nonatomic) NSArray *loadedTimeRanges;
@property (nonatomic) BOOL muted; // @synthesize muted=_muted;
@property (readonly, nonatomic) NSHashTable *observers; // @synthesize observers=_observers;
@property (readonly, nonatomic) BOOL playbackBufferFull;
@property (readonly, nonatomic) BOOL playbackLikelyToKeepUp;
@property (nonatomic) BOOL playbackRequested; // @synthesize playbackRequested=_playbackRequested;
@property (strong, nonatomic) SXAVPlayer *player; // @synthesize player=_player;
@property (strong, nonatomic) SXKeyValueObserver *playerItemPresentationSizeObserver; // @synthesize playerItemPresentationSizeObserver=_playerItemPresentationSizeObserver;
@property (strong, nonatomic) SXKeyValueObserver *readyForDisplayObserver; // @synthesize readyForDisplayObserver=_readyForDisplayObserver;
@property (nonatomic) BOOL requiresReadyToDisplay; // @synthesize requiresReadyToDisplay=_requiresReadyToDisplay;
@property (nonatomic) unsigned long long state; // @synthesize state=_state;
@property (readonly) Class superclass;
@property (readonly, nonatomic) double time;
@property (readonly, nonatomic) double timePlayed;
@property (readonly, nonatomic) id<SXVideoProviding> video; // @synthesize video=_video;
@property (readonly, nonatomic) double volume;

- (void).cxx_destruct;
- (void)addPlaybackObserver:(id)arg1;
- (void)addPlayerItemPresentationSizeObserver;
- (void)addReadyForDisplayObserver;
- (id)initWithVideo:(id)arg1;
- (void)loadAvailableMediaCharacteristics;
- (void)loadVideoIfNeeded;
- (void)loadedTimeRangesChanged;
- (id)mediaSelectionController:(id)arg1 mediaSelectionGroupWithCharacteristic:(id)arg2;
- (id)mediaSelectionController:(id)arg1 preferredMediaSelectionOptionInMediaSelectionGroup:(id)arg2;
- (void)mediaSelectionController:(id)arg1 selectMediaSelectionOption:(id)arg2 inMediaSelectionGroup:(id)arg3;
- (id)mediaSelectionController:(id)arg1 selectedMediaSelectionOptionInMediaSelectionGroup:(id)arg2;
- (void)muteStateChanged:(BOOL)arg1;
- (void)pause;
- (void)play;
- (void)playIfReady;
- (void)playbackFailedWithError:(id)arg1;
- (void)playbackFinished;
- (void)playbackInitiated;
- (void)playbackPaused;
- (void)playbackResumed;
- (void)playbackStarted;
- (void)prefetch;
- (void)removePlaybackObserver:(id)arg1;
- (void)removePlayerItemPresentationSizeObserver;
- (void)removeReadyForDisplayObserver;
- (void)seekToTime:(double)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)setupPlayerWithURL:(id)arg1;
- (void)stateChanged;
- (void)timeElapsed:(double)arg1 duration:(double)arg2;
- (void)updateMediaSelectionOptionAvailability;

@end

