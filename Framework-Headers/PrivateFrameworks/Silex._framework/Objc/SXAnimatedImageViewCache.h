//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSMutableArray, NSMutableIndexSet, SXAnimatedImage;
@protocol OS_dispatch_queue, OS_dispatch_semaphore, SXAnimatedImageViewCacheDelegate;

@interface SXAnimatedImageViewCache : NSObject
{
    BOOL _cachingEnabled;
    id<SXAnimatedImageViewCacheDelegate> _delegate;
    SXAnimatedImage *_animatedImage;
    long long _singleImageByteSize;
    unsigned long long _lastRequestedIndex;
    NSObject<OS_dispatch_queue> *_decodingQueue;
    NSObject<OS_dispatch_semaphore> *_semaphore;
    unsigned long long _numberOfCachedImages;
    NSMutableArray *_cachedImages;
    NSMutableIndexSet *_indicesToCache;
    struct CGSize _size;
}

@property (weak, nonatomic) SXAnimatedImage *animatedImage; // @synthesize animatedImage=_animatedImage;
@property (readonly, nonatomic) NSMutableArray *cachedImages; // @synthesize cachedImages=_cachedImages;
@property BOOL cachingEnabled; // @synthesize cachingEnabled=_cachingEnabled;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *decodingQueue; // @synthesize decodingQueue=_decodingQueue;
@property (weak, nonatomic) id<SXAnimatedImageViewCacheDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, nonatomic) NSMutableIndexSet *indicesToCache; // @synthesize indicesToCache=_indicesToCache;
@property unsigned long long lastRequestedIndex; // @synthesize lastRequestedIndex=_lastRequestedIndex;
@property (readonly, nonatomic) unsigned long long maxCacheSize;
@property (nonatomic) unsigned long long numberOfCachedImages; // @synthesize numberOfCachedImages=_numberOfCachedImages;
@property (readonly, nonatomic) NSObject<OS_dispatch_semaphore> *semaphore; // @synthesize semaphore=_semaphore;
@property long long singleImageByteSize; // @synthesize singleImageByteSize=_singleImageByteSize;
@property (readonly, nonatomic) struct CGSize size; // @synthesize size=_size;

- (void).cxx_destruct;
- (void)cacheNextImage;
- (long long)cacheStatusForFrameIndex:(unsigned long long)arg1;
- (void)checkCacheSize;
- (id)decodeImageFromSource:(struct CGImageSource *)arg1 index:(unsigned long long)arg2;
- (void)decreaseCacheSize;
- (id)imageForFrameIndex:(unsigned long long)arg1;
- (id)initWithImageSize:(struct CGSize)arg1;
- (unsigned long long)nearestCachedFrameIndexForFrameIndex:(unsigned long long)arg1;
- (void)prepareCache;
- (void)prepareImageForFrameIndex:(unsigned long long)arg1;
- (void)prune;
- (void)restoreCacheSize;

@end

