//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <ActivityAchievements/_HKXPCExportable-Protocol.h>

@class HKPluginProxyProvider, NSString;
@protocol ACHServerInterface, OS_dispatch_queue;

@interface ACHClient : NSObject <_HKXPCExportable>
{
    NSObject<OS_dispatch_queue> *_serverQueue;
    NSObject<OS_dispatch_queue> *_clientQueue;
    id<ACHServerInterface> _serverProxy;
    HKPluginProxyProvider *_pluginProxyProvider;
    CDUnknownBlockType _injectedErrorHandler;
}

@property (strong, nonatomic) NSObject<OS_dispatch_queue> *clientQueue; // @synthesize clientQueue=_clientQueue;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (copy, nonatomic) CDUnknownBlockType injectedErrorHandler; // @synthesize injectedErrorHandler=_injectedErrorHandler;
@property (strong, nonatomic) HKPluginProxyProvider *pluginProxyProvider; // @synthesize pluginProxyProvider=_pluginProxyProvider;
@property (strong, nonatomic) id<ACHServerInterface> serverProxy; // @synthesize serverProxy=_serverProxy;
@property (strong, nonatomic) NSObject<OS_dispatch_queue> *serverQueue; // @synthesize serverQueue=_serverQueue;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_addPluginProxyErrorHandler:(CDUnknownBlockType)arg1;
- (CDUnknownBlockType)_clientQueueCompletion:(CDUnknownBlockType)arg1;
- (void)_injectProxyProvider:(id)arg1;
- (void)_remoteProxy:(CDUnknownBlockType)arg1 errorHandler:(CDUnknownBlockType)arg2;
- (void)addEarnedInstance:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)addTemplate:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)connectionInvalidated;
- (id)exportedInterface;
- (void)fetchAchievementWithTemplateUniqueName:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fetchActivityChallengeAssetsServerURLWithCompletion:(CDUnknownBlockType)arg1;
- (void)fetchAllAchievementsWithCompletion:(CDUnknownBlockType)arg1;
- (void)fetchAllEarnedInstancesWithCompletion:(CDUnknownBlockType)arg1;
- (void)fetchAllTemplatesWithCompletion:(CDUnknownBlockType)arg1;
- (void)fetchEphemeralAchievementWithTemplateUniqueName:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)forceAwardingSchedulerWithCompletion:(CDUnknownBlockType)arg1;
- (id)initWithHealthStore:(id)arg1;
- (id)remoteInterface;
- (void)removeAllEarnedInstancesWithCompletion:(CDUnknownBlockType)arg1;
- (void)removeAllTemplatesWithCompletion:(CDUnknownBlockType)arg1;
- (void)removeEarnedInstance:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)removeTemplate:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setActivityChallengeAssetsServerURL:(id)arg1 completion:(CDUnknownBlockType)arg2;

@end

