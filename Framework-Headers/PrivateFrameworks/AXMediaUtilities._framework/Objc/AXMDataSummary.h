//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class AXMDataRegressionModel, NSArray, NSNumberFormatter, NSString;
@protocol AXMDataSummaryCategoryNameProvider;

@interface AXMDataSummary : NSObject
{
    NSArray *_axisTitles;
    NSArray *_xValues;
    NSArray *_yValues;
    AXMDataRegressionModel *_regressionModel;
    unsigned long long _n;
    double _r;
    double _rSquared;
    double _minX;
    double _maxX;
    double _meanX;
    double _varianceX;
    double _minY;
    double _maxY;
    double _meanY;
    double _varianceY;
    double _covariance;
    double _slope;
    double _intercept;
    NSArray *_residuals;
    NSArray *_outliers;
    NSObject<AXMDataSummaryCategoryNameProvider> *_categoryNameDelegate;
    NSNumberFormatter *_numberFormatter;
}

@property (readonly, nonatomic) NSArray *axisTitles; // @synthesize axisTitles=_axisTitles;
@property (readonly, nonatomic) NSString *bestFitCurveEquation;
@property (weak, nonatomic) NSObject<AXMDataSummaryCategoryNameProvider> *categoryNameDelegate; // @synthesize categoryNameDelegate=_categoryNameDelegate;
@property (readonly, nonatomic) NSString *confidenceDescription;
@property (readonly, nonatomic) double covariance; // @synthesize covariance=_covariance;
@property (readonly, nonatomic) NSString *fullDescription;
@property (readonly, nonatomic) double intercept; // @synthesize intercept=_intercept;
@property (readonly, nonatomic) NSString *maxValueDescription;
@property (readonly, nonatomic) double maxX; // @synthesize maxX=_maxX;
@property (readonly, nonatomic) double maxY; // @synthesize maxY=_maxY;
@property (readonly, nonatomic) NSString *meanValueDescription;
@property (readonly, nonatomic) double meanX; // @synthesize meanX=_meanX;
@property (readonly, nonatomic) double meanY; // @synthesize meanY=_meanY;
@property (readonly, nonatomic) NSString *medianValueDescription;
@property (readonly, nonatomic) NSString *minValueDescription;
@property (readonly, nonatomic) double minX; // @synthesize minX=_minX;
@property (readonly, nonatomic) double minY; // @synthesize minY=_minY;
@property (readonly, nonatomic) NSString *modelDescription;
@property (readonly, nonatomic) unsigned long long n; // @synthesize n=_n;
@property (strong, nonatomic) NSNumberFormatter *numberFormatter; // @synthesize numberFormatter=_numberFormatter;
@property (readonly, nonatomic) NSString *numericalDescription;
@property (readonly, nonatomic) NSArray *outliers; // @synthesize outliers=_outliers;
@property (readonly, nonatomic) NSString *outliersDescription;
@property (readonly, nonatomic) double r; // @synthesize r=_r;
@property (readonly, nonatomic) double rSquared; // @synthesize rSquared=_rSquared;
@property (readonly, nonatomic) AXMDataRegressionModel *regressionModel; // @synthesize regressionModel=_regressionModel;
@property (readonly, nonatomic) NSArray *residuals; // @synthesize residuals=_residuals;
@property (readonly, nonatomic) NSString *simpleDescription;
@property (readonly, nonatomic) double slope; // @synthesize slope=_slope;
@property (readonly, nonatomic) NSString *slopeDescription;
@property (readonly, nonatomic) double varianceX; // @synthesize varianceX=_varianceX;
@property (readonly, nonatomic) double varianceY; // @synthesize varianceY=_varianceY;
@property (readonly, nonatomic) NSArray *xValues; // @synthesize xValues=_xValues;
@property (readonly, nonatomic) NSArray *yValues; // @synthesize yValues=_yValues;

- (void).cxx_destruct;
- (void)compute;
- (void)computeCovariance;
- (void)computeLinearRegression;
- (void)computeMeans;
- (void)computeOutliers;
- (void)computeR;
- (void)computeRanges;
- (void)computeRegressionModel:(CDUnknownBlockType)arg1;
- (void)computeResiduals;
- (void)computeVariances;
- (id)description;
- (id)descriptionForXValue:(double)arg1;
- (double)getMean:(id)arg1;
- (double)getMedian:(id)arg1;
- (void)getValues:(double *)arg1 fromNSNumberArray:(id)arg2;
- (double)getVariance:(id)arg1;
- (id)initWithAxisTitles:(id)arg1 xValues:(id)arg2 yValues:(id)arg3;
- (double)positionForXAxisValue:(double)arg1;
- (double)positionForYAxisValue:(double)arg1;
- (void)setRegressionModel:(id)arg1;
- (id)stringForComponents:(id)arg1;

@end

