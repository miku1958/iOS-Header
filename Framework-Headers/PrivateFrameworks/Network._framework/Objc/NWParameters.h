//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <Network/NSCopying-Protocol.h>
#import <Network/NSSecureCoding-Protocol.h>
#import <Network/NWPrettyDescription-Protocol.h>

@class NSArray, NSData, NSDictionary, NSSet, NSString, NSURL, NSUUID, NWAddressEndpoint, NWInterface;
@protocol OS_nw_parameters;

@interface NWParameters : NSObject <NWPrettyDescription, NSSecureCoding, NSCopying>
{
    BOOL _enableSFO;
    NSObject<OS_nw_parameters> *_internalParameters;
}

@property (copy, nonatomic) NSSet *SSLCipherSuites;
@property (copy, nonatomic) NSData *TLSSessionID;
@property (copy, nonatomic) NSString *account;
@property (nonatomic) BOOL allowSocketAccess;
@property (nonatomic) unsigned long long dataMode;
@property (nonatomic) BOOL disableBlackHoleDetection;
@property (nonatomic) BOOL disableNagleAlgorithm;
@property (nonatomic, getter=isDiscretionary) BOOL discretionary;
@property (readonly, nonatomic, getter=isDryRun) BOOL dryRun;
@property (copy, nonatomic) NSString *effectiveBundleID;
@property (copy, nonatomic) NSUUID *effectiveProcessUUID;
@property (nonatomic) BOOL enableExtendedBackgroundIdle;
@property (nonatomic) BOOL enableSFO; // @synthesize enableSFO=_enableSFO;
@property (nonatomic) BOOL enableTFO;
@property (nonatomic) BOOL enableTFONoCookie;
@property (nonatomic) BOOL enableTLS;
@property (nonatomic) BOOL enableTLSSessionTicket;
@property (nonatomic) BOOL enforceExtendedValidation;
@property (nonatomic) BOOL indefinite;
@property (strong) NSObject<OS_nw_parameters> *internalParameters; // @synthesize internalParameters=_internalParameters;
@property (nonatomic) unsigned char ipProtocol;
@property (nonatomic) BOOL keepAlive;
@property (nonatomic) unsigned long long keepAliveIdleTime;
@property (nonatomic) unsigned long long keepAliveInterval;
@property (nonatomic) BOOL keepAliveOffload;
@property (strong, nonatomic) NWAddressEndpoint *localAddress;
@property (nonatomic) unsigned long long maximumSSLProtocolVersion;
@property (nonatomic) NSData *metadata;
@property (nonatomic) unsigned long long minimumSSLProtocolVersion;
@property (nonatomic) BOOL multipath;
@property (nonatomic) int multipathService;
@property (nonatomic) BOOL noProxy;
@property (strong, nonatomic) NSUUID *parentID;
@property (nonatomic) int pid;
@property (readonly, copy, nonatomic) NSString *privateDescription;
@property (copy, nonatomic) NSUUID *processUUID;
@property (readonly, nonatomic) BOOL prohibitCellular;
@property (nonatomic) BOOL prohibitExpensivePaths;
@property (nonatomic) BOOL prohibitFallback;
@property (nonatomic) BOOL prohibitRoaming;
@property (copy, nonatomic) NSArray *protocolTransforms;
@property (copy, nonatomic) NSDictionary *proxyConfiguration;
@property (nonatomic) BOOL reduceBuffering;
@property (nonatomic) unsigned char requiredAddressFamily;
@property (strong, nonatomic) NWInterface *requiredInterface;
@property (nonatomic) long long requiredInterfaceSubtype;
@property (nonatomic) long long requiredInterfaceType;
@property (nonatomic) BOOL resolvePTR;
@property (nonatomic) BOOL reuseLocalAddress;
@property (readonly, nonatomic) NSURL *sanitizedURL;
@property (nonatomic) unsigned long long trafficClass;
@property (nonatomic) BOOL trustInvalidCertificates;
@property (nonatomic) unsigned int uid;
@property (copy, nonatomic) NSURL *url;
@property (nonatomic) BOOL useAWDL;
@property (nonatomic) BOOL useBoringSSL;
@property (nonatomic) BOOL useLongOutstandingQueries;
@property (nonatomic) BOOL useP2P;
@property (nonatomic) BOOL useTFOHeuristics;
@property (readonly, nonatomic, getter=isValid) BOOL valid;

+ (id)parametersWithCParameters:(id)arg1;
+ (id)parametersWithProtocolBufferData:(id)arg1;
+ (BOOL)supportsSecureCoding;
- (void).cxx_destruct;
- (id)applicationProtocols;
- (id)copyCParameters;
- (BOOL)copyEffectiveAuditToken:(CDStruct_6ad76789 *)arg1;
- (id)copyRequiredAgentsDescription;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)createProtocolBufferObject;
- (id)description;
- (id)descriptionWithIndent:(int)arg1 showFullContent:(BOOL)arg2;
- (void)encodeWithCoder:(id)arg1;
- (BOOL)hasDelegatedPIDForOriginatingPID:(int)arg1;
- (BOOL)hasDelegatedProcessUUID;
- (BOOL)hasNonEmptyProxyConfiguration;
- (BOOL)hasPreferredNetworkAgents;
- (BOOL)hasProhibitedNetworkAgents;
- (BOOL)hasRequiredNetworkAgents;
- (unsigned long long)hash;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithParameters:(id)arg1;
- (id)internetProtocols;
- (BOOL)isEqual:(id)arg1;
- (void)preferNetworkAgentWithDomain:(id)arg1 type:(id)arg2;
- (void)preferNetworkAgentWithUUID:(id)arg1;
- (void)prohibitInterface:(id)arg1;
- (void)prohibitInterfaceSubtype:(long long)arg1;
- (void)prohibitInterfaceType:(long long)arg1;
- (void)prohibitNetworkAgentWithUUID:(id)arg1;
- (void)prohibitNetworkAgentsWithDomain:(id)arg1 type:(id)arg2;
- (id)protocolsAtLevel:(int)arg1;
- (void)requireNetworkAgentWithDomain:(id)arg1 type:(id)arg2;
- (void)requireNetworkAgentWithUUID:(id)arg1;
- (void)setInitialDataPayload:(id)arg1;
- (void)setProtocolAtLevel:(unsigned long long)arg1 protocol:(struct nw_protocol_identifier *)arg2;
- (void)setSourceApplicationWithBundleID:(id)arg1;
- (void)setSourceApplicationWithToken:(CDStruct_6ad76789)arg1;
- (int)sslProtocolWithTLSVersion:(unsigned short)arg1;
- (unsigned short)tlsVersionWithSSLProtocol:(int)arg1;
- (id)transportProtocols;

@end

