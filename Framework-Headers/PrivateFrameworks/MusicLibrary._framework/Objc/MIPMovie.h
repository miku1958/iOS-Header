//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <ProtocolBuffer/PBCodable.h>

#import <MusicLibrary/NSCopying-Protocol.h>

@class MIPArtist, NSData, NSString;

@interface MIPMovie : PBCodable <NSCopying>
{
    long long _rentalDuration;
    long long _rentalPlaybackDuration;
    long long _rentalPlaybackStartedDateTime;
    long long _rentalStartedDateTime;
    MIPArtist *_artist;
    int _audioLanguage;
    int _audioTrackId;
    int _audioTrackIndex;
    NSString *_extendedContentName;
    NSData *_flattenedChapterData;
    NSString *_movieInfo;
    int _subtitleLanguage;
    int _subtitleTrackIndex;
    int _videoQuality;
    BOOL _hasAlternateAudio;
    BOOL _hasChapterData;
    BOOL _hasSubtitles;
    BOOL _rental;
    struct {
        unsigned int rentalDuration:1;
        unsigned int rentalPlaybackDuration:1;
        unsigned int rentalPlaybackStartedDateTime:1;
        unsigned int rentalStartedDateTime:1;
        unsigned int audioLanguage:1;
        unsigned int audioTrackId:1;
        unsigned int audioTrackIndex:1;
        unsigned int subtitleLanguage:1;
        unsigned int subtitleTrackIndex:1;
        unsigned int videoQuality:1;
        unsigned int hasAlternateAudio:1;
        unsigned int hasChapterData:1;
        unsigned int hasSubtitles:1;
        unsigned int rental:1;
    } _has;
}

@property (strong, nonatomic) MIPArtist *artist; // @synthesize artist=_artist;
@property (nonatomic) int audioLanguage; // @synthesize audioLanguage=_audioLanguage;
@property (nonatomic) int audioTrackId; // @synthesize audioTrackId=_audioTrackId;
@property (nonatomic) int audioTrackIndex; // @synthesize audioTrackIndex=_audioTrackIndex;
@property (strong, nonatomic) NSString *extendedContentName; // @synthesize extendedContentName=_extendedContentName;
@property (strong, nonatomic) NSData *flattenedChapterData; // @synthesize flattenedChapterData=_flattenedChapterData;
@property (nonatomic) BOOL hasAlternateAudio; // @synthesize hasAlternateAudio=_hasAlternateAudio;
@property (readonly, nonatomic) BOOL hasArtist;
@property (nonatomic) BOOL hasAudioLanguage;
@property (nonatomic) BOOL hasAudioTrackId;
@property (nonatomic) BOOL hasAudioTrackIndex;
@property (nonatomic) BOOL hasChapterData; // @synthesize hasChapterData=_hasChapterData;
@property (readonly, nonatomic) BOOL hasExtendedContentName;
@property (readonly, nonatomic) BOOL hasFlattenedChapterData;
@property (nonatomic) BOOL hasHasAlternateAudio;
@property (nonatomic) BOOL hasHasChapterData;
@property (nonatomic) BOOL hasHasSubtitles;
@property (readonly, nonatomic) BOOL hasMovieInfo;
@property (nonatomic) BOOL hasRental;
@property (nonatomic) BOOL hasRentalDuration;
@property (nonatomic) BOOL hasRentalPlaybackDuration;
@property (nonatomic) BOOL hasRentalPlaybackStartedDateTime;
@property (nonatomic) BOOL hasRentalStartedDateTime;
@property (nonatomic) BOOL hasSubtitleLanguage;
@property (nonatomic) BOOL hasSubtitleTrackIndex;
@property (nonatomic) BOOL hasSubtitles; // @synthesize hasSubtitles=_hasSubtitles;
@property (nonatomic) BOOL hasVideoQuality;
@property (strong, nonatomic) NSString *movieInfo; // @synthesize movieInfo=_movieInfo;
@property (nonatomic) BOOL rental; // @synthesize rental=_rental;
@property (nonatomic) long long rentalDuration; // @synthesize rentalDuration=_rentalDuration;
@property (nonatomic) long long rentalPlaybackDuration; // @synthesize rentalPlaybackDuration=_rentalPlaybackDuration;
@property (nonatomic) long long rentalPlaybackStartedDateTime; // @synthesize rentalPlaybackStartedDateTime=_rentalPlaybackStartedDateTime;
@property (nonatomic) long long rentalStartedDateTime; // @synthesize rentalStartedDateTime=_rentalStartedDateTime;
@property (nonatomic) int subtitleLanguage; // @synthesize subtitleLanguage=_subtitleLanguage;
@property (nonatomic) int subtitleTrackIndex; // @synthesize subtitleTrackIndex=_subtitleTrackIndex;
@property (nonatomic) int videoQuality; // @synthesize videoQuality=_videoQuality;

- (void).cxx_destruct;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (BOOL)readFrom:(id)arg1;
- (void)writeTo:(id)arg1;

@end

