//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <InstallCoordination/IXOwnedDataPromise.h>

#import <InstallCoordination/NSSecureCoding-Protocol.h>
#import <InstallCoordination/SZExtractor-Protocol.h>
#import <InstallCoordination/SZExtractorDelegate-Protocol.h>

@class IXPromisedStreamingZipTransferSeed, NSString, SZExtractor;
@protocol SZExtractorDelegate;

@interface IXPromisedStreamingZipTransfer : IXOwnedDataPromise <SZExtractorDelegate, NSSecureCoding, SZExtractor>
{
    BOOL _needsConsume;
    id<SZExtractorDelegate> _extractorDelegate;
    SZExtractor *_extractor;
    long long _sandboxExtensionHandle;
}

@property (nonatomic) unsigned long long archiveBytesConsumed; // @dynamic archiveBytesConsumed;
@property (nonatomic, getter=isComplete) BOOL complete; // @dynamic complete;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) BOOL doesConsumeExtractedData; // @dynamic doesConsumeExtractedData;
@property (strong, nonatomic) SZExtractor *extractor; // @synthesize extractor=_extractor;
@property (weak, nonatomic) id<SZExtractorDelegate> extractorDelegate; // @synthesize extractorDelegate=_extractorDelegate;
@property (readonly) unsigned long long hash;
@property (nonatomic) BOOL needsConsume; // @synthesize needsConsume=_needsConsume;
@property (readonly, nonatomic) long long sandboxExtensionHandle; // @synthesize sandboxExtensionHandle=_sandboxExtensionHandle;
@property (strong, nonatomic) IXPromisedStreamingZipTransferSeed *seed; // @dynamic seed;
@property (readonly) Class superclass;
@property (readonly, nonatomic) BOOL useProgressFromSZExtractor;

+ (BOOL)supportsSecureCoding;
- (void).cxx_destruct;
- (void)_prepareForExtractionToPath:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)addArchiveBytesConsumed:(unsigned long long)arg1;
- (BOOL)consumeExtractedDataIfNeeded;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (void)extractionCompleteAtArchivePath:(id)arg1;
- (void)extractionEnteredPassThroughMode;
- (void)finishStreamWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithName:(id)arg1 client:(unsigned long long)arg2 streamingZipOptions:(id)arg3 archiveSize:(unsigned long long)arg4 diskSpaceNeeded:(unsigned long long)arg5;
- (id)initWithSeed:(id)arg1;
- (void)prepareForExtraction:(CDUnknownBlockType)arg1;
- (void)prepareForExtractionToPath:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)resetWithCompletion:(CDUnknownBlockType)arg1;
- (Class)seedClass;
- (void)setExtractionProgress:(double)arg1;
- (void)supplyBytes:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)suspendStreamWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)terminateStreamWithError:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;

@end

