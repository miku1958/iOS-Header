//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSMutableSet, VCIDRScheduler;

__attribute__((visibility("hidden")))
@interface VCSessionUplinkVideoStreamController : NSObject
{
    float _startTime;
    float _currentFrameTime;
    id _delegate;
    NSMutableDictionary *_videoStreams;
    NSMutableDictionary *_streamInfoMap;
    NSMutableDictionary *_activeVideoStreams;
    NSMutableSet *_streamToPause;
    NSMutableSet *_streamToResume;
    NSMutableDictionary *_streamScheduleWifi;
    NSMutableDictionary *_streamScheduleCell;
    NSMutableDictionary *_currentStreamSchedule;
    NSDictionary *_pendingVideoStreams;
    VCIDRScheduler *_schedulerWifi;
    VCIDRScheduler *_schedulerCell;
    BOOL _pendingStreamsUpdated;
    struct _opaque_pthread_mutex_t _mutex;
    NSMutableArray *_streamsPendingKeyFrameGeneration;
    NSMutableArray *_streamResetIDR;
    NSArray *_streamIDsWifi;
    NSArray *_streamIDsCell;
    unsigned int _captureFrameRate;
}

@property (readonly) NSMutableDictionary *activeVideoStreams; // @synthesize activeVideoStreams=_activeVideoStreams;
@property unsigned int captureFrameRate; // @synthesize captureFrameRate=_captureFrameRate;
@property (nonatomic) float currentFrameTime; // @synthesize currentFrameTime=_currentFrameTime;
@property (copy, nonatomic) NSDictionary *pendingVideoStreams; // @synthesize pendingVideoStreams=_pendingVideoStreams;
@property (copy, nonatomic) NSArray *streamIDsCell; // @synthesize streamIDsCell=_streamIDsCell;
@property (copy, nonatomic) NSArray *streamIDsWifi; // @synthesize streamIDsWifi=_streamIDsWifi;

- (id)anchorStreamIDWithCappedVideoStreamIDs:(id)arg1;
- (void)dealloc;
- (id)delegate;
- (void)generateKeyFrameWithStreamID:(unsigned int)arg1;
- (void)handleStreamsPendingKeyFrameGeneration;
- (void)handleStreamsResetIDR;
- (id)initWithVideoStreams:(id)arg1 streamInfos:(id)arg2 delegate:(id)arg3;
- (void)initilizeStreamInfoMapWithStreamInfos:(id)arg1;
- (void)lock;
- (id)newVideoStreamKeyFrameScheduleWithStreamIDs:(id)arg1;
- (BOOL)pauseStreams;
- (BOOL)resumeStreams;
- (id)schedulerStreamWithVideoStream:(id)arg1;
- (void)setIsLocalOnCellular:(BOOL)arg1 cappedVideoStreamIDs:(id)arg2;
- (BOOL)shouldGenerateIDRWithStreamSchedule:(id)arg1;
- (void)unlock;
- (id)videoStreamPendingKeyFrameGenerationWithStreamID:(id)arg1 shouldRemoveFromPendingArray:(BOOL *)arg2;

@end

