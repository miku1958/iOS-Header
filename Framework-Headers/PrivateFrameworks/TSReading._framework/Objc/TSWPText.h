//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/NSObject.h>

#import <TSReading/TSWPColumnMetrics-Protocol.h>
#import <TSReading/TSWPLayoutOwner-Protocol.h>
#import <TSReading/TSWPLayoutTarget-Protocol.h>

@class NSMutableArray, NSString, TSDCanvas, TSDLayout, TSPObject, TSUColor, TSWPColumnStyle, TSWPListStyle, TSWPPadding, TSWPParagraphStyle, TSWPStorage;
@protocol TSDHint, TSWPFootnoteHeightMeasurer, TSWPFootnoteMarkProvider, TSWPOffscreenColumn, TSWPStyleProvider, TSWPTextDelegate;

@interface TSWPText : NSObject <TSWPLayoutTarget, TSWPLayoutOwner, TSWPColumnMetrics>
{
    TSWPParagraphStyle *_paragraphStyle;
    TSWPListStyle *_listStyle;
    TSWPColumnStyle *_columnStyle;
    TSUColor *_textColorOverride;
    TSWPStorage *_storage;
    NSMutableArray *_columns;
    struct CGSize _minSize;
    struct CGSize _maxSize;
    unsigned long long _pageNumber;
    unsigned long long _pageCount;
    int _flags;
    struct CGPoint _anchor;
    unsigned int _naturalAlignment;
    int _naturalDirection;
    NSObject<TSWPTextDelegate> *_delegate;
    id<TSWPStyleProvider> _styleProvider;
}

@property (readonly, nonatomic) struct CGSize adjustedInsets;
@property (readonly, nonatomic) BOOL allowsDescendersToClip;
@property (readonly, nonatomic) BOOL allowsLastLineTruncation;
@property (readonly, nonatomic) BOOL alwaysAllowWordSplit;
@property (readonly, nonatomic) BOOL alwaysStartsNewTarget;
@property (readonly, nonatomic) struct CGPoint anchorPoint;
@property (strong, nonatomic) NSMutableArray *anchoredDrawablesForRelayout;
@property (readonly, nonatomic) unsigned int autosizeFlags;
@property (readonly, nonatomic) TSDCanvas *canvas;
@property (readonly, nonatomic) unsigned long long columnCount;
@property (readonly, strong, nonatomic) NSMutableArray *columns; // @synthesize columns=_columns;
@property (readonly, nonatomic) BOOL columnsAreLeftToRight;
@property (readonly, nonatomic) struct CGSize currentSize;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) NSObject<TSWPTextDelegate> *delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) id<TSWPFootnoteHeightMeasurer> footnoteHeightMeasurer;
@property (readonly, nonatomic) id<TSWPFootnoteMarkProvider> footnoteMarkProvider;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) struct __CFLocale *hyphenationLocale;
@property (readonly, nonatomic) BOOL ignoresEquationAlignment;
@property (readonly, nonatomic) BOOL layoutIsValid;
@property (readonly, nonatomic) TSWPPadding *layoutMargins;
@property (readonly, nonatomic) struct CGRect maskRect;
@property (readonly, nonatomic) double maxAnchorY;
@property (readonly, nonatomic) unsigned int maxLineCount;
@property (readonly, nonatomic) struct CGSize maxSize;
@property (readonly, nonatomic) struct CGSize minSize;
@property (readonly, nonatomic) unsigned int naturalAlignment; // @synthesize naturalAlignment=_naturalAlignment;
@property (readonly, nonatomic) int naturalDirection; // @synthesize naturalDirection=_naturalDirection;
@property (readonly, nonatomic) TSPObject<TSDHint> *nextTargetFirstChildHint;
@property (readonly, strong, nonatomic) id<TSWPOffscreenColumn> nextTargetFirstColumn;
@property (readonly, nonatomic) const struct TSWPTopicNumberHints *nextTargetTopicNumbers;
@property (readonly, nonatomic) unsigned long long pageCount;
@property (readonly, nonatomic) unsigned long long pageNumber;
@property (readonly, nonatomic) TSWPParagraphStyle *paragraphStyle; // @synthesize paragraphStyle=_paragraphStyle;
@property (readonly, nonatomic) TSDLayout *parentLayoutForInlineAttachments;
@property (readonly, nonatomic) struct CGPoint position;
@property (readonly, strong, nonatomic) id<TSWPOffscreenColumn> previousTargetLastColumn;
@property (readonly, nonatomic) const struct TSWPTopicNumberHints *previousTargetTopicNumbers;
@property (readonly, nonatomic) BOOL pushAscendersIntoColumn;
@property (readonly, nonatomic) BOOL shouldHyphenate;
@property (readonly, nonatomic) BOOL shrinkTextToFit;
@property (strong, nonatomic) id<TSWPStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
@property (readonly) Class superclass;
@property (strong, nonatomic) TSUColor *textColorOverride; // @synthesize textColorOverride=_textColorOverride;
@property (readonly, nonatomic) BOOL textIsVertical;
@property (readonly, nonatomic) double textScaleFactor;
@property (readonly, nonatomic) unsigned int verticalAlignment;
@property (readonly, nonatomic) BOOL wantsLineFragments;

- (void)addAttachmentLayout:(id)arg1;
- (BOOL)adjustColumnOriginForAlignment;
- (BOOL)caresAboutStorageChanges;
- (id)columnMetricsForCharIndex:(unsigned long long)arg1 outRange:(struct _NSRange *)arg2;
- (id)currentAnchoredDrawableLayouts;
- (id)currentInlineDrawableLayouts;
- (void)dealloc;
- (void)drawColumn:(id)arg1 inContext:(struct CGContext *)arg2 isFlipped:(BOOL)arg3 viewScale:(double)arg4;
- (void)drawColumn:(id)arg1 selection:(id)arg2 inContext:(struct CGContext *)arg3 isFlipped:(BOOL)arg4 viewScale:(double)arg5;
- (void)drawText:(id)arg1 inContext:(struct CGContext *)arg2 minSize:(struct CGSize)arg3 maxSize:(struct CGSize)arg4 anchor:(struct CGPoint)arg5 flags:(int)arg6 viewScale:(double)arg7;
- (BOOL)forceWesternLineBreaking;
- (double)gapForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
- (id)initWithParagraphStyle:(id)arg1;
- (id)initWithParagraphStyle:(id)arg1 columnStyle:(id)arg2;
- (id)initWithParagraphStyle:(id)arg1 columnStyle:(id)arg2 alignmentForNaturalAlignment:(unsigned int)arg3 naturalDirection:(int)arg4;
- (id)initWithParagraphStyle:(id)arg1 listStyle:(id)arg2;
- (id)initWithParagraphStyle:(id)arg1 listStyle:(id)arg2 columnStyle:(id)arg3;
- (id)initWithParagraphStyle:(id)arg1 listStyle:(id)arg2 columnStyle:(id)arg3 alignmentForNaturalAlignment:(unsigned int)arg4 naturalDirection:(int)arg5;
- (BOOL)isLastTarget;
- (BOOL)isLayoutOffscreen;
- (unsigned long long)iterativeAttachmentPositioningMaxPassCount;
- (id)layoutForInlineDrawable:(id)arg1;
- (void)layoutManager:(id)arg1 didClearDirtyRangeWithDelta:(long long)arg2 afterCharIndex:(unsigned long long)arg3;
- (void)layoutManagerNeedsLayout:(id)arg1;
- (id)layoutText:(id)arg1 kind:(int)arg2 minSize:(struct CGSize)arg3 maxSize:(struct CGSize)arg4 anchor:(struct CGPoint)arg5 flags:(int)arg6;
- (id)layoutText:(id)arg1 minSize:(struct CGSize)arg2 maxSize:(struct CGSize)arg3 anchor:(struct CGPoint)arg4 flags:(int)arg5;
- (id)layoutTextStorage:(id)arg1 minSize:(struct CGSize)arg2 maxSize:(struct CGSize)arg3 anchor:(struct CGPoint)arg4 flags:(int)arg5;
- (id)layoutTextStorage:(id)arg1 minSize:(struct CGSize)arg2 maxSize:(struct CGSize)arg3 anchor:(struct CGPoint)arg4 pageNumber:(unsigned long long)arg5 pageCount:(unsigned long long)arg6 flags:(int)arg7;
- (id)lineHintsForTarget:(id)arg1;
- (struct CGSize)measureStorage:(id)arg1;
- (struct CGSize)measureText:(id)arg1;
- (double)positionForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2 outWidth:(double *)arg3 outGap:(double *)arg4;
- (void)setNeedsDisplayInTargetRect:(struct CGRect)arg1;
- (BOOL)shouldPositionAttachmentsIteratively;
- (struct CGRect)targetRectForCanvasRect:(struct CGRect)arg1;
- (id)textWrapper;
- (id)validatedLayoutForAnchoredDrawable:(id)arg1;
- (double)widthForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;

@end

