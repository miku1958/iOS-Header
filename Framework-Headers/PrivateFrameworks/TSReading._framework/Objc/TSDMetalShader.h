//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class MTLRenderPipelineReflection, NSString;
@protocol MTLRenderPipelineState;

@interface TSDMetalShader : NSObject
{
    long long _vertexUniformsIndex;
    unsigned long long _vertexUniformsSize;
    long long _fragmentUniformsIndex;
    unsigned long long _fragmentUniformsSize;
    id<MTLRenderPipelineState> _pipelineState;
    MTLRenderPipelineReflection *_pipelineReflectionObject;
    unsigned long long _bufferIndex;
    NSString *_name;
}

@property (readonly, nonatomic) unsigned long long bufferIndex; // @synthesize bufferIndex=_bufferIndex;
@property (copy, nonatomic) NSString *name; // @synthesize name=_name;
@property (readonly, nonatomic) MTLRenderPipelineReflection *pipelineReflectionObject; // @synthesize pipelineReflectionObject=_pipelineReflectionObject;
@property (readonly, nonatomic) id<MTLRenderPipelineState> pipelineState; // @synthesize pipelineState=_pipelineState;

- (id)description;
- (id)initCustomShaderWithVertexShader:(id)arg1 fragmentShader:(id)arg2 device:(id)arg3 library:(id)arg4 colorAttachment:(id)arg5;
- (id)initCustomShaderWithVertexShader:(id)arg1 fragmentShader:(id)arg2 device:(id)arg3 library:(id)arg4 colorAttachment:(id)arg5 velocityAttachment:(id)arg6;
- (id)initDefaultBlendShaderWithDevice:(id)arg1 colorAttachment:(id)arg2 velocityAttachment:(id)arg3 motionBlur:(BOOL)arg4;
- (id)initDefaultBloomShaderWithDevice:(id)arg1 colorAttachment:(id)arg2;
- (id)initDefaultGaussianBlurShaderWithDevice:(id)arg1 colorAttachment:(id)arg2 halfSizedRadius:(BOOL)arg3;
- (id)initDefaultNeighborMaxBlurShaderWithDevice:(id)arg1 colorAttachment:(id)arg2;
- (id)initDefaultShaderWithVertexShader:(id)arg1 fragmentShader:(id)arg2 device:(id)arg3 colorAttachment:(id)arg4;
- (id)initDefaultSingleDirectionMotionBlurShaderWithDevice:(id)arg1 colorAttachment:(id)arg2;
- (id)initDefaultTextureAndOpacityMotionBlurShaderWithDevice:(id)arg1 colorAttachment:(id)arg2 velocityAttachment:(id)arg3 motionBlur:(BOOL)arg4;
- (id)initDefaultTextureAndOpacityShaderWithDevice:(id)arg1 colorAttachment:(id)arg2;
- (id)initDefaultTextureMotionBlurShaderWithDevice:(id)arg1 colorAttachment:(id)arg2 velocityAttachment:(id)arg3;
- (id)initDefaultTextureShaderWithDevice:(id)arg1 colorAttachment:(id)arg2;
- (id)initDefaultTileMaxBlurShaderWithDevice:(id)arg1 colorAttachment:(id)arg2;
- (id)initDefaultVelocityCollectionShaderWithDevice:(id)arg1 colorAttachment:(id)arg2;
- (id)initDefaultVelocityVisualizerShaderWithDevice:(id)arg1 colorAttachment:(id)arg2;
- (id)initQuadMotionBlurTextureShaderWithFragmentShader:(id)arg1 device:(id)arg2 library:(id)arg3 colorAttachment:(id)arg4 velocityAttachment:(id)arg5;
- (id)initQuadTextureShaderWithFragmentShader:(id)arg1 device:(id)arg2 library:(id)arg3 colorAttachment:(id)arg4;
- (id)initQuadTextureShaderWithFragmentShader:(id)arg1 device:(id)arg2 library:(id)arg3 colorAttachment:(id)arg4 velocityAttachment:(id)arg5;
- (id)initWithDefaultVertexShader:(id)arg1 fragmentShader:(id)arg2 device:(id)arg3 colorAttachment:(id)arg4 velocityAttachment:(id)arg5 label:(id)arg6 setupUniforms:(BOOL)arg7;
- (id)p_createPipelineStateWithRenderPipelineDescriptor:(id)arg1 device:(id)arg2 setupUniforms:(BOOL)arg3;
- (long long)p_indexOfUniformsFromMetalArguments:(id)arg1 size:(unsigned long long *)arg2 bufferIndex:(unsigned long long *)arg3;
- (void)p_setDefaultVertexUniforms;
- (void)p_setupPipelineStateWithVertexFunction:(id)arg1 fragmentShader:(id)arg2 device:(id)arg3 library:(id)arg4 colorAttachment:(id)arg5 velocityAttachment:(id)arg6 setupUniforms:(BOOL)arg7;
- (void)p_setupPipelineStateWithVertexShader:(id)arg1 fragmentShader:(id)arg2 device:(id)arg3 library:(id)arg4 colorAttachment:(id)arg5 velocityAttachment:(id)arg6 setupUniforms:(BOOL)arg7;
- (void)setPipelineStateWithEncoder:(id)arg1;
- (void)setPipelineStateWithEncoder:(id)arg1 fragmentBytes:(const void *)arg2;
- (void)setPipelineStateWithEncoder:(id)arg1 vertexBytes:(const void *)arg2;
- (void)setPipelineStateWithEncoder:(id)arg1 vertexBytes:(const void *)arg2 fragmentBytes:(const void *)arg3;

@end

