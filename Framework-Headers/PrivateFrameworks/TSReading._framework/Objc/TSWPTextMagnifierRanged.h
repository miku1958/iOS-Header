//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIView.h>

#import <TSReading/TSWPTextMagnifier-Protocol.h>
#import <TSReading/TSWPTextMagnifierRendererDelegate-Protocol.h>

@class NSString, TSWPRep, TSWPTextMagnifierRenderer, TSWPTextMagnifierTimeWeightedPoint;

@interface TSWPTextMagnifierRanged : UIView <TSWPTextMagnifier, TSWPTextMagnifierRendererDelegate>
{
    TSWPRep *_target;
    struct CGPoint _magnificationPoint;
    struct CGPoint _offset;
    struct CGPoint _animationPoint;
    TSWPTextMagnifierTimeWeightedPoint *_weightedPoint;
    TSWPTextMagnifierRenderer *_magnifierRenderer;
    BOOL _inPlace;
}

@property (nonatomic) struct CGPoint animationPoint; // @synthesize animationPoint=_animationPoint;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) struct CGPoint magnificationPoint;
@property (readonly, nonatomic) NSString *maskImageName;
@property (nonatomic) struct CGPoint offset; // @synthesize offset=_offset;
@property (readonly, nonatomic) NSString *overlayImageName;
@property (readonly) Class superclass;
@property (strong, nonatomic) TSWPRep *target; // @synthesize target=_target;
@property (readonly, nonatomic) struct CGPoint terminalPoint;
@property (readonly, nonatomic) BOOL terminalPointPlacedCarefully;
@property (readonly, nonatomic) NSString *underlayImageName;

- (void)autoscrollWillNotStart;
- (void)beginMagnifyingTarget:(id)arg1 magnificationPoint:(struct CGPoint)arg2 offset:(struct CGPoint)arg3 animated:(BOOL)arg4;
- (void)canvasNeedsDisplay;
- (double)currentOffset;
- (void)dealloc;
- (void)drawMagnifierClippedCanvasLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (double)horizontalMovement;
- (double)horizontalMovementAtTime:(double)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)postAutoscrollPoint:(struct CGPoint)arg1;
- (void)setAutoscrollDirections:(int)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)setNeedsDisplay;
- (BOOL)shouldHideCanvasLayer;
- (void)stopMagnifying:(BOOL)arg1;
- (void)updateFrame;
- (BOOL)wasPlacedCarefullyAtTime:(double)arg1;

@end

