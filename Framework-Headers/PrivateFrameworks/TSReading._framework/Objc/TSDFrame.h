//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <TSReading/TSDStroke.h>

@class NSString, TSDFrameSpec;

@interface TSDFrame : TSDStroke
{
    TSDFrameSpec *mSpec;
    NSString *mFrameName;
    double mAssetScale;
    BOOL mScaledSizesValid;
    double mLeftWidth;
    double mRightWidth;
    double mTopHeight;
    double mBottomHeight;
    struct CGSize mAdornmentSize;
}

@property (readonly, nonatomic) double assetScale; // @synthesize assetScale=mAssetScale;
@property (readonly, nonatomic) TSDFrameSpec *frameSpec; // @synthesize frameSpec=mSpec;

+ (Class)mutableClass;
- (id)archivableFrameName;
- (BOOL)canApplyDirectlyToRepCALayer;
- (BOOL)canApplyToCAShapeLayer;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (struct CGRect)coverageRect:(struct CGRect)arg1;
- (struct CGRect)coverageRectWithoutAdornment:(struct CGRect)arg1;
- (void)dealloc;
- (id)description;
- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (BOOL)drawsInOneStep;
- (id)frameName;
- (BOOL)hasMask;
- (unsigned long long)hash;
- (struct CGRect)i_adornmentRectForRect:(struct CGRect)arg1;
- (double)i_bottomHeight;
- (double)i_leftWidth;
- (double)i_rightWidth;
- (double)i_topHeight;
- (BOOL)i_willRenderForRect:(struct CGRect)arg1;
- (id)initWithFrameName:(id)arg1;
- (id)initWithFrameSpec:(id)arg1;
- (id)initWithFrameSpec:(id)arg1 assetScale:(double)arg2;
- (id)initWithFrameSpec:(id)arg1 assetScale:(double)arg2 archivableFrameName:(id)arg3;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isFrame;
- (BOOL)isNullStroke;
- (double)minimumAssetScale;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (struct _TSDStrokeOutsets)outsets;
- (struct CGRect)p_coverageRectWithAdornment:(struct CGRect)arg1;
- (struct CGRect)p_coverageRectWithoutAdornment:(struct CGRect)arg1;
- (struct CGSize)p_minimumRenderedSize;
- (void)paintPath:(struct CGPath *)arg1 wantsInteriorStroke:(BOOL)arg2 inContext:(struct CGContext *)arg3 useFastDrawing:(BOOL)arg4;
- (BOOL)prefersToApplyToCAShapeLayerDuringManipulation;
- (BOOL)shouldRender;
- (BOOL)shouldRenderForSizeIncludingCoverage:(struct CGSize)arg1;
- (id)strokeByTransformingByTransform:(struct CGAffineTransform)arg1;
- (BOOL)supportsColor;
- (BOOL)supportsLineOptions;
- (BOOL)supportsPattern;

@end

