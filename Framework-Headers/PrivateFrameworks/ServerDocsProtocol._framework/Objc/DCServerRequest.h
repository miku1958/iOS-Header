//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <ServerDocsProtocol/NSURLSessionDataDelegate-Protocol.h>
#import <ServerDocsProtocol/NSURLSessionDelegate-Protocol.h>
#import <ServerDocsProtocol/NSURLSessionDownloadDelegate-Protocol.h>

@class DCConnectivityTracker, DCService, HTTPSASLClientSessionManager, NSHTTPURLResponse, NSMutableData, NSMutableURLRequest, NSOperationQueue, NSString, NSURLSession;

@interface DCServerRequest : NSObject <NSURLSessionDelegate, NSURLSessionDownloadDelegate, NSURLSessionDataDelegate>
{
    BOOL _usingBackgroundSession;
    CDUnknownBlockType _responseHandler;
    NSOperationQueue *_sessionQueue;
    NSURLSession *_session;
    DCService *_service;
    DCConnectivityTracker *_connectivityTracker;
    NSMutableURLRequest *_request;
    NSHTTPURLResponse *_httpResponse;
    NSMutableData *_responseData;
}

@property (readonly, nonatomic) HTTPSASLClientSessionManager *HTTPSASLClientSessionManager;
@property (strong, nonatomic) DCConnectivityTracker *connectivityTracker; // @synthesize connectivityTracker=_connectivityTracker;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) NSHTTPURLResponse *httpResponse; // @synthesize httpResponse=_httpResponse;
@property (strong, nonatomic) NSMutableURLRequest *request; // @synthesize request=_request;
@property (strong, nonatomic) NSMutableData *responseData; // @synthesize responseData=_responseData;
@property (copy, nonatomic) CDUnknownBlockType responseHandler; // @synthesize responseHandler=_responseHandler;
@property (strong, nonatomic) DCService *service; // @synthesize service=_service;
@property (strong, nonatomic) NSURLSession *session; // @synthesize session=_session;
@property (strong, nonatomic) NSOperationQueue *sessionQueue; // @synthesize sessionQueue=_sessionQueue;
@property (readonly) Class superclass;
@property (nonatomic) BOOL usingBackgroundSession; // @synthesize usingBackgroundSession=_usingBackgroundSession;

- (void).cxx_destruct;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;
- (void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didResumeAtOffset:(long long)arg3 expectedTotalBytes:(long long)arg4;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;
- (id)_requestForMethod:(id)arg1 URI:(id)arg2 queryItems:(id)arg3 headers:(id)arg4 body:(id)arg5 timeoutInterval:(double)arg6;
- (BOOL)_shouldClearAuthCookieAndTrustedCertDataForError:(id)arg1;
- (BOOL)addAuthenticationHeadersToRequest:(id)arg1 error:(id *)arg2;
- (void)callResponseHandlerWithAuthError:(id)arg1;
- (void)clearAuthCookieAndTrustedCertData;
- (void)continueUploadForBackgroundURLSessionWithService:(id)arg1 session:(id)arg2 responseHandler:(CDUnknownBlockType)arg3;
- (id)newDefaultSession;
- (id)startBothloadTaskWithURI:(id)arg1 queryItems:(id)arg2 service:(id)arg3 headers:(id)arg4 body:(id)arg5 responseHandler:(CDUnknownBlockType)arg6;
- (id)startDownloadTaskWithURI:(id)arg1 queryItems:(id)arg2 service:(id)arg3 headers:(id)arg4 body:(id)arg5 responseHandler:(CDUnknownBlockType)arg6;
- (id)startUploadTaskWithFile:(id)arg1 URI:(id)arg2 queryItems:(id)arg3 service:(id)arg4 headers:(id)arg5 responseHandler:(CDUnknownBlockType)arg6;

@end

