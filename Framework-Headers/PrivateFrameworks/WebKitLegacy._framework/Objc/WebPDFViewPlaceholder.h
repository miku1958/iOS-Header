//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <WebCore/WAKView.h>

#import <WebKitLegacy/WebPDFDocumentRepresentation-Protocol.h>
#import <WebKitLegacy/WebPDFDocumentView-Protocol.h>

@class NSArray, NSObject, NSString, WebDataSource;
@protocol WebPDFViewPlaceholderDelegate;

@interface WebPDFViewPlaceholder : WAKView <WebPDFDocumentView, WebPDFDocumentRepresentation>
{
    NSString *_title;
    NSArray *_pageRects;
    NSArray *_pageYOrigins;
    struct CGPDFDocument *_document;
    WebDataSource *_dataSource;
    NSObject<WebPDFViewPlaceholderDelegate> *_delegate;
    BOOL _didFinishLoad;
    struct CGSize _containerSize;
    BOOL _didCompleteLayout;
}

@property struct CGSize containerSize; // @synthesize containerSize=_containerSize;
@property (readonly, copy) NSString *debugDescription;
@property NSObject<WebPDFViewPlaceholderDelegate> *delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) BOOL didCompleteLayout; // @synthesize didCompleteLayout=_didCompleteLayout;
@property (readonly) struct CGPDFDocument *doc;
@property (readonly) struct CGPDFDocument *document; // @synthesize document=_document;
@property (readonly) unsigned long long hash;
@property (strong) NSArray *pageRects; // @synthesize pageRects=_pageRects;
@property (strong) NSArray *pageYOrigins; // @synthesize pageYOrigins=_pageYOrigins;
@property (readonly) Class superclass;
@property (strong) NSString *title; // @synthesize title=_title;
@property (readonly) unsigned long long totalPages;

+ (Class)_representationClassForWebFrame:(id)arg1;
+ (void)setAsPDFDocRepAndView;
+ (id)supportedMIMETypes;
- (struct CGSize)_computePageRects:(struct CGPDFDocument *)arg1;
- (void)_doPostLoadOrUnlockTasks;
- (void)_evaluateJSForDocument:(struct CGPDFDocument *)arg1;
- (struct CGRect)_getPDFPageBounds:(struct CGPDFPage *)arg1;
- (void)_notifyDidCompleteLayout;
- (void)_updateTitleForDocumentIfAvailable;
- (void)_updateTitleForURL:(id)arg1;
- (BOOL)canProvideDocumentSource;
- (void)clearDocument;
- (void)dataSourceUpdated:(id)arg1;
- (void)dealloc;
- (void)didUnlockDocument;
- (id)documentSource;
- (void)finishedLoadingWithDataSource:(id)arg1;
- (void)layout;
- (void)receivedData:(id)arg1 withDataSource:(id)arg2;
- (void)receivedError:(id)arg1 withDataSource:(id)arg2;
- (struct CGRect)rectForPageNumber:(unsigned long long)arg1;
- (void)setDataSource:(id)arg1;
- (void)setDocument:(struct CGPDFDocument *)arg1;
- (void)simulateClickOnLinkToURL:(id)arg1;
- (void)viewDidMoveToHostWindow;
- (void)viewWillMoveToHostWindow:(id)arg1;

@end

