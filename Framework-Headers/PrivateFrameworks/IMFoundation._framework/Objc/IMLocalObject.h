//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSProtocolChecker, NSString;
@protocol OS_xpc_object;

@interface IMLocalObject : NSObject
{
    id _internal;
}

@property (readonly, nonatomic) NSObject<OS_xpc_object> *connection;
@property (readonly, nonatomic) BOOL isValid;
@property (readonly, nonatomic) NSString *portName;
@property (strong, nonatomic) NSString *processName;
@property (readonly, nonatomic) NSProtocolChecker *protocolChecker;
@property (nonatomic) id target;
@property (readonly, nonatomic) BOOL wasInterrupted;
@property (strong, nonatomic) NSArray *whitelistedClasses;

+ (id)_imLocalObjectQueue;
+ (void)_registerIMLocalObject:(id)arg1;
+ (id)_registeredIMLocalObjectForPort:(unsigned int)arg1;
+ (void)_setExceptionHandlingDisabled:(BOOL)arg1;
+ (void)_unregisterIMLocalObject:(id)arg1;
+ (void)initialize;
- (void)_clearPort:(BOOL)arg1;
- (void)_clearPort:(BOOL)arg1 signalRunLoopIfNeeded:(BOOL)arg2;
- (id)_currentMessageContext;
- (void)_enqueueInvocation:(id)arg1;
- (void)_enqueueInvocation:(id)arg1 xpcMessage:(id)arg2;
- (void)_enqueueInvocation:(id)arg1 xpcMessage:(id)arg2 submitToComponentQueue:(BOOL)arg3 isSync:(BOOL)arg4;
- (void)_enqueueInvocationWithPriority:(id)arg1 priority:(int)arg2;
- (void)_enqueueInvocationWithPriority:(id)arg1 xpcMessage:(id)arg2 priority:(int)arg3;
- (void)_enqueueInvocationWithSync:(id)arg1;
- (void)_enqueueInvocationWithSync:(id)arg1 xpcMessage:(id)arg2;
- (void)_enqueueInvocationWithSync:(id)arg1 xpcMessage:(id)arg2 submitToComponentQueue:(BOOL)arg3;
- (BOOL)_handleInvocation:(id)arg1;
- (BOOL)_handleInvocation:(id)arg1 processingComponentQueue:(BOOL)arg2;
- (void)_handleNewInvocations;
- (void)_noteNewInvocation:(BOOL)arg1;
- (id)_peekInvocation;
- (void)_popInvocation;
- (void)_portDidBecomeInvalid;
- (void)_portInterrupted;
- (void)_systemShutdown:(id)arg1;
- (void)dealloc;
- (id)description;
- (BOOL)handleInvocation:(id)arg1;
- (id)initWithTarget:(id)arg1 connection:(id)arg2 protocol:(id)arg3;
- (id)initWithTarget:(id)arg1 connection:(id)arg2 protocol:(id)arg3 forceSecureCoding:(BOOL)arg4;
- (id)initWithTarget:(id)arg1 connection:(id)arg2 protocol:(id)arg3 forceSecureCoding:(BOOL)arg4 offMainThread:(BOOL)arg5;
- (id)initWithTarget:(id)arg1 portName:(id)arg2 protocol:(id)arg3;
- (id)initWithTarget:(id)arg1 protocol:(id)arg2;
- (void)invalidate;
- (BOOL)isSameConnection:(id)arg1;
- (BOOL)isValidSelector:(SEL)arg1;
- (void)setPortName:(id)arg1;
- (void)terminated;

@end

