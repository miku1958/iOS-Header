//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <BiomePubSub/BPSSubscription.h>

@class NSMutableArray, NSMutableSet;
@protocol BPSSubscriber;

@interface _BPSAbstractOrderedMerge : BPSSubscription
{
    struct os_unfair_lock_s _lock;
    struct os_unfair_lock_s _downstreamLock;
    BOOL _recursion;
    BOOL _finished;
    BOOL _cancelled;
    unsigned long long _upstreamCount;
    id<BPSSubscriber> _downstream;
    NSMutableArray *_subscriptions;
    NSMutableArray *_activeSubscriptions;
    NSMutableArray *_buffers;
    NSMutableArray *_overflowBuffer;
    NSMutableSet *_currentlyProcessing;
    NSMutableSet *_completedUpstreamIndexes;
    long long _demand;
    unsigned long long _subscribedCount;
}

@property (strong, nonatomic) NSMutableArray *activeSubscriptions; // @synthesize activeSubscriptions=_activeSubscriptions;
@property (strong, nonatomic) NSMutableArray *buffers; // @synthesize buffers=_buffers;
@property (nonatomic) BOOL cancelled; // @synthesize cancelled=_cancelled;
@property (strong, nonatomic) NSMutableSet *completedUpstreamIndexes; // @synthesize completedUpstreamIndexes=_completedUpstreamIndexes;
@property (strong, nonatomic) NSMutableSet *currentlyProcessing; // @synthesize currentlyProcessing=_currentlyProcessing;
@property (nonatomic) long long demand; // @synthesize demand=_demand;
@property (strong, nonatomic) id<BPSSubscriber> downstream; // @synthesize downstream=_downstream;
@property (nonatomic) BOOL finished; // @synthesize finished=_finished;
@property (strong, nonatomic) NSMutableArray *overflowBuffer; // @synthesize overflowBuffer=_overflowBuffer;
@property (nonatomic) BOOL recursion; // @synthesize recursion=_recursion;
@property (nonatomic) unsigned long long subscribedCount; // @synthesize subscribedCount=_subscribedCount;
@property (strong, nonatomic) NSMutableArray *subscriptions; // @synthesize subscriptions=_subscriptions;
@property (nonatomic) unsigned long long upstreamCount; // @synthesize upstreamCount=_upstreamCount;

- (void).cxx_destruct;
- (void)cancel;
- (long long)compareFirst:(id)arg1 withSecond:(id)arg2;
- (id)initWithDownstream:(id)arg1 upstreamCount:(unsigned long long)arg2;
- (id)nextProcessingIndex;
- (id)nextValue;
- (void)receiveCompletion:(id)arg1 atIndex:(unsigned long long)arg2;
- (long long)receiveInput:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)receiveSubscription:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)requestDemand:(long long)arg1;
- (id)upstreamSubscriptions;

@end

