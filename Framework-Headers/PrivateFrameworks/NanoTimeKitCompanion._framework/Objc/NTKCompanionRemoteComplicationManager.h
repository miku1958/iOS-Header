//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <NanoTimeKitCompanion/NTKComplicationCollectionObserver-Protocol.h>
#import <NanoTimeKitCompanion/NTKRemoteComplicationProvider-Protocol.h>

@class NRDevice, NSDictionary, NSMutableDictionary, NSString, NTKComplicationCollection;
@protocol OS_dispatch_queue;

@interface NTKCompanionRemoteComplicationManager : NSObject <NTKComplicationCollectionObserver, NTKRemoteComplicationProvider>
{
    NTKComplicationCollection *_remoteComplications;
    NSDictionary *_installedComplications;
    NSMutableDictionary *_syncedComplications;
    NRDevice *_device;
    NSObject<OS_dispatch_queue> *_serialQueue;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (strong, nonatomic) NRDevice *device; // @synthesize device=_device;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) NSDictionary *installedComplications; // @synthesize installedComplications=_installedComplications;
@property (strong, nonatomic) NTKComplicationCollection *remoteComplications; // @synthesize remoteComplications=_remoteComplications;
@property (strong, nonatomic) NSObject<OS_dispatch_queue> *serialQueue; // @synthesize serialQueue=_serialQueue;
@property (readonly) Class superclass;
@property (strong, nonatomic) NSMutableDictionary *syncedComplications; // @synthesize syncedComplications=_syncedComplications;

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)_activeDeviceChanged;
- (void)_appStartedInstall;
- (void)_fetchInstalledApps;
- (void)_load;
- (void)_reloadApps;
- (id)_safeComplications;
- (id)_safeInstalledComplications;
- (void)complicationCollection:(id)arg1 didRemoveSampleTemplatesForClient:(id)arg2;
- (void)complicationCollection:(id)arg1 didUpdateSampleTemplateForClient:(id)arg2;
- (void)complicationCollectionDidLoad:(id)arg1;
- (void)dealloc;
- (void)enumerateEnabledVendorsForComplicationFamily:(long long)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)init;
- (id)localizedAppNameForClientIdentifier:(id)arg1;
- (BOOL)vendorExistsWithClientIdentifier:(id)arg1 appBundleIdentifier:(id)arg2;

@end

