//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <NanoTimeKitCompanion/NTKFaceCollectionObserver-Protocol.h>

@class NSError, NSMutableArray, NSMutableSet, NSSet, NSString, NSTimer, NSUUID, NTKGreenfieldDecodedRecipe, NTKGreenfieldDownloader, NTKPersistentFaceCollection;
@protocol NTKGreenfieldAddWatchFaceManagerDelegate, OS_dispatch_queue;

@interface NTKGreenfieldAddWatchFaceManager : NSObject <NTKFaceCollectionObserver>
{
    NTKGreenfieldDecodedRecipe *_decodedRecipe;
    unsigned long long _decodingState;
    unsigned long long _uiState;
    NTKGreenfieldDownloader *_downloader;
    NSObject<OS_dispatch_queue> *_serialQueue;
    NTKPersistentFaceCollection *_library;
    NSTimer *_libraryTimeoutTimer;
    BOOL _isLibraryTimeout;
    NSError *_failedError;
    NSMutableArray *_orderedPendingComplicationsItemIds;
    NSMutableSet *_skippedPendingComplicationsItemIds;
    NSMutableSet *_installedComplicationIds;
    NSSet *_locallyAvailableItemIds;
    NSSet *_appsThatRequireUpdatesItemIds;
    NSString *_sourceApplicationBundleIdentifier;
    unsigned long long _totalNonInstalledSlotCount;
    NSMutableSet *_unavailableComplicationsSlots;
    NSMutableSet *_unavailableComplicationsNames;
    id<NTKGreenfieldAddWatchFaceManagerDelegate> _delegate;
    long long _remainingAppsToInstallCount;
    long long _viewedNonInstalledAppCount;
    long long _totalNonInstalledAppCount;
    NSUUID *_addedFaceID;
}

@property (readonly, nonatomic) NSString *addFaceDescription;
@property (readonly, nonatomic) NSUUID *addedFaceID; // @synthesize addedFaceID=_addedFaceID;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NTKGreenfieldDecodedRecipe *decodedRecipe; // @synthesize decodedRecipe=_decodedRecipe;
@property (weak, nonatomic) id<NTKGreenfieldAddWatchFaceManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) long long remainingAppsToInstallCount; // @synthesize remainingAppsToInstallCount=_remainingAppsToInstallCount;
@property (readonly) Class superclass;
@property (readonly, nonatomic) long long totalNonInstalledAppCount; // @synthesize totalNonInstalledAppCount=_totalNonInstalledAppCount;
@property (readonly, nonatomic) long long viewedNonInstalledAppCount; // @synthesize viewedNonInstalledAppCount=_viewedNonInstalledAppCount;

- (void).cxx_destruct;
- (id)_addToLibraryOrUpdateFaceInLibrary;
- (id)_analyticsExitScreenNameForCurrentState;
- (id)_analyticsModelForAddFaceEvents;
- (id)_appNameFromItemId:(id)arg1;
- (void)_buildUnavailableComplicationsInformationWithInstalledBundleIds:(id)arg1;
- (id)_canAddDecodedFaceToLibrary;
- (BOOL)_canAddFaceWithoutAllCompicationInstalled;
- (void)_cancelLibraryTimeoutTimer;
- (void)_cleanUpDownloader;
- (id)_curPendingComplicationItemId;
- (void)_decodeUrl:(id)arg1;
- (void)_handleAddWatchFaceManagerDidFinishWithError:(id)arg1;
- (void)_libraryTimeoutTimerFired;
- (id)_missingAppsDescription;
- (void)_moveAndNotifyDelegateToStartStateIfPossible;
- (void)_queue_fetchInstalledAppsOnWatchWithithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)_queue_fetchLocallyAvailableAppsWithError:(id *)arg1;
- (void)_refreshInstalledComplicationsWithContinueBlock:(CDUnknownBlockType)arg1;
- (void)_startDownloadWirthURL:(id)arg1;
- (void)_startLibraryTimeoutTimer;
- (void)_updateUIStateAndNotifyDelegate:(unsigned long long)arg1;
- (void)dealloc;
- (void)decodeWatchFaceWithURL:(id)arg1 sourceApplicationBundleIdentifier:(id)arg2;
- (void)faceCollectionDidLoad:(id)arg1;
- (void)handleAddToMyFacesAction;
- (void)handleContinueAction;
- (void)handleDidExitAddWatchFaceFlow;
- (void)handleDoneAction;
- (void)handleRevisitSkippedComplicationsAction;
- (void)handleSkipComplicationAction;
- (BOOL)hasSkippedComplications;
- (id)init;
- (void)markComplicationAsInstalled;
- (void)openAppStore;
- (long long)remainingComplicationsToInstallCount;
- (id)skippedComplicationsSlots;

@end

