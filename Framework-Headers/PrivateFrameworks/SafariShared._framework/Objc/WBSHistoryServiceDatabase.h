//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <SafariShared/WBSHistoryServiceDatabaseProtocol-Protocol.h>
#import <SafariShared/WBSSQLiteDatabaseDelegate-Protocol.h>

@class NSDictionary, NSMapTable, NSMutableArray, NSMutableSet, NSString, NSURL, WBSHistoryCrypto, WBSHistoryServiceURLCompletion, WBSHistoryTagDatabaseController, WBSSQLiteDatabase, WBSSQLiteStatementCache;
@protocol OS_dispatch_queue;

@interface WBSHistoryServiceDatabase : NSObject <WBSSQLiteDatabaseDelegate, WBSHistoryServiceDatabaseProtocol>
{
    NSObject<OS_dispatch_queue> *_queue;
    unsigned long long _currentRangeForTemporaryID;
    WBSHistoryCrypto *_crypto;
    WBSSQLiteDatabase *_database;
    NSDictionary *_databaseOptions;
    WBSSQLiteStatementCache *_statements;
    NSMapTable *_delegates;
    NSMapTable *_listeners;
    NSMutableSet *_registeredListeners;
    struct LatestVisitInformationMap _latestVisitMap;
    BOOL _hasComputedLatestVisit;
    unordered_map_fcbaed0a _temporaryIDToItem;
    unordered_map_fcbaed0a _visitForTemporaryID;
    NSMutableArray *_pendingVisits;
    struct atomic<bool> _integrityCheckPending;
    NSURL *_clearHistoryInProgressFileURL;
    CDUnknownBlockType _pendingVisitsTimeout;
    WBSHistoryTagDatabaseController *_tagController;
    NSString *_databaseID;
    NSURL *_databaseURL;
    WBSHistoryServiceURLCompletion *_urlCompletion;
}

@property (readonly, copy, nonatomic) NSString *databaseID; // @synthesize databaseID=_databaseID;
@property (readonly, nonatomic) NSURL *databaseURL; // @synthesize databaseURL=_databaseURL;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, nonatomic) WBSHistoryServiceURLCompletion *urlCompletion; // @synthesize urlCompletion=_urlCompletion;

- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)_addAutocompleteTrigger:(id)arg1 forURL:(id)arg2 error:(id *)arg3;
- (id)_addOrModifyObjects:(id)arg1;
- (void)_checkpointWriteAheadLog;
- (id)_clearAllHistoryInsertingTombstoneUpToDate:(id)arg1;
- (id)_clearHistoryItems:(id)arg1 afterDate:(id)arg2 beforeDate:(id)arg3 tombstoneMode:(unsigned long long)arg4;
- (id)_clearHistoryVisitsAddedAfterDate:(id)arg1 beforeDate:(id)arg2 tombstoneMode:(unsigned long long)arg3;
- (void)_clearWBSHistorySQLiteStoreClearHistoryKeys;
- (void)_closeTagController;
- (id)_collectDeletedHostnamesForPlan:(struct DeletionPlan *)arg1;
- (id)_collectDeletedURLsForPlan:(struct DeletionPlan *)arg1;
- (BOOL)_commitPendingItems:(id)arg1;
- (void)_commitPendingUpdates;
- (BOOL)_commitPendingVisits:(id)arg1;
- (id)_convertTombstoneWithGenerationToSecureFormat:(long long)arg1 lastSyncedGeneration:(long long)arg2;
- (unsigned long long)_countOfItems;
- (long long)_currentGeneration;
- (id)_dateForMetadataKey:(id)arg1 error:(id *)arg2;
- (id)_deleteOldestItems:(unsigned long long)arg1 forPlan:(struct DeletionPlan *)arg2;
- (void)_dispatchEvent:(id)arg1 listenersToIgnore:(id)arg2 persistForDelayedDispatching:(BOOL)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_ensureDatabaseIsSynced;
- (id)_ensureLatestVisitsAreComputed;
- (id)_executePlan:(struct DeletionPlan *)arg1 outDeletedItemCount:(unsigned long long *)arg2 outDeletedVisitCount:(unsigned long long *)arg3;
- (id)_expireOldVisits:(double)arg1;
- (id)_fetchEventsForListener:(id)arg1 error:(id *)arg2;
- (id)_fetchListenerNamesFromDatabase:(id *)arg1;
- (id)_fetchObjectToTagMappingsWithOptions:(unsigned long long)arg1 predicate:(id)arg2 writeDescriptor:(int)arg3;
- (id)_fetchTagsWithOptions:(unsigned long long)arg1 predicate:(id)arg2 writeDescriptor:(int)arg3;
- (id)_fetchTombstonesWithOptions:(unsigned long long)arg1 predicate:(id)arg2 writeDescriptor:(int)arg3;
- (id)_fetchVisitsWithOptions:(unsigned long long)arg1 predicate:(id)arg2 writeDescriptor:(int)arg3;
- (id)_findAllRelatedVisits:(const unordered_set_da619913 *)arg1 forPlan:(struct DeletionPlan *)arg2 afterDate:(id)arg3 beforeDate:(id)arg4;
- (id)_findAllRelatedVisitsToItems:(const unordered_set_da619913 *)arg1 forPlan:(struct DeletionPlan *)arg2;
- (id)_findItemIDsForPendingVisitsWithError:(id *)arg1;
- (id)_findObsoleteItemsForPlan:(struct DeletionPlan *)arg1;
- (void)_finishedClearingHistory;
- (id)_generateDisposedVisitsForPlan:(struct DeletionPlan *)arg1;
- (id)_generateItemsDictionary:(const unordered_map_fcbaed0a *)arg1;
- (id)_generateUpdatedLastVisit:(const unordered_map_fcbaed0a *)arg1;
- (id)_generateVisitsDictionary:(const unordered_map_fcbaed0a *)arg1;
- (id)_insertItem:(id)arg1;
- (id)_insertTombstone:(id)arg1;
- (id)_insertTombstonesForURLs:(id)arg1 afterDate:(id)arg2 beforeDate:(id)arg3 tombstoneMode:(unsigned long long)arg4;
- (id)_insertVisit:(id)arg1;
- (id)_lastSeenDateForCloudClientVersion:(unsigned long long)arg1;
- (long long)_lastSyncedGeneration;
- (id)_markEventsAsReceivedByListener:(id)arg1 eventIDs:(id)arg2;
- (id)_metadataForKey:(id)arg1 error:(id *)arg2;
- (int)_migrateToCurrentSchemaVersionIfNeeded;
- (void)_notifyDelegatesOfItemIDs;
- (void)_notifyDelegatesOfVisitIDs;
- (void)_notifyExecutionOfPlan:(struct DeletionPlan *)arg1;
- (double)_oldestLatestVisit;
- (long long)_permanentIDsForItemIfAvailable:(long long)arg1;
- (long long)_permanentIDsForVisitIfAvailable:(long long)arg1;
- (BOOL)_prepareDatabase:(id *)arg1;
- (id)_preparePlan:(struct DeletionPlan *)arg1 ageLimit:(double)arg2 itemCountLimit:(unsigned long long)arg3;
- (id)_preparePlan:(struct DeletionPlan *)arg1 itemsToDelete:(const unordered_set_da619913 *)arg2 visitsToDelete:(const unordered_set_da619913 *)arg3 afterDate:(id)arg4 beforeDate:(id)arg5;
- (unsigned long long)_pruneTombstonesOnDatabaseQueueWithEndDatePriorToDate:(id)arg1 error:(id *)arg2;
- (void)_queuePendingUpdates;
- (id)_recomputeItemScores:(unordered_set_da619913 *)arg1;
- (unordered_map_fcbaed0a)_recomputeLatestVisitsForItems:(const unordered_set_da619913 *)arg1 error:(id *)arg2;
- (id)_recomputeVisitScores:(unordered_set_da619913 *)arg1;
- (void)_registerHistoryTagFrecencyScoringFunction;
- (void)_removeLegacyHistoryDatabaseIfNeeded;
- (BOOL)_reopenDatabase:(id *)arg1;
- (id)_setMetadataValue:(id)arg1 forKey:(id)arg2;
- (BOOL)_shouldEmitLegacyTombstones;
- (void)_startingClearHistoryOperationForStartDate:(id)arg1 endDate:(id)arg2;
- (id)_updateByAddingOrModifyObjects:(id)arg1 updateCurrentGeneration:(id)arg2 updateLastSyncGeneration:(id)arg3 updateLastMaintenance:(id)arg4;
- (id)_updateItem:(id)arg1;
- (void)_updateItem:(long long)arg1 visitCountScore:(long long)arg2 dailyVisitCounts:(id)arg3 weeklyVisitCounts:(id)arg4 shouldRecomputeDerivedVisitCounts:(BOOL)arg5;
- (id)_updateListenerRegistration:(id)arg1 lastSeen:(double)arg2;
- (id)_updateVisit:(id)arg1;
- (id)_updateVisitRedirectRelationships:(id)arg1;
- (void)_updateVisitWithIdentifier:(id)arg1 removeAttributes:(unsigned long long)arg2 addAttributes:(unsigned long long)arg3 pendingVisit:(id)arg4;
- (long long)_writeEventToDatabase:(id)arg1 listeners:(id)arg2 error:(id *)arg3;
- (void)addAutocompleteTrigger:(id)arg1 forURL:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)addDelegate:(id)arg1 listenerName:(id)arg2 forConnection:(id)arg3;
- (long long)allocateTemporaryIDRange:(long long *)arg1;
- (void)assignHistoryItemWithID:(long long)arg1 toTopicTagsWithIDs:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)checkIfLocalVisitExistsForDatabaseIDs:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)clearAllHistoryInsertingTombstoneUpToDate:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)clearHistoryItems:(id)arg1 afterDate:(id)arg2 beforeDate:(id)arg3 tombstoneMode:(unsigned long long)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)clearHistoryVisitsAddedAfterDate:(id)arg1 beforeDate:(id)arg2 tombstoneMode:(unsigned long long)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)close;
- (void)computeFrequentlyVisitedSites:(unsigned long long)arg1 minimalVisitCountScore:(unsigned long long)arg2 disallowList:(id)arg3 allowList:(id)arg4 options:(unsigned long long)arg5 currentTime:(double)arg6 completionHandler:(CDUnknownBlockType)arg7;
- (void)convertTombstoneWithGenerationToSecureFormat:(long long)arg1 lastSyncedGeneration:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)createTagsForIdentifiers:(id)arg1 withTitles:(id)arg2 type:(unsigned long long)arg3 level:(long long)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)database:(id)arg1 hadSevereError:(id)arg2;
- (void)deletionPlanForAgeLimit:(double)arg1 itemCountLimit:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)deletionPlanForItemsToDelete:(id)arg1 visitsToDelete:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)dispatchEvent:(id)arg1 listenersToIgnore:(id)arg2 persistForDelayedDispatching:(BOOL)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)ensureLatestVisitsAreComputed:(CDUnknownBlockType)arg1;
- (void)expireOldVisits:(double)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)fetchAllTombstonesWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)fetchAutocompleteTriggersForURLString:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)fetchCloudClientVersionTable:(CDUnknownBlockType)arg1;
- (void)fetchDatabaseURL:(CDUnknownBlockType)arg1;
- (void)fetchDomainExpansions:(CDUnknownBlockType)arg1;
- (void)fetchEventsForListener:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)fetchMetadataForKeys:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)fetchWithOptions:(unsigned long long)arg1 predicate:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)finishClearingHistoryIfNecessaryWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)flushWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)init;
- (id)initWithID:(id)arg1 url:(id)arg2 options:(id)arg3 error:(id *)arg4;
- (BOOL)isOpen;
- (void)lastSeenDateForCloudClientVersion:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)markEventsAsReceivedByListener:(id)arg1 eventIDs:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)performMaintenanceWithAgeLimit:(double)arg1 itemCountLimit:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)pruneTombstonesWithEndDatePriorToDate:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)recomputeItemScoresWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)recordVisitWithIdentifier:(id)arg1 sourceVisit:(id)arg2 title:(id)arg3 wasHTTPNonGet:(BOOL)arg4 loadSuccessful:(BOOL)arg5 origin:(long long)arg6 attributes:(unsigned long long)arg7 completionHandler:(CDUnknownBlockType)arg8;
- (void)replayAndAddTombstones:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)resetCloudHistoryDataWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)searchForUserTypedString:(id)arg1 options:(unsigned long long)arg2 currentTime:(double)arg3 writeHandle:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)setLastSeenDate:(id)arg1 forCloudClientVersion:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)setMetadataValue:(id)arg1 forKey:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)setTitle:(id)arg1 ofTagWithID:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)updateDatabaseAfterSuccessfulSyncWithGeneration:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)updateVisitWithIdentifier:(id)arg1 removeAttributes:(unsigned long long)arg2 addAttributes:(unsigned long long)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)updateVisitWithIdentifier:(id)arg1 title:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)updateWithType:(unsigned long long)arg1 addOrModifyObjects:(id)arg2 updateCurrentGeneration:(id)arg3 updateLastSyncGeneration:(id)arg4 updateLastMaintenance:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (void)vacuumHistoryWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)visitIdentifiersMatchingExistingVisits:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)visitsAndTombstonesNeedingSyncWithVisitSyncWindow:(double)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)warmUp;

@end

