//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSDictionary, NSMutableDictionary, NSString, NSTimer, NSXPCConnection, WBSAutomaticReadingListTrackedRecordsInfo;

@interface WBSAutomaticReadingListSocialSource : NSObject
{
    id _serviceImage;
    NSMutableDictionary *_accountsToNumberOfRequestsInProgressForOlderItems;
    NSArray *_accounts;
    NSArray *_activeAccounts;
    WBSAutomaticReadingListTrackedRecordsInfo *_recordsInfo;
    Class _fallbackIconProviderClass;
    NSDictionary *_accountsToTrackedRecordsInfoMap;
    NSTimer *_minimumTimeBetweenRequestsTimer;
    unsigned long long _numberOfRequestsInProgressForNewerItems;
    NSXPCConnection *_socialHelperConnection;
}

@property (readonly, nonatomic) NSString *accountTypeIdentifier;
@property (copy, nonatomic) NSArray *accounts; // @synthesize accounts=_accounts;
@property (strong, nonatomic) NSDictionary *accountsToTrackedRecordsInfoMap; // @synthesize accountsToTrackedRecordsInfoMap=_accountsToTrackedRecordsInfoMap;
@property (readonly, nonatomic, getter=isActive) BOOL active;
@property (readonly, copy, nonatomic) NSArray *activeAccounts; // @synthesize activeAccounts=_activeAccounts;
@property (strong, nonatomic) Class fallbackIconProviderClass; // @synthesize fallbackIconProviderClass=_fallbackIconProviderClass;
@property (strong, nonatomic) NSTimer *minimumTimeBetweenRequestsTimer; // @synthesize minimumTimeBetweenRequestsTimer=_minimumTimeBetweenRequestsTimer;
@property (nonatomic) unsigned long long numberOfRequestsInProgressForNewerItems; // @synthesize numberOfRequestsInProgressForNewerItems=_numberOfRequestsInProgressForNewerItems;
@property (readonly, nonatomic) WBSAutomaticReadingListTrackedRecordsInfo *recordsInfo; // @synthesize recordsInfo=_recordsInfo;
@property (readonly, nonatomic) id serviceImage;
@property (readonly, nonatomic) NSString *serviceName;
@property (readonly, nonatomic) NSString *serviceType;
@property (strong, nonatomic) NSXPCConnection *socialHelperConnection; // @synthesize socialHelperConnection=_socialHelperConnection;

+ (id)allSocialSources;
+ (id)itemsFromAllSocialSourcesByDate;
+ (void)refreshAllSocialSources;
- (void).cxx_destruct;
- (void)_accountsChanged:(id)arg1;
- (id)_activeAccountsFromAccountList:(id)arg1;
- (void)_addItems:(id)arg1 withAge:(int)arg2 inRange:(id)arg3 rangeOfTrackedRecordsAtTimeOfRequest:(id)arg4 forAccountWithIdentifier:(id)arg5;
- (void)_didAddItemsForAccountWithIdentifier:(id)arg1;
- (void)_didCompleteRequestForItemsWithAge:(int)arg1 accountIdentifier:(id)arg2;
- (void)_didStartRequestForItemsWithAge:(int)arg1 accountIdentifier:(id)arg2;
- (id)_existingSocialHelperConnection;
- (id)_findAccounts;
- (void)_invalidateSocialHelperConnectionIfPossible;
- (void)_minimumTimeBetweenRequestsTimerFired:(id)arg1;
- (void)_performRequestForMoreItemsWithAge:(int)arg1 accountIdentifier:(id)arg2 successHandler:(CDUnknownBlockType)arg3;
- (void)_requestOlderItemsIfNecessaryToReachMaximumForAccountWithIdentifier:(id)arg1;
- (long long)compareItem:(id)arg1 toItem:(id)arg2;
- (long long)compareNewestRecordInRange:(id)arg1 toNewestRecordInRange:(id)arg2;
- (long long)compareNewestRecordInRange:(id)arg1 toOldestRecordInRange:(id)arg2;
- (long long)compareOldestRecordInRange:(id)arg1 toOldestRecordInRange:(id)arg2;
- (void)dealloc;
- (id)init;
- (Class)itemClass;
- (double)minimumTimeBetweenRequests;
- (id)recordRange:(id)arg1 withOldestFromItem:(id)arg2;
- (void)repostItem:(id)arg1 fromAccountWithIdentifier:(id)arg2;
- (id)repostResourceURLStringForItem:(id)arg1;
- (void)requestMaximumNumberOfOlderItems;
- (void)requestMoreItemsWithAge:(int)arg1;
- (id)requestParametersForRecordsWithAge:(int)arg1 relativeTo:(id)arg2;
- (id)resourceURLString;
- (void)setShouldHideItems:(BOOL)arg1 forAccount:(id)arg2;
- (BOOL)shouldHideItemsFromAccount:(id)arg1;
- (void)updateMinimumTimeBetweenRequestsFromResponseHeaders:(id)arg1;

@end

