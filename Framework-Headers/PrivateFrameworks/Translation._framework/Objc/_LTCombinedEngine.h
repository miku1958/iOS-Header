//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <Translation/_LTSpeechTranslationDelegate-Protocol.h>
#import <Translation/_LTTranslationEngine-Protocol.h>

@class NSString, _LTSpeechTranslationResultsBuffer;
@protocol _LTSpeechTranslationDelegate, _LTTranslationEngine;

@interface _LTCombinedEngine : NSObject <_LTSpeechTranslationDelegate, _LTTranslationEngine>
{
    id<_LTSpeechTranslationDelegate> _delegate;
    BOOL _onlineTranslationStarted;
    BOOL _translationEnded;
    BOOL _serverCompleted;
    id<_LTTranslationEngine> _offlineEngine;
    id<_LTTranslationEngine> _onlineEngine;
    _LTSpeechTranslationResultsBuffer *_offlineDelegateBuffer;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) _LTSpeechTranslationResultsBuffer *offlineDelegateBuffer; // @synthesize offlineDelegateBuffer=_offlineDelegateBuffer;
@property (strong, nonatomic) id<_LTTranslationEngine> offlineEngine; // @synthesize offlineEngine=_offlineEngine;
@property (strong, nonatomic) id<_LTTranslationEngine> onlineEngine; // @synthesize onlineEngine=_onlineEngine;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)addSpeechAudioData:(id)arg1;
- (void)cancelSpeechTranslation;
- (void)endAudio;
- (void)endpoint;
- (void)hybridEndpointerFoundEndpoint;
- (id)init;
- (void)preheatAsynchronously:(BOOL)arg1 withContext:(id)arg2;
- (void)serverEndpointerFeatures:(id)arg1 locale:(id)arg2;
- (void)setLanguagesRecognized:(id)arg1;
- (void)speak:(id)arg1 withContext:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)speechRecognitionResult:(id)arg1;
- (void)startSpeechTranslationWithContext:(id)arg1 delegate:(id)arg2;
- (void)startTextToSpeechTranslationWithContext:(id)arg1 text:(id)arg2 delegate:(id)arg3;
- (void)translate:(id)arg1 withContext:(id)arg2 paragraphResult:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (void)translateSentence:(id)arg1 withContext:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (BOOL)translatesPair:(id)arg1;
- (void)translationDidFinishWithError:(id)arg1;
- (void)translatorDidTranslate:(id)arg1;

@end

