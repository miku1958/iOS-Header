//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <Translation/_LTSpeechTranslationDelegate-Protocol.h>

@class NSString, NSUUID, _LTHybridEndpointer, _LTLanguageDetector;
@protocol OS_dispatch_queue, _LTSpeechTranslationDelegate, _LTTranslationEngine;

__attribute__((visibility("hidden")))
@interface _LTServerSpeechSession : NSObject <_LTSpeechTranslationDelegate>
{
    NSObject<OS_dispatch_queue> *_queue;
    BOOL _expectFinalLidResult;
    BOOL _sentFinalLidResult;
    BOOL _translationFinishedWithoutError;
    NSUUID *_sessionID;
    id<_LTTranslationEngine> _engine;
    CDUnknownBlockType _completionHandler;
    _LTLanguageDetector *_languageDetector;
    _LTHybridEndpointer *_endpointer;
    id<_LTSpeechTranslationDelegate> _delegate;
}

@property (copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property (readonly, copy) NSString *debugDescription;
@property (strong, nonatomic) id<_LTSpeechTranslationDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) _LTHybridEndpointer *endpointer; // @synthesize endpointer=_endpointer;
@property (strong, nonatomic) id<_LTTranslationEngine> engine; // @synthesize engine=_engine;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) _LTLanguageDetector *languageDetector; // @synthesize languageDetector=_languageDetector;
@property (strong, nonatomic) NSUUID *sessionID; // @synthesize sessionID=_sessionID;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)addSpeechAudioData:(id)arg1;
- (void)cancel;
- (void)delegateTranslationDidFinishWithError:(id)arg1;
- (void)endAudio;
- (void)hybridEndpointerFoundEndpoint;
- (id)initWithEngine:(id)arg1 delegate:(id)arg2;
- (void)languageDetectionCompleted;
- (void)languageDetectionResult:(id)arg1;
- (void)serverEndpointerFeatures:(id)arg1 locale:(id)arg2;
- (void)speechRecognitionResult:(id)arg1;
- (void)startSpeechTranslationWithContext:(id)arg1;
- (void)startTextToSpeechTranslationWithContext:(id)arg1 text:(id)arg2;
- (void)translationDidFinishWithError:(id)arg1;
- (void)translatorDidTranslate:(id)arg1;

@end

