//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <Translation/FLTBFBufferAccessor-Protocol.h>
#import <Translation/NSCopying-Protocol.h>

@class FTAudioPacket, FTCheckForSpeechRequest, FTFinishAudio, FTResetServerEndpointer, FTSetAlternateRecognitionSausage, FTSetEndpointerState, FTSetRequestOrigin, FTSetSpeechContext, FTSetSpeechProfile, FTStartSpeechRequest, FTUpdateAudioInfo, NSData, NSMutableDictionary;

__attribute__((visibility("hidden")))
@interface FTRecognitionStreamingRequest : NSObject <FLTBFBufferAccessor, NSCopying>
{
    NSMutableDictionary *_storage;
    NSData *_data;
    const struct RecognitionStreamingRequest *_root;
}

@property (readonly, nonatomic) FTAudioPacket *contentAsFTAudioPacket;
@property (readonly, nonatomic) FTCheckForSpeechRequest *contentAsFTCheckForSpeechRequest;
@property (readonly, nonatomic) FTFinishAudio *contentAsFTFinishAudio;
@property (readonly, nonatomic) FTResetServerEndpointer *contentAsFTResetServerEndpointer;
@property (readonly, nonatomic) FTSetAlternateRecognitionSausage *contentAsFTSetAlternateRecognitionSausage;
@property (readonly, nonatomic) FTSetEndpointerState *contentAsFTSetEndpointerState;
@property (readonly, nonatomic) FTSetRequestOrigin *contentAsFTSetRequestOrigin;
@property (readonly, nonatomic) FTSetSpeechContext *contentAsFTSetSpeechContext;
@property (readonly, nonatomic) FTSetSpeechProfile *contentAsFTSetSpeechProfile;
@property (readonly, nonatomic) FTStartSpeechRequest *contentAsFTStartSpeechRequest;
@property (readonly, nonatomic) FTUpdateAudioInfo *contentAsFTUpdateAudioInfo;
@property (readonly, nonatomic) long long content_type;

- (void).cxx_destruct;
- (Offset_3f5da55c)addObjectToBuffer:(struct FlatBufferBuilder *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)flatbuffData;
- (id)initAndVerifyWithFlatbuffData:(id)arg1;
- (id)initWithFlatbuffData:(id)arg1;
- (id)initWithFlatbuffData:(id)arg1 root:(const struct RecognitionStreamingRequest *)arg2;
- (id)initWithFlatbuffData:(id)arg1 root:(const struct RecognitionStreamingRequest *)arg2 verify:(BOOL)arg3;

@end

