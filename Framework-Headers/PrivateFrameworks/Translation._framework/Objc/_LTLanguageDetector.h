//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <Translation/CSLanguageDetectorDelegate-Protocol.h>

@class CSLanguageDetector, NSMutableDictionary, NSString, _LTLanguageDetectionResult, _LTLanguageDetectorFeatureCombinationModel, _LTTranslationContext;
@protocol OS_dispatch_queue, _LTSpeechTranslationDelegate;

@interface _LTLanguageDetector : NSObject <CSLanguageDetectorDelegate>
{
    _LTTranslationContext *_context;
    CSLanguageDetector *_csLanguageDetector;
    float _sourceLocaleConfidenceThreshold;
    float _targetLocaleConfidenceThreshold;
    BOOL _endAudioCalled;
    NSMutableDictionary *_finalSpeechResults;
    unsigned long long _lidSignpostID;
    NSObject<OS_dispatch_queue> *_resultQueue;
    id<_LTSpeechTranslationDelegate> _delegate;
    BOOL _featureCombinationModelSupported;
    double _samplingRate;
    long long _audioBitDepth;
    _LTLanguageDetectionResult *_lastResult;
    _LTLanguageDetectorFeatureCombinationModel *_featureCombinationModel;
}

@property (readonly, nonatomic) long long audioBitDepth; // @synthesize audioBitDepth=_audioBitDepth;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (strong, nonatomic) _LTLanguageDetectorFeatureCombinationModel *featureCombinationModel; // @synthesize featureCombinationModel=_featureCombinationModel;
@property (nonatomic) BOOL featureCombinationModelSupported; // @synthesize featureCombinationModelSupported=_featureCombinationModelSupported;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) _LTLanguageDetectionResult *lastResult; // @synthesize lastResult=_lastResult;
@property (readonly, nonatomic) double samplingRate; // @synthesize samplingRate=_samplingRate;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)addSpeechAudioData:(id)arg1;
- (void)addSpeechRecognitionResult:(id)arg1;
- (void)cancelLanguageDetection;
- (void)endAudio;
- (id)init;
- (void)languageDetectorDidDetectLanguageWithConfidence:(id)arg1 confidence:(id)arg2 isConfident:(BOOL)arg3;
- (void)sendFinalLanguageDetectionResult;
- (void)startLanguageDetectionWithContext:(id)arg1 delegate:(id)arg2;

@end

