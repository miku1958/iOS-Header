//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <TelephonyUtilities/TUMomentsControllerDataSource-Protocol.h>
#import <TelephonyUtilities/TUMomentsControllerXPCClient-Protocol.h>

@class NSString, NSXPCConnection;
@protocol OS_dispatch_queue, TUMomentsControllerDataSourceDelegate;

@interface TUMomentsControllerXPCClient : NSObject <TUMomentsControllerXPCClient, TUMomentsControllerDataSource>
{
    int _token;
    id<TUMomentsControllerDataSourceDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_queue;
    NSXPCConnection *_xpcConnection;
}

@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<TUMomentsControllerDataSourceDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property (readonly) Class superclass;
@property (readonly, nonatomic) int token; // @synthesize token=_token;
@property (strong, nonatomic) NSXPCConnection *xpcConnection; // @synthesize xpcConnection=_xpcConnection;

+ (id)asynchronousServer;
+ (id)momentsControllerClientXPCInterface;
+ (id)momentsControllerServerXPCInterface;
+ (void)setAsynchronousServer:(id)arg1;
+ (void)setSynchronousServer:(id)arg1;
+ (id)synchronousServer;
- (void).cxx_destruct;
- (void)_registerConnection;
- (void)dealloc;
- (oneway void)didReceiveLocallyRequestedMomentDescriptor:(id)arg1;
- (oneway void)didUpdateCapabilities:(id)arg1 forVideoStreamToken:(long long)arg2;
- (void)endRequestWithTransactionID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)init;
- (void)invalidate;
- (void)registerStreamToken:(long long)arg1 remoteIDSDestination:(id)arg2 remoteMomentsAvailable:(BOOL)arg3 completion:(CDUnknownBlockType)arg4;
- (id)serverWithErrorHandler:(CDUnknownBlockType)arg1;
- (void)startRequestWithMediaType:(int)arg1 forStreamToken:(long long)arg2 completion:(CDUnknownBlockType)arg3;
- (id)synchronousServerWithErrorHandler:(CDUnknownBlockType)arg1;
- (void)unregisterStreamToken:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (oneway void)willCaptureRemoteRequest;

@end

