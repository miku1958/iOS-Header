//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <SiriCore/NSObject-Protocol.h>

@class NSError, NSObject, NSString, NSURL, SAConnectionPolicy, SAConnectionPolicyRoute, SiriCoreAceConnectionAnalysisInfo, SiriCoreConnectionMetrics, SiriCoreConnectionType;
@protocol OS_dispatch_data, OS_dispatch_queue, SiriCoreConnectionProviderDelegate;

@protocol SiriCoreConnectionProvider <NSObject>
+ (void)getMetricsContext:(void (^)(NSDictionary *))arg1;
- (SiriCoreAceConnectionAnalysisInfo *)analysisInfo;
- (void)close;
- (SiriCoreConnectionType *)connectionType;
- (BOOL)hasActiveConnection;
- (NSObject<OS_dispatch_data> *)headerDataWithForceReconnect:(BOOL)arg1;
- (id)initWithQueue:(NSObject<OS_dispatch_queue> *)arg1;
- (BOOL)isCanceled;
- (BOOL)isEstablishing;
- (BOOL)isMultipath;
- (BOOL)isPeerConnectionError:(NSError *)arg1;
- (BOOL)isPeerNotNearbyError:(NSError *)arg1;
- (BOOL)isReady;
- (void)openConnectionForURL:(NSURL *)arg1 withConnectionId:(NSString *)arg2 initialPayload:(NSObject<OS_dispatch_data> *)arg3 completion:(void (^)(NSError *))arg4;
- (BOOL)providerStatsIndicatePoorLinkQuality;
- (void)readData:(void (^)(NSObject<OS_dispatch_data> *, NSError *))arg1;
- (NSString *)resolvedHost;
- (void)setConnectByPOPMethod:(BOOL)arg1;
- (void)setDelegate:(id<SiriCoreConnectionProviderDelegate>)arg1;
- (void)setEnforceExtendedValidation:(BOOL)arg1;
- (void)setKeepAlive:(double)arg1 withInterval:(double)arg2 withCount:(unsigned long long)arg3;
- (void)setPolicyRoute:(SAConnectionPolicyRoute *)arg1;
- (void)setPrefersWWAN:(BOOL)arg1;
- (void)setProviderConnectionPolicy:(SAConnectionPolicy *)arg1;
- (void)setRetransmitConnectionDropTime:(double)arg1;
- (void)setScopeIsWiFiOnly;
- (void)setStaleInterval:(double)arg1;
- (BOOL)shouldFallbackFromError:(NSError *)arg1;
- (BOOL)shouldFallbackQuickly;
- (BOOL)supportsInitialPayload;
- (void)updateConnectionMetrics:(SiriCoreConnectionMetrics *)arg1 completion:(void (^)(void))arg2;
- (void)writeData:(NSObject<OS_dispatch_data> *)arg1 completion:(void (^)(NSError *))arg2;
@end

