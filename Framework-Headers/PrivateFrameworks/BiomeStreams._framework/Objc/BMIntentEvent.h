//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <BiomeStreams/BMEventBase.h>

#import <BiomeStreams/BMEventAppAssociating-Protocol.h>
#import <BiomeStreams/BMProtoBufWrapper-Protocol.h>
#import <BiomeStreams/BMStoreData-Protocol.h>
#import <BiomeStreams/NSSecureCoding-Protocol.h>

@class NSData, NSString;

@interface BMIntentEvent : BMEventBase <BMEventAppAssociating, BMStoreData, NSSecureCoding, BMProtoBufWrapper>
{
    double _absoluteTimestamp;
    NSString *_bundleID;
    NSString *_sourceId;
    NSString *_intentClass;
    NSString *_intentVerb;
    long long _intentType;
    long long _intentHandlingStatus;
    NSData *_interaction;
    NSString *_itemID;
}

@property (nonatomic) double absoluteTimestamp; // @synthesize absoluteTimestamp=_absoluteTimestamp;
@property (copy, nonatomic) NSString *bundleID; // @synthesize bundleID=_bundleID;
@property (readonly, nonatomic) unsigned int dataVersion;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (copy, nonatomic) NSString *intentClass; // @synthesize intentClass=_intentClass;
@property (nonatomic) long long intentHandlingStatus; // @synthesize intentHandlingStatus=_intentHandlingStatus;
@property (nonatomic) long long intentType; // @synthesize intentType=_intentType;
@property (copy, nonatomic) NSString *intentVerb; // @synthesize intentVerb=_intentVerb;
@property (copy, nonatomic) NSData *interaction; // @synthesize interaction=_interaction;
@property (copy, nonatomic) NSString *itemID; // @synthesize itemID=_itemID;
@property (copy, nonatomic) NSString *sourceId; // @synthesize sourceId=_sourceId;
@property (readonly) Class superclass;

+ (id)eventWithDKEvent:(id)arg1;
+ (id)eventWithData:(id)arg1 dataVersion:(unsigned int)arg2;
+ (BOOL)supportsSecureCoding;
- (void).cxx_destruct;
- (BOOL)checkAndReportDecodingFailureIfNeededForCFAbsoluteTime:(double)arg1 key:(id)arg2 coder:(id)arg3 errorDomain:(id)arg4 errorCode:(long long)arg5;
- (BOOL)checkAndReportDecodingFailureIfNeededForid:(id)arg1 key:(id)arg2 coder:(id)arg3 errorDomain:(id)arg4 errorCode:(long long)arg5;
- (BOOL)checkAndReportDecodingFailureIfNeededForuint32_t:(unsigned int)arg1 key:(id)arg2 coder:(id)arg3 errorDomain:(id)arg4 errorCode:(long long)arg5;
- (id)encodeAsProto;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithAbsoluteTime:(double)arg1 bundleId:(id)arg2 sourceId:(id)arg3 intentClass:(id)arg4 intentVerb:(id)arg5 intentType:(long long)arg6 intentHandlingStatus:(long long)arg7 interaction:(id)arg8;
- (id)initWithAbsoluteTime:(double)arg1 bundleId:(id)arg2 sourceId:(id)arg3 intentClass:(id)arg4 intentVerb:(id)arg5 intentType:(long long)arg6 intentHandlingStatus:(long long)arg7 interaction:(id)arg8 itemID:(id)arg9;
- (id)initWithCoder:(id)arg1;
- (id)initWithProto:(id)arg1;
- (id)initWithProtoData:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (id)json;
- (id)jsonDict;
- (id)proto;
- (id)serialize;

@end

