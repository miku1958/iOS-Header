//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <AssistantServices/AFAudioSessionCoordinationSnapshotMutating-Protocol.h>

@class AFAudioSessionCoordinationDeviceInfo, AFAudioSessionCoordinationSnapshot, NSArray, NSDateInterval, NSString;

@interface _AFAudioSessionCoordinationSnapshotMutation : NSObject <AFAudioSessionCoordinationSnapshotMutating>
{
    AFAudioSessionCoordinationSnapshot *_baseModel;
    NSDateInterval *_currentOrUpNextDateInterval;
    BOOL _isAudioSessionActive;
    NSArray *_localActiveAssertionContexts;
    NSArray *_localPendingAssertionContexts;
    NSArray *_remoteActiveAssertionContexts;
    NSArray *_remotePendingAssertionContexts;
    AFAudioSessionCoordinationDeviceInfo *_localDevice;
    NSArray *_remoteQualifiedInRangeDevices;
    NSArray *_remoteQualifiedOutOfRangeDevices;
    NSArray *_remoteDisqualifiedDevices;
    struct _mutationFlags {
        unsigned int isDirty:1;
        unsigned int hasCurrentOrUpNextDateInterval:1;
        unsigned int hasIsAudioSessionActive:1;
        unsigned int hasLocalActiveAssertionContexts:1;
        unsigned int hasLocalPendingAssertionContexts:1;
        unsigned int hasRemoteActiveAssertionContexts:1;
        unsigned int hasRemotePendingAssertionContexts:1;
        unsigned int hasLocalDevice:1;
        unsigned int hasRemoteQualifiedInRangeDevices:1;
        unsigned int hasRemoteQualifiedOutOfRangeDevices:1;
        unsigned int hasRemoteDisqualifiedDevices:1;
    } _mutationFlags;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)generate;
- (id)init;
- (id)initWithBaseModel:(id)arg1;
- (void)setCurrentOrUpNextDateInterval:(id)arg1;
- (void)setIsAudioSessionActive:(BOOL)arg1;
- (void)setLocalActiveAssertionContexts:(id)arg1;
- (void)setLocalDevice:(id)arg1;
- (void)setLocalPendingAssertionContexts:(id)arg1;
- (void)setRemoteActiveAssertionContexts:(id)arg1;
- (void)setRemoteDisqualifiedDevices:(id)arg1;
- (void)setRemotePendingAssertionContexts:(id)arg1;
- (void)setRemoteQualifiedInRangeDevices:(id)arg1;
- (void)setRemoteQualifiedOutOfRangeDevices:(id)arg1;

@end

