//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class AFMyriadRecord, AFPowerAssertionManager, NSDate, NSDateFormatter, NSMutableDictionary, NSString, NSUUID, _DKKnowledgeStore;
@protocol OS_dispatch_queue, OS_dispatch_semaphore, OS_dispatch_source;

@interface AFMyriadCoordinator : NSObject
{
    unsigned long long _myriadState;
    unsigned long long _nextState;
    unsigned long long _previousState;
    NSMutableDictionary *_replies;
    NSMutableDictionary *_replyCounts;
    id _delegate;
    NSString *_deviceClass;
    int _deviceAdjust;
    unsigned char _deviceGroup;
    NSObject<OS_dispatch_queue> *_myriadWorkQueue;
    NSObject<OS_dispatch_queue> *_myriadWaitWiProxQueue;
    NSObject<OS_dispatch_queue> *_myriadTimerManagementQueue;
    NSObject<OS_dispatch_queue> *_myriadReadinessQueue;
    NSString *_timerLabel;
    NSObject<OS_dispatch_source> *_timer;
    NSObject<OS_dispatch_semaphore> *_wiproxReadinessSemaphore;
    AFPowerAssertionManager *_powerAssertionManager;
    AFMyriadRecord *_triggerRecord;
    int _nTimesContinued;
    int _nTimesExtended;
    BOOL _incomingAdjustment;
    BOOL _BTLEReady;
    BOOL _inTask;
    BOOL _ducking;
    BOOL _supportsExtended;
    BOOL _listenTimerIsRunning;
    BOOL _coordinationEnabled;
    BOOL _clientIsDirectActivating;
    BOOL _clientRecentlyLostElection;
    BOOL _clientLostDueToTrumping;
    BOOL _clientIsListeningAfterRecentWin;
    BOOL _clientIsWatchActivation;
    NSObject<OS_dispatch_source> *_timerSource;
    NSDateFormatter *_dateFormat;
    _DKKnowledgeStore *_coreDuetStore;
    NSUUID *_designatedSelfID;
    NSDate *_lastSiriActivationTime;
    NSDate *_triggerTime;
    int _nDeltaTs;
    unsigned long long _lastDecisionTime;
    BOOL _lastDecision;
    unsigned short _lastPHash;
}

+ (void)clearCurrentCoordinator;
+ (id)currentCoordinator;
- (void).cxx_destruct;
- (void)_CreateDispatchTimerFor:(double)arg1 toExecute:(CDUnknownBlockType)arg2;
- (void)_CreateDispatchTimerForEvent:(id)arg1 toExecute:(CDUnknownBlockType)arg2;
- (void)_advertise:(id)arg1 afterDelay:(float)arg2 maxInterval:(float)arg3 andMoveTo:(unsigned long long)arg4;
- (void)_advertise:(id)arg1 andMoveTo:(unsigned long long)arg2;
- (void)_advertiseIndefinite:(id)arg1;
- (void)_advertiseSuppressTriggerInOutput;
- (void)_advertiseTrigger;
- (void)_advertiseWith:(id)arg1 afterDelay:(float)arg2 maxInterval:(float)arg3 thenExecute:(CDUnknownBlockType)arg4;
- (void)_duringNextWindowEnterState:(unsigned long long)arg1;
- (void)_duringNextWindowExecute:(CDUnknownBlockType)arg1;
- (void)_enterState:(unsigned long long)arg1;
- (void)_initDeviceClassAndAdjustments;
- (BOOL)_okayToSuppressOnOutput;
- (void)_resetActionWindows;
- (void)_setupActionWindows;
- (BOOL)_shouldContinueFor:(id)arg1;
- (id)_sortedReplies;
- (void)_startAdvertisingFromVoiceTrigger;
- (void)_startAdvertisingFromVoiceTriggerAdjusted:(BOOL)arg1;
- (void)_startListenTimer;
- (void)_startTimer:(id)arg1 for:(float)arg2 thenEnterState:(unsigned long long)arg3;
- (void)_startTimer:(id)arg1 for:(float)arg2 thenExecute:(CDUnknownBlockType)arg3;
- (void)_startTimer:(id)arg1 until:(id)arg2 thenExecute:(CDUnknownBlockType)arg3;
- (id)_stateAsString;
- (id)_stateAsString:(unsigned long long)arg1;
- (void)_stopAdvertisingAndListening;
- (void)_unduck;
- (void)_waitWiProx:(long long)arg1 andExecute:(CDUnknownBlockType)arg2;
- (void)_waitWiProxAndExecute:(CDUnknownBlockType)arg1;
- (void)_waitWiProxForeverAndExecute:(CDUnknownBlockType)arg1;
- (id)activityEventStream;
- (void)advertiseWith:(id)arg1;
- (void)advertiseWith:(id)arg1 afterDelay:(float)arg2 maxInterval:(float)arg3;
- (id)continuationRecord;
- (void)dealloc;
- (id)directTriggerRecord;
- (id)emergencyHandledRecord;
- (id)emergencyRecord;
- (void)endAdvertising;
- (void)endAdvertisingAfterDelay:(float)arg1;
- (void)endAdvertisingWithDeviceProhibitions:(id)arg1;
- (void)endTask;
- (BOOL)inTask;
- (id)initWithDelegate:(id)arg1;
- (id)lateSuppressionRecord;
- (void)logCoreDuetResults:(id)arg1;
- (unsigned short)recentEventBump;
- (void)resetReplies;
- (id)responseObject:(unsigned short)arg1;
- (void)startAdvertising:(id)arg1 afterDelay:(float)arg2 maxInterval:(float)arg3;
- (void)startAdvertisingEmergencyHandled;
- (void)startAdvertisingFromDirectTrigger;
- (void)startAdvertisingFromInTaskVoiceTrigger;
- (void)startAdvertisingFromOutgoingTrigger;
- (void)startAdvertisingFromVoiceTrigger;
- (void)startAdvertisingFromVoiceTriggerAdjusted:(BOOL)arg1;
- (void)startListening;
- (void)startResponseAdvertising:(unsigned short)arg1;
- (void)startWatchAdvertisingFromVoiceTrigger;
- (void)stopListening;
- (id)voiceTriggerRecord;

@end

