//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <AssistantServices/AFInvalidating-Protocol.h>

@class NSMutableDictionary, NSMutableSet, NSString;
@protocol AFAssertionCoordinatorDelegate, OS_dispatch_queue;

@interface AFAssertionCoordinator : NSObject <AFInvalidating>
{
    NSObject<OS_dispatch_queue> *_queue;
    id<AFAssertionCoordinatorDelegate> _delegate;
    _Atomic long long _numberOfAssertions;
    NSMutableDictionary *_assertionsByUUID;
    _Atomic long long _numberOfActiveAssertions;
    NSMutableSet *_activeAssertionUUIDs;
    NSString *_identifier;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_activateAssertionWithUUID:(id)arg1;
- (void)_addAssertion:(id)arg1;
- (void)_deactivateAndRemoveAssertionWithUUID:(id)arg1 context:(id)arg2 error:(id)arg3 options:(unsigned long long)arg4;
- (void)_invalidate;
- (id)acquireRelinquishableAssertionWithContext:(id)arg1 relinquishmentHandler:(CDUnknownBlockType)arg2;
- (void)barrier:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (void)getActiveAssertionsWithCompletion:(CDUnknownBlockType)arg1;
- (void)getPendingAndActiveAssertionsWithCompletion:(CDUnknownBlockType)arg1;
- (id)initWithIdentifier:(id)arg1 queue:(id)arg2 delegate:(id)arg3;
- (void)invalidate;
- (unsigned long long)numberOfActiveAssertions;
- (unsigned long long)numberOfPendingAndActiveAssertions;
- (void)relinquishAsertionsPassingTest:(CDUnknownBlockType)arg1 context:(id)arg2;
- (void)relinquishAsertionsPassingTest:(CDUnknownBlockType)arg1 error:(id)arg2;
- (void)relinquishAssertionWithUUID:(id)arg1 context:(id)arg2 options:(unsigned long long)arg3;
- (void)relinquishAssertionWithUUID:(id)arg1 error:(id)arg2 options:(unsigned long long)arg3;

@end

