//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <MobileTimer/MTAgentDiagnosticDelegate-Protocol.h>
#import <MobileTimer/MTAgentNotificationListener-Protocol.h>
#import <MobileTimer/MTScheduledListDelegate-Protocol.h>
#import <MobileTimer/MTTimerObserver-Protocol.h>

@class MTScheduledList, NSString;
@protocol MTNotificationCenter, MTSchedulingDelegate, MTTaskScheduler, MTTimerSchedulerDelegate, MTTimerStorage, NAScheduler;

@interface MTTimerScheduler : NSObject <MTTimerObserver, MTScheduledListDelegate, MTAgentDiagnosticDelegate, MTAgentNotificationListener>
{
    id<MTTimerSchedulerDelegate> _delegate;
    id<MTTimerStorage> _storage;
    id<MTNotificationCenter> _notificationCenter;
    MTScheduledList *_scheduledTimers;
    id<NAScheduler> _serializer;
    CDUnknownBlockType _currentDateProvider;
    id<MTSchedulingDelegate> _schedulingDelegate;
    id<MTTaskScheduler> _taskScheduler;
}

@property (readonly, copy, nonatomic) CDUnknownBlockType currentDateProvider; // @synthesize currentDateProvider=_currentDateProvider;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<MTTimerSchedulerDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) id<MTNotificationCenter> notificationCenter; // @synthesize notificationCenter=_notificationCenter;
@property (readonly, nonatomic) MTScheduledList *scheduledTimers; // @synthesize scheduledTimers=_scheduledTimers;
@property (readonly, nonatomic) id<MTSchedulingDelegate> schedulingDelegate; // @synthesize schedulingDelegate=_schedulingDelegate;
@property (strong, nonatomic) id<NAScheduler> serializer; // @synthesize serializer=_serializer;
@property (strong, nonatomic) id<MTTimerStorage> storage; // @synthesize storage=_storage;
@property (readonly) Class superclass;
@property (readonly, nonatomic) id<MTTaskScheduler> taskScheduler; // @synthesize taskScheduler=_taskScheduler;

+ (id)_intervalToCheckForTimersToFireBeforeDate:(id)arg1;
- (void).cxx_destruct;
- (void)_fireScheduledTimer:(id)arg1 firedDate:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)_queue_fireTriggeredTimersWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)_queue_lastTimerTriggerDate;
- (id)_queue_nextScheduledTimer;
- (id)_queue_nextTimer;
- (void)_queue_rescheduleTimersWithCompletion:(CDUnknownBlockType)arg1;
- (void)_queue_scheduleTimers:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)_queue_setLastTimerTriggerDate:(id)arg1;
- (void)_queue_triggerDidFireForTimerWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)_queue_unregisterTimer;
- (void)_queue_unscheduleTimers:(id)arg1;
- (void)_queue_updatePersistentTimerForNextTimerWithCompletion:(CDUnknownBlockType)arg1;
- (id)gatherDiagnostics;
- (void)handleNotification:(id)arg1;
- (BOOL)handlesNotification:(id)arg1;
- (id)initWithStorage:(id)arg1 notificationCenter:(id)arg2;
- (id)initWithStorage:(id)arg1 notificationCenter:(id)arg2 scheduler:(id)arg3;
- (id)initWithStorage:(id)arg1 notificationCenter:(id)arg2 scheduler:(id)arg3 schedulingDelegate:(id)arg4 taskScheduler:(id)arg5 currentDateProvider:(CDUnknownBlockType)arg6;
- (id)nextTimer;
- (void)nextTimerDidChange:(id)arg1;
- (id)nextTriggerDate;
- (void)printDiagnostics;
- (void)rescheduleTimers;
- (void)rescheduleTimersWithCompletion:(CDUnknownBlockType)arg1;
- (void)scheduleTimers:(id)arg1;
- (void)scheduledListDidChange:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)source:(id)arg1 didAddTimers:(id)arg2;
- (void)source:(id)arg1 didDismissTimer:(id)arg2;
- (void)source:(id)arg1 didFireTimer:(id)arg2;
- (void)source:(id)arg1 didRemoveTimers:(id)arg2;
- (void)source:(id)arg1 didUpdateTimers:(id)arg2;
- (id)sourceIdentifier;
- (void)unscheduleTimers:(id)arg1;

@end

