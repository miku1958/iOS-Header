//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class MTXPCConnectionInfo, NSDate, NSXPCConnection;
@protocol NAScheduler;

@interface MTXPCConnectionProvider : NSObject
{
    NSXPCConnection *_connection;
    BOOL _alive;
    struct os_unfair_lock_s _connectionLock;
    MTXPCConnectionInfo *_info;
    CDUnknownBlockType _errorHandler;
    CDUnknownBlockType _reconnectHandler;
    id<NAScheduler> _callbackScheduler;
    NSDate *_lastLifecycleNotification;
}

@property (strong, nonatomic) id<NAScheduler> callbackScheduler; // @synthesize callbackScheduler=_callbackScheduler;
@property (readonly, nonatomic) struct os_unfair_lock_s connectionLock; // @synthesize connectionLock=_connectionLock;
@property (copy, nonatomic) CDUnknownBlockType errorHandler; // @synthesize errorHandler=_errorHandler;
@property (strong, nonatomic) MTXPCConnectionInfo *info; // @synthesize info=_info;
@property (strong, nonatomic) NSDate *lastLifecycleNotification; // @synthesize lastLifecycleNotification=_lastLifecycleNotification;
@property (copy, nonatomic) CDUnknownBlockType reconnectHandler; // @synthesize reconnectHandler=_reconnectHandler;

+ (id)providerWithConnectionInfo:(id)arg1 errorHandler:(CDUnknownBlockType)arg2;
+ (id)providerWithConnectionInfo:(id)arg1 reconnectHandler:(CDUnknownBlockType)arg2;
- (void).cxx_destruct;
- (id)_asyncRemoteObjectProxyWithErrorHandler:(CDUnknownBlockType)arg1;
- (id)_connectionRebuildingIfNecessary;
- (void)_didInterruptConnection;
- (void)_didInvalidateConnection;
- (id)_remoteObjectProxyWithXPCConnectionProvider:(CDUnknownBlockType)arg1 remoteObjectProxyProvider:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (id)_retryConnection;
- (void)_retryConnectionWithRecover:(BOOL)arg1;
- (id)_syncRemoteObjectProxyWithErrorHandler:(CDUnknownBlockType)arg1;
- (void)_withLock:(CDUnknownBlockType)arg1;
- (id)connection;
- (void)dealloc;
- (id)description;
- (void)didReceiveLifecycleNotification;
- (id)initWithConnectionInfo:(id)arg1 errorHandler:(CDUnknownBlockType)arg2 reconnectHandler:(CDUnknownBlockType)arg3;
- (void)invalidate;
- (void)performRemoteBlock:(CDUnknownBlockType)arg1;
- (void)performRemoteBlock:(CDUnknownBlockType)arg1 withErrorHandler:(CDUnknownBlockType)arg2;
- (void)performRemoteBlock:(CDUnknownBlockType)arg1 withErrorHandler:(CDUnknownBlockType)arg2 isSynchronous:(BOOL)arg3;

@end

