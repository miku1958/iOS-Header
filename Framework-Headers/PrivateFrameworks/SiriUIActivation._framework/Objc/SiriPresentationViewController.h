//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import <SiriUIActivation/AFUISiriLanguageDelegate-Protocol.h>
#import <SiriUIActivation/AFUISiriSetupViewControllerDelegate-Protocol.h>
#import <SiriUIActivation/AFUISiriViewControllerDataSource-Protocol.h>
#import <SiriUIActivation/AFUISiriViewControllerDelegate-Protocol.h>
#import <SiriUIActivation/SASStateChangeListener-Protocol.h>
#import <SiriUIActivation/SiriPresentation-Protocol.h>

@class AFConnection, AFQueue, AFRequestCompletionOptions, AFUISiriLanguage, AFUISiriSetupViewController, AFUISiriViewController, AFWatchdogTimer, BSServiceConnection, NSArray, NSDate, NSMutableDictionary, NSObject, NSString, NSTimer, UIScreen;
@protocol OS_dispatch_queue, SiriPresentationControllerDelegate, SiriPresentationIntentUsageDelegate;

@interface SiriPresentationViewController : UIViewController <SASStateChangeListener, AFUISiriLanguageDelegate, AFUISiriViewControllerDelegate, AFUISiriViewControllerDataSource, AFUISiriSetupViewControllerDelegate, SiriPresentation>
{
    long long _identifier;
    BOOL _delaySessionEndForTTS;
    NSDate *_lastGuideCheck;
    AFRequestCompletionOptions *_completionOptions;
    NSMutableDictionary *_activePresentationProperties;
    UIScreen *_activeScreen;
    BOOL _activationHandled;
    BOOL _isIdleAndQuiet;
    CDUnknownBlockType _buttonTrigger;
    BOOL _receivedIncomingPhoneCall;
    NSObject<OS_dispatch_queue> *_watchdogQueue;
    BOOL _springBoardIdleTimerDisabled;
    BOOL _waitingForTelephonyToStart;
    BOOL _startGuidedAccessOnDismissal;
    BOOL _pocketStateKeptScreenOffDuringActivation;
    BOOL _buttonDownEventDidOccur;
    BOOL _predictedRecordRouteIsZLL;
    struct os_unfair_lock_s _lock;
    long long identifier;
    id<SiriPresentationControllerDelegate> siriPresentationControllerDelegate;
    BSServiceConnection *_connection;
    AFConnection *_unownedConnection;
    NSDate *_lastAppUpdateTimestamp;
    double _buttonDownTimestamp;
    NSTimer *_carSiriButtonHoldToTalkTimer;
    double _carSiriButtonTimeInterval;
    NSArray *_contextAppInfosForSiriViewController;
    NSArray *_currentCarPlaySupportedOEMAppIdList;
    NSArray *_starkAppBundleIdentifierContext;
    unsigned long long _currentLockState;
    AFWatchdogTimer *_activationTimer;
    AFUISiriLanguage *_language;
    id<SiriPresentationIntentUsageDelegate> _intentUsageDelegate;
    NSTimer *_clearSiriViewControllerTimer;
    AFUISiriViewController *_siriViewController;
    AFUISiriSetupViewController *_siriSetupViewController;
    NSString *__currentTestName;
    NSString *__currentTestID;
    AFQueue *_testInputQueue;
    struct CGRect _hostedPresentationFrame;
}

@property (copy, nonatomic, setter=_setCurrentTestID:) NSString *_currentTestID; // @synthesize _currentTestID=__currentTestID;
@property (copy, nonatomic, setter=_setCurrentTestName:) NSString *_currentTestName; // @synthesize _currentTestName=__currentTestName;
@property (strong, nonatomic) AFWatchdogTimer *activationTimer; // @synthesize activationTimer=_activationTimer;
@property (nonatomic, getter=_buttonDownEventDidOccur, setter=_setButtonDownEventDidOccur:) BOOL buttonDownEventDidOccur; // @synthesize buttonDownEventDidOccur=_buttonDownEventDidOccur;
@property (nonatomic, getter=_buttonDownTimestamp, setter=_setButtonDownTimestamp:) double buttonDownTimestamp; // @synthesize buttonDownTimestamp=_buttonDownTimestamp;
@property (strong, nonatomic, getter=_carSiriButtonHoldToTalkTimer, setter=_setCarSiriButtonHoldToTalkTimer:) NSTimer *carSiriButtonHoldToTalkTimer; // @synthesize carSiriButtonHoldToTalkTimer=_carSiriButtonHoldToTalkTimer;
@property (nonatomic, getter=_carSiriButtonTimeInterval, setter=_setCarSiriButtonTimeInterval:) double carSiriButtonTimeInterval; // @synthesize carSiriButtonTimeInterval=_carSiriButtonTimeInterval;
@property (strong, nonatomic) NSTimer *clearSiriViewControllerTimer; // @synthesize clearSiriViewControllerTimer=_clearSiriViewControllerTimer;
@property (strong, nonatomic) BSServiceConnection *connection; // @synthesize connection=_connection;
@property (strong, nonatomic) NSArray *contextAppInfosForSiriViewController; // @synthesize contextAppInfosForSiriViewController=_contextAppInfosForSiriViewController;
@property (strong, nonatomic) NSArray *currentCarPlaySupportedOEMAppIdList; // @synthesize currentCarPlaySupportedOEMAppIdList=_currentCarPlaySupportedOEMAppIdList;
@property (nonatomic) unsigned long long currentLockState; // @synthesize currentLockState=_currentLockState;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) struct CGRect hostedPresentationFrame; // @synthesize hostedPresentationFrame=_hostedPresentationFrame;
@property (readonly, nonatomic) long long identifier; // @synthesize identifier;
@property (strong, nonatomic) id<SiriPresentationIntentUsageDelegate> intentUsageDelegate; // @dynamic intentUsageDelegate;
@property (strong, nonatomic) id<SiriPresentationIntentUsageDelegate> intentUsageDelegate; // @synthesize intentUsageDelegate=_intentUsageDelegate;
@property (readonly, nonatomic, getter=_language) AFUISiriLanguage *language; // @synthesize language=_language;
@property (strong, nonatomic, getter=_lastAppUpdateTimestamp, setter=_setLastAppUpdateTimestamp:) NSDate *lastAppUpdateTimestamp; // @synthesize lastAppUpdateTimestamp=_lastAppUpdateTimestamp;
@property (nonatomic) struct os_unfair_lock_s lock; // @synthesize lock=_lock;
@property (nonatomic, getter=_pocketStateKeptScreenOffDuringActivation, setter=_setPocketStateKeptScreenOffDuringActivation:) BOOL pocketStateKeptScreenOffDuringActivation; // @synthesize pocketStateKeptScreenOffDuringActivation=_pocketStateKeptScreenOffDuringActivation;
@property (nonatomic) BOOL predictedRecordRouteIsZLL; // @synthesize predictedRecordRouteIsZLL=_predictedRecordRouteIsZLL;
@property (strong, nonatomic) id<SiriPresentationControllerDelegate> siriPresentationControllerDelegate; // @synthesize siriPresentationControllerDelegate;
@property (strong, nonatomic) AFUISiriSetupViewController *siriSetupViewController; // @synthesize siriSetupViewController=_siriSetupViewController;
@property (strong, nonatomic) AFUISiriViewController *siriViewController; // @synthesize siriViewController=_siriViewController;
@property (nonatomic, getter=_isSpringBoardIdleTimerDisabled, setter=_setSpringBoardIdleTimerDisabled:) BOOL springBoardIdleTimerDisabled; // @synthesize springBoardIdleTimerDisabled=_springBoardIdleTimerDisabled;
@property (strong, nonatomic) NSArray *starkAppBundleIdentifierContext; // @synthesize starkAppBundleIdentifierContext=_starkAppBundleIdentifierContext;
@property (nonatomic, getter=_startGuidedAccessOnDismissal, setter=_setStartGuidedAccessOnDismissal:) BOOL startGuidedAccessOnDismissal; // @synthesize startGuidedAccessOnDismissal=_startGuidedAccessOnDismissal;
@property (readonly) Class superclass;
@property (copy, nonatomic, getter=_testInputQueue) AFQueue *testInputQueue; // @synthesize testInputQueue=_testInputQueue;
@property (strong, nonatomic) AFConnection *unownedConnection; // @synthesize unownedConnection=_unownedConnection;
@property (nonatomic, getter=_isWaitingForTelephonyToStart, setter=_setWaitingForTelephonyToStart:) BOOL waitingForTelephonyToStart; // @synthesize waitingForTelephonyToStart=_waitingForTelephonyToStart;

+ (id)extractTestingInputsFromContext:(id)arg1;
+ (BOOL)testIsSyntheticActivation:(id)arg1;
- (void).cxx_destruct;
- (void)_activateWithRequestOptions:(id)arg1;
- (void)_applicationsDidChange;
- (void)_beginDelayingSessionEndForTTS;
- (BOOL)_broadcastPlistDictionaryWithTestName:(id)arg1 testOptions:(id)arg2;
- (BOOL)_buttonIdentifierIsHoldToTalkTrigger:(long long)arg1;
- (void)_callIsActiveDidChangeNotification:(id)arg1;
- (void)_cancelPendingActivationWithReason:(unsigned long long)arg1;
- (BOOL)_cancelPendingPhoneCall;
- (void)_carSiriButtonHoldToTalkIntervalFiredWithButtonIdentifier:(long long)arg1;
- (void)_checkForGuideUpdatesIfNecessary;
- (void)_cleanupUnownedConnection;
- (void)_clearAllTestingInputs;
- (void)_clearSiriViewController;
- (id)_dequeueTestingInput;
- (void)_dismissSiriSetup;
- (void)_dismissTest:(id)arg1 afterTimeoutWithTestOptions:(id)arg2 finishTest:(BOOL)arg3;
- (void)_enableAudioInjection:(BOOL)arg1 audioFiles:(id)arg2;
- (void)_enableSpringBoardIdleTimer;
- (void)_endDelayingSessionEndForTTS;
- (void)_enqueueTestInput:(id)arg1;
- (struct CGRect)_fallbackFrameForScreen:(id)arg1 withIdentifier:(long long)arg2;
- (id)_fallbackScreenForIdentifier:(long long)arg1;
- (void)_finishClearingSiriViewController:(id)arg1;
- (void)_handleContextClearForRequestOptions:(id)arg1;
- (BOOL)_handlePPTActivation:(id)arg1;
- (BOOL)_handleTapButtonBehavior:(long long)arg1;
- (BOOL)_handleTapDismissal:(long long)arg1;
- (BOOL)_hasTestingInput;
- (void)_invalidateCarSiriButtonHoldToTalkTimer;
- (BOOL)_isDelayingSessionEnd;
- (BOOL)_isDeviceButton:(long long)arg1;
- (void)_openURL:(id)arg1 bundleId:(id)arg2 delaySessionEndForTTS:(BOOL)arg3 punchoutStyle:(long long)arg4 completion:(CDUnknownBlockType)arg5;
- (void)_prepareSiriViewControllerWithRequestOptions:(id)arg1;
- (void)_presentSiriViewControllerWithPresentationOptions:(id)arg1 requestOptions:(id)arg2;
- (void)_presentationRequestedHandlerWithRequestOptions:(id)arg1;
- (void)_presentationRequestedWithPresentationOptions:(id)arg1 requestOptions:(id)arg2;
- (void)_processConnectionHouseKeeping;
- (void)_processIncomingRequestOptionsForTestingPayload:(id)arg1;
- (BOOL)_releaseExistingTrigger;
- (void)_removePreviousConversationIfNeededWithTestName:(id)arg1 testOptions:(id)arg2;
- (void)_removePreviousInjectAudioSettings;
- (void)_removeSetupViewControllerIfNecessary;
- (void)_requestDismissal;
- (void)_runSiriBringupCarPlayButtonToSpeechRecordingWithoutPrewarmTestWithTestName:(id)arg1 testOptions:(id)arg2;
- (void)_runSiriBringupInjectAudioTestWithTestName:(id)arg1 testOptions:(id)arg2 dismissUIAfterTimeout:(BOOL)arg3 finishTestAfterTimeout:(BOOL)arg4;
- (void)_runSiriBringupListeningStateTestWithTestName:(id)arg1 testOptions:(id)arg2;
- (void)_runSiriBringupNetworkEnabledTestWithTestName:(id)arg1 testOptions:(id)arg2 dismissUIAfterTimeout:(BOOL)arg3 finishTestAfterTimeout:(BOOL)arg4;
- (void)_runSiriBringupSnippetTestWithTestName:(id)arg1 testOptions:(id)arg2 dismissUIAfterTimeout:(BOOL)arg3 finishTestAfterTimeout:(BOOL)arg4;
- (void)_runSiriBringupToConversationMainTestWithTestName:(id)arg1 testOptions:(id)arg2;
- (void)_runSiriBringupToConversationTestWithTestName:(id)arg1 testOptions:(id)arg2;
- (void)_runSyntheticButtonActivationTest;
- (void)_scheduleConnectionHouseKeepingAfterDelay:(double)arg1;
- (void)_sendTelephonyHasStartedAfterDelay:(double)arg1;
- (void)_setSiriViewModeForRequestOptions:(id)arg1;
- (void)_setUpUnownedConnectionIfNecessary;
- (void)_setupSiriViewControllerPresentedSuccessHandler;
- (BOOL)_shouldShowSetupViewController;
- (void)_showSetupViewControllerIfNecessary;
- (void)_siriDidOpenURL:(id)arg1;
- (void)_startUIRequestWithText:(id)arg1 testName:(id)arg2;
- (void)_telephonyHasStarted;
- (void)_ttsQueueDidEmpty:(id)arg1;
- (id)_uiPresentationIdentifier;
- (void)_updateActivePresentationPropertiesForPresentationIdentifier:(id)arg1;
- (void)_updateHostedPresentationFrame;
- (void)_updateLanguageCode;
- (id)_updateTestStartedTimeInTestOptions:(id)arg1 toTime:(id)arg2;
- (void)_wasDismissed;
- (void)_watchdogQueue_startActivationWatchdogTimer;
- (void)_watchdogQueue_stopActivationWatchdogTimerIfNeededThen:(CDUnknownBlockType)arg1 onQueue:(id)arg2;
- (void)activateWithRequestOptions:(id)arg1;
- (void)activateWithSource:(long long)arg1 requestOptions:(id)arg2 timestamp:(id)arg3;
- (void)activateWithSource:(long long)arg1 timestamp:(id)arg2;
- (void)animatedAppearanceWithFactory:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)animatedDisappearanceWithFactory:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)bulletinManagerDidChangeBulletins;
- (id)bulletinsForSiriViewController:(id)arg1;
- (void)callStateChangedToIsActive:(BOOL)arg1 isOutgoing:(BOOL)arg2;
- (oneway void)cancelPendingActivationEventWithReason:(id)arg1;
- (oneway void)cancelPreheat;
- (oneway void)cancelTTS;
- (id)contextAppInfosForSiriViewController:(id)arg1;
- (id)currentCarPlaySupportedOEMAppsForSiriViewController:(id)arg1;
- (void)dealloc;
- (void)disableSiriActivationRequestedBySiriSetupViewController:(id)arg1;
- (void)dismiss;
- (void)dismissSiriSetupViewController:(id)arg1;
- (void)dismissSiriViewController:(id)arg1 delayForTTS:(BOOL)arg2;
- (void)dismissWithOptions:(id)arg1;
- (void)extendCurrentTTSRequested;
- (oneway void)handleButtonDownFromButtonIdentifier:(id)arg1 timestamp:(id)arg2;
- (oneway void)handleButtonLongPressFromButtonIdentifier:(id)arg1 timestamp:(id)arg2;
- (oneway void)handleButtonTapFromButtonIdentifier:(id)arg1;
- (oneway void)handleButtonUpFromButtonIdentifier:(id)arg1 timestamp:(id)arg2;
- (oneway void)handleRequestWithOptions:(id)arg1;
- (id)initWithIdentifier:(long long)arg1;
- (id)initWithIdentifier:(long long)arg1 hostedPresentationFrame:(struct CGRect)arg2;
- (void)invalidate;
- (BOOL)isEnabled;
- (unsigned long long)lockStateForSiriViewController:(id)arg1;
- (void)openSiriRequestedBySiriSetupViewController:(id)arg1;
- (long long)preferredFlamesViewFidelity;
- (oneway void)preheat;
- (oneway void)presentationDismissalRequestedWithOptions:(id)arg1;
- (BOOL)presentationHostedInSpringBoard;
- (oneway void)presentationRequestedWithPresentationOptions:(id)arg1 requestOptions:(id)arg2;
- (BOOL)presentationisIdleAndQuiet;
- (void)prewarmFlamesViewShadersInBackgroundForScreen:(id)arg1 activeFrame:(struct CGRect)arg2;
- (void)runTest:(id)arg1 testOptions:(id)arg2;
- (BOOL)shouldAutorotate;
- (void)siriLanguageSpokenLanguageCodeDidChange:(id)arg1;
- (void)siriSessionShouldEndExtendAudioSessionForImminentPhoneCall;
- (void)siriSessionShouldExtendAudioSessionForImminentPhoneCall;
- (BOOL)siriSetupViewController:(id)arg1 openURL:(id)arg2;
- (void)siriSetupViewControllerDidChangeVisibility:(id)arg1;
- (BOOL)siriViewController:(id)arg1 attemptUnlockWithPassword:(id)arg2;
- (id)siriViewController:(id)arg1 bulletinWithIdentifier:(id)arg2;
- (void)siriViewController:(id)arg1 didChangePresentationPeekMode:(unsigned long long)arg2;
- (void)siriViewController:(id)arg1 didCompleteRequestWithError:(id)arg2;
- (void)siriViewController:(id)arg1 didEncounterUnexpectedError:(id)arg2;
- (void)siriViewController:(id)arg1 didFinishTest:(id)arg2;
- (void)siriViewController:(id)arg1 didHideStatusView:(BOOL)arg2;
- (void)siriViewController:(id)arg1 didReadBulletinWithIdentifier:(id)arg2;
- (void)siriViewController:(id)arg1 didUpdateAudioCategoriesDisablingVolumeHUD:(id)arg2;
- (void)siriViewController:(id)arg1 failTest:(id)arg2 withReason:(id)arg3;
- (void)siriViewController:(id)arg1 launchApplicationWithBundleIdentifier:(id)arg2 withURL:(id)arg3 launchOptions:(long long)arg4 replyHandler:(CDUnknownBlockType)arg5;
- (BOOL)siriViewController:(id)arg1 openURL:(id)arg2 appBundleID:(id)arg3 allowSiriDismissal:(BOOL)arg4;
- (void)siriViewController:(id)arg1 openURL:(id)arg2 delaySessionEndForTTS:(BOOL)arg3 completion:(CDUnknownBlockType)arg4;
- (void)siriViewController:(id)arg1 presentedIntentWithBundleId:(id)arg2;
- (void)siriViewController:(id)arg1 requestsDismissal:(CDUnknownBlockType)arg2;
- (void)siriViewController:(id)arg1 requestsPresentation:(CDUnknownBlockType)arg2;
- (void)siriViewController:(id)arg1 siriIdleAndQuietStatusDidChange:(BOOL)arg2;
- (id)siriViewController:(id)arg1 willStartRequestWithOptions:(id)arg2;
- (void)siriViewController:(id)arg1 willStartTest:(id)arg2;
- (BOOL)siriViewControllerConfigured;
- (void)siriViewControllerDidChangeVisibility:(id)arg1;
- (void)siriViewControllerDidFinishDismissing:(id)arg1;
- (void)siriViewControllerSessionDidResetContext:(id)arg1;
- (BOOL)siriViewControllerShouldEndSession:(id)arg1;
- (BOOL)siriViewControllerShouldSupportTextInput:(id)arg1;
- (id)siriViewControllerWithRequestSource:(long long)arg1;
- (id)starkAppBundleIdentifierContextForSiriViewController:(id)arg1;
- (void)startActivationWatchdogTimer;
- (void)startGuidedAccessForSiriViewController:(id)arg1;
- (void)stopActivationWatchdogTimerIfNeededThen:(CDUnknownBlockType)arg1 onQueue:(id)arg2;
- (unsigned long long)supportedInterfaceOrientations;
- (oneway void)turnOnScreenAfterPocketStateFetch;
- (oneway void)updateActiveInterfaceOrientation:(id)arg1 willAnimationWithDuration:(id)arg2;
- (oneway void)updateCurrentLockState:(id)arg1;
- (void)userRelevantEventDidOccurInSiriViewController:(id)arg1;
- (void)viewWillLayoutSubviews;

@end

