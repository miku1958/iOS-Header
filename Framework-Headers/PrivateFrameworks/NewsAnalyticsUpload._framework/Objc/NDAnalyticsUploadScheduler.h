//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <NewsAnalyticsUpload/FCOperationThrottlerDelegate-Protocol.h>
#import <NewsAnalyticsUpload/NSURLSessionTaskDelegate-Protocol.h>

@class FCAsyncSerialQueue, FCBalancedCounter, FCDateRange, NFMutexLock, NSOperationQueue, NSString, NSURLSession;
@protocol FCOperationThrottler, NDAnalyticsUploadSchedulerDelegate;

@interface NDAnalyticsUploadScheduler : NSObject <FCOperationThrottlerDelegate, NSURLSessionTaskDelegate>
{
    id<NDAnalyticsUploadSchedulerDelegate> _delegate;
    NFMutexLock *_lock;
    FCDateRange *_deliveryWindow;
    id<FCOperationThrottler> _schedulingAndForegroundUploadThrottler;
    FCAsyncSerialQueue *_uploadQueue;
    NSOperationQueue *_backgroundSessionQueue;
    NSURLSession *_backgroundSession;
    FCBalancedCounter *_backgroundSessionLaunchEventCounter;
}

@property (strong, nonatomic) NSURLSession *backgroundSession; // @synthesize backgroundSession=_backgroundSession;
@property (strong, nonatomic) FCBalancedCounter *backgroundSessionLaunchEventCounter; // @synthesize backgroundSessionLaunchEventCounter=_backgroundSessionLaunchEventCounter;
@property (strong, nonatomic) NSOperationQueue *backgroundSessionQueue; // @synthesize backgroundSessionQueue=_backgroundSessionQueue;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<NDAnalyticsUploadSchedulerDelegate> delegate; // @synthesize delegate=_delegate;
@property (copy, nonatomic) FCDateRange *deliveryWindow; // @synthesize deliveryWindow=_deliveryWindow;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) NFMutexLock *lock; // @synthesize lock=_lock;
@property (strong, nonatomic) id<FCOperationThrottler> schedulingAndForegroundUploadThrottler; // @synthesize schedulingAndForegroundUploadThrottler=_schedulingAndForegroundUploadThrottler;
@property (readonly) Class superclass;
@property (strong, nonatomic) FCAsyncSerialQueue *uploadQueue; // @synthesize uploadQueue=_uploadQueue;

- (void).cxx_destruct;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 willBeginDelayedRequest:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(id)arg1;
- (void)_scheduleBackgroundUploadInWindow:(id)arg1;
- (void)_uploadWithCompletion:(CDUnknownBlockType)arg1;
- (void)handleLaunchEventForBackgroundSessionWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)init;
- (id)initWithURLSessionQueue:(id)arg1;
- (void)operationThrottler:(id)arg1 performAsyncOperationWithCompletion:(CDUnknownBlockType)arg2;
- (void)scheduleUploadInWindow:(id)arg1 withForegroundUploadCompletion:(CDUnknownBlockType)arg2;

@end

