//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <TouchML/TMLModelSerialize-Protocol.h>

@class NSDictionary, NSMutableDictionary, NSString, TMLValueExpression;

@interface TMLClassDescriptor : NSObject <TMLModelSerialize>
{
    NSString *_className;
    NSString *_superClassName;
    NSMutableDictionary *_properties;
    NSMutableDictionary *_signals;
    NSMutableDictionary *_methods;
    NSMutableDictionary *_childClasses;
    TMLValueExpression *_initializer;
    BOOL _optional;
    TMLClassDescriptor *_superClass;
    Class _objcClass;
    NSString *_objcClassName;
}

@property (readonly, nonatomic) NSDictionary *childClasses; // @synthesize childClasses=_childClasses;
@property (readonly, nonatomic) NSString *className; // @synthesize className=_className;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) NSDictionary *inheritedMethods;
@property (readonly, nonatomic) NSDictionary *inheritedProperties;
@property (readonly, nonatomic) NSDictionary *inheritedSignals;
@property (readonly, nonatomic) TMLValueExpression *initializer; // @synthesize initializer=_initializer;
@property (readonly, nonatomic) NSDictionary *methods; // @synthesize methods=_methods;
@property (readonly, nonatomic) Class objcClass; // @synthesize objcClass=_objcClass;
@property (copy, nonatomic) NSString *objcClassName; // @synthesize objcClassName=_objcClassName;
@property (readonly, nonatomic, getter=isOptional) BOOL optional; // @synthesize optional=_optional;
@property (readonly, nonatomic) NSDictionary *properties; // @synthesize properties=_properties;
@property (readonly, nonatomic) NSDictionary *signals; // @synthesize signals=_signals;
@property (strong, nonatomic) TMLClassDescriptor *superClass; // @synthesize superClass=_superClass;
@property (readonly, nonatomic) NSString *superClassName; // @synthesize superClassName=_superClassName;
@property (readonly) Class superclass;

+ (id)decode:(const struct ProtobufCMessage *)arg1;
- (void).cxx_destruct;
- (void)addChildClass:(id)arg1;
- (void)addMethod:(id)arg1;
- (void)addProperty:(id)arg1;
- (void)addSignal:(id)arg1;
- (BOOL)canMergeFromClassDescriptor:(id)arg1;
- (void)encode:(struct ProtobufCMessage *)arg1;
- (id)initWithName:(id)arg1 superClassName:(id)arg2 initializer:(id)arg3 optional:(BOOL)arg4;
- (BOOL)isEqual:(id)arg1;
- (BOOL)mergeFromClassDescriptor:(id)arg1;
- (id)propertyForName:(id)arg1;

@end

