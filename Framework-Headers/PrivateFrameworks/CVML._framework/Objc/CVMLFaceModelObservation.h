//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <CVML/CVMLObservation.h>

#import <CVML/NSSecureCoding-Protocol.h>

@class NSArray, NSMutableArray, NSMutableDictionary, NSString;

@interface CVMLFaceModelObservation : CVMLObservation <NSSecureCoding>
{
    BOOL mIsModelBuilt;
    unsigned int mModelVersion;
    unsigned int mModelMinorVersion;
    unsigned int mEnrolledFaceCount;
    NSString *mFaceprintType;
    NSMutableDictionary *mUUIDToInternalIdMap;
    NSMutableArray *mInternalIdToUUIDMap;
    struct vector<int, std::__1::allocator<int>> mFaceprintCountPerIdentity;
    struct shared_ptr<vision::mod::ModelValues> mModelValues;
    struct map<(anonymous namespace)::Faceprint, int, std::__1::less<(anonymous namespace)::Faceprint>, std::__1::allocator<std::__1::pair<const (anonymous namespace)::Faceprint, int>>> mFaceprintToInternalIdMap;
    NSArray *_modelLabels;
}

@property (strong) NSArray *modelLabels; // @synthesize modelLabels=_modelLabels;

+ (BOOL)supportsSecureCoding;
- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)addFace:(id)arg1 error:(id *)arg2;
- (unsigned int)algorithmMajorVersion;
- (unsigned int)algorithmMinorVersion;
- (BOOL)canBuildModel;
- (id)createDictionaryRepresentationOfModelValuesNoCopy;
- (void)encodeWithCoder:(id)arg1;
- (int)enrolledFaceCount;
- (int)enrolledFaceCountForIdentity:(id)arg1;
- (int)enrolledIdentitiesCount;
- (int)facePrintLength;
- (id)flattenedFaceIdCache;
- (id)flattenedFaceprintCache;
- (id)getUUIDForInternalId:(int)arg1;
- (id)identitiesEnrolledInModel;
- (id)identitiesModelCanIdentify;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (BOOL)isModelReadyToIdentifyFaces;
- (int)maxFaceprintCountPerIdentity;
- (int)maxIdentitiesCount;
- (int)minRequiredFaceprintsPerIdentityCount;
- (int)minRequiredIdentitiesCount;
- (unsigned int)modelVersion;
- (BOOL)removeFace:(id)arg1;
- (BOOL)removeIdentity:(id)arg1;
- (void)setIsModelBuilt:(BOOL)arg1;
- (BOOL)setModelValuesFromDictionary:(id)arg1;
- (BOOL)setVIPAlgorithmState:(void *)arg1;
- (const void *)vipAlgorithmState;

@end

