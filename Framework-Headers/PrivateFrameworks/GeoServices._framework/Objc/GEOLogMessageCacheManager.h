//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSMutableArray, NSString;
@protocol OS_dispatch_queue;

@interface GEOLogMessageCacheManager : NSObject
{
    NSString *_logMessageCacheFilePath;
    struct sqlite3 *_logMessageCacheDatabase;
    NSString *_adaptorId;
    BOOL _fromLogFrameworkAdaptor;
    long long _logMessageCacheIterator;
    long long _logMessageCacheEndIterator;
    NSMutableArray *_retrivedLogMessageCacheIds;
    int _currentRetrivedLogMessageRetryCount;
    NSObject<OS_dispatch_queue> *_databaseQueue;
    void *_databaseQueueIdentityKey;
    void *_databaseQueueIdentityValue;
}

@property (readonly) int currentRetrivedLogMessageRetryCount; // @synthesize currentRetrivedLogMessageRetryCount=_currentRetrivedLogMessageRetryCount;

- (void)_addRetryCountColumnToTable;
- (void)_cleanupLogMessageCacheDatabase;
- (void)_createTables;
- (void)_deleteAllExpiredLogMessages:(double)arg1;
- (void)_deleteExpiredLogMessageCacheDBFile:(double)arg1;
- (void)_executeSQL:(id)arg1;
- (long long)_getNumberOfLogMessagesInCache;
- (id)_groupIDOfNextPendingLogMessage;
- (BOOL)_logMessageCacheFileExists;
- (void)_migrateDatabaseIfNeeded;
- (void)_openCreateLogMessageCacheDBFile;
- (void)_openLogMessageCacheDBFile;
- (long long)_queryLogMessageCacheDBUserVersion;
- (id)_retrieveBatchOfLogMessagesLimitCount:(long long)arg1 limitSize:(long long)arg2;
- (long long)_retrieveEndLogMessageCacheIterator;
- (void)_updateLogMessageCacheDBUserVersion;
- (BOOL)_usingInMemoryLogMessageCacheFile;
- (void)closeLogMessageCache;
- (void)dealloc;
- (id)initWithLogMessageCacheFilePath:(id)arg1 adaptorId:(id)arg2 fromLogFrameworkAdaptor:(BOOL)arg3;
- (void)insertLogMessageIntoCache:(id)arg1;
- (BOOL)isLogMessageCacheEmpty;
- (void)openLogMessageCache;
- (void)purgeCurrentlyRetrievedLogMessagesFromCache;
- (void)purgeExpiredLogMessagesFromCache:(double)arg1;
- (void)resetLogMessageCacheIterator;
- (id)retrieveFirstBatchOfLogMessagesWithLimitCount:(long long)arg1 limitSize:(long long)arg2;
- (id)retrieveNextBatchOfLogMessagesWithLimitCount:(long long)arg1 limitSize:(long long)arg2;
- (void)updateCurrentlyRetrievedLogMessagesRetryCount;

@end

