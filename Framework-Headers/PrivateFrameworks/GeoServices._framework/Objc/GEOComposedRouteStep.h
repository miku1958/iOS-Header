//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/NSObject.h>

@class GEOComposedRoute, GEOComposedTransitTripRouteStep, GEOInstructionSet, GEOPBTransitStop, GEOStep, GEOTransitStep, NSArray;
@protocol GEOTransitArtworkDataSource;

@interface GEOComposedRouteStep : NSObject
{
    GEOComposedRoute *_composedRoute;
    GEOStep *_geoStep;
    unsigned long long _stepIndex;
    struct _NSRange _pointRange;
    struct _NSRange _maneuverPointRange;
    long long _routeLegType;
}

@property (nonatomic) GEOComposedRoute *composedRoute; // @synthesize composedRoute=_composedRoute;
@property (readonly, nonatomic) unsigned int distance;
@property (readonly, nonatomic) unsigned int duration;
@property (readonly, nonatomic) CDStruct_c3b9c2ee endGeoCoordinate;
@property (readonly, nonatomic) unsigned int endPointIndex;
@property (readonly, nonatomic) GEOPBTransitStop *endingStop;
@property (readonly, nonatomic) GEOStep *geoStep; // @synthesize geoStep=_geoStep;
@property (readonly, nonatomic) BOOL hasDuration;
@property (readonly, nonatomic) GEOInstructionSet *instructions;
@property (readonly, nonatomic) BOOL isArrivalStep;
@property (readonly, nonatomic) BOOL isUncertainArrival;
@property (readonly, nonatomic) unsigned int maneuverEndPointIndex;
@property (readonly, nonatomic) struct _NSRange maneuverPointRange; // @synthesize maneuverPointRange=_maneuverPointRange;
@property (readonly, nonatomic) unsigned int maneuverStartPointIndex;
@property (readonly, nonatomic) GEOComposedTransitTripRouteStep *nextAlightingStep;
@property (readonly, nonatomic) GEOComposedTransitTripRouteStep *nextBoardingStep;
@property (readonly, nonatomic, getter=getNextStep) GEOComposedRouteStep *nextStep;
@property (readonly, nonatomic) GEOPBTransitStop *nextStop;
@property (readonly, nonatomic) unsigned int pointCount;
@property (readonly, nonatomic) struct _NSRange pointRange; // @synthesize pointRange=_pointRange;
@property (readonly, nonatomic) GEOComposedTransitTripRouteStep *previousAlightingStep;
@property (readonly, nonatomic) GEOComposedTransitTripRouteStep *previousBoardingStep;
@property (readonly, nonatomic, getter=getPreviousStep) GEOComposedRouteStep *previousStep;
@property (readonly, nonatomic) GEOPBTransitStop *previousStop;
@property (readonly, nonatomic) NSArray *routeDetailsPrimaryArtwork;
@property (readonly, nonatomic) id<GEOTransitArtworkDataSource> routeDetailsSecondaryArtwork;
@property (readonly, nonatomic) long long routeLegType; // @synthesize routeLegType=_routeLegType;
@property (readonly, nonatomic) BOOL shouldCreateAlightExitGroup;
@property (readonly, nonatomic) BOOL shouldCreateArrivalGroup;
@property (readonly, nonatomic) BOOL shouldCreateEnterBoardGroup;
@property (readonly, nonatomic) BOOL shouldCreateFerryProgressionGroup;
@property (readonly, nonatomic) BOOL shouldCreateTransferGroup;
@property (readonly, nonatomic) BOOL shouldCreateTripProgressionGroup;
@property (readonly, nonatomic) CDStruct_c3b9c2ee startGeoCoordinate;
@property (readonly, nonatomic) unsigned int startPointIndex;
@property (readonly, nonatomic) unsigned int startTime;
@property (readonly, nonatomic) GEOPBTransitStop *startingStop;
@property (readonly, nonatomic) unsigned long long stepIndex; // @synthesize stepIndex=_stepIndex;
@property (readonly, nonatomic) NSArray *steppingArtwork;
@property (readonly, nonatomic) GEOTransitStep *transitStep;
@property (readonly, nonatomic) int transportType;

- (id)_artworkFromDecoderData:(id)arg1 artworkIndices:(unsigned int *)arg2 artworkCount:(unsigned long long)arg3;
- (BOOL)_belongsToTransferGroup;
- (void)dealloc;
- (id)description;
- (id)firstNameOrBranch;
- (id)initWithComposedRoute:(id)arg1 GEOStep:(id)arg2 routeLegType:(long long)arg3 stepIndex:(unsigned long long)arg4 pointRange:(struct _NSRange)arg5 maneuverPointRange:(struct _NSRange)arg6;
- (id)initWithComposedRoute:(id)arg1 routeLegType:(long long)arg2 stepIndex:(unsigned long long)arg3 pointRange:(struct _NSRange)arg4;
- (int)maneuver;
- (BOOL)shouldPreloadWithHighPriority;

@end

