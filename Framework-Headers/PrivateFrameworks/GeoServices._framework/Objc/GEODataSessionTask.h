//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <GeoServices/GEODataSessionTask-Protocol.h>
#import <GeoServices/GEODataSessionTaskDelegate-Protocol.h>
#import <GeoServices/GEOStateCapturing-Protocol.h>

@class GEOClientMetrics, GEODataSession, GEODataURLSessionTask, NSData, NSError, NSString, NSURL;
@protocol GEODataSessionTask, GEODataSessionTaskDelegate, GEORequestCounterTicket, NSObject, OS_dispatch_queue, OS_os_activity;

@interface GEODataSessionTask : NSObject <GEODataSessionTaskDelegate, GEOStateCapturing, GEODataSessionTask>
{
    id<GEODataSessionTaskDelegate> _delegate;
    GEODataSession *_session;
    NSObject<OS_dispatch_queue> *_sessionIsolation;
    NSObject<OS_dispatch_queue> *_delegateQueue;
    NSObject<OS_os_activity> *_activity;
    id<GEODataSessionTask> _completedSubtask;
    GEODataURLSessionTask *_urlTask;
    CDStruct_d1a7ebee _requestKind;
    unsigned long long _stateCaptureHandle;
    unsigned int _taskIdentifier;
    double _startTime;
    double _endTime;
    BOOL _didStart;
    BOOL _willSendRequestDelegateCalled;
}

@property (readonly, nonatomic) NSObject<OS_os_activity> *activity; // @synthesize activity=_activity;
@property (readonly, nonatomic) GEOClientMetrics *clientMetrics;
@property (strong, nonatomic) id<GEODataSessionTask> completedSubtask; // @synthesize completedSubtask=_completedSubtask;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<GEODataSessionTaskDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *delegateQueue; // @synthesize delegateQueue=_delegateQueue;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *description;
@property (readonly, copy, nonatomic) NSURL *downloadedFileURL;
@property (readonly, nonatomic) double elapsedTime;
@property (readonly, nonatomic) NSString *entityTag;
@property (readonly, nonatomic) NSError *error;
@property (readonly, nonatomic) NSError *error;
@property (readonly, nonatomic) BOOL failedDueToCancel;
@property (readonly) unsigned long long hash;
@property (readonly) unsigned long long hash;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) unsigned long long incomingPayloadSize;
@property (readonly, nonatomic) unsigned long long incomingPayloadSize;
@property (readonly, nonatomic) double loadTime;
@property (readonly, nonatomic) BOOL mptcpNegotiated;
@property (readonly, nonatomic) NSURL *originalRequestURL;
@property (readonly, nonatomic) unsigned long long outgoingPayloadSize;
@property (readonly, nonatomic) id<NSObject> parsedResponse;
@property float priority;
@property (readonly, nonatomic) BOOL protocolBufferHasPreamble;
@property (readonly, nonatomic) BOOL protocolBufferHasPreamble;
@property (readonly, nonatomic) NSData *receivedData;
@property (readonly, nonatomic) NSData *receivedData;
@property (readonly, nonatomic) BOOL receivedRNFNotification;
@property (readonly, nonatomic) NSString *remoteAddressAndPort;
@property (readonly, nonatomic) id<GEORequestCounterTicket> requestCounterTicket;
@property (readonly, nonatomic) CDStruct_d1a7ebee requestKind; // @synthesize requestKind=_requestKind;
@property (readonly, nonatomic) unsigned long long requestedMultipathServiceType;
@property (readonly, nonatomic) long long responseSource;
@property (weak, nonatomic) GEODataSession *session; // @synthesize session=_session;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *sessionIsolation; // @synthesize sessionIsolation=_sessionIsolation;
@property (readonly) Class superclass;
@property (readonly) Class superclass;
@property (readonly) Class superclass;
@property (readonly, nonatomic) unsigned int taskIdentifier; // @synthesize taskIdentifier=_taskIdentifier;
@property (strong, nonatomic) GEODataURLSessionTask *urlTask; // @synthesize urlTask=_urlTask;

- (void).cxx_destruct;
- (void)_didCompleteSubtask:(id)arg1;
- (void)cancel;
- (id)captureStateWithHints:(struct os_state_hints_s *)arg1;
- (void)dataSession:(id)arg1 didCompleteTask:(id)arg2;
- (void)dataSession:(id)arg1 willSendRequest:(id)arg2 forTask:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)dealloc;
- (BOOL)didValidateEntityTagForData:(id *)arg1 entityTag:(id *)arg2;
- (BOOL)getHeaderValue:(id *)arg1 forField:(id)arg2;
- (id)initWithSession:(id)arg1 delegate:(id)arg2 delegateQueue:(id)arg3 requestKind:(CDStruct_d1a7ebee)arg4 requestCounterTicket:(id)arg5;
- (double)loadTimeIncludingTask:(id)arg1;
- (void)start;
- (BOOL)validateTileResponse:(BOOL)arg1 error:(id *)arg2;
- (BOOL)validateTransportWithError:(id *)arg1;

@end

