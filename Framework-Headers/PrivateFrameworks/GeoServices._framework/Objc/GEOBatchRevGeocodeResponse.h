//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <ProtocolBuffer/PBCodable.h>

#import <GeoServices/NSCopying-Protocol.h>

@class NSMutableArray;

@interface GEOBatchRevGeocodeResponse : PBCodable <NSCopying>
{
    double _timestamp;
    NSMutableArray *_batchPlaceResults;
    NSMutableArray *_clusters;
    int _statusCode;
    unsigned int _ttl;
    unsigned int _version;
    NSMutableArray *_versionDomains;
    struct {
        unsigned int timestamp:1;
        unsigned int statusCode:1;
        unsigned int ttl:1;
        unsigned int version:1;
    } _has;
}

@property (strong, nonatomic) NSMutableArray *batchPlaceResults; // @synthesize batchPlaceResults=_batchPlaceResults;
@property (strong, nonatomic) NSMutableArray *clusters; // @synthesize clusters=_clusters;
@property (nonatomic) BOOL hasStatusCode;
@property (nonatomic) BOOL hasTimestamp;
@property (nonatomic) BOOL hasTtl;
@property (nonatomic) BOOL hasVersion;
@property (nonatomic) int statusCode; // @synthesize statusCode=_statusCode;
@property (nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
@property (nonatomic) unsigned int ttl; // @synthesize ttl=_ttl;
@property (nonatomic) unsigned int version; // @synthesize version=_version;
@property (strong, nonatomic) NSMutableArray *versionDomains; // @synthesize versionDomains=_versionDomains;

+ (Class)batchPlaceResultType;
+ (Class)clusterType;
+ (Class)versionDomainType;
- (int)StringAsStatusCode:(id)arg1;
- (void)addBatchPlaceResult:(id)arg1;
- (void)addCluster:(id)arg1;
- (void)addVersionDomain:(id)arg1;
- (id)batchPlaceResultAtIndex:(unsigned long long)arg1;
- (unsigned long long)batchPlaceResultsCount;
- (void)clearBatchPlaceResults;
- (void)clearClusters;
- (void)clearVersionDomains;
- (id)clusterAtIndex:(unsigned long long)arg1;
- (unsigned long long)clustersCount;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (unsigned long long)hash;
- (id)httpHeaders;
- (BOOL)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (BOOL)readFrom:(id)arg1;
- (void)setHttpHeaders:(id)arg1;
- (id)statusCodeAsString:(int)arg1;
- (id)versionDomainAtIndex:(unsigned long long)arg1;
- (unsigned long long)versionDomainsCount;
- (void)writeTo:(id)arg1;

@end

