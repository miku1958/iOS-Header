//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <CoreHandwriting/CHRecognitionSessionObserver-Protocol.h>

@class CHRecognitionSession, CHRecognitionSessionResult, NSString;
@protocol CHQueryDelegate, CHStrokeProviderVersion, OS_dispatch_queue;

@interface CHQuery : NSObject <CHRecognitionSessionObserver>
{
    NSObject<OS_dispatch_queue> *_processingQueue;
    CHRecognitionSessionResult *_currentProcessingSessionResult;
    double _lastProcessedTime;
    BOOL __queryActive;
    id<CHQueryDelegate> _delegate;
    CHRecognitionSession *_recognitionSession;
    id<CHStrokeProviderVersion> _lastProcessedStrokeProviderVersion;
    double _preferredUpdatesInterval;
}

@property (nonatomic) BOOL _queryActive; // @synthesize _queryActive=__queryActive;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, strong, nonatomic) NSString *debugName;
@property (nonatomic) id<CHQueryDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (copy) id<CHStrokeProviderVersion> lastProcessedStrokeProviderVersion; // @synthesize lastProcessedStrokeProviderVersion=_lastProcessedStrokeProviderVersion;
@property (nonatomic) double preferredUpdatesInterval; // @synthesize preferredUpdatesInterval=_preferredUpdatesInterval;
@property (readonly, strong, nonatomic) NSObject<OS_dispatch_queue> *processingQueue;
@property (readonly, strong, nonatomic) CHRecognitionSession *recognitionSession; // @synthesize recognitionSession=_recognitionSession;
@property (readonly) Class superclass;

- (void)_updateForRecognitionSessionResultChangeIfNeeded;
- (void)dealloc;
- (id)init;
- (id)initWithRecognitionSession:(id)arg1;
- (void)pause;
- (double)preferredRecognitionResultUpdatesInterval;
- (void)q_queryResultDidChange;
- (id)q_sessionResult;
- (void)q_setNeedsQueryResultUpdating;
- (void)q_updateQueryResult;
- (void)recognitionSessionDidUpdateRecognitionResult:(id)arg1;
- (void)start;
- (void)waitForPendingUpdates;

@end

