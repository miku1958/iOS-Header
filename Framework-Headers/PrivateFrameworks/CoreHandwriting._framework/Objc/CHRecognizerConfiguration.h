//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSLocale;

@interface CHRecognizerConfiguration : NSObject
{
    unsigned long long _language;
    unsigned long long _script;
    BOOL _enableCachingIfAvailable;
    BOOL _enableGen2ModelIfAvailable;
    BOOL _enableGen2CharacterLMIfAvailable;
    int _mode;
    int _contentType;
    int _autoCapitalizationMode;
    NSLocale *_locale;
}

@property (readonly, nonatomic) int autoCapitalizationMode; // @synthesize autoCapitalizationMode=_autoCapitalizationMode;
@property (readonly, nonatomic) int contentType; // @synthesize contentType=_contentType;
@property (readonly, nonatomic) int contentTypeForNoSpaceRecognition;
@property (readonly, nonatomic) BOOL enableCachingIfAvailable; // @synthesize enableCachingIfAvailable=_enableCachingIfAvailable;
@property (readonly, nonatomic) BOOL enableGen2CharacterLMIfAvailable; // @synthesize enableGen2CharacterLMIfAvailable=_enableGen2CharacterLMIfAvailable;
@property (readonly, nonatomic) BOOL enableGen2ModelIfAvailable; // @synthesize enableGen2ModelIfAvailable=_enableGen2ModelIfAvailable;
@property (readonly, copy, nonatomic) NSLocale *locale; // @synthesize locale=_locale;
@property (readonly, nonatomic) int mode; // @synthesize mode=_mode;

+ (void)_decodeLocale:(id)arg1 supportedLanguage:(unsigned long long *)arg2 supportedScript:(unsigned long long *)arg3;
+ (id)_stringForRecognitionLanguage:(unsigned long long)arg1;
+ (id)_stringForRecognitionScript:(unsigned long long)arg1;
+ (id)defaultLocaleForRecognitionType:(int)arg1 withMode:(int)arg2;
+ (struct CGSize)defaultMinimumDrawingSize;
+ (id)forcedGen2ModelLocaleForLocale:(id)arg1;
+ (BOOL)isLanguageSupported:(unsigned long long)arg1 withMode:(int)arg2;
+ (BOOL)isLocaleSupported:(id)arg1 withMode:(int)arg2;
+ (BOOL)shouldApplyLatinSpacingForLocale:(id)arg1;
+ (id)spellCheckingLocaleForRecognitionLocale:(id)arg1 string:(id)arg2;
+ (id)stringForAutoCapitalizationMode:(int)arg1;
+ (id)stringForRecognitionContentType:(int)arg1;
+ (id)stringForRecognitionMode:(int)arg1;
+ (unsigned long long)supportedLanguageForLocale:(id)arg1;
+ (unsigned long long)supportedScriptForLocale:(id)arg1;
+ (int)validateRecognitionMode:(int)arg1;
- (double)characterLMLowerBoundLogProbability;
- (id)configurationKey;
- (void)dealloc;
- (double)decodingCharacterLMWeight;
- (CDUnknownBlockType)decodingCommitActionBlock;
- (double)decodingLexiconWeight;
- (double)decodingWordLMWeight;
- (id)description;
- (unsigned long long)effectiveEngineLanguage;
- (long long)engineCandidateCount;
- (BOOL)hasSamePostProcessingAsConfiguration:(id)arg1;
- (BOOL)hasSameResourcesAsConfiguration:(id)arg1;
- (id)initWithMode:(int)arg1 locale:(id)arg2 contentType:(int)arg3 autoCapitalizationMode:(int)arg4 enableCachingIfAvailable:(BOOL)arg5 enableGen2ModelIfAvailable:(BOOL)arg6 enableGen2CharacterLMIfAvailable:(BOOL)arg7;
- (BOOL)isEqualToRecognizerConfiguration:(id)arg1;
- (id)languageResourceBundleWithStaticLexicon:(struct _LXLexicon *)arg1 customLexicon:(struct _LXLexicon *)arg2 wordLanguageModel:(void *)arg3;
- (id)linguisticResourcesFallbackLocale;
- (long long)maxRecognitionResultDefaultCount;
- (int)mecabraInputMethodType;
- (void *)newCJKStaticLexicon;
- (id)newCTCRecognitionModel;
- (id)newCTCTextDecoderWithStaticLexicon:(struct _LXLexicon *)arg1 customLexicon:(struct _LXLexicon *)arg2 wordLanguageModel:(void *)arg3;
- (void *)newCharacterLanguageModelAndMap:(map_c92806bd *)arg1;
- (id)newCutpointModel;
- (struct CHNeuralNetwork *)newFreeFormEngine;
- (struct Network *)newGrammarFST;
- (void *)newLanguageModel;
- (struct _CFBurstTrie *)newOVSTrie;
- (id)newPatternFST;
- (const struct _LXLexicon *)newPhraseLexicon:(id *)arg1;
- (id)newPostProcessingFST;
- (id)newPostProcessorWithStaticLexicon:(struct _LXLexicon *)arg1 customLexicon:(struct _LXLexicon *)arg2 phraseLexicon:(struct _LXLexicon *)arg3 customPhraseLexicon:(struct _LXLexicon *)arg4 recognizer:(id)arg5 textReplacements:(id)arg6 postProcessingFST:(id)arg7 languageModel:(void *)arg8;
- (struct Network *)newRadicalClusterFST;
- (struct CHNeuralNetwork *)newRecognitionEngine;
- (id)newSpellChecker;
- (const struct _LXLexicon *)newStaticLexicon:(id *)arg1;
- (id)newStrokeTransitionModel;
- (struct VariantMap *)newTransliterationVariantMap;
- (long long)precedingSpaceDefaultBehavior;
- (unsigned int)requiredInappropriateFilteringFlags;
- (BOOL)shouldApplyCandidatesThresholding;
- (BOOL)shouldApplyCharacterLMRescoring;
- (BOOL)shouldApplyChinesePostProcessing;
- (BOOL)shouldApplyDiacriticSensitivity;
- (BOOL)shouldApplyLMRescoring;
- (BOOL)shouldApplyLMSorting;
- (BOOL)shouldApplyLexicalPenalty;
- (BOOL)shouldApplyRomanPostProcessing;
- (BOOL)shouldApplySemanticTokenization;
- (BOOL)shouldAutoCapitalize;
- (BOOL)shouldComposeLexiconWithNetwork;
- (BOOL)shouldComputeStrokePenalties;
- (BOOL)shouldDetectChinesePunctuation;
- (BOOL)shouldDetectRomanPunctuation;
- (BOOL)shouldEnforceGrammarOnTransliterations;
- (BOOL)shouldExpandCodePoints;
- (BOOL)shouldExpandLexiconInNetwork;
- (BOOL)shouldExpandNonSpaceSeparators;
- (BOOL)shouldFallbackOnSingleCharacterExpansion;
- (BOOL)shouldForwardMecabraOTAAssetsUpdate;
- (BOOL)shouldGenerateDigitLetterAlternatives;
- (BOOL)shouldIdentifyChangeableColumns;
- (BOOL)shouldKeepDuplicateTokenIDs;
- (BOOL)shouldKeepOutOfPatternCandidates;
- (BOOL)shouldMarkMultiWordOVS;
- (BOOL)shouldMergeNoPrecedingWhiteSpaceColumns;
- (BOOL)shouldPenalizeLetterInsertion;
- (BOOL)shouldPenalizePrefixes;
- (BOOL)shouldPerformGlobalBestSearch;
- (BOOL)shouldPerformGlobalBestSearchWithSmallLattice;
- (BOOL)shouldPerformIntegratedLexiconExpansion;
- (BOOL)shouldPerformMultiWordsExpansion;
- (BOOL)shouldPerformNoSpaceRecognition;
- (BOOL)shouldPerformRegularSpaceRecognition;
- (BOOL)shouldPreserveLegacyTranscriptionPaths;
- (BOOL)shouldPromoteChineseCommonCharacters;
- (BOOL)shouldRefineCandidates;
- (BOOL)shouldRefineChineseCharacterCandidates;
- (BOOL)shouldRelaxFinalCandidatesThresholding;
- (BOOL)shouldReorderSCTCConfusion;
- (BOOL)shouldReplaceInvalidTokenIDs;
- (BOOL)shouldRunNextGenCharacterLM;
- (BOOL)shouldRunNextGenRecognizer;
- (BOOL)shouldTransformCharacterProbabilitiesIntoLogScores;
- (BOOL)shouldTransliterateAndSynthetizeCandidates;
- (BOOL)shouldTransliterateHalfWidthPunctuations;
- (BOOL)shouldTransliterateSentences;
- (BOOL)shouldTreatAllSmallStrokesAsPunctuation;
- (BOOL)shouldUseCaching;
- (BOOL)shouldUseTokenPrecedingSpaces;
- (unsigned long long)supportedSegmentationStrategy;

@end

