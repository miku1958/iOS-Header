//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <AVFCore/AVKeyPathDependencyHost-Protocol.h>
#import <AVFCore/AVWeakObservable-Protocol.h>

@class AVAssetWriterInputHelper, AVAssetWriterInputInternal, AVOutputSettings, AVWeakReference, NSArray, NSDictionary, NSString;

@interface AVAssetWriterInput : NSObject <AVWeakObservable, AVKeyPathDependencyHost>
{
    AVAssetWriterInputInternal *_internal;
}

@property (nonatomic, getter=_alternateGroupID, setter=_setAlternateGroupID:) short alternateGroupID;
@property (readonly, nonatomic, getter=_isAttachedToAdaptor) BOOL attachedToAdaptor;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) BOOL expectsMediaDataInRealTime;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic, getter=_helper, setter=_setHelper:) AVAssetWriterInputHelper *helper;
@property (readonly, getter=_markAsFinishedCalled) BOOL markAsFinishedCalled;
@property (readonly, nonatomic) NSString *mediaType;
@property (copy, nonatomic) NSArray *metadata;
@property (readonly) long long numberOfAppendFailures;
@property (readonly, nonatomic) NSDictionary *outputSettings;
@property (readonly, nonatomic, getter=_outputSettingsObject) AVOutputSettings *outputSettingsObject;
@property (readonly, nonatomic, getter=_pixelBufferPool) struct __CVPixelBufferPool *pixelBufferPool;
@property (nonatomic, getter=_provisionalAlternateGroupID, setter=_setProvisionalAlternateGroupID:) short provisionalAlternateGroupID;
@property (readonly, nonatomic, getter=isReadyForMoreMediaData) BOOL readyForMoreMediaData;
@property (readonly, nonatomic) const struct opaqueCMFormatDescription *sourceFormatHint;
@property (copy, nonatomic, getter=_sourcePixelBufferAttributes, setter=_setSourcePixelBufferAttributes:) NSDictionary *sourcePixelBufferAttributes;
@property (readonly, nonatomic, getter=_status) long long status;
@property (readonly) Class superclass;
@property (readonly, nonatomic, getter=_trackReferences) NSDictionary *trackReferences;
@property (strong, nonatomic, getter=_weakReferenceToAssetWriter, setter=_setWeakReferenceToAssetWriter:) AVWeakReference *weakReferenceToAssetWriter;

+ (id)assetWriterInputWithMediaType:(id)arg1 outputSettings:(id)arg2;
+ (id)assetWriterInputWithMediaType:(id)arg1 outputSettings:(id)arg2 sourceFormatHint:(struct opaqueCMFormatDescription *)arg3;
+ (void)initialize;
- (BOOL)_appendPixelBuffer:(struct __CVBuffer *)arg1 withPresentationTime:(CDStruct_1b6d18a9)arg2;
- (long long)_appendSampleBuffer:(struct opaqueCMSampleBuffer *)arg1 error:(id *)arg2;
- (id)_attachedAdaptor;
- (void)_didStartInitialSession;
- (BOOL)_prepareForWritingWithFigAssetWriter:(struct OpaqueFigAssetWriter *)arg1 mediaFileType:(id)arg2 error:(id *)arg3;
- (void)_prepareToEndSession;
- (BOOL)_prepareToFinishWritingReturningError:(id *)arg1;
- (void)_setAttachedAdaptor:(id)arg1;
- (void)_tellAssetWriterToTransitionToFailedStatusWithError:(id)arg1;
- (void)_transitionToTerminalStatus:(long long)arg1;
- (void)addCallbackToCancelDuringDeallocation:(id)arg1;
- (void)addTrackAssociationWithTrackOfInput:(id)arg1 type:(id)arg2;
- (BOOL)appendSampleBuffer:(struct opaqueCMSampleBuffer *)arg1;
- (id)associatedInputsWithTrackAssociationType:(id)arg1;
- (id)availableTrackAssociationTypes;
- (BOOL)canAddTrackAssociationWithTrackOfInput:(id)arg1 type:(id)arg2;
- (BOOL)canPerformMultiplePasses;
- (id)currentPassDescription;
- (void)dealloc;
- (void)declareKeyPathDependenciesWithRegistry:(id)arg1;
- (id)extendedLanguageTag;
- (id)init;
- (id)initWithMediaType:(id)arg1 outputSettings:(id)arg2;
- (id)initWithMediaType:(id)arg1 outputSettings:(id)arg2 sourceFormatHint:(struct opaqueCMFormatDescription *)arg3;
- (id)languageCode;
- (long long)layer;
- (void)markAsFinished;
- (void)markCurrentPassAsFinished;
- (BOOL)marksOutputTrackAsEnabled;
- (BOOL)maximizePowerEfficiency;
- (id)mediaDataLocation;
- (int)mediaTimeScale;
- (struct CGSize)naturalSize;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (int)outputTrackID;
- (BOOL)performsMultiPassEncodingIfSupported;
- (long long)preferredMediaChunkAlignment;
- (CDStruct_1b6d18a9)preferredMediaChunkDuration;
- (long long)preferredMediaChunkSize;
- (float)preferredVolume;
- (void)requestMediaDataWhenReadyOnQueue:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)respondToEachPassDescriptionOnQueue:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)sampleReferenceBaseURL;
- (void)setExtendedLanguageTag:(id)arg1;
- (void)setLanguageCode:(id)arg1;
- (void)setLayer:(long long)arg1;
- (void)setMarksOutputTrackAsEnabled:(BOOL)arg1;
- (void)setMaximizePowerEfficiency:(BOOL)arg1;
- (void)setMediaDataLocation:(id)arg1;
- (void)setMediaTimeScale:(int)arg1;
- (void)setNaturalSize:(struct CGSize)arg1;
- (void)setPerformsMultiPassEncodingIfSupported:(BOOL)arg1;
- (void)setPreferredMediaChunkAlignment:(long long)arg1;
- (void)setPreferredMediaChunkDuration:(CDStruct_1b6d18a9)arg1;
- (void)setPreferredMediaChunkSize:(long long)arg1;
- (void)setPreferredVolume:(float)arg1;
- (void)setSampleReferenceBaseURL:(id)arg1;
- (void)setTransform:(struct CGAffineTransform)arg1;
- (void)setWritesMediaDataToBeginningOfFile:(BOOL)arg1;
- (void)stopRequestingMediaData;
- (struct CGAffineTransform)transform;
- (BOOL)writesMediaDataToBeginningOfFile;

@end

