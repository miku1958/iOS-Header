//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <ChatKit/CKBrowserViewController.h>

#import <ChatKit/CKAppManagerViewControllerDelegate-Protocol.h>
#import <ChatKit/UIPresentationControllerDelegatePrivate-Protocol.h>
#import <ChatKit/UIViewControllerTransitioningDelegate-Protocol.h>

@class CKAppManagerViewController, NSString, UINavigationController;
@protocol CKBrowserAppManagerViewControllerDelegate;

@interface CKBrowserAppManagerViewController : CKBrowserViewController <UIPresentationControllerDelegatePrivate, UIViewControllerTransitioningDelegate, CKAppManagerViewControllerDelegate>
{
    UINavigationController *_navController;
    CKAppManagerViewController *_appViewController;
    id<CKBrowserAppManagerViewControllerDelegate> _delegate;
}

@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<CKBrowserAppManagerViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)animationControllerForDismissedController:(id)arg1;
- (id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (BOOL)appAllowedByScreenTimeWithBundleIdentifier:(id)arg1;
- (void)appManagerViewControllerDidFinish:(id)arg1;
- (void)browserAppManagerDidSelectPlugin:(id)arg1;
- (long long)browserPresentationStyle;
- (void)delegate_BrowserAppManagerDidSelectPlugin:(id)arg1;
- (void)dismiss;
- (BOOL)isDismissing;
- (BOOL)isLoaded;
- (BOOL)mayBeKeptInViewHierarchy;
- (long long)parentModalPresentationStyle;
- (id)parentTransitioningDelegate;
- (long long)preferredStatusBarStyle;
- (void)presentationControllerDidDismiss:(id)arg1;
- (id)presentationControllerForPresentedViewController:(id)arg1 presentingViewController:(id)arg2 sourceViewController:(id)arg3;
- (BOOL)shouldShowChatChrome;
- (BOOL)supportsQuickView;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)arg1;
- (BOOL)wantsDarkUI;
- (BOOL)wantsOpaqueUI;

@end

