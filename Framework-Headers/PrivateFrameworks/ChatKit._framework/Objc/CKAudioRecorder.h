//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/NSObject.h>

#import <ChatKit/CKVoiceControllerDelegate-Protocol.h>

@class CKVoiceController, NSDate, NSString, NSURL;
@protocol CKAudioRecorderDelegate;

@interface CKAudioRecorder : NSObject <CKVoiceControllerDelegate>
{
    BOOL _recording;
    BOOL _recordingEmpty;
    BOOL _cancelled;
    BOOL _shouldPlayStartSound;
    BOOL _shouldPlayStopSound;
    id<CKAudioRecorderDelegate> _delegate;
    CKVoiceController *_voiceController;
    NSURL *_fileURL;
    NSDate *_startDate;
    CDUnknownBlockType _completion;
    struct OpaqueAudioFileID *_fileID;
    long long _totalPacketsCount;
}

@property (nonatomic, getter=isCancelled) BOOL cancelled; // @synthesize cancelled=_cancelled;
@property (copy, nonatomic) CDUnknownBlockType completion; // @synthesize completion=_completion;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) id<CKAudioRecorderDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) double duration;
@property (nonatomic) struct OpaqueAudioFileID *fileID; // @synthesize fileID=_fileID;
@property (strong, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
@property (readonly) unsigned long long hash;
@property (nonatomic, getter=isRecording) BOOL recording; // @synthesize recording=_recording;
@property (nonatomic, getter=isRecordingEmpty) BOOL recordingEmpty; // @synthesize recordingEmpty=_recordingEmpty;
@property (nonatomic) BOOL shouldPlayStartSound; // @synthesize shouldPlayStartSound=_shouldPlayStartSound;
@property (nonatomic) BOOL shouldPlayStopSound; // @synthesize shouldPlayStopSound=_shouldPlayStopSound;
@property (strong, nonatomic) NSDate *startDate; // @synthesize startDate=_startDate;
@property (readonly) Class superclass;
@property (nonatomic) long long totalPacketsCount; // @synthesize totalPacketsCount=_totalPacketsCount;
@property (strong, nonatomic) CKVoiceController *voiceController; // @synthesize voiceController=_voiceController;

- (void)applicationDidEnterBackground:(id)arg1;
- (void)cancelRecording;
- (void)dealloc;
- (id)init;
- (void)resetState;
- (void)startRecordingAndPlaySound:(BOOL)arg1;
- (void)startRecordingForRaiseGesture;
- (void)startRecordingForRaiseGesture:(BOOL)arg1 shouldPlaySound:(BOOL)arg2;
- (void)stopRecording:(CDUnknownBlockType)arg1;
- (void)stopRecordingAndPlaySound:(BOOL)arg1 completion:(CDUnknownBlockType)arg2;
- (void)voiceController:(id)arg1 didUpdateAveragePower:(float)arg2;
- (void)voiceControllerDidDetectStartpoint:(id)arg1;
- (void)voiceControllerDidFinishRecording:(id)arg1 successfully:(BOOL)arg2;
- (void)voiceControllerDidStartRecording:(id)arg1;
- (void)voiceControllerRecordBufferAvailable:(id)arg1 buffer:(id)arg2;

@end

