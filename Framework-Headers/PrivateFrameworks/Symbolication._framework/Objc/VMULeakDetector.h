//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSMutableArray, VMUDebugTimer, VMUProcessObjectGraph, VMUTaskMemoryScanner;
@protocol VMUStackLogReader;

@interface VMULeakDetector : NSObject
{
    BOOL _showLeakedVMregions;
    BOOL _showOnlyVMregions;
    BOOL _fullStacks;
    BOOL _showRawClassNames;
    BOOL _showBinaryContents;
    BOOL _checkAbandoned;
    BOOL _suppressOutput;
    BOOL _showListOfLeaks;
    BOOL _groupByType;
    BOOL _referenceTreeShowRegionVirtualSize;
    unsigned int _objectContentLevel;
    unsigned long long _max_contents_bytes;
    VMUDebugTimer *_debugTimer;
    id<VMUStackLogReader> _stackLogReader;
    VMUProcessObjectGraph *_graph;
    VMUTaskMemoryScanner *_scanner;
    unsigned int _task;
    struct __sFILE *_outputFile;
    BOOL _fcloseOutput;
    unsigned int _numExcluded;
    void *_abandoned;
    void *_leakedNodes;
    NSMutableArray *_leakTreeRootsArray;
    VMUProcessObjectGraph *_leakedGraph;
    BOOL _showContext;
}

@property (nonatomic) void *abandoned; // @synthesize abandoned=_abandoned;
@property (nonatomic) BOOL checkAbandoned; // @synthesize checkAbandoned=_checkAbandoned;
@property (strong, nonatomic) VMUDebugTimer *debugTimer; // @synthesize debugTimer=_debugTimer;
@property (nonatomic) BOOL fcloseOutput; // @synthesize fcloseOutput=_fcloseOutput;
@property (nonatomic) BOOL fullStacks; // @synthesize fullStacks=_fullStacks;
@property (readonly, nonatomic) VMUProcessObjectGraph *graph; // @synthesize graph=_graph;
@property (nonatomic) BOOL groupByType; // @synthesize groupByType=_groupByType;
@property (strong, nonatomic) NSMutableArray *leakTreeRootsArray; // @synthesize leakTreeRootsArray=_leakTreeRootsArray;
@property (strong, nonatomic) VMUProcessObjectGraph *leakedGraph; // @synthesize leakedGraph=_leakedGraph;
@property (nonatomic) void *leakedNodes; // @synthesize leakedNodes=_leakedNodes;
@property (nonatomic) unsigned int objectContentLevel; // @synthesize objectContentLevel=_objectContentLevel;
@property (nonatomic) struct __sFILE *outputFile; // @synthesize outputFile=_outputFile;
@property (nonatomic) BOOL referenceTreeShowRegionVirtualSize; // @synthesize referenceTreeShowRegionVirtualSize=_referenceTreeShowRegionVirtualSize;
@property (readonly, nonatomic) VMUTaskMemoryScanner *scanner; // @synthesize scanner=_scanner;
@property (nonatomic) BOOL showBinaryContents; // @synthesize showBinaryContents=_showBinaryContents;
@property (nonatomic) BOOL showContext; // @synthesize showContext=_showContext;
@property (nonatomic) BOOL showLeakedVMregions; // @synthesize showLeakedVMregions=_showLeakedVMregions;
@property (nonatomic) BOOL showListOfLeaks; // @synthesize showListOfLeaks=_showListOfLeaks;
@property (nonatomic) BOOL showOnlyVMregions; // @synthesize showOnlyVMregions=_showOnlyVMregions;
@property (nonatomic) BOOL showRawClassNames; // @synthesize showRawClassNames=_showRawClassNames;
@property (readonly, nonatomic) id<VMUStackLogReader> stackLogReader; // @synthesize stackLogReader=_stackLogReader;
@property (nonatomic) BOOL suppressOutput; // @synthesize suppressOutput=_suppressOutput;
@property (readonly, nonatomic) unsigned int task; // @synthesize task=_task;

- (void).cxx_destruct;
- (void)buildLeakTree;
- (BOOL)checkTaskExistence;
- (void)dealloc;
- (unsigned int)doNormalLeakDetectionWithError:(out id *)arg1;
- (id)initWithTask:(unsigned int)arg1 graph:(id)arg2 scanner:(id)arg3 stackLogReader:(id)arg4;
- (id)labelForNode:(unsigned int)arg1 details:(CDStruct_599faf0f)arg2 shortLabel:(BOOL)arg3;
- (id)nodeDescription:(unsigned int)arg1;
- (id)nodeDescription:(unsigned int)arg1 usingDetails:(CDStruct_599faf0f *)arg2;
- (id)nodeTypeDescription:(unsigned int)arg1 details:(CDStruct_599faf0f *)arg2 mallocBySize:(BOOL)arg3;
- (void)printContents:(void *)arg1 size:(unsigned long long)arg2;
- (void)printLeak:(const char *)arg1 node:(unsigned int)arg2 details:(CDStruct_599faf0f)arg3 region:(id)arg4 stop:(BOOL *)arg5;
- (void)printLeakTree;
- (void)printout:(const char *)arg1;
- (id)referenceDescription:(CDStruct_3aaebc0a)arg1 dstDescription:(id)arg2 is64bit:(BOOL)arg3;
- (id)scannerOrGraph;

@end

