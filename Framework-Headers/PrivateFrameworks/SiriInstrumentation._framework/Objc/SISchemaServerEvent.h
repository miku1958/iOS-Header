//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <ProtocolBuffer/PBCodable.h>

#import <SiriInstrumentation/NSSecureCoding-Protocol.h>
#import <SiriInstrumentation/SISchemaServerEvent-Protocol.h>

@class NSData, NSString, SISchemaConversationTrace, SISchemaDeviceFixedContext, SISchemaServerEventMetadata, SISchemaSpeechResultSelected, SISchemaTurnInteraction, SISchemaUserSpeechDuration;

@interface SISchemaServerEvent : PBCodable <SISchemaServerEvent, NSSecureCoding>
{
    SISchemaServerEventMetadata *_eventMetadata;
    SISchemaUserSpeechDuration *_userSpeechDuration;
    SISchemaConversationTrace *_serverConversationTrace;
    SISchemaTurnInteraction *_turnInteraction;
    SISchemaSpeechResultSelected *_speechResultSelected;
    SISchemaDeviceFixedContext *_serverDeviceFixedContext;
    unsigned long long _whichEvent_Type;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (strong, nonatomic) SISchemaServerEventMetadata *eventMetadata; // @synthesize eventMetadata=_eventMetadata;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) NSData *jsonData;
@property (strong, nonatomic) SISchemaConversationTrace *serverConversationTrace; // @synthesize serverConversationTrace=_serverConversationTrace;
@property (strong, nonatomic) SISchemaDeviceFixedContext *serverDeviceFixedContext; // @synthesize serverDeviceFixedContext=_serverDeviceFixedContext;
@property (strong, nonatomic) SISchemaSpeechResultSelected *speechResultSelected; // @synthesize speechResultSelected=_speechResultSelected;
@property (readonly) Class superclass;
@property (strong, nonatomic) SISchemaTurnInteraction *turnInteraction; // @synthesize turnInteraction=_turnInteraction;
@property (strong, nonatomic) SISchemaUserSpeechDuration *userSpeechDuration; // @synthesize userSpeechDuration=_userSpeechDuration;
@property (readonly, nonatomic) unsigned long long whichEvent_Type; // @synthesize whichEvent_Type=_whichEvent_Type;

+ (Class)getEventTypeClassForTag:(int)arg1;
+ (id)getTagForEventTypeClass:(Class)arg1;
- (void).cxx_destruct;
- (id)dictionaryRepresentation;
- (id)initWithDictionary:(id)arg1;
- (id)initWithJSON:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)readFrom:(id)arg1;
- (void)setEventType:(id)arg1;
- (void)writeTo:(id)arg1;

@end

