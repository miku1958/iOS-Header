//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <KnowledgeGraphKit/NSXMLParserDelegate-Protocol.h>

@class MADatabase, NSMutableArray, NSMutableDictionary, NSMutableIndexSet, NSString, NSUUID;
@protocol OS_dispatch_queue;

@interface MAGraph : NSObject <NSXMLParserDelegate>
{
    NSObject<OS_dispatch_queue> *_accessQueue;
    MADatabase *_persistentStore;
    NSMutableArray *_keepsLoadedDomains;
    NSUUID *_identifier;
    unsigned long long _version;
    NSMutableDictionary *_nodesByIdentifier;
    NSMutableDictionary *_nodesByLabel;
    NSMutableDictionary *_edgesByIdentifier;
    NSMutableDictionary *_edgesByLabel;
    NSMutableIndexSet *_fragmentedNodeIdentifiers;
    NSMutableIndexSet *_fragmentedEdgeIdentifiers;
    unsigned int _lastNodeIdentifier;
    unsigned int _lastEdgeIdentifier;
    NSMutableArray *_labelStrings;
    NSMutableDictionary *_labelsForStrings;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) NSUUID *identifier; // @synthesize identifier=_identifier;
@property (readonly, nonatomic) MADatabase *persistentStore; // @synthesize persistentStore=_persistentStore;
@property (readonly) Class superclass;
@property (nonatomic) unsigned long long version; // @synthesize version=_version;

+ (BOOL)copyPersistentStoreFromURL:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
+ (id)dataURLWithPath:(id)arg1 andName:(id)arg2;
+ (void)deleteMarker:(id)arg1;
+ (BOOL)destroyPersistentStoreAtURL:(id)arg1 error:(id *)arg2;
+ (Class)edgeClass;
+ (id)graph;
+ (id)graphMLURLWithPath:(id)arg1 andName:(id)arg2;
+ (id)graphWithDefinitions:(id)arg1 constraints:(id)arg2 error:(id *)arg3;
+ (id)graphWithMergedGraphs:(id)arg1 strictNodes:(BOOL)arg2 strictEdges:(BOOL)arg3;
+ (id)graphWithVisualString:(id)arg1 error:(id *)arg2;
+ (BOOL)hasMarker:(id)arg1;
+ (void)initialize;
+ (BOOL)migratePersistentStoreFromURL:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
+ (Class)nodeClass;
+ (Class)persistentStoreClass;
+ (id)persistentStoreURLWithPath:(id)arg1 andName:(id)arg2;
+ (id)scanGraphConstraintString:(id)arg1 error:(id *)arg2;
+ (BOOL)scanGraphElementOptionsString:(id)arg1 minimum:(unsigned long long *)arg2 maximum:(unsigned long long *)arg3 error:(id *)arg4;
+ (BOOL)scanGraphElementString:(id)arg1 type:(unsigned long long *)arg2 optionalName:(id *)arg3 label:(id *)arg4 optionalDomains:(id *)arg5 optionalProperties:(id *)arg6 error:(id *)arg7;
+ (BOOL)scanMatchString:(id)arg1 definitions:(id *)arg2 constaints:(id *)arg3 forCreation:(BOOL)arg4 error:(id *)arg5;
- (void).cxx_destruct;
- (void)_addEdge:(id)arg1 withIdentifier:(unsigned int)arg2 saveToDatabase:(BOOL)arg3;
- (id)_addEdgeFromBase:(id)arg1 sourceNode:(id)arg2 targetNode:(id)arg3 saveToDatabase:(BOOL)arg4;
- (id)_addEdgeWithLabel:(id)arg1 sourceNode:(id)arg2 targetNode:(id)arg3 domain:(unsigned short)arg4 weight:(float)arg5 properties:(id)arg6 saveToDatabase:(BOOL)arg7;
- (void)_addNode:(id)arg1 withIdentifier:(unsigned int)arg2 saveToDatabase:(BOOL)arg3;
- (id)_addNodeFromBase:(id)arg1 saveToDatabase:(BOOL)arg2;
- (id)_addNodeWithLabel:(id)arg1 domain:(unsigned short)arg2 weight:(float)arg3 properties:(id)arg4 saveToDatabase:(BOOL)arg5;
- (id)_allEdges;
- (id)_allNodes;
- (id)_constraintAbstractEdgesFromAbstractNode:(id)arg1 inConstraints:(id *)arg2;
- (id)_edgesForLabel:(id)arg1;
- (id)_graphDictionary;
- (id)_keyForLabelString:(id)arg1;
- (unsigned short)_labelForString:(id)arg1 createIfNeeded:(BOOL)arg2;
- (id)_labelStrings;
- (void)_loadWithGraphDictionary:(id)arg1;
- (BOOL)_matchNode:(id)arg1 usingAbstractNode:(id)arg2 fromEdge:(id)arg3 atIteration:(unsigned long long)arg4 withDefinitions:(id)arg5 constraints:(id)arg6 unusedConstraints:(id)arg7 andSubGraph:(id)arg8 matchingNodeQueue:(id)arg9;
- (unsigned long long)_memoryFootprint:(id)arg1;
- (unsigned int)_nextEdgeIdentifier;
- (unsigned int)_nextNodeIdentifier;
- (id)_nodesForLabel:(id)arg1;
- (void)_prefetchPropertiesForElements:(id)arg1 forType:(id)arg2;
- (void)_prepareFragmentedIdentifiers;
- (void)_removeMemoryEdge:(id)arg1;
- (void)_removeMemoryNode:(id)arg1;
- (void)_setLabelStrings:(id)arg1;
- (void)_setVersion:(unsigned long long)arg1;
- (id)_stringForLabel:(unsigned short)arg1;
- (id)addEdgeFromBase:(id)arg1 sourceNode:(id)arg2 targetNode:(id)arg3;
- (id)addEdgeWithLabel:(id)arg1 sourceNode:(id)arg2 targetNode:(id)arg3;
- (id)addEdgeWithLabel:(id)arg1 sourceNode:(id)arg2 targetNode:(id)arg3 domain:(unsigned short)arg4 weight:(float)arg5 properties:(id)arg6;
- (id)addNodeFromBase:(id)arg1;
- (id)addNodeWithLabel:(id)arg1;
- (id)addNodeWithLabel:(id)arg1 domain:(unsigned short)arg2 weight:(float)arg3 properties:(id)arg4;
- (id)addUniqueEdgeWithLabel:(id)arg1 sourceNode:(id)arg2 targetNode:(id)arg3 domain:(unsigned short)arg4 weight:(float)arg5 properties:(id)arg6;
- (id)addUniqueNodeWithLabel:(id)arg1 domain:(unsigned short)arg2 weight:(float)arg3 properties:(id)arg4 didCreate:(BOOL *)arg5;
- (id)dataRepresentation:(id *)arg1;
- (void)dealloc;
- (void)deleteMarker;
- (id)edgeForIdentifier:(unsigned int)arg1;
- (unsigned long long)edgesCount;
- (unsigned long long)edgesCountForLabel:(id)arg1;
- (id)edgesForDomain:(unsigned short)arg1;
- (id)edgesForDomains:(id)arg1;
- (id)edgesForLabel:(id)arg1;
- (id)edgesForLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3;
- (id)edgesLabels;
- (void)enterBatch;
- (void)enumerateEdgesWithBlock:(CDUnknownBlockType)arg1;
- (void)enumerateEdgesWithLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)enumerateEdgesWithLabel:(id)arg1 domain:(unsigned short)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateNodesWithBlock:(CDUnknownBlockType)arg1;
- (void)enumerateNodesWithLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)enumerateNodesWithLabel:(id)arg1 domain:(unsigned short)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (id)envelopGraphForNodes:(id)arg1 throughEdgesWithLabels:(id)arg2 copyProperties:(BOOL)arg3;
- (BOOL)hasMarker;
- (id)init;
- (id)initWithDataRepresentation:(id)arg1;
- (id)initWithDataURL:(id)arg1;
- (id)initWithGraphMLURL:(id)arg1;
- (id)initWithPersistentStoreURL:(id)arg1;
- (void)invalidateMemoryCaches;
- (BOOL)isEqual:(id)arg1;
- (void)leaveBatch;
- (id)matchWithDefinitions:(id)arg1 constraints:(id)arg2 error:(id *)arg3;
- (id)matchWithVisualFormat:(id)arg1 elements:(id)arg2 error:(id *)arg3;
- (id)matchWithVisualString:(id)arg1 error:(id *)arg2;
- (void)mergeCopyWithGraph:(id)arg1;
- (void)mergeReuseWithGraph:(id)arg1;
- (void)mergeWithGraph:(id)arg1 strictNodes:(BOOL)arg2 strictEdges:(BOOL)arg3;
- (id)mergeWithGraph:(id)arg1 strictNodes:(BOOL)arg2 strictEdges:(BOOL)arg3 saveToDatabase:(BOOL)arg4;
- (BOOL)migratePersistentStoreToURL:(id)arg1 error:(id *)arg2;
- (id)nodeForIdentifier:(unsigned int)arg1;
- (unsigned long long)nodesCount;
- (unsigned long long)nodesCountForLabel:(id)arg1;
- (unsigned long long)nodesCountForLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3;
- (id)nodesForDomain:(unsigned short)arg1;
- (id)nodesForDomains:(id)arg1;
- (id)nodesForLabel:(id)arg1;
- (id)nodesForLabel:(id)arg1 domain:(unsigned short)arg2 properties:(id)arg3;
- (id)nodesLabels;
- (void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (void)parser:(id)arg1 foundCharacters:(id)arg2;
- (void)performAsynchronousBarrierWriteUsingBlock:(CDUnknownBlockType)arg1;
- (void)performSynchronousConcurrentReadUsingBlock:(CDUnknownBlockType)arg1;
- (void)prefetchAllDomains;
- (void)prefetchDomain:(unsigned short)arg1;
- (void)prefetchDomains:(id)arg1;
- (void)prefetchEdgesWithLabels:(id)arg1;
- (void)prefetchNodesWithLabels:(id)arg1;
- (void)registerForPrefetchDomains:(unsigned short)arg1;
- (void)removeAllObjects;
- (void)removeEdge:(id)arg1;
- (void)removeEdges:(id)arg1;
- (void)removeNode:(id)arg1;
- (void)removeNodeEdges:(id)arg1;
- (void)removeNodes:(id)arg1;
- (BOOL)savePersistentStore;
- (void)savePersistentStoreWithCompletion:(CDUnknownBlockType)arg1;
- (id)selectBestRootNodeForPath:(id)arg1 withDefinitions:(id)arg2;
- (void)setMarker;
- (id)shortestPathBetweenStartNode:(id)arg1 andEndNode:(id)arg2 directed:(BOOL)arg3;
- (void)traversingGraphBreadthFirstFromNode:(id)arg1 directed:(BOOL)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)traversingGraphDepthFirstFromNode:(id)arg1 directed:(BOOL)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)unregisterForPrefetchDomains:(unsigned short)arg1;
- (BOOL)writeDataToURL:(id)arg1 error:(id *)arg2;

@end

