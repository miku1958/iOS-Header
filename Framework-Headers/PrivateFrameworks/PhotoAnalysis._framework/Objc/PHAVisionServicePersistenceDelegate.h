//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <PhotoAnalysis/PVPersistenceDelegate-Protocol.h>

@class NSString, PHAManager, PHPhotoLibrary;

@interface PHAVisionServicePersistenceDelegate : NSObject <PVPersistenceDelegate>
{
    PHPhotoLibrary *_photoLibrary;
    PHAManager *_photoAnalysisManager;
    unsigned int activeFaceprintVersion;
}

@property unsigned int activeFaceprintVersion; // @synthesize activeFaceprintVersion;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_buildPersonsFromUpdatedFaceGroups:(id)arg1 faceComparer:(id)arg2 canceler:(id)arg3 context:(id)arg4;
- (BOOL)_completePersonBuildingWithPersonsToUpdate:(id)arg1 facesToRemoveByPerson:(id)arg2 facesToAddByPerson:(id)arg3 updateFaceGroup:(id)arg4 canceler:(id)arg5 error:(id *)arg6;
- (void)_consolidatePersonsToMerge:(id)arg1;
- (id)_countOfFacesByPerson:(id)arg1 using:(id)arg2 ignore:(id)arg3;
- (id)_facesInFaceGroup:(id)arg1 usingCache:(id)arg2;
- (id)_facesInPerson:(id)arg1 usingCache:(id)arg2;
- (id)_fetchPHFacesForFaceIdentifiers:(id)arg1;
- (id)_fetchPHFacesWithClusterSequenceNumbers:(id)arg1;
- (void)_getRejectedTrainingFaceCSNs:(id *)arg1 rejectedFaceCSNs:(id *)arg2 forPerson:(id)arg3 inFaceGroup:(id)arg4;
- (void)_getTrainingFacesByPerson:(id *)arg1 confirmedFaceCSNs:(id *)arg2 faceCSNsByPerson:(id *)arg3 unverifiedPerson:(id *)arg4 fromFaceGroup:(id)arg5 canceler:(id)arg6;
- (id)_goodRepresentativeFaceFromFaces:(id)arg1 faceComparer:(id)arg2;
- (unsigned long long)_level0ClusterIdForFaceCSN:(unsigned long long)arg1 level0Clusters:(id)arg2;
- (BOOL)_mergePersons:(id)arg1 error:(id *)arg2;
- (void)_mergePersonsBasedOnLevel1RenameStatistics:(id)arg1 context:(id)arg2;
- (id)_phFaceFetchResultForFacesWithClusterSequenceNumbers:(id)arg1;
- (id)_pvFaceprintForPHFace:(id)arg1;
- (id)_rejectedFacesForPerson:(id)arg1;
- (id)_unverifiedPersonForFaceGroup:(id)arg1;
- (id)_updatedFaceGroupByFGLocalIdentifierFromClusterCSNsWithCanceler:(id)arg1;
- (id)_userNamedFaceForVerifiedPerson:(id)arg1 inFaceGroup:(id)arg2 unnamedFacesFetchResult:(id *)arg3 faceComparer:(id)arg4;
- (id)allAlgorithmicFaceGroups:(id *)arg1;
- (id)allAlgorithmicFaceGroupsAsClusterSequenceNumbers:(id *)arg1;
- (id)allPersons:(id *)arg1;
- (id)assetForIdentifier:(id)arg1 error:(id *)arg2;
- (id)associateFace:(id)arg1 withFaceCrop:(id)arg2 error:(id *)arg3;
- (void)autonameFaceClusters:(id)arg1 faceComparer:(id)arg2 recallThreshold:(float)arg3;
- (void)buildPersonsWithFaceComparer:(id)arg1 canceler:(id)arg2 context:(id)arg3;
- (BOOL)clearDirtyStateOnFaceCrops:(id)arg1 error:(id *)arg2;
- (id)clusterSequenceNumbersOfKeyFacesFromAlgorithmicGroupsContainingFacesWithLocalIdentifiers:(id)arg1 includeSingletons:(BOOL)arg2 error:(id *)arg3;
- (unsigned long long)countOfAlgorithmicFaceGroups:(id *)arg1;
- (unsigned long long)countOfClusteringEligibleFaces;
- (unsigned long long)countOfFaces;
- (BOOL)deleteEmptyGroupsAndReturnError:(id *)arg1;
- (BOOL)deleteFaceGroupsAndReturnError:(id *)arg1;
- (id)dirtyFaceCropsWithLimit:(unsigned long long)arg1 error:(id *)arg2;
- (id)faceLocalIdentifiersInFaceGroupWithLocalIdentifier:(id)arg1 error:(id *)arg2;
- (id)faceprintsByFaceLocalIdentifiers:(id)arg1 version:(unsigned int)arg2 error:(id *)arg3;
- (id)facesAlgorithmicallyGroupedWithFacesWithClusterSequenceNumbers:(id)arg1 includeSingletons:(BOOL)arg2 error:(id *)arg3;
- (id)facesByFaceLocalIdentifiers:(id)arg1 error:(id *)arg2;
- (id)facesByFaceLocalIdentifiers:(id)arg1 withFaceprintVersion:(unsigned int)arg2 excludeClustered:(BOOL)arg3;
- (id)facesForClusteringWithFaceprintVersion:(unsigned int)arg1 excludeClustered:(BOOL)arg2 maxCount:(unsigned long long)arg3 error:(id *)arg4;
- (id)facesForClusteringWithFaceprintVersion:(unsigned int)arg1 minClusterSequenceNumber:(unsigned long long)arg2 maxClusterSequenceNumber:(unsigned long long)arg3 error:(id *)arg4;
- (id)facesForClusteringWithLocalIdentifiers:(id)arg1 faceprintVersion:(unsigned int)arg2 excludeClustered:(BOOL)arg3;
- (id)facesForFaceClusterSequenceNumbers:(id)arg1 withFaceprintVersion:(unsigned int)arg2;
- (id)facesForFaceLocalIdentifiers:(id)arg1 error:(id *)arg2;
- (id)facesForPersonWithLocalIdentifier:(id)arg1 offset:(unsigned long long)arg2 count:(unsigned long long)arg3 error:(id *)arg4;
- (id)facesFromAsset:(id)arg1 error:(id *)arg2;
- (id)fetchAssetWithLocalIdentifier:(id)arg1 error:(id *)arg2;
- (id)fetchFaceWithClusterSequenceNumber:(id)arg1 error:(id *)arg2;
- (id)fetchFaceWithLocalIdentifier:(id)arg1 error:(id *)arg2;
- (id)fetchPersonWithLocalIdentifier:(id)arg1 error:(id *)arg2;
- (BOOL)getFace:(id *)arg1 associatedWithFaceCrop:(id)arg2 error:(id *)arg3;
- (BOOL)hasDirtyFaceCrops;
- (id)initWithPhotoAnalysisManager:(id)arg1;
- (id)initWithPhotoLibrary:(id)arg1;
- (id)keyFacesFromAlgorithmicGroupsContainingFacesWithClusterSequenceNumbers:(id)arg1 includeSingletons:(BOOL)arg2 error:(id *)arg3;
- (id)localIdentifiersOfFacesAlgorithmicallyGroupedWithFacesWithLocalIdentifiers:(id)arg1 error:(id *)arg2;
- (id)localIdentifiersOfKeyFacesFromAlgorithmicGroupsContainingFacesWithLocalIdentifiers:(id)arg1 error:(id *)arg2;
- (void)logPVDebugMessage:(id)arg1;
- (void)logPVErrorMessage:(id)arg1;
- (void)logPVInfoMessage:(id)arg1;
- (void)logPVWarningMessage:(id)arg1;
- (BOOL)needsPersonBuilding;
- (BOOL)persistChangesToAlgorithmicFaceGroups:(id)arg1 andFaces:(id)arg2 withCanceler:(id)arg3 returningPersistedClusters:(id *)arg4 faceGroupsThatLostFaces:(id *)arg5 faceGroupsWithoutKeyFace:(id *)arg6 csnsToBeRemovedFromClusterState:(id)arg7 toBeReclusteredFaceIds:(id)arg8 error:(id *)arg9;
- (BOOL)persistFaces:(id)arg1 deleteFaces:(id)arg2 forAsset:(id)arg3 persistedFaces:(id *)arg4 error:(id *)arg5;
- (BOOL)persistGeneratedFaceCrops:(id)arg1 error:(id *)arg2;
- (id)personWithFaceLocalIdentifier:(id)arg1 error:(id *)arg2;
- (id)personsForLocalIdentifiers:(id)arg1 error:(id *)arg2;
- (id)photoLibrary;
- (BOOL)recordNeedToPersonBuildOnFaceGroupContainingFace:(id)arg1 error:(id *)arg2;
- (id)rejectedFaceClusterSequenceNumbersForPersonWithLocalIdentifier:(id)arg1 error:(id *)arg2;
- (id)rejectedFaceGroupLocalIdentifiersForPersonWithLocalIdentifier:(id)arg1 error:(id *)arg2;
- (id)rejectedFaceLocalIdentifiersForPersonWithLocalIdentifier:(id)arg1 error:(id *)arg2;
- (id)rejectedFacesForPersonWithLocalIdentifier:(id)arg1 error:(id *)arg2;
- (BOOL)removeAlgorithmicallyGroupedFacesWithLocalIdentifiers:(id)arg1 error:(id *)arg2;
- (void)removeExistingFacesFromCSNs:(id)arg1;
- (BOOL)resetClusterSequenceNumberOfAllFaces:(id *)arg1;
- (BOOL)resetClusterSequenceNumberOfFacesWithLocalIdentifiers:(id)arg1 error:(id *)arg2;
- (BOOL)setKeyFaceOfAlgorithmicFaceGroupToFaceWithClusterSequenceNumbers:(id)arg1 error:(id *)arg2;
- (id)unclusteredFaceLocalIdentifiersWithFaceprintVersion:(unsigned int)arg1 error:(id *)arg2;
- (id)unverifiedVisibleFacesFromFaceGroupContainingFacesWithClusterSequenceNumbers:(id)arg1 withFaceprintVersion:(unsigned int)arg2;
- (BOOL)updateFaceprint:(id)arg1 ofPersistedFace:(id)arg2 error:(id *)arg3;
- (id)verifiedPersonsFetchResultWithLocalIdentifiers:(id)arg1 error:(id *)arg2;

@end

