//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <Espresso/ETTaskContext-Protocol.h>

@class ETModelDefinition, ETOptimizerDefinition, ETTaskState, ETVariablesDefinition, NSArray;

@interface ETTaskDefinition : NSObject <ETTaskContext>
{
    struct unordered_map<std::__1::basic_string<char>, unsigned long, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long>>> inference_layer_index;
    ETVariablesDefinition *varsDef;
    unsigned long long runtimePlatform;
    int precision;
    unsigned long long batchSize;
    basic_string_23d93216 training_control_name;
    basic_string_23d93216 training_control_end_name;
    basic_string_23d93216 gradient_control_name;
    basic_string_23d93216 gradient_control_end_name;
    basic_string_23d93216 optimizer_control_name;
    basic_string_23d93216 optimizer_control_end_name;
    NSArray *infInputNames;
    NSArray *infOutputNames;
    NSArray *trainInputNames;
    NSArray *trainOutputNames;
    unordered_map_1de83e55 infInputBlobShapes;
    unordered_map_1de83e55 trainInputBlobShapes;
    unordered_map_1de83e55 infOutputBlobShapes;
    unordered_map_1de83e55 trainOutputBlobShapes;
    ETModelDefinition *_inferenceModel;
    ETOptimizerDefinition *_optimizer;
    unsigned long long _platform;
    ETTaskState *_taskState;
    shared_ptr_d082c67d _inferenceGraphNetPtr;
    shared_ptr_d082c67d _trainingGraphNetPtr;
}

@property shared_ptr_d082c67d inferenceGraphNetPtr; // @synthesize inferenceGraphNetPtr=_inferenceGraphNetPtr;
@property (strong, nonatomic) ETModelDefinition *inferenceModel; // @synthesize inferenceModel=_inferenceModel;
@property (strong, nonatomic) ETOptimizerDefinition *optimizer; // @synthesize optimizer=_optimizer;
@property (nonatomic) unsigned long long platform; // @synthesize platform=_platform;
@property (strong, nonatomic) ETTaskState *taskState; // @synthesize taskState=_taskState;
@property shared_ptr_d082c67d trainingGraphNetPtr; // @synthesize trainingGraphNetPtr=_trainingGraphNetPtr;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)checkShapes:(const unordered_map_1de83e55 *)arg1 withSample:(const unordered_map_74b681bc *)arg2 withError:(id *)arg3;
- (shared_ptr_ae8b808b)context_for_runtime_platform:(id *)arg1;
- (unsigned long long)dataTypeForParameterOfType:(unsigned long long)arg1 fromLayerNamed:(id)arg2;
- (id)description;
- (id)doInferenceOnData:(id)arg1 error:(id *)arg2;
- (BOOL)doTrainingOnData:(id)arg1 forNumberOfEpochs:(unsigned long long)arg2 withCallback:(id)arg3 error:(id *)arg4;
- (id)getParameterOfType:(unsigned long long)arg1 forLayerNamed:(id)arg2 error:(id *)arg3;
- (id)getTensorNamed:(id)arg1;
- (id)initWithModelDefinition:(id)arg1 lossDefinition:(id)arg2 variablesDefinition:(id)arg3 optimizerDefinition:(id)arg4 forPlatform:(unsigned long long)arg5 error:(id *)arg6;
- (id)initWithTrainingModelDefinition:(id)arg1 forPlatform:(unsigned long long)arg2 error:(id *)arg3;
- (id)namesVectorToFoundationArray:(vector_ebb6ef3e)arg1;
- (unsigned long long)platformForLayerNamed:(id)arg1 error:(id *)arg2;
- (BOOL)privateDoTrainingOnData:(id)arg1 forNumberOfEpochs:(unsigned long long)arg2 withCallback:(id)arg3 error:(id *)arg4;
- (void)reloadOnRuntimePlatform:(id *)arg1;
- (BOOL)saveNetwork:(id)arg1 inplace:(BOOL)arg2 error:(id *)arg3;
- (BOOL)saveTrainingNetwork:(id)arg1 checkpoint:(id)arg2 error:(id *)arg3;
- (BOOL)setInferenceNetworkWeights:(shared_ptr_d082c67d)arg1 error:(id *)arg2;
- (BOOL)setParameterOfType:(unsigned long long)arg1 forLayerNamed:(id)arg2 withValue:(id)arg3 error:(id *)arg4;
- (BOOL)setTensorNamed:(id)arg1 withValue:(id)arg2 error:(id *)arg3;
- (BOOL)setWeightsOfInferenceNetworkLoadedFrom:(id)arg1 AndSaveTo:(id)arg2 error:(id *)arg3;
- (void)setupInputOutputShapes:(id *)arg1;
- (void)setupShapes:(unordered_map_1de83e55 *)arg1 forBlobs:(id)arg2 withError:(id *)arg3;
- (void)shareWeights;

@end

