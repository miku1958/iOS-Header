//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <WeatherFoundation/WFWeatherStore-Protocol.h>

@class NSMutableDictionary, NSString, WFNetworkRetryManager, WFWeatherStoreCache, WFWeatherStoreServiceConfiguration;
@protocol OS_dispatch_queue;

@interface WFWeatherStoreService : NSObject <WFWeatherStore>
{
    struct os_unfair_lock_s _retryLock;
    WFWeatherStoreServiceConfiguration *_configuration;
    CDUnknownBlockType _forecastRequestStartingCallback;
    CDUnknownBlockType _locationGeocodeForCoordinateRequestStartingCallback;
    NSObject<OS_dispatch_queue> *_incomingRequestQueue;
    NSObject<OS_dispatch_queue> *_parseQueue;
    NSObject<OS_dispatch_queue> *_mapQueue;
    NSMutableDictionary *_UUIDToCallbackMap;
    NSMutableDictionary *_UUIDToURLMap;
    NSMutableDictionary *_URLToTaskMap;
    NSMutableDictionary *_URLToCallbackMap;
    WFWeatherStoreCache *_cache;
    WFNetworkRetryManager *_retryManager;
}

@property (strong) NSMutableDictionary *URLToCallbackMap; // @synthesize URLToCallbackMap=_URLToCallbackMap;
@property (strong) NSMutableDictionary *URLToTaskMap; // @synthesize URLToTaskMap=_URLToTaskMap;
@property (strong) NSMutableDictionary *UUIDToCallbackMap; // @synthesize UUIDToCallbackMap=_UUIDToCallbackMap;
@property (strong) NSMutableDictionary *UUIDToURLMap; // @synthesize UUIDToURLMap=_UUIDToURLMap;
@property (strong) WFWeatherStoreCache *cache; // @synthesize cache=_cache;
@property (copy, nonatomic) WFWeatherStoreServiceConfiguration *configuration; // @synthesize configuration=_configuration;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (copy, nonatomic) CDUnknownBlockType forecastRequestStartingCallback; // @synthesize forecastRequestStartingCallback=_forecastRequestStartingCallback;
@property (readonly) unsigned long long hash;
@property (strong) NSObject<OS_dispatch_queue> *incomingRequestQueue; // @synthesize incomingRequestQueue=_incomingRequestQueue;
@property (copy, nonatomic) CDUnknownBlockType locationGeocodeForCoordinateRequestStartingCallback; // @synthesize locationGeocodeForCoordinateRequestStartingCallback=_locationGeocodeForCoordinateRequestStartingCallback;
@property (strong) NSObject<OS_dispatch_queue> *mapQueue; // @synthesize mapQueue=_mapQueue;
@property (strong) NSObject<OS_dispatch_queue> *parseQueue; // @synthesize parseQueue=_parseQueue;
@property struct os_unfair_lock_s retryLock; // @synthesize retryLock=_retryLock;
@property (strong, nonatomic) WFNetworkRetryManager *retryManager; // @synthesize retryManager=_retryManager;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_addCallback:(id)arg1 requestIdentifier:(id)arg2 forURL:(id)arg3;
- (void)_cacheObject:(id)arg1 type:(unsigned long long)arg2 date:(id)arg3 forLocation:(id)arg4;
- (BOOL)_cacheParsedForecastData:(id)arg1 types:(unsigned long long)arg2 location:(id)arg3 date:(id)arg4 requestIdentifier:(id)arg5;
- (id)_cachedAirQualityConditionsForLocation:(id)arg1 date:(id)arg2;
- (id)_cachedChangeForecastForLocation:(id)arg1 date:(id)arg2;
- (id)_cachedCurrentObservationsForLocation:(id)arg1 date:(id)arg2;
- (id)_cachedDailyForecastedConditionsForLocation:(id)arg1 date:(id)arg2;
- (id)_cachedDailyPollenForecastedConditionsForLocation:(id)arg1 date:(id)arg2;
- (id)_cachedData:(unsigned long long)arg1 forLocation:(id)arg2 date:(id)arg3;
- (id)_cachedHistoricalObservationsForLast24hForLocation:(id)arg1 date:(id)arg2;
- (id)_cachedHourlyForecastedConditionsForLocation:(id)arg1 date:(id)arg2;
- (id)_cachedNextHourPrecipitationForLocation:(id)arg1 date:(id)arg2;
- (id)_cachedSevereWeatherEventsForLocation:(id)arg1 date:(id)arg2;
- (void)_cancelWithRequestIdentifier:(id)arg1;
- (void)_cleanupCallbacksAndTasksForURL:(id)arg1;
- (id)_currentScaleCategoryForScale:(id)arg1 index:(unsigned long long)arg2;
- (void)_enumerateForecastTypesIn:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)_executeCallbacksForURL:(id)arg1 responseData:(id)arg2 error:(id)arg3;
- (void)_forecastConditionsForTWCAQIAndTypes:(unsigned long long)arg1 location:(id)arg2 locale:(id)arg3 date:(id)arg4 requestIdentifier:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (void)_forecastConditionsForTypes:(unsigned long long)arg1 location:(id)arg2 locale:(id)arg3 date:(id)arg4 requestIdentifier:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (void)_forecastConditionsForTypes:(unsigned long long)arg1 location:(id)arg2 units:(int)arg3 locale:(id)arg4 date:(id)arg5 requestIdentifier:(id)arg6 requestOptions:(id)arg7 completionHandler:(CDUnknownBlockType)arg8;
- (BOOL)_handleDataTaskCompletionWithData:(id)arg1 httpResponse:(id)arg2 apiVersion:(id)arg3 identifier:(id)arg4 requestURL:(id)arg5 dataTask:(id)arg6 dataTaskError:(id)arg7 startDate:(id)arg8;
- (BOOL)_isConnectivityAvailableForWeatherHost:(id *)arg1;
- (void)_setTask:(id)arg1 requestIdentifier:(id)arg2 callback:(id)arg3 forURL:(id)arg4;
- (void)_submitRequest:(id)arg1 withIdentifier:(id)arg2 forLocation:(id)arg3 forecastTypes:(unsigned long long)arg4 configuration:(id)arg5 units:(int)arg6 locale:(id)arg7 date:(id)arg8 apiVersion:(id)arg9 completionHandler:(CDUnknownBlockType)arg10;
- (void)_submitRequest:(id)arg1 withIdentifier:(id)arg2 forScaleNamed:(id)arg3 language:(id)arg4 configuration:(id)arg5 apiVersion:(id)arg6 completionHandler:(CDUnknownBlockType)arg7;
- (id)_taskForURL:(id)arg1;
- (void)airQualityForLocation:(id)arg1 locale:(id)arg2 requestIdentifier:(id)arg3 options:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (id)apiVersionForSettings:(id)arg1;
- (void)cancelTaskWithIdentifier:(id)arg1;
- (void)completeErroneousForecastRequestWithHandler:(CDUnknownBlockType)arg1 requestIdentifier:(id)arg2 error:(id)arg3;
- (void)dailyForecastForLocation:(id)arg1 locale:(id)arg2 requestIdentifier:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)dealloc;
- (void)forecast:(unsigned long long)arg1 forLocation:(id)arg2 locale:(id)arg3 requestIdentifier:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)forecast:(unsigned long long)arg1 forLocation:(id)arg2 withUnits:(int)arg3 locale:(id)arg4 requestIdentifier:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (void)forecast:(unsigned long long)arg1 forLocation:(id)arg2 withUnits:(int)arg3 locale:(id)arg4 requestIdentifier:(id)arg5 requestOptions:(id)arg6 completionHandler:(CDUnknownBlockType)arg7;
- (void)forecastForLocation:(id)arg1 locale:(id)arg2 onDate:(id)arg3 requestIdentifier:(id)arg4 options:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (void)hourlyForecastForLocation:(id)arg1 locale:(id)arg2 requestIdentifier:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)init;
- (id)initWithConfiguration:(id)arg1;
- (id)initWithConfiguration:(id)arg1 error:(id *)arg2;
- (void)invalidateCacheWithIdentifier:(id)arg1;
- (id)languageForLocale:(id)arg1;
- (void)requestFailureForAPIVersion:(id)arg1 error:(id)arg2;
- (void)requestSuccessForAPIVersion:(id)arg1;

@end

