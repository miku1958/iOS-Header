//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/NSObject.h>

#import <DADaemonSupport/NSURLConnectionDelegate-Protocol.h>

@class AKAppleIDSession, DARefreshWrapper, NSData, NSMutableURLRequest, NSString, NSURLConnection;
@protocol DATokenRegistrationDelegate;

@interface DATokenRegistrationRequest : NSObject <NSURLConnectionDelegate>
{
    BOOL _shouldRetry;
    id<DATokenRegistrationDelegate> _delegate;
    DARefreshWrapper *_wrapper;
    NSString *_onBehalfOfBundleIdentifier;
    NSData *_token;
    NSString *_pushKey;
    NSMutableURLRequest *_request;
    NSURLConnection *_connection;
    AKAppleIDSession *_hsa2Session;
}

@property (strong, nonatomic) NSURLConnection *connection; // @synthesize connection=_connection;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<DATokenRegistrationDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) AKAppleIDSession *hsa2Session; // @synthesize hsa2Session=_hsa2Session;
@property (strong, nonatomic) NSString *onBehalfOfBundleIdentifier; // @synthesize onBehalfOfBundleIdentifier=_onBehalfOfBundleIdentifier;
@property (weak, nonatomic) NSString *pushKey; // @synthesize pushKey=_pushKey;
@property (strong, nonatomic) NSMutableURLRequest *request; // @synthesize request=_request;
@property (nonatomic) BOOL shouldRetry; // @synthesize shouldRetry=_shouldRetry;
@property (readonly) Class superclass;
@property (weak, nonatomic) NSData *token; // @synthesize token=_token;
@property (weak, nonatomic) DARefreshWrapper *wrapper; // @synthesize wrapper=_wrapper;

+ (id)requestWithToken:(id)arg1 pushKey:(id)arg2 wrapper:(id)arg3 onBehalfOf:(id)arg4;
- (void).cxx_destruct;
- (void)cancel;
- (BOOL)connection:(id)arg1 canAuthenticateAgainstProtectionSpace:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connection:(id)arg1 willSendRequestForAuthenticationChallenge:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (id)initWithToken:(id)arg1 pushKey:(id)arg2 wrapper:(id)arg3 onBehalfOf:(id)arg4;
- (void)retryRegistrationRequest;
- (void)sendRegistrationRequestForAccount:(id)arg1;

@end

