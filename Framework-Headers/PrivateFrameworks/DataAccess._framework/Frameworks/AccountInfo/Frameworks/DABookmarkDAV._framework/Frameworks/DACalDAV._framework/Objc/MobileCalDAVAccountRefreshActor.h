//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/NSObject.h>

#import <DACalDAV/CalDAVAccountPropertyRefreshDelegate-Protocol.h>
#import <DACalDAV/CalDAVCalendarPropertyRefreshDelegate-Protocol.h>
#import <DACalDAV/CalDAVCalendarSyncDelegate-Protocol.h>

@class CalDAVRefreshContext, CalDiagAccountSync, MobileCalDAVAccount, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString;
@protocol OS_dispatch_group;

@interface MobileCalDAVAccountRefreshActor : NSObject <CalDAVAccountPropertyRefreshDelegate, CalDAVCalendarPropertyRefreshDelegate, CalDAVCalendarSyncDelegate>
{
    BOOL _shouldCancel;
    BOOL _didFinish;
    BOOL _refreshing;
    int _state;
    CalDiagAccountSync *_accountSyncDiagnostics;
    CalDAVRefreshContext *_context;
    MobileCalDAVAccount *_account;
    CDUnknownBlockType _completionBlock;
    NSMutableDictionary *_pathsToCTags;
    NSMutableDictionary *_pathsToSyncTokens;
    NSMutableArray *_calendarsToRefresh;
    NSObject<OS_dispatch_group> *_outstandingOperationGroup;
    NSMutableSet *_outstandingTaskGroups;
    NSMutableSet *_outstandingTasks;
    NSString *_calendarHomeSyncToken;
}

@property (weak, nonatomic) MobileCalDAVAccount *account; // @synthesize account=_account;
@property (strong, nonatomic) CalDiagAccountSync *accountSyncDiagnostics; // @synthesize accountSyncDiagnostics=_accountSyncDiagnostics;
@property (strong, nonatomic) NSString *calendarHomeSyncToken; // @synthesize calendarHomeSyncToken=_calendarHomeSyncToken;
@property (strong, nonatomic) NSMutableArray *calendarsToRefresh; // @synthesize calendarsToRefresh=_calendarsToRefresh;
@property (copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property (strong, nonatomic) CalDAVRefreshContext *context; // @synthesize context=_context;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) BOOL didFinish; // @synthesize didFinish=_didFinish;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) NSObject<OS_dispatch_group> *outstandingOperationGroup; // @synthesize outstandingOperationGroup=_outstandingOperationGroup;
@property (strong, nonatomic) NSMutableSet *outstandingTaskGroups; // @synthesize outstandingTaskGroups=_outstandingTaskGroups;
@property (strong, nonatomic) NSMutableSet *outstandingTasks; // @synthesize outstandingTasks=_outstandingTasks;
@property (strong, nonatomic) NSMutableDictionary *pathsToCTags; // @synthesize pathsToCTags=_pathsToCTags;
@property (strong, nonatomic) NSMutableDictionary *pathsToSyncTokens; // @synthesize pathsToSyncTokens=_pathsToSyncTokens;
@property (nonatomic) BOOL refreshing; // @synthesize refreshing=_refreshing;
@property (nonatomic) BOOL shouldCancel; // @synthesize shouldCancel=_shouldCancel;
@property (nonatomic) int state; // @synthesize state=_state;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_calendarCollectionsWereRefreshed;
- (void)_clearMoveChange:(id)arg1;
- (void)_handleMoveTaskComplete:(id)arg1 moveItem:(id)arg2;
- (void)_refreshAccountProperties;
- (void)_refreshCalendarProperties;
- (void)_refreshRegularCalendars;
- (BOOL)_refreshShouldContinue;
- (void)_refreshSpecialCalendars;
- (id)_refreshedCtagForCalendar:(id)arg1;
- (id)_refreshedSyncTokenForCalendar:(id)arg1;
- (BOOL)_sendMoveForItem:(id)arg1;
- (void)_sendMoveTasks;
- (void)_sendResultToAccount;
- (void)_syncCalendar:(id)arg1;
- (void)_teardownAllOutstandingOperations;
- (void)_waitForStateTransition;
- (void)calendarRefreshForPrincipal:(id)arg1 completedWithNewCTags:(id)arg2 newSyncTokens:(id)arg3 calendarHomeSyncToken:(id)arg4 updatedCalendars:(id)arg5 error:(id)arg6;
- (void)calendarSyncForPrincipal:(id)arg1 calendar:(id)arg2 completedWithError:(id)arg3;
- (void)cancelWithCompletion:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithAccount:(id)arg1 context:(id)arg2;
- (void)propertyRefreshForPrincipal:(id)arg1 completedWithError:(id)arg2;
- (void)refresh;
- (void)teardown;

@end

