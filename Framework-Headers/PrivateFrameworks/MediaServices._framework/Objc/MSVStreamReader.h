//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <MediaServices/NSStreamDelegate-Protocol.h>

@class NSInputStream, NSString;
@protocol OS_dispatch_queue;

@interface MSVStreamReader : NSObject <NSStreamDelegate>
{
    BOOL _closeOnStop;
    struct z_stream_s *_zstreamp;
    BOOL _compress;
    CDUnknownBlockType _didReadDataBlock;
    CDUnknownBlockType _didFinishReadingBlock;
    CDUnknownBlockType _didEncounterErrorBlock;
    unsigned long long _maximumBufferSize;
    double _timestamp;
    NSInputStream *_stream;
    NSObject<OS_dispatch_queue> *_queue;
}

@property (nonatomic, getter=shouldCompress) BOOL compress; // @synthesize compress=_compress;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (copy, nonatomic) CDUnknownBlockType didEncounterErrorBlock; // @synthesize didEncounterErrorBlock=_didEncounterErrorBlock;
@property (copy, nonatomic) CDUnknownBlockType didFinishReadingBlock; // @synthesize didFinishReadingBlock=_didFinishReadingBlock;
@property (copy, nonatomic) CDUnknownBlockType didReadDataBlock; // @synthesize didReadDataBlock=_didReadDataBlock;
@property (readonly) unsigned long long hash;
@property (nonatomic) unsigned long long maximumBufferSize; // @synthesize maximumBufferSize=_maximumBufferSize;
@property (strong, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property (strong, nonatomic) NSInputStream *stream; // @synthesize stream=_stream;
@property (readonly) Class superclass;
@property (readonly, nonatomic) double timestamp; // @synthesize timestamp=_timestamp;

- (void).cxx_destruct;
- (id)_compressedDataForData:(id)arg1;
- (void)dealloc;
- (id)initWithInputStream:(id)arg1 queue:(id)arg2;
- (void)readAllDataIntoFileHandle:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)readAllDataWithCompletion:(CDUnknownBlockType)arg1;
- (id)readAllDataWithError:(id *)arg1;
- (void)start;
- (void)stop;
- (void)stream:(id)arg1 handleEvent:(unsigned long long)arg2;

@end

