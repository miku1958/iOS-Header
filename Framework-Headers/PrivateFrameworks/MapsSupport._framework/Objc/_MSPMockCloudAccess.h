//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <MapsSupport/MSPCloudAccess-Protocol.h>

@class NSError, NSMutableDictionary, NSString, NSUUID;

@interface _MSPMockCloudAccess : NSObject <MSPCloudAccess>
{
    NSUUID *_identifier;
    NSMutableDictionary *_records;
    NSMutableDictionary *_deletedRecordNamesByRecordTypeSinceLastCachingCall;
    NSError *_retryableError;
    CDUnknownBlockType _availabilityDidChangeHandler;
    CDUnknownBlockType _contentsDidChangeHandler;
}

@property (copy, nonatomic) CDUnknownBlockType availabilityDidChangeHandler; // @synthesize availabilityDidChangeHandler=_availabilityDidChangeHandler;
@property (copy, nonatomic) CDUnknownBlockType contentsDidChangeHandler; // @synthesize contentsDidChangeHandler=_contentsDidChangeHandler;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

+ (void)_beginTrackingAccess:(id)arg1;
+ (id)_clientRegistrationRecordsDictionary;
+ (id)allAccesses;
- (void).cxx_destruct;
- (void)checkForAvailabilityWithCallbackQueue:(id)arg1 schedulePreAvailabilityOperationHandler:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3;
- (id)init;
- (void)loadSnapshot;
- (id)minimumStartDate;
- (void)networkReachabilityChanged:(BOOL)arg1;
- (id)newCombinedCachingFetchRequestWithGroup:(id)arg1 forTask:(id)arg2 successHandler:(CDUnknownBlockType)arg3;
- (id)newFetchRequestForCurrentClientRegistrationRecordWithGroup:(id)arg1 successHandler:(CDUnknownBlockType)arg2;
- (id)newFetchRequestWithGroup:(id)arg1 forRecordsWithNames:(id)arg2 successHandler:(CDUnknownBlockType)arg3;
- (id)newModifyClientRegistrationRecordRequestWithGroup:(id)arg1 editedRecord:(id)arg2;
- (id)newModifyRequestWithGroup:(id)arg1 forRecordsToModify:(id)arg2 namesOfRecordsToDelete:(id)arg3;
- (id)newQueryRequestWithGroup:(id)arg1 forRecordsOfType:(id)arg2 predicate:(id)arg3 sortDescriptors:(id)arg4 successHandler:(CDUnknownBlockType)arg5;
- (id)newRecordOfType:(id)arg1 name:(id)arg2;
- (id)newReferenceToRecord:(id)arg1;
- (id)newReferenceToRecordWithName:(id)arg1;
- (id)newRequestGroupWithName:(id)arg1 size:(long long)arg2;
- (id)newSubscriptionRegistrationRequestWithGroup:(id)arg1 successHandler:(CDUnknownBlockType)arg2;
- (id)retryDelayForError:(id)arg1;
- (void)setClientRegistrationIdentifier:(id)arg1;
- (void)setShouldAllowRetryForError:(id)arg1;
- (BOOL)shouldRetryAfterError:(id)arg1 isCancelation:(BOOL *)arg2 afterDelay:(out id *)arg3 withResolvingTask:(out id *)arg4;
- (id)snapshot;
- (id)snapshotURL;

@end

