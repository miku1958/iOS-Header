//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <BackBoardServices/BSProtobufSerializable-Protocol.h>
#import <BackBoardServices/NSCopying-Protocol.h>
#import <BackBoardServices/NSSecureCoding-Protocol.h>

@class NSData, NSString;

@interface BKSHIDEventAuthenticationMessage : NSObject <NSSecureCoding, NSCopying, BSProtobufSerializable>
{
    long long _versionedPID;
    unsigned int _eventType;
    unsigned long long _timestamp;
    long long _keyGeneration;
    unsigned long long _originIdentifier;
    unsigned long long _context;
    NSData *_signature;
}

@property (readonly, nonatomic) unsigned long long context; // @synthesize context=_context;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) unsigned int eventType; // @synthesize eventType=_eventType;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) long long keyGeneration; // @synthesize keyGeneration=_keyGeneration;
@property (readonly, nonatomic) unsigned long long originIdentifier; // @synthesize originIdentifier=_originIdentifier;
@property (readonly) Class superclass;
@property (readonly, nonatomic) unsigned long long timestamp; // @synthesize timestamp=_timestamp;
@property (readonly, nonatomic) long long versionedPID; // @synthesize versionedPID=_versionedPID;

+ (id)messageWithOriginIdentifier:(unsigned long long)arg1 context:(unsigned long long)arg2 destinationAuditToken:(id)arg3 signWithKey:(id)arg4;
+ (id)new;
+ (id)protobufSchema;
+ (BOOL)supportsSecureCoding;
+ (id)withKey:(id)arg1 buildMessage:(CDUnknownBlockType)arg2;
- (void).cxx_destruct;
- (BOOL)_verifySignatureWithKey:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)destinationAuditToken;
- (void)encodeWithCoder:(id)arg1;
- (id)init;
- (id)initForProtobufDecoding;
- (id)initWithCoder:(id)arg1;
- (id)initWithOriginIdentifier:(unsigned long long)arg1 context:(unsigned long long)arg2 destinationAuditToken:(id)arg3 signWithKey:(id)arg4;
- (BOOL)isEqual:(id)arg1;
- (BOOL)verifySignatureWithKey:(id)arg1;
- (BOOL)verifySignatureWithKeys:(id)arg1;

@end

