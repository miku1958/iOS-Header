//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

@class MISSING_TYPE, NSObject;

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct Address {
    struct DynamicString _field1;
};

struct Allocator;

struct AssetService {
    CDUnknownFunctionPointerType *_field1;
};

struct AudioBuffer {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
};

struct AudioBufferList {
    unsigned int _field1;
    struct AudioBuffer _field2[1];
};

struct AudioComponentDescription {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct AudioManager_AVAudioEngine {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    struct unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, re::AudioMixGroupState, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, re::AudioMixGroupState>>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, re::AudioMixGroupState, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, re::AudioMixGroupState>>>>>> _field3;
    struct unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, float, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, float>>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, float, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, float>>>>>> _field4;
    struct unordered_map<unsigned long long, re::AudioManager::ReverbPreset, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, re::AudioManager::ReverbPreset>>> _field5;
    struct unordered_map<unsigned long long, re::AudioManager::ReverbPreset, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, re::AudioManager::ReverbPreset>>> _field6;
    struct weak_ptr<re::AudioManager_AVAudioEngine> _field7;
    id _field8;
    struct unordered_map<unsigned long long, re::AVAEAudioScene, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, re::AVAEAudioScene>>> _field9;
    id _field10;
    id _field11;
    struct vector<AVAudioUnitEffect *, std::__1::allocator<AVAudioUnitEffect *>> _field12;
    id _field13;
    double _field14;
    unsigned int _field15;
    struct atomic<bool> _field16;
    struct atomic<int> _field17;
    struct unordered_map<unsigned long long, re::AVAENetworkPeer, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, re::AVAENetworkPeer>>> _field18;
    struct HashSet<unsigned long long, re::Hash<uint64_t>, re::EqualTo<uint64_t>, true, false> _field19;
    struct UnfairLock _field20;
    struct SharedPtr<re::Session> _field21;
    struct vector<unsigned char, std::__1::allocator<unsigned char>> _field22;
    struct atomic<double> _field23;
    struct AudioUnitPool _field24;
    BOOL _field25;
    BOOL _field26;
    unsigned long long _field27;
    struct {
        MISSING_TYPE *_field1[4];
    } _field28;
    struct OpaqueFigSTS *_field29;
    struct unordered_map<unsigned int, const __CFString *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, const __CFString *>>> _field30;
};

struct AudioUnitPool {
    struct unordered_map<const void *, std::__1::unique_ptr<AudioUnitPool::Instantiator, std::__1::default_delete<AudioUnitPool::Instantiator>>, std::__1::hash<const void *>, std::__1::equal_to<const void *>, std::__1::allocator<std::__1::pair<const void *const, std::__1::unique_ptr<AudioUnitPool::Instantiator, std::__1::default_delete<AudioUnitPool::Instantiator>>>>> _field1;
    id _field2;
    id _field3;
};

struct Connection {
    id _field1;
};

struct DiscoveryInvite;

struct DiscoveryView {
    CDUnknownFunctionPointerType *_field1;
    struct atomic<int> _field2;
    struct SharedPtr<re::internal::WeakCount> _field3;
    struct Allocator *_field4;
};

struct DisplayLinkClock {
    CDUnknownFunctionPointerType *_field1;
    BOOL _field2;
    BOOL _field3;
    double _field4;
    double _field5;
    float _field6;
    float _field7;
    float _field8;
    struct Event<re::SimulationClock, const re::SimulationClockEventArgs &> _field9;
    struct Queue _field10;
    id _field11;
    double _field12;
};

struct DynamicArray<re::Event<re::DiscoveryView, re::SharedPtr<re::DiscoveryIdentity>>::Subscription> {
    struct Allocator *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned int _field4;
    struct Subscription *_field5;
};

struct DynamicArray<re::Event<re::DiscoveryView, re::SharedPtr<re::DiscoveryIdentity>>::SubscriptionLegacy> {
    struct Allocator *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned int _field4;
    struct SubscriptionLegacy *_field5;
};

struct DynamicArray<re::Event<re::IDSSessionService, re::SharedPtr<re::DiscoveryInvite>, re::SharedPtr<re::DiscoveryIdentity>>::Subscription> {
    struct Allocator *m_allocator;
    unsigned long long m_capacity;
    unsigned long long m_size;
    unsigned int m_version;
    struct Subscription *m_data;
};

struct DynamicArray<re::Event<re::IDSSessionService, re::SharedPtr<re::DiscoveryInvite>, re::SharedPtr<re::DiscoveryIdentity>>::SubscriptionLegacy> {
    struct Allocator *m_allocator;
    unsigned long long m_capacity;
    unsigned long long m_size;
    unsigned int m_version;
    struct SubscriptionLegacy *m_data;
};

struct DynamicArray<re::Event<re::IDSSessionService, re::SharedPtr<re::DiscoveryInvite>>::Subscription> {
    struct Allocator *m_allocator;
    unsigned long long m_capacity;
    unsigned long long m_size;
    unsigned int m_version;
    struct Subscription *m_data;
};

struct DynamicArray<re::Event<re::IDSSessionService, re::SharedPtr<re::DiscoveryInvite>>::SubscriptionLegacy> {
    struct Allocator *m_allocator;
    unsigned long long m_capacity;
    unsigned long long m_size;
    unsigned int m_version;
    struct SubscriptionLegacy *m_data;
};

struct DynamicArray<re::Event<re::SimulationClock, const re::SimulationClockEventArgs &>::Subscription> {
    struct Allocator *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned int _field4;
    struct Subscription *_field5;
};

struct DynamicArray<re::Event<re::SimulationClock, const re::SimulationClockEventArgs &>::SubscriptionLegacy> {
    struct Allocator *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned int _field4;
    struct SubscriptionLegacy *_field5;
};

struct DynamicArray<re::IDSDiscoveryView *> {
    struct Allocator *m_allocator;
    unsigned long long m_capacity;
    unsigned long long m_size;
    unsigned int m_version;
    struct IDSDiscoveryView **m_data;
};

struct DynamicArray<re::IDSInvite *> {
    struct Allocator *m_allocator;
    unsigned long long m_capacity;
    unsigned long long m_size;
    unsigned int m_version;
    struct IDSInvite **m_data;
};

struct DynamicArray<re::ResourceFetchManager::Connection> {
    struct Allocator *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned int _field4;
    struct Connection *_field5;
};

struct DynamicArray<re::ResourceSharingManager::Connection> {
    struct Allocator *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned int _field4;
    struct Connection *_field5;
};

struct DynamicArray<re::ResourceSharingManager::FetchRequest> {
    struct Allocator *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned int _field4;
    struct FetchRequest *_field5;
};

struct DynamicArray<re::SharedPtr<(anonymous namespace)::MCProtocolHandle>> {
    struct Allocator *m_allocator;
    unsigned long long m_capacity;
    unsigned long long m_size;
    unsigned int m_version;
    struct SharedPtr<(anonymous namespace)::MCProtocolHandle> *m_data;
};

struct DynamicArray<re::SharedPtr<re::DiscoveryIdentity>> {
    struct Allocator *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned int _field4;
    struct SharedPtr<re::DiscoveryIdentity> *_field5;
};

struct DynamicArray<re::SharedPtr<re::ResourceRequest>> {
    struct Allocator *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned int _field4;
    struct SharedPtr<re::ResourceRequest> *_field5;
};

struct DynamicArray<unsigned char> {
    struct Allocator *m_allocator;
    unsigned long long m_capacity;
    unsigned long long m_size;
    unsigned int m_version;
    char *m_data;
};

struct DynamicString {
    struct Allocator *m_allocator;
    char *m_buffer;
    unsigned long long m_capacity;
    unsigned long long m_length;
};

struct EntryWithHash;

struct EntryWithoutHash;

struct Event<re::DiscoveryView, re::SharedPtr<re::DiscoveryIdentity>> {
    struct DynamicArray<re::Event<re::DiscoveryView, re::SharedPtr<re::DiscoveryIdentity>>::Subscription> _field1;
    struct DynamicArray<re::Event<re::DiscoveryView, re::SharedPtr<re::DiscoveryIdentity>>::SubscriptionLegacy> _field2;
};

struct Event<re::IDSSessionService, re::SharedPtr<re::DiscoveryInvite>, re::SharedPtr<re::DiscoveryIdentity>> {
    struct DynamicArray<re::Event<re::IDSSessionService, re::SharedPtr<re::DiscoveryInvite>, re::SharedPtr<re::DiscoveryIdentity>>::Subscription> m_subscriptions;
    struct DynamicArray<re::Event<re::IDSSessionService, re::SharedPtr<re::DiscoveryInvite>, re::SharedPtr<re::DiscoveryIdentity>>::SubscriptionLegacy> m_subscriptionsLegacy;
};

struct Event<re::IDSSessionService, re::SharedPtr<re::DiscoveryInvite>> {
    struct DynamicArray<re::Event<re::IDSSessionService, re::SharedPtr<re::DiscoveryInvite>>::Subscription> m_subscriptions;
    struct DynamicArray<re::Event<re::IDSSessionService, re::SharedPtr<re::DiscoveryInvite>>::SubscriptionLegacy> m_subscriptionsLegacy;
};

struct Event<re::SimulationClock, const re::SimulationClockEventArgs &> {
    struct DynamicArray<re::Event<re::SimulationClock, const re::SimulationClockEventArgs &>::Subscription> _field1;
    struct DynamicArray<re::Event<re::SimulationClock, const re::SimulationClockEventArgs &>::SubscriptionLegacy> _field2;
};

struct FetchRequest;

struct HashSet<re::SharedPtr<re::NWProtocolHandle>, re::Hash<re::SharedPtr<re::NWProtocolHandle>>, re::EqualTo<re::SharedPtr<re::NWProtocolHandle>>, true, false> {
    struct Allocator *_field1;
    unsigned int *_field2;
    union Entry _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
};

struct HashSet<unsigned long long, re::Hash<uint64_t>, re::EqualTo<uint64_t>, true, false> {
    struct Allocator *_field1;
    unsigned int *_field2;
    union Entry _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
};

struct IDSDiscoveryIdentity;

struct IDSDiscoveryView {
    CDUnknownFunctionPointerType *_field1;
    struct atomic<int> _field2;
    struct SharedPtr<re::internal::WeakCount> _field3;
    struct Allocator *_field4;
    struct WeakPtr<re::IDSManager> _field5;
    struct Event<re::DiscoveryView, re::SharedPtr<re::DiscoveryIdentity>> _field6;
    struct Event<re::DiscoveryView, re::SharedPtr<re::DiscoveryIdentity>> _field7;
    struct DynamicArray<re::SharedPtr<re::DiscoveryIdentity>> _field8;
    struct DynamicString _field9;
};

struct IDSInvite {
    CDUnknownFunctionPointerType *_field1;
    struct atomic<int> _field2;
    struct SharedPtr<re::internal::WeakCount> _field3;
    struct Allocator *_field4;
    struct WeakPtr<re::IDSManager> _field5;
    struct DynamicString _field6;
    SharedPtr_601ce9e9 _field7;
    SharedPtr_c2d37bbb _field8;
};

struct IDSSessionService {
    CDUnknownFunctionPointerType *_field1;
};

struct Listener {
    id _field1;
};

struct ListenerDelegate {
    id _field1;
};

struct MultipeerProtocolLayer {
    CDUnknownFunctionPointerType *_field1;
    struct atomic<int> _field2;
    struct SharedPtr<re::internal::WeakCount> _field3;
    struct Allocator *_field4;
    struct ProtocolLayerListener *_field5;
    struct PacketPool *_field6;
    struct ObjCObject _field7;
    struct ObjCObject _field8;
    struct Address _field9;
    struct mutex _field10;
    struct condition_variable _field11;
};

struct NWProtocolLayer {
    CDUnknownFunctionPointerType *_field1;
    struct atomic<int> _field2;
    struct SharedPtr<re::internal::WeakCount> _field3;
    struct Allocator *_field4;
    struct SharedPtr<re::PacketPool> _field5;
    struct Config {
        BOOL _field1;
        struct DynamicString _field2;
        unsigned short _field3;
        struct {
            unsigned int _field1;
            unsigned long long _field2;
        } _field4;
    } _field6;
    unsigned int _field7;
    double _field8;
    struct ProtocolLayerListener *_field9;
    id _field10;
    id _field11;
    id _field12;
    id _field13;
    struct queue _field14;
    struct mutex _field15;
    struct condition_variable _field16;
    struct HashSet<re::SharedPtr<re::NWProtocolHandle>, re::Hash<re::SharedPtr<re::NWProtocolHandle>>, re::EqualTo<re::SharedPtr<re::NWProtocolHandle>>, true, false> _field17;
    struct UnfairLock _field18;
};

struct ObjCObject {
    id _field1;
};

struct OpaqueFigSTS;

struct Packet {
    struct atomic<re::Packet *> _field1;
    void *_field2;
    void *_field3;
    unsigned int _field4;
    unsigned int _field5;
    int _field6;
    void *_field7;
    struct Packet *_field8;
};

struct PacketPool;

struct ProtocolLayerListener;

struct Queue {
    id _field1;
};

struct REEncodePayloadPool;

struct REJitterBuffer;

struct REPacketEncoder;

struct RERealTimePacket {
    unsigned long long _field1;
    double _field2;
    void *_field3;
};

struct ResourceFetchManager {
    CDUnknownFunctionPointerType *_field1;
    BOOL _field2;
    struct Queue _field3;
    struct ListenerDelegate _field4;
    struct Listener _field5;
    struct Queue _field6;
    struct DynamicArray<re::ResourceFetchManager::Connection> _field7;
    struct DynamicArray<re::SharedPtr<re::ResourceRequest>> _field8;
};

struct ResourceSharingManager {
    CDUnknownFunctionPointerType *_field1;
    BOOL _field2;
    struct AssetService *_field3;
    struct Queue _field4;
    unsigned long long _field5;
    struct DynamicArray<re::ResourceSharingManager::FetchRequest> _field6;
    struct DynamicArray<re::ResourceSharingManager::Connection> _field7;
};

struct ServiceLocator;

struct Session;

struct SharedPtr<(anonymous namespace)::MCProtocolHandle>;

struct SharedPtr<re::DiscoveryIdentity>;

struct SharedPtr<re::DiscoveryInvite> {
    struct DiscoveryInvite *_field1;
};

struct SharedPtr<re::DiscoveryView> {
    struct DiscoveryView *_field1;
};

struct SharedPtr<re::IDSDiscoveryIdentity> {
    struct IDSDiscoveryIdentity *_field1;
};

struct SharedPtr<re::IDSDiscoveryView> {
    struct IDSDiscoveryView *_field1;
};

struct SharedPtr<re::PacketPool> {
    struct PacketPool *_field1;
};

struct SharedPtr<re::ResourceRequest>;

struct SharedPtr<re::Session> {
    struct Session *_field1;
};

struct SharedPtr<re::internal::WeakCount> {
    struct WeakCount *_field1;
};

struct Slice<re::DynamicString> {
    struct DynamicString *_field1;
    unsigned long long _field2;
};

struct StreamWriter;

struct Subscription;

struct SubscriptionLegacy;

struct UnfairLock {
    struct os_unfair_lock_s _field1;
};

struct WeakCount;

struct WeakPtr<re::IDSManager> {
    struct SharedPtr<re::internal::WeakCount> _field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const void *, std::__1::unique_ptr<AudioUnitPool::Instantiator, std::__1::default_delete<AudioUnitPool::Instantiator>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const void *, std::__1::unique_ptr<AudioUnitPool::Instantiator, std::__1::default_delete<AudioUnitPool::Instantiator>>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const __CFString *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const __CFString *>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AVAEAudioScene>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AVAEAudioScene>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AVAENetworkPeer>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AVAENetworkPeer>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AudioManager::ReverbPreset>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AudioManager::ReverbPreset>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, float, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, float>>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, float, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, float>>>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, re::AudioMixGroupState, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, re::AudioMixGroupState>>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, re::AudioMixGroupState, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, re::AudioMixGroupState>>>>, void *>*> *_field1;
};

struct __shared_weak_count;

struct array<std::__1::vector<float, std::__1::allocator<float>>, 2> {
    struct vector<float, std::__1::allocator<float>> __elems_[2];
};

struct atomic<REAudioPlaybackState> {
    struct __cxx_atomic_impl<REAudioPlaybackState, std::__1::__cxx_atomic_base_impl<REAudioPlaybackState>> {
        _Atomic unsigned long long __a_value;
    } __a_;
};

struct atomic<bool> {
    struct __cxx_atomic_impl<bool, std::__1::__cxx_atomic_base_impl<bool>> {
        _Atomic BOOL __a_value;
    } __a_;
};

struct atomic<double> {
    struct __cxx_atomic_impl<double, std::__1::__cxx_atomic_base_impl<double>> {
        _Atomic double __a_value;
    } __a_;
};

struct atomic<float> {
    struct __cxx_atomic_impl<float, std::__1::__cxx_atomic_base_impl<float>> {
        _Atomic float __a_value;
    } __a_;
};

struct atomic<int> {
    struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int>> {
        _Atomic int __a_value;
    } __a_;
};

struct atomic<re::Packet *> {
    struct __cxx_atomic_impl<re::Packet *, std::__1::__cxx_atomic_base_impl<re::Packet *>> {
        _Atomic struct Packet *_field1;
    } _field1;
};

struct atomic<unsigned int> {
    struct __cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int>> {
        _Atomic unsigned int __a_value;
    } __a_;
};

struct condition_variable {
    struct _opaque_pthread_cond_t {
        long long _field1;
        char _field2[40];
    } _field1;
};

struct messenger;

struct mutex {
    struct _opaque_pthread_mutex_t {
        long long __sig;
        char __opaque[56];
    } __m_;
};

struct object {
    NSObject *fObj;
};

struct os_unfair_lock_s {
    unsigned int _os_unfair_lock_opaque;
};

struct queue {
    struct object fObj;
};

struct queue<GainRampCommand>;

struct shared_ptr<AudioStreamRecordingManager::StreamWriter> {
    struct StreamWriter *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<REPacketEncoder> {
    struct REPacketEncoder *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct unique_ptr<REEncodePayloadPool, std::__1::default_delete<REEncodePayloadPool>> {
    struct __compressed_pair<REEncodePayloadPool *, std::__1::default_delete<REEncodePayloadPool>> {
        struct REEncodePayloadPool *__value_;
    } __ptr_;
};

struct unique_ptr<REJitterBuffer, std::__1::default_delete<REJitterBuffer>> {
    struct __compressed_pair<REJitterBuffer *, std::__1::default_delete<REJitterBuffer>> {
        struct REJitterBuffer *__value_;
    } __ptr_;
};

struct unique_ptr<boost::lockfree::queue<GainRampCommand>, std::__1::default_delete<boost::lockfree::queue<GainRampCommand>>> {
    struct __compressed_pair<boost::lockfree::queue<GainRampCommand>*, std::__1::default_delete<boost::lockfree::queue<GainRampCommand>>> {
        struct queue<GainRampCommand> *__value_;
    } __ptr_;
};

struct unique_ptr<caulk::concurrent::messenger, std::__1::default_delete<caulk::concurrent::messenger>> {
    struct __compressed_pair<caulk::concurrent::messenger *, std::__1::default_delete<caulk::concurrent::messenger>> {
        struct messenger *__value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const void *, std::__1::unique_ptr<AudioUnitPool::Instantiator, std::__1::default_delete<AudioUnitPool::Instantiator>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const void *, std::__1::unique_ptr<AudioUnitPool::Instantiator, std::__1::default_delete<AudioUnitPool::Instantiator>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const void *, std::__1::unique_ptr<AudioUnitPool::Instantiator, std::__1::default_delete<AudioUnitPool::Instantiator>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const void *, std::__1::unique_ptr<AudioUnitPool::Instantiator, std::__1::default_delete<AudioUnitPool::Instantiator>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const void *, std::__1::unique_ptr<AudioUnitPool::Instantiator, std::__1::default_delete<AudioUnitPool::Instantiator>>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const void *, std::__1::unique_ptr<AudioUnitPool::Instantiator, std::__1::default_delete<AudioUnitPool::Instantiator>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const void *, std::__1::unique_ptr<AudioUnitPool::Instantiator, std::__1::default_delete<AudioUnitPool::Instantiator>>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const __CFString *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const __CFString *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const __CFString *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const __CFString *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const __CFString *>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const __CFString *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const __CFString *>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AVAEAudioScene>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AVAEAudioScene>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AVAEAudioScene>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AVAEAudioScene>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AVAEAudioScene>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AVAEAudioScene>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AVAEAudioScene>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AVAENetworkPeer>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AVAENetworkPeer>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AVAENetworkPeer>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AVAENetworkPeer>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AVAENetworkPeer>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AVAENetworkPeer>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AVAENetworkPeer>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AudioManager::ReverbPreset>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AudioManager::ReverbPreset>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AudioManager::ReverbPreset>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AudioManager::ReverbPreset>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AudioManager::ReverbPreset>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AudioManager::ReverbPreset>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AudioManager::ReverbPreset>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, float, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, float>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, float, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, float>>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, float, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, float>>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, float, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, float>>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, float, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, float>>>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, float, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, float>>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, float, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, float>>>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, re::AudioMixGroupState, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, re::AudioMixGroupState>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, re::AudioMixGroupState, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, re::AudioMixGroupState>>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, re::AudioMixGroupState, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, re::AudioMixGroupState>>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, re::AudioMixGroupState, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, re::AudioMixGroupState>>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, re::AudioMixGroupState, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, re::AudioMixGroupState>>>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, re::AudioMixGroupState, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, re::AudioMixGroupState>>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, re::AudioMixGroupState, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, re::AudioMixGroupState>>>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unordered_map<const void *, std::__1::unique_ptr<AudioUnitPool::Instantiator, std::__1::default_delete<AudioUnitPool::Instantiator>>, std::__1::hash<const void *>, std::__1::equal_to<const void *>, std::__1::allocator<std::__1::pair<const void *const, std::__1::unique_ptr<AudioUnitPool::Instantiator, std::__1::default_delete<AudioUnitPool::Instantiator>>>>> {
    struct __hash_table<std::__1::__hash_value_type<const void *, std::__1::unique_ptr<AudioUnitPool::Instantiator, std::__1::default_delete<AudioUnitPool::Instantiator>>>, std::__1::__unordered_map_hasher<const void *, std::__1::__hash_value_type<const void *, std::__1::unique_ptr<AudioUnitPool::Instantiator, std::__1::default_delete<AudioUnitPool::Instantiator>>>, std::__1::hash<const void *>, true>, std::__1::__unordered_map_equal<const void *, std::__1::__hash_value_type<const void *, std::__1::unique_ptr<AudioUnitPool::Instantiator, std::__1::default_delete<AudioUnitPool::Instantiator>>>, std::__1::equal_to<const void *>, true>, std::__1::allocator<std::__1::__hash_value_type<const void *, std::__1::unique_ptr<AudioUnitPool::Instantiator, std::__1::default_delete<AudioUnitPool::Instantiator>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const void *, std::__1::unique_ptr<AudioUnitPool::Instantiator, std::__1::default_delete<AudioUnitPool::Instantiator>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const void *, std::__1::unique_ptr<AudioUnitPool::Instantiator, std::__1::default_delete<AudioUnitPool::Instantiator>>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const void *, std::__1::unique_ptr<AudioUnitPool::Instantiator, std::__1::default_delete<AudioUnitPool::Instantiator>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const void *, std::__1::unique_ptr<AudioUnitPool::Instantiator, std::__1::default_delete<AudioUnitPool::Instantiator>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const void *, std::__1::unique_ptr<AudioUnitPool::Instantiator, std::__1::default_delete<AudioUnitPool::Instantiator>>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const void *, std::__1::__hash_value_type<const void *, std::__1::unique_ptr<AudioUnitPool::Instantiator, std::__1::default_delete<AudioUnitPool::Instantiator>>>, std::__1::hash<const void *>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const void *, std::__1::__hash_value_type<const void *, std::__1::unique_ptr<AudioUnitPool::Instantiator, std::__1::default_delete<AudioUnitPool::Instantiator>>>, std::__1::equal_to<const void *>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned int, const __CFString *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, const __CFString *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, const __CFString *>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, const __CFString *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, const __CFString *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, const __CFString *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const __CFString *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const __CFString *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const __CFString *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const __CFString *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const __CFString *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, const __CFString *>, std::__1::hash<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, const __CFString *>, std::__1::equal_to<unsigned int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long long, re::AVAEAudioScene, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, re::AVAEAudioScene>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, re::AVAEAudioScene>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, re::AVAEAudioScene>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, re::AVAEAudioScene>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, re::AVAEAudioScene>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AVAEAudioScene>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AVAEAudioScene>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AVAEAudioScene>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AVAEAudioScene>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AVAEAudioScene>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, re::AVAEAudioScene>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, re::AVAEAudioScene>, std::__1::equal_to<unsigned long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long long, re::AVAENetworkPeer, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, re::AVAENetworkPeer>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, re::AVAENetworkPeer>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, re::AVAENetworkPeer>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, re::AVAENetworkPeer>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, re::AVAENetworkPeer>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AVAENetworkPeer>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AVAENetworkPeer>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AVAENetworkPeer>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AVAENetworkPeer>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AVAENetworkPeer>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, re::AVAENetworkPeer>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, re::AVAENetworkPeer>, std::__1::equal_to<unsigned long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long long, re::AudioManager::ReverbPreset, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, re::AudioManager::ReverbPreset>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, re::AudioManager::ReverbPreset>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, re::AudioManager::ReverbPreset>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, re::AudioManager::ReverbPreset>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, re::AudioManager::ReverbPreset>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AudioManager::ReverbPreset>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AudioManager::ReverbPreset>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AudioManager::ReverbPreset>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AudioManager::ReverbPreset>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, re::AudioManager::ReverbPreset>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, re::AudioManager::ReverbPreset>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, re::AudioManager::ReverbPreset>, std::__1::equal_to<unsigned long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, float, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, float>>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, float, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, float>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, float, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, float>>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, float, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, float>>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, float, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, float>>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, float, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, float>>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, float, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, float>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, float, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, float>>>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, float, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, float>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, float, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, float>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, float, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, float>>>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, float, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, float>>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, float, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, float>>>>, std::__1::equal_to<unsigned long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, re::AudioMixGroupState, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, re::AudioMixGroupState>>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, re::AudioMixGroupState, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, re::AudioMixGroupState>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, re::AudioMixGroupState, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, re::AudioMixGroupState>>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, re::AudioMixGroupState, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, re::AudioMixGroupState>>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, re::AudioMixGroupState, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, re::AudioMixGroupState>>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, re::AudioMixGroupState, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, re::AudioMixGroupState>>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, re::AudioMixGroupState, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, re::AudioMixGroupState>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, re::AudioMixGroupState, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, re::AudioMixGroupState>>>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, re::AudioMixGroupState, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, re::AudioMixGroupState>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, re::AudioMixGroupState, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, re::AudioMixGroupState>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, re::AudioMixGroupState, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, re::AudioMixGroupState>>>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, re::AudioMixGroupState, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, re::AudioMixGroupState>>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, re::AudioMixGroupState, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, re::AudioMixGroupState>>>>, std::__1::equal_to<unsigned long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct vector<AVAudioUnitEffect *, std::__1::allocator<AVAudioUnitEffect *>> {
    id *_field1;
    id *_field2;
    struct __compressed_pair<AVAudioUnitEffect *__strong *, std::__1::allocator<AVAudioUnitEffect *>> {
        id *_field1;
    } _field3;
};

struct vector<float, std::__1::allocator<float>> {
    float *__begin_;
    float *__end_;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *__value_;
    } __end_cap_;
};

struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__value_;
    } __end_cap_;
};

struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *_field1;
    char *_field2;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *_field1;
    } _field3;
};

struct weak_ptr<re::AudioManager_AVAudioEngine> {
    struct AudioManager_AVAudioEngine *_field1;
    struct __shared_weak_count *_field2;
};

#if 0
// Names with conflicting types:
typedef struct {
    struct ServiceLocator *_field1;
    struct queue _field2;
    struct DynamicString _field3;
} Config_8ed34026;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

// Template types
typedef struct DynamicArray<re::SharedPtr<(anonymous namespace)::MCProtocolHandle>> {
    struct Allocator *m_allocator;
    unsigned long long m_capacity;
    unsigned long long m_size;
    unsigned int m_version;
    struct SharedPtr<(anonymous namespace)::MCProtocolHandle> *m_data;
} DynamicArray_0711906c;

typedef struct DynamicArray<unsigned char> {
    struct Allocator *m_allocator;
    unsigned long long m_capacity;
    unsigned long long m_size;
    unsigned int m_version;
    char *m_data;
} DynamicArray_8f05e591;

typedef struct Event<re::IDSSessionService, re::SharedPtr<re::DiscoveryInvite>, re::SharedPtr<re::DiscoveryIdentity>> {
    struct DynamicArray<re::Event<re::IDSSessionService, re::SharedPtr<re::DiscoveryInvite>, re::SharedPtr<re::DiscoveryIdentity>>::Subscription> m_subscriptions;
    struct DynamicArray<re::Event<re::IDSSessionService, re::SharedPtr<re::DiscoveryInvite>, re::SharedPtr<re::DiscoveryIdentity>>::SubscriptionLegacy> m_subscriptionsLegacy;
} Event_8f7d30d6;

typedef struct Event<re::IDSSessionService, re::SharedPtr<re::DiscoveryInvite>> {
    struct DynamicArray<re::Event<re::IDSSessionService, re::SharedPtr<re::DiscoveryInvite>>::Subscription> m_subscriptions;
    struct DynamicArray<re::Event<re::IDSSessionService, re::SharedPtr<re::DiscoveryInvite>>::SubscriptionLegacy> m_subscriptionsLegacy;
} Event_b92446be;

typedef struct SharedPtr<re::DiscoveryInvite> {
    struct DiscoveryInvite *_field1;
} SharedPtr_d68dfbcb;

typedef struct SharedPtr<re::DiscoveryView> {
    struct DiscoveryView *_field1;
} SharedPtr_c2d37bbb;

typedef struct SharedPtr<re::IDSDiscoveryIdentity> {
    struct IDSDiscoveryIdentity *_field1;
} SharedPtr_601ce9e9;

typedef struct SharedPtr<re::IDSDiscoveryView> {
    struct IDSDiscoveryView *_field1;
} SharedPtr_24b37889;

typedef struct Slice<re::DynamicString> {
    struct DynamicString *_field1;
    unsigned long long _field2;
} Slice_554aef03;

#pragma mark Named Unions

union Entry {
    struct EntryWithoutHash *_field1;
    struct EntryWithHash *_field2;
};

