//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSData;

@interface CSIBitmapWrapper : NSObject
{
    struct CGContext *_bitmapContext;
    NSData *_pixelData;
    unsigned int _pixelFormat;
    unsigned int _width;
    unsigned int _height;
    unsigned long long _rowbytes;
    BOOL _allowsMultiPassEncoding;
    BOOL _allowsOptimalPacking;
    BOOL _flipped;
    struct CGImage *_sourceImage;
    long long _texturePixelFormat;
    unsigned int _imageAlpha;
    double _compressionQuality;
    long long _compressionType;
    unsigned long long _colorSpaceID;
    long long _textureInterpretation;
    int _exifOrientation;
}

@property BOOL allowsMultiPassEncoding; // @synthesize allowsMultiPassEncoding=_allowsMultiPassEncoding;
@property BOOL allowsOptimalPacking; // @synthesize allowsOptimalPacking=_allowsOptimalPacking;
@property (nonatomic) unsigned long long colorSpaceID; // @synthesize colorSpaceID=_colorSpaceID;
@property (nonatomic) double compressionQuality; // @synthesize compressionQuality=_compressionQuality;
@property long long compressionType; // @synthesize compressionType=_compressionType;
@property (nonatomic) int exifOrientation; // @synthesize exifOrientation=_exifOrientation;
@property (nonatomic) BOOL flipped; // @synthesize flipped=_flipped;
@property (nonatomic) unsigned int pixelFormat; // @synthesize pixelFormat=_pixelFormat;
@property (nonatomic) long long textureInterpretation; // @synthesize textureInterpretation=_textureInterpretation;

- (struct CGContext *)bitmapContext;
- (id)compressedData:(BOOL)arg1 usedEncoding:(int *)arg2 andRowChunkSize:(unsigned int *)arg3;
- (void)dealloc;
- (unsigned int)height;
- (id)initWithCGImage:(struct CGImage *)arg1 width:(unsigned int)arg2 height:(unsigned int)arg3 texturePixelFormat:(long long)arg4;
- (id)initWithPixelWidth:(unsigned int)arg1 pixelHeight:(unsigned int)arg2;
- (id)pixelData;
- (unsigned long long)rowbytes;
- (void)setPixelData:(id)arg1;
- (void)setSourceAlphaInfo:(unsigned int)arg1;
- (unsigned int)sourceAlphaInfo;
- (unsigned int)width;

@end

