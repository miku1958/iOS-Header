//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <CoreHAP/HAPAccessoryServer.h>

#import <CoreHAP/HAP2AccessoryDelegate-Protocol.h>
#import <CoreHAP/HAP2AccessoryServerDelegate-Protocol.h>
#import <CoreHAP/HAP2PairedAccessoryServerDelegate-Protocol.h>
#import <CoreHAP/HAP2UnpairedAccessoryServerDelegate-Protocol.h>
#import <CoreHAP/HAP2UnpairedAccessoryServerPairDelegate-Protocol.h>

@class HAP2SerializedOperationQueue, HAPAccessory, NSArray, NSString;
@protocol HAP2Cancelable, HAP2PairedAccessoryServer, HAP2UnpairedAccessoryServer;

@interface HAPAccessoryServerHAP2Adapter : HAPAccessoryServer <HAP2AccessoryDelegate, HAP2PairedAccessoryServerDelegate, HAP2UnpairedAccessoryServerDelegate, HAP2UnpairedAccessoryServerPairDelegate, HAP2AccessoryServerDelegate>
{
    BOOL _internallyPaired;
    BOOL _skipUserConsent;
    BOOL _discoverAccessoriesOncePaired;
    id<HAP2UnpairedAccessoryServer> _unpairedServer;
    id<HAP2PairedAccessoryServer> _pairedServer;
    id<HAP2Cancelable> _pairingSessionCancelable;
    CDUnknownBlockType _setupCodeCompletion;
    CDUnknownBlockType _userConsentCompletion;
    CDUnknownBlockType _authValidationCompletion;
    CDUnknownBlockType _softwareAuthFinishedCompletion;
    CDUnknownBlockType _authenticateUUIDCompletion;
    HAPAccessory *_primaryAccessory;
    NSArray *_accessories;
    HAP2SerializedOperationQueue *_operationQueue;
}

@property (copy, nonatomic) CDUnknownBlockType authValidationCompletion; // @synthesize authValidationCompletion=_authValidationCompletion;
@property (copy, nonatomic) CDUnknownBlockType authenticateUUIDCompletion; // @synthesize authenticateUUIDCompletion=_authenticateUUIDCompletion;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, getter=shouldDiscoverAccessoriesOncePaired) BOOL discoverAccessoriesOncePaired; // @synthesize discoverAccessoriesOncePaired=_discoverAccessoriesOncePaired;
@property (readonly) unsigned long long hash;
@property (nonatomic, getter=isInternallyPaired) BOOL internallyPaired; // @synthesize internallyPaired=_internallyPaired;
@property (readonly, nonatomic) HAP2SerializedOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property (strong, nonatomic) id<HAP2PairedAccessoryServer> pairedServer; // @synthesize pairedServer=_pairedServer;
@property (strong, nonatomic) id<HAP2Cancelable> pairingSessionCancelable; // @synthesize pairingSessionCancelable=_pairingSessionCancelable;
@property (copy, nonatomic) CDUnknownBlockType setupCodeCompletion; // @synthesize setupCodeCompletion=_setupCodeCompletion;
@property (nonatomic, getter=shouldSkipUserConsent) BOOL skipUserConsent; // @synthesize skipUserConsent=_skipUserConsent;
@property (copy, nonatomic) CDUnknownBlockType softwareAuthFinishedCompletion; // @synthesize softwareAuthFinishedCompletion=_softwareAuthFinishedCompletion;
@property (readonly) Class superclass;
@property (strong, nonatomic) id<HAP2UnpairedAccessoryServer> unpairedServer; // @synthesize unpairedServer=_unpairedServer;
@property (copy, nonatomic) CDUnknownBlockType userConsentCompletion; // @synthesize userConsentCompletion=_userConsentCompletion;

- (void).cxx_destruct;
- (id)_accessoryFromHAP2Accessory:(id)arg1;
- (void)_continuePairingAfterAuthPromptWithError:(id)arg1;
- (void)_enableEvents:(BOOL)arg1 forCharacteristics:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3 queue:(id)arg4;
- (void)_handleIncorrectStartPairingCall;
- (BOOL)_hap2CharacteristicTuplesForHAPCharacteristics:(id)arg1 tuples:(id *)arg2 error:(id *)arg3;
- (id)_hapIdentifierForAccessory:(id)arg1;
- (void)_informDelegateOfUpdatedAccessories:(id)arg1 error:(id)arg2;
- (BOOL)_isActiveServer:(id)arg1;
- (void)_notifyDelegatePairingStoppedWithError:(id)arg1;
- (void)_printMissingValues:(id)arg1;
- (void)_readCharacteristicValues:(id)arg1 timeout:(double)arg2 completionQueue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_resetPairingState;
- (void)_writeCharacteristicValues:(id)arg1 timeout:(double)arg2 completionQueue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)accessories;
- (void)accessory:(id)arg1 didNotifyForUpdatedValuesOnCharacteristic:(id)arg2;
- (void)accessoryServer:(id)arg1 authenticateSoftwareAuthUUID:(id)arg2 token:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)accessoryServer:(id)arg1 confirmSoftwareAuthUUID:(id)arg2 token:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)accessoryServer:(id)arg1 didCompleteWithError:(id)arg2;
- (void)accessoryServer:(id)arg1 didFailToUpdateAccessoriesWithError:(id)arg2;
- (void)accessoryServer:(id)arg1 didFinishAuthWithError:(id)arg2;
- (void)accessoryServer:(id)arg1 didRejectSetupCodeWithBackoffInterval:(double)arg2 completion:(CDUnknownBlockType)arg3;
- (void)accessoryServer:(id)arg1 doesRequirePermission:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)accessoryServer:(id)arg1 doesRequireSetupCodeWithCompletion:(CDUnknownBlockType)arg2;
- (void)accessoryServer:(id)arg1 validatePairingCert:(id)arg2 model:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)accessoryServer:(id)arg1 validateSoftwareAuthUUID:(id)arg2 token:(id)arg3 model:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)accessoryServerDidBecomeUnpaired:(id)arg1;
- (void)accessoryServerDidUpdateAccessories:(id)arg1;
- (void)accessoryServerDidUpdateCategory:(id)arg1;
- (void)accessoryServerDidUpdateConnectionState:(id)arg1;
- (void)accessoryServerDidUpdateHasPairings:(id)arg1;
- (void)accessoryServerDidUpdateName:(id)arg1;
- (id)activeServer;
- (void)addPairing:(id)arg1 completionQueue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)authenticateAccessory;
- (id)category;
- (id)clientQueue;
- (unsigned long long)configNumber;
- (void)continueAuthAfterValidation:(BOOL)arg1;
- (void)continuePairingAfterAuthPrompt;
- (void)continuePairingUsingWAC;
- (void)discoverAccessories;
- (void)enableEvents:(BOOL)arg1 forCharacteristics:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3 queue:(id)arg4;
- (void)handleUpdatesForCharacteristics:(id)arg1 stateNumber:(id)arg2;
- (void)identifyWithCompletion:(CDUnknownBlockType)arg1;
- (id)initWithOperationQueue:(id)arg1 accessoryServer:(id)arg2;
- (id)initWithPairedServer:(id)arg1;
- (id)initWithUnpairedServer:(id)arg1;
- (BOOL)isPaired;
- (BOOL)isReachable;
- (BOOL)isSecuritySessionOpen;
- (long long)linkType;
- (void)listPairingsWithCompletionQueue:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)primaryAccessory;
- (void)provisionToken:(id)arg1;
- (void)readCharacteristicValues:(id)arg1 timeout:(double)arg2 completionQueue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)removePairing:(id)arg1 completionQueue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (BOOL)removePairingForCurrentControllerOnQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setAccessories:(id)arg1;
- (void)setPrimaryAccessory:(id)arg1;
- (void)setSecuritySessionOpen:(BOOL)arg1;
- (void)setShouldBePaired:(BOOL)arg1;
- (id)setupHash;
- (void)startPairingWithConsentRequired:(BOOL)arg1 config:(id)arg2 ownershipToken:(id)arg3;
- (BOOL)stopPairingWithError:(id *)arg1;
- (BOOL)supportsTimedWrite;
- (void)tearDownSessionOnAuthCompletion;
- (BOOL)tryPairingPassword:(id)arg1 error:(id *)arg2;
- (id)version;
- (void)writeCharacteristicValues:(id)arg1 timeout:(double)arg2 completionQueue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;

@end

