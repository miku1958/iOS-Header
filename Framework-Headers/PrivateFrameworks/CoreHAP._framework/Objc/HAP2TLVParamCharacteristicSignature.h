//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <CoreHAP/HAPTLVProtocol-Protocol.h>
#import <CoreHAP/NSCopying-Protocol.h>

@class HAP2TLVCharacteristicPropertiesWrapper, HAPTLVUnsignedNumberValue, NSData, NSString;

@interface HAP2TLVParamCharacteristicSignature : NSObject <NSCopying, HAPTLVProtocol>
{
    HAPTLVUnsignedNumberValue *_instanceID;
    NSData *_characteristicType;
    HAP2TLVCharacteristicPropertiesWrapper *_characteristicProperties;
    NSString *_userDescription;
    NSData *_bluetoothFormat;
    NSData *_validRange;
    NSData *_stepValue;
    NSData *_validValues;
    NSData *_validValuesRange;
}

@property (strong, nonatomic) NSData *bluetoothFormat; // @synthesize bluetoothFormat=_bluetoothFormat;
@property (strong, nonatomic) HAP2TLVCharacteristicPropertiesWrapper *characteristicProperties; // @synthesize characteristicProperties=_characteristicProperties;
@property (strong, nonatomic) NSData *characteristicType; // @synthesize characteristicType=_characteristicType;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) HAPTLVUnsignedNumberValue *instanceID; // @synthesize instanceID=_instanceID;
@property (strong, nonatomic) NSData *stepValue; // @synthesize stepValue=_stepValue;
@property (readonly) Class superclass;
@property (strong, nonatomic) NSString *userDescription; // @synthesize userDescription=_userDescription;
@property (strong, nonatomic) NSData *validRange; // @synthesize validRange=_validRange;
@property (strong, nonatomic) NSData *validValues; // @synthesize validValues=_validValues;
@property (strong, nonatomic) NSData *validValuesRange; // @synthesize validValuesRange=_validValuesRange;

+ (id)parsedFromData:(id)arg1 error:(id *)arg2;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initWithInstanceID:(id)arg1 characteristicType:(id)arg2 characteristicProperties:(id)arg3 userDescription:(id)arg4 bluetoothFormat:(id)arg5 validRange:(id)arg6 stepValue:(id)arg7 validValues:(id)arg8 validValuesRange:(id)arg9;
- (BOOL)isEqual:(id)arg1;
- (BOOL)parseFromData:(id)arg1 error:(id *)arg2;
- (id)serializeWithError:(id *)arg1;

@end

