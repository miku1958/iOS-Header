//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <CoreHAP/HAPAccessory.h>

#import <CoreHAP/HAPAccessoryServerInternalDelegate-Protocol.h>

@class HAPCharacteristic, HAPService, NSData, NSMutableData, NSNumber, NSObject, NSOperationQueue, NSString;
@protocol HAPKeyStore, OS_dispatch_queue, OS_dispatch_source;

@interface HAPTunneledAccessoryBLTE : HAPAccessory <HAPAccessoryServerInternalDelegate>
{
    struct PairingSessionPrivate *_pairingSession;
    BOOL _performingPairVerify;
    BOOL _pairVerifyComplete;
    NSNumber *_stateNumber;
    NSObject<OS_dispatch_queue> *_queue;
    NSOperationQueue *_operationQueue;
    id<HAPKeyStore> _keyStore;
    HAPService *_tunneledBTLEAccessoryService;
    HAPService *_pairingService;
    HAPCharacteristic *_pairVerifyCharacteristic;
    HAPCharacteristic *_pairingsCharacteristic;
    HAPCharacteristic *_advertisingCharacteristic;
    NSData *_sessionReadKey;
    NSMutableData *_readNonce;
    NSData *_sessionWriteKey;
    NSMutableData *_writeNonce;
    NSNumber *_sessionLifetimeTimeout;
    NSObject<OS_dispatch_source> *_sessionLifetimeTimer;
}

@property (weak, nonatomic) HAPCharacteristic *advertisingCharacteristic; // @synthesize advertisingCharacteristic=_advertisingCharacteristic;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (weak, nonatomic) id<HAPKeyStore> keyStore; // @synthesize keyStore=_keyStore;
@property (readonly, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property (weak, nonatomic) HAPCharacteristic *pairVerifyCharacteristic; // @synthesize pairVerifyCharacteristic=_pairVerifyCharacteristic;
@property (nonatomic, getter=isPairVerifyComplete) BOOL pairVerifyComplete; // @synthesize pairVerifyComplete=_pairVerifyComplete;
@property (weak, nonatomic) HAPService *pairingService; // @synthesize pairingService=_pairingService;
@property (weak, nonatomic) HAPCharacteristic *pairingsCharacteristic; // @synthesize pairingsCharacteristic=_pairingsCharacteristic;
@property (nonatomic, getter=isPerformingPairVerify) BOOL performingPairVerify; // @synthesize performingPairVerify=_performingPairVerify;
@property (strong) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property (strong, nonatomic) NSMutableData *readNonce; // @synthesize readNonce=_readNonce;
@property (strong, nonatomic) NSNumber *sessionLifetimeTimeout; // @synthesize sessionLifetimeTimeout=_sessionLifetimeTimeout;
@property (strong, nonatomic) NSObject<OS_dispatch_source> *sessionLifetimeTimer; // @synthesize sessionLifetimeTimer=_sessionLifetimeTimer;
@property (strong, nonatomic) NSData *sessionReadKey; // @synthesize sessionReadKey=_sessionReadKey;
@property (strong, nonatomic) NSData *sessionWriteKey; // @synthesize sessionWriteKey=_sessionWriteKey;
@property (copy, nonatomic) NSNumber *stateNumber; // @synthesize stateNumber=_stateNumber;
@property (readonly) Class superclass;
@property (weak, nonatomic) HAPService *tunneledBTLEAccessoryService; // @synthesize tunneledBTLEAccessoryService=_tunneledBTLEAccessoryService;
@property (strong, nonatomic) NSMutableData *writeNonce; // @synthesize writeNonce=_writeNonce;

- (void).cxx_destruct;
- (BOOL)__isAdvertising;
- (void)_cancelAllQueuedOperationsWithError:(id)arg1;
- (void)_cancelSessionLifetimeTimer;
- (id)_decryptData:(id)arg1 error:(id *)arg2;
- (id)_encryptDataAndGenerateAuthTag:(id)arg1 error:(id *)arg2;
- (void)_enqueueOperation:(id)arg1;
- (BOOL)_establishSecureSessionWithError:(id *)arg1;
- (BOOL)_handleCharacteristicReadResponse:(id)arg1 error:(id *)arg2;
- (void)_handlePairVerifyReadCompletionWithError:(id)arg1;
- (void)_handlePairVerifyWriteCompletionWithError:(id)arg1;
- (void)_handleSessionLifetimeTimeout;
- (void)_handleSuccessfulPairVerifyCompletion;
- (int)_initializePairingSession;
- (int)_pairVerifyStart;
- (BOOL)_parsePairingService:(id)arg1;
- (BOOL)_parseServices;
- (BOOL)_parseTunneledBTLEAccessoryService:(id)arg1;
- (void)_readCharacteristicValues:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_readUpdatedCharacteristics:(id)arg1 queue:(id)arg2;
- (void)_readValueForCharacteristic:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_registerForTunnelCharacteristicNotifications;
- (void)_resumeAllOperations;
- (void)_sanitizeAllTunneledCharacteristics;
- (void)_suspendAllOperations;
- (void)_tearDownSessionWithError:(id)arg1;
- (void)_updateOnStateNumberChange;
- (void)_updateSessionLifetimeTimer;
- (void)_writeCharacteristicValues:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_writeValue:(id)arg1 forCharacteristic:(id)arg2 authorizationData:(id)arg3 queue:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)_writeValueWithResponse:(id)arg1 completionQueue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)accessoryServer:(id)arg1 didUpdateValueForCharacteristic:(id)arg2;
- (void)addPairingWithIdentifier:(id)arg1 publicKey:(id)arg2 admin:(BOOL)arg3 completionQueue:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (id)initWithServer:(id)arg1 instanceID:(id)arg2 parsedServices:(id)arg3;
- (id)initWithServer:(id)arg1 instanceID:(id)arg2 parsedServices:(id)arg3 keyStore:(id)arg4;
- (void)invalidate;
- (BOOL)isPaired;
- (void)readCharacteristicValues:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)readValueForCharacteristic:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)removePairingForCurrentControllerWithCompletionQueue:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)removePairingWithIdentifier:(id)arg1 completionQueue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)setReachable:(BOOL)arg1;
- (id)shortDescription;
- (id)uniqueIdentifier;
- (void)writeCharacteristicValues:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)writeValue:(id)arg1 forCharacteristic:(id)arg2 authorizationData:(id)arg3 queue:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;

@end

