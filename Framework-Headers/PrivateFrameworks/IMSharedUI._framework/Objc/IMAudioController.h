//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <IMSharedUI/IMAudioPlayerDelegate-Protocol.h>

@class IMAudioPlayer, NSArray, NSMutableArray, NSString, NSURL;
@protocol IMAudioControllerDelegate;

@interface IMAudioController : NSObject <IMAudioPlayerDelegate>
{
    unsigned long long _currentIndex;
    IMAudioPlayer *_listenAudioPlayer;
    NSMutableArray *_audioURLs;
    BOOL _shouldUseSpeaker;
    BOOL _shouldStopPlayingWhenSilent;
    BOOL _shouldDuckOthers;
    BOOL _shouldUseAVPlayer;
    BOOL _playing;
    BOOL _paused;
    BOOL _interrupted;
    NSURL *_currentURL;
    id<IMAudioControllerDelegate> _delegate;
    IMAudioPlayer *_audioPlayer;
}

@property (strong, nonatomic) IMAudioPlayer *audioPlayer; // @synthesize audioPlayer=_audioPlayer;
@property (readonly, copy, nonatomic) NSArray *audioURLs;
@property (readonly, nonatomic) double currentMediaObjectDuration;
@property (readonly, nonatomic) double currentMediaObjectTime;
@property (readonly, nonatomic) NSURL *currentURL; // @synthesize currentURL=_currentURL;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<IMAudioControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) BOOL interrupted; // @synthesize interrupted=_interrupted;
@property (strong, nonatomic) IMAudioPlayer *listenAudioPlayer; // @synthesize listenAudioPlayer=_listenAudioPlayer;
@property (nonatomic, getter=isPaused) BOOL paused; // @synthesize paused=_paused;
@property (nonatomic, getter=isPlaying) BOOL playing; // @synthesize playing=_playing;
@property (nonatomic) BOOL shouldDuckOthers; // @synthesize shouldDuckOthers=_shouldDuckOthers;
@property (nonatomic) BOOL shouldStopPlayingWhenSilent; // @synthesize shouldStopPlayingWhenSilent=_shouldStopPlayingWhenSilent;
@property (nonatomic) BOOL shouldUseAVPlayer; // @synthesize shouldUseAVPlayer=_shouldUseAVPlayer;
@property (nonatomic) BOOL shouldUseSpeaker; // @synthesize shouldUseSpeaker=_shouldUseSpeaker;
@property (readonly) Class superclass;
@property (nonatomic) float volume;

+ (Class)audioControllerClass;
+ (id)audioControllerWithContentsOfURLs:(id)arg1;
- (void).cxx_destruct;
- (void)_notifyPlayerDidPrepareAudioURL:(id)arg1 successfully:(BOOL)arg2;
- (void)_playSoundWithURL:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)addContentsOfURL:(id)arg1;
- (void)addContentsOfURLs:(id)arg1;
- (void)audioPlayerCurrentTimeDidChange:(id)arg1;
- (void)audioPlayerDidFinishPlaying:(id)arg1;
- (void)audioPlayerDidPrepareAudioToPlay:(id)arg1 successfully:(BOOL)arg2;
- (unsigned long long)audioSessionControllerOptions;
- (id)currentMediaObject;
- (void)dealloc;
- (id)initWithContentsOfURLs:(id)arg1;
- (void)pause;
- (void)play;
- (void)playAfterDelay:(double)arg1;
- (void)playListenEndSound:(CDUnknownBlockType)arg1;
- (void)playListenSound:(CDUnknownBlockType)arg1;
- (void)prepareToPlay;
- (void)stop;

@end

