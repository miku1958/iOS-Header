//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <VectorKit/GGLImageCanvas.h>

#import <VectorKit/VKAnimationRunner-Protocol.h>
#import <VectorKit/VKWorldDelegate-Protocol.h>

@class GEOMapRegion, NSString, VKCamera, VKDispatch, VKLayoutContext, VKTimer, VKWorld;
@protocol VKImageCanvasDelegate, VKInteractiveCameraController;

__attribute__((visibility("hidden")))
@interface VKImageCanvas : GGLImageCanvas <VKWorldDelegate, VKAnimationRunner>
{
    VKWorld *_world;
    VKCamera *_camera;
    id<VKInteractiveCameraController> _cameraController;
    VKLayoutContext *_layoutContext;
    VKDispatch *_dispatch;
    long long _mapType;
    struct unique_ptr<md::RenderTree, std::__1::default_delete<md::RenderTree>> _mapScene;
    struct unique_ptr<md::MapCamera, std::__1::default_delete<md::MapCamera>> _mapCamera;
    struct unique_ptr<md::RenderQueue, std::__1::default_delete<md::RenderQueue>> _renderQueue;
    id<VKImageCanvasDelegate> _delegate;
    VKTimer *_layoutTimer;
    BOOL _shouldDrawWhileLoading;
    double _frameTimestamp;
    BOOL _needsLayout;
    struct unique_ptr<ggl::RenderQueue, std::__1::default_delete<ggl::RenderQueue>> _renderQueueResolve;
}

@property (readonly, nonatomic) VKCamera *camera; // @synthesize camera=_camera;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) id<VKImageCanvasDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) VKDispatch *dispatch; // @synthesize dispatch=_dispatch;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) GEOMapRegion *mapRegion;
@property (nonatomic) long long mapType; // @synthesize mapType=_mapType;
@property (readonly, nonatomic) double pitch;
@property (readonly) Class superclass;
@property (readonly, nonatomic) VKWorld *world; // @synthesize world=_world;
@property (readonly, nonatomic) double yaw;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_spinScene:(id)arg1;
- (void)_spinSceneWillRender:(BOOL)arg1;
- (void)animationDidResume:(id)arg1;
- (void)animationDidStop:(id)arg1;
- (void)cancelLoad;
- (void)cancelTileRequests;
- (void)clearScene;
- (void)dealloc;
- (void)didLayout;
- (void)didReceiveMemoryWarning:(BOOL)arg1;
- (id)initWithSize:(struct CGSize)arg1 scale:(double)arg2 useMultisampling:(BOOL)arg3 device:(const shared_ptr_807ec9ac *)arg4 homeQueue:(id)arg5;
- (void)loadScene;
- (void)renderSceneWithRenderer:(struct Renderer *)arg1 completion:(CDUnknownBlockType)arg2;
- (void)runAnimation:(id)arg1;
- (void)setCenterCoordinate:(CDStruct_c3b9c2ee)arg1 altitude:(double)arg2 yaw:(double)arg3 pitch:(double)arg4;
- (void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3;
- (void)setSize:(struct CGSize)arg1;
- (void)update;
- (void)worldDisplayDidChange:(id)arg1;
- (void)worldLayoutDidChange:(id)arg1;

@end

