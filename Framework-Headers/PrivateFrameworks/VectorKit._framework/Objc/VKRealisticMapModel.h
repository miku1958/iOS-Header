//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <VectorKit/VKVectorMapModel.h>

#import <VectorKit/VKMapLayer-Protocol.h>

@class NSString, VKSkyModel;
@protocol GEORoutePreloadSession;

__attribute__((visibility("hidden")))
@interface VKRealisticMapModel : VKVectorMapModel <VKMapLayer>
{
    double _fade;
    float _sceneAlpha;
    id<GEORoutePreloadSession> _routePreloadSession;
    BOOL _disableRealisticRoads;
    BOOL _disableRealisticLand;
    VKSkyModel *_skyModel;
    struct unique_ptr<ggl::ClearItem, std::__1::default_delete<ggl::ClearItem>> _clearItem;
    struct shared_ptr<ggl::ConstantDataTyped<ggl::AnimatableTexture::Variant>> _variantData;
    struct unique_ptr<ggl::FragmentedPool<ggl::PolygonSolidFill::Shader::Setup>, std::__1::default_delete<ggl::FragmentedPool<ggl::PolygonSolidFill::Shader::Setup>>> _roadStencilShaderSetupPool;
    struct unique_ptr<ggl::FragmentedPool<ggl::RealisticTexture::Shader::Setup>, std::__1::default_delete<ggl::FragmentedPool<ggl::RealisticTexture::Shader::Setup>>> _texturedShaderSetupPool;
    struct unique_ptr<ggl::FragmentedPool<ggl::RealisticAnimatableTexture::Shader::Setup>, std::__1::default_delete<ggl::FragmentedPool<ggl::RealisticAnimatableTexture::Shader::Setup>>> _animatableTexturedShaderSetupPool;
    struct unique_ptr<ggl::FragmentedPool<ggl::RealisticRoad::Shader::Setup>, std::__1::default_delete<ggl::FragmentedPool<ggl::RealisticRoad::Shader::Setup>>> _roadShaderSetupPool;
    struct unique_ptr<ggl::FragmentedPool<ggl::RealisticAnimatableRoad::Shader::Setup>, std::__1::default_delete<ggl::FragmentedPool<ggl::RealisticAnimatableRoad::Shader::Setup>>> _animatableRoadShaderSetupPool;
    struct unique_ptr<ggl::FragmentedPool<ggl::RealisticCasingShadow::Shader::Setup>, std::__1::default_delete<ggl::FragmentedPool<ggl::RealisticCasingShadow::Shader::Setup>>> _casingShadowShaderSetupPool;
    struct unique_ptr<ggl::FragmentedPool<ggl::RealisticCasingFacade::Shader::Setup>, std::__1::default_delete<ggl::FragmentedPool<ggl::RealisticCasingFacade::Shader::Setup>>> _casingFacadeShaderSetupPool;
    struct unique_ptr<ggl::FragmentedPool<ggl::RealisticCasingTop::Shader::Setup>, std::__1::default_delete<ggl::FragmentedPool<ggl::RealisticCasingTop::Shader::Setup>>> _casingSidewalkShadowShaderSetupPool;
    struct unique_ptr<ggl::FragmentedPool<ggl::RealisticCasingTop::Shader::Setup>, std::__1::default_delete<ggl::FragmentedPool<ggl::RealisticCasingTop::Shader::Setup>>> _casingTopShaderSetupPool;
    struct unique_ptr<ggl::FragmentedPool<ggl::RealisticRoadShadow::Shader::Setup>, std::__1::default_delete<ggl::FragmentedPool<ggl::RealisticRoadShadow::Shader::Setup>>> _roadShadowShaderSetupPool;
    struct unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState>> _roadStencilRenderState;
    struct unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState>> _landRenderStateWithoutBlending;
    struct unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState>> _landRenderStateWithBlending;
    struct unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState>> _coastlineRenderState;
    struct unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState>> _waterRenderStateWithoutBlending;
    struct unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState>> _waterRenderStateWithBlending;
    struct unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState>> _roadRenderStateWithoutBlending;
    struct unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState>> _roadRenderStateWithBlending;
    struct unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState>> _casingShadowRenderState;
    struct unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState>> _casingFacadeRenderStateWithoutBlending;
    struct unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState>> _casingFacadeRenderStateWithBlending;
    struct unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState>> _casingSidewalkShadowRenderState;
    struct unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState>> _casingTopRenderStateWithoutBlending;
    struct unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState>> _casingTopRenderStateWithBlending;
    struct unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState>> _roadShadowRenderState;
    struct unique_ptr<ggl::FragmentedPool<ggl::RenderItem>, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem>>> _roadStencilRenderItemPool;
    struct unique_ptr<ggl::FragmentedPool<ggl::RenderItem>, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem>>> _texturedRenderItemPool;
    struct unique_ptr<ggl::FragmentedPool<ggl::RenderItem>, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem>>> _roadRenderItemPool;
    struct unique_ptr<ggl::FragmentedPool<ggl::RenderItem>, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem>>> _casingShadowRenderItemPool;
    struct unique_ptr<ggl::FragmentedPool<ggl::RenderItem>, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem>>> _casingFacadeRenderItemPool;
    struct unique_ptr<ggl::FragmentedPool<ggl::RenderItem>, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem>>> _casingTopRenderItemPool;
    struct unique_ptr<ggl::FragmentedPool<ggl::RenderItem>, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem>>> _sidewalkShadowRenderItemPool;
    struct unique_ptr<ggl::FragmentedPool<ggl::RenderItem>, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem>>> _roadShadowRenderItemPool;
    struct unique_ptr<ggl::FragmentedPool<ggl::PolygonSolidFill::Shader::Setup>, std::__1::default_delete<ggl::FragmentedPool<ggl::PolygonSolidFill::Shader::Setup>>> _debugShaderSetupPool;
    struct unique_ptr<ggl::FragmentedPool<ggl::RenderItem>, std::__1::default_delete<ggl::FragmentedPool<ggl::RenderItem>>> _debugRenderItemPool;
    struct unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState>> _debugRenderState;
    BOOL _needDebugReset;
    struct RenderItemBatcher _batcher;
    shared_ptr_f06afc6c _styleManager;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) BOOL disableRealisticLand; // @synthesize disableRealisticLand=_disableRealisticLand;
@property (nonatomic) BOOL disableRealisticRoads; // @synthesize disableRealisticRoads=_disableRealisticRoads;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) id<GEORoutePreloadSession> routePreloadSession;
@property (nonatomic) float sceneAlpha; // @synthesize sceneAlpha=_sceneAlpha;
@property (strong, nonatomic) VKSkyModel *skyModel; // @synthesize skyModel=_skyModel;
@property (nonatomic) shared_ptr_f06afc6c styleManager;
@property (readonly) Class superclass;

- (id).cxx_construct;
- (void).cxx_destruct;
- (double)_calculateZoomLevelWithContext:(id)arg1;
- (void)appendDebugPreloadMissesToBuffer:(struct CommandBuffer *)arg1 inContext:(id)arg2 forScene:(id)arg3;
- (void)appendDebugPreloadStatusToBuffer:(struct CommandBuffer *)arg1 inContext:(id)arg2 forScene:(id)arg3;
- (void)appendLandCommandsToBuffer:(struct CommandBuffer *)arg1 inContext:(id)arg2 skyParameters:(const struct SkyParameters *)arg3;
- (void)appendRoadCommandsToBuffer:(struct CommandBuffer *)arg1 inContext:(id)arg2 skyParameters:(const struct SkyParameters *)arg3;
- (void)appendStencilCommandsToBuffer:(struct CommandBuffer *)arg1 inContext:(id)arg2;
- (void)appendWaterCommandsToBuffer:(struct CommandBuffer *)arg1 inContext:(id)arg2 skyParameters:(const struct SkyParameters *)arg3;
- (void)dealloc;
- (void)didReceiveMemoryWarning:(BOOL)arg1;
- (void)flushPools;
- (void)gatherRenderingPreloadItems:(vector_b35310ee *)arg1;
- (void)gglLayoutScene:(id)arg1 withContext:(id)arg2 renderQueue:(struct RenderQueue *)arg3;
- (id)init;
- (unsigned long long)mapLayerPosition;
- (BOOL)minimumZoomLevelBoundsCamera;
- (void)reset;
- (void)resetDebugPools:(id)arg1;
- (void)resetPools;
- (void)setupRealisticUniformBuffer:(ConstantDataTyped_b1bd3bad *)arg1 forTile:(id)arg2;
- (void)stylesheetDidChange;
- (void)stylesheetDoneChanging;
- (void)stylesheetTransitionDidProgress;
- (void)stylesheetWillTransition:(struct DisplayStyle)arg1;
- (BOOL)wantsCategorizedSourceTiles;
- (void)willStartDrawingTiles:(id)arg1;

@end

