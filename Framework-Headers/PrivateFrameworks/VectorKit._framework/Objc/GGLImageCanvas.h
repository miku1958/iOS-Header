//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/NSObject.h>

#import <VectorKit/MDRenderTarget-Protocol.h>

@class NSString;

__attribute__((visibility("hidden")))
@interface GGLImageCanvas : NSObject <MDRenderTarget>
{
    struct CGSize _size;
    double _contentScale;
    BOOL _canMakeImage;
    BOOL _recreateRenderTarget;
    BOOL _allowAlpha;
    struct unique_ptr<ggl::RenderBuffer, std::__1::default_delete<ggl::RenderBuffer>> _colorBuffer;
    struct unique_ptr<ggl::RenderBuffer, std::__1::default_delete<ggl::RenderBuffer>> _depthStencilBuffer;
    struct unique_ptr<ggl::RenderTarget, std::__1::default_delete<ggl::RenderTarget>> _renderTarget;
    BOOL _useMultisampling;
    struct unique_ptr<ggl::RenderBuffer, std::__1::default_delete<ggl::RenderBuffer>> _msaaColorBuffer;
    struct unique_ptr<ggl::RenderBuffer, std::__1::default_delete<ggl::RenderBuffer>> _msaaDepthStencilBuffer;
    struct unique_ptr<ggl::RenderTargetOperation, std::__1::default_delete<ggl::RenderTargetOperation>> _msaaBlitOperation;
    struct unique_ptr<ggl::RenderTarget, std::__1::default_delete<ggl::RenderTarget>> _msaaRenderTarget;
}

@property (nonatomic) BOOL allowAlpha; // @synthesize allowAlpha=_allowAlpha;
@property (readonly, nonatomic) float averageFPS;
@property (nonatomic) double contentScale; // @synthesize contentScale=_contentScale;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) struct RenderTarget *finalRenderTarget;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) struct RenderTargetOperation *msaaBlitOperation;
@property (readonly, nonatomic) struct RenderTarget *msaaRenderTarget;
@property (readonly, nonatomic) struct RenderTarget *renderTarget;
@property (nonatomic) struct CGSize size; // @synthesize size=_size;
@property (readonly, nonatomic) struct CGSize sizeInPixels;
@property (readonly) Class superclass;
@property (readonly, nonatomic) BOOL useMultisampling; // @synthesize useMultisampling=_useMultisampling;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_createMSAARenderTarget;
- (void)_createRenderTarget;
- (void)_destroyMSAARenderTarget;
- (void)_destroyRenderTarget;
- (shared_ptr_edb96180)bitmapDataWithRenderer:(struct Renderer *)arg1;
- (void)didDrawView;
- (id)initWithSize:(struct CGSize)arg1 scale:(double)arg2 useMultisampling:(BOOL)arg3;
- (struct CGImage *)newImageWithRenderer:(struct Renderer *)arg1;
- (void)willDrawView;

@end

