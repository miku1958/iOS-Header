//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <VectorKit/VKModelObject.h>

#import <VectorKit/VKMapLayer-Protocol.h>
#import <VectorKit/VKStyleManagerObserver-Protocol.h>

@class NSString, VKMapModel;

__attribute__((visibility("hidden")))
@interface VKGridModel : VKModelObject <VKMapLayer, VKStyleManagerObserver>
{
    VKMapModel *_mapModel;
    BOOL _simpleGridEnabled;
    unsigned char _renderPass;
    double _gridMix;
    Matrix_5173352a _fillColor;
    Matrix_5173352a _lineColor;
    shared_ptr_696716c4 _viewConstantData;
    struct shared_ptr<ggl::ConstantDataTyped<ggl::GridBase::GridView>> _baseConstantData;
    struct shared_ptr<ggl::ConstantDataTyped<ggl::SimpleGrid::Style>> _simpleConstantData;
    struct shared_ptr<ggl::ConstantDataTyped<ggl::Grid::Style>> _constantData;
    struct unique_ptr<ggl::Grid::Shader::Setup, std::__1::default_delete<ggl::Grid::Shader::Setup>> _shaderSetup;
    struct unique_ptr<ggl::SimpleGrid::Shader::Setup, std::__1::default_delete<ggl::SimpleGrid::Shader::Setup>> _simpleShaderSetup;
    struct shared_ptr<ggl::GridBase::GridMesh> _gridMesh;
    struct unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState>> _gridRenderState;
    struct unique_ptr<ggl::RenderState, std::__1::default_delete<ggl::RenderState>> _simpleGridRenderState;
    struct RenderItem *_gridRenderItem;
    struct RenderItem *_simpleGridRenderItem;
    BOOL _needsUpdatedColor;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) Matrix_5173352a fillColor; // @synthesize fillColor=_fillColor;
@property (readonly) unsigned long long hash;
@property (nonatomic) VKMapModel *mapModel; // @synthesize mapModel=_mapModel;
@property (nonatomic) unsigned char renderPass; // @synthesize renderPass=_renderPass;
@property (nonatomic) BOOL simpleGridEnabled; // @synthesize simpleGridEnabled=_simpleGridEnabled;
@property (readonly, nonatomic) shared_ptr_f06afc6c styleManager;
@property (readonly) Class superclass;

+ (BOOL)reloadOnStylesheetChange;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)dealloc;
- (void)gglLayoutScene:(id)arg1 withContext:(id)arg2 renderQueue:(struct RenderQueue *)arg3;
- (id)init;
- (unsigned long long)mapLayerPosition;
- (void)setNeedsUpdatedGridColor;
- (BOOL)shouldLayoutWithoutStyleManager;
- (void)stylesheetDidChange;
- (void)stylesheetDoneChanging;
- (void)updateGridColor;

@end

