//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <CoreCDPInternal/CDPDDeviceSecretValidatorDelegate-Protocol.h>

@class CDPDCircleController, CDPDRecoveryFlowContext, CDPDSecureBackupController, NSString;
@protocol CDPRemoteDeviceSecretValidatorProtocol, CDPStateUIProviderInternal, OS_os_activity;

@interface CDPDRecoveryFlowController : NSObject <CDPDDeviceSecretValidatorDelegate>
{
    id<CDPRemoteDeviceSecretValidatorProtocol> _validator;
    NSObject<OS_os_activity> *_recoveryFlow;
    CDPDRecoveryFlowContext *_recoveryContext;
    CDPDCircleController *_circleController;
    CDPDSecureBackupController *_secureBackupController;
    id<CDPStateUIProviderInternal> _uiProvider;
}

@property (strong, nonatomic) CDPDCircleController *circleController; // @synthesize circleController=_circleController;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) CDPDRecoveryFlowContext *recoveryContext; // @synthesize recoveryContext=_recoveryContext;
@property (strong, nonatomic) CDPDSecureBackupController *secureBackupController; // @synthesize secureBackupController=_secureBackupController;
@property (readonly) Class superclass;
@property (strong, nonatomic) id<CDPStateUIProviderInternal> uiProvider; // @synthesize uiProvider=_uiProvider;
@property (strong, nonatomic) id<CDPRemoteDeviceSecretValidatorProtocol> validator; // @synthesize validator=_validator;

- (void).cxx_destruct;
- (void)beginInteractiveRecoveryForDevices:(id)arg1 isUsingMultipleICSC:(BOOL)arg2 usingValidator:(id)arg3;
- (void)beginRecovery:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1 uiProvider:(id)arg2 secureBackupController:(id)arg3 circleProxy:(id)arg4;
- (id)recoveryValidatorWithDevices:(id)arg1 forMultipleICSC:(BOOL)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)retrieveInflatedDevices:(CDUnknownBlockType)arg1;
- (void)secretValidator:(id)arg1 recoverSecureBackupWithContext:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (BOOL)secretValidator:(id)arg1 shouldContinueValidationAfterError:(id)arg2;

@end

