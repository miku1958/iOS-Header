//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <AXTapToSpeakTime/VSSpeechSynthesizerDelegate-Protocol.h>

@class AXTapticTimeManager, NSDateFormatter, NSString, VSSpeechSynthesizer;
@protocol OS_dispatch_queue;

@interface AXTapToSpeakTimeManager : NSObject <VSSpeechSynthesizerDelegate>
{
    int _ringerStateNotifyToken;
    BOOL _cachedRingerIsMuted;
    float _lastMediaVolume;
    NSObject<OS_dispatch_queue> *_queue;
    VSSpeechSynthesizer *_vsSpeechSynthesizer;
    NSDateFormatter *_dateFormatter;
    AXTapticTimeManager *_tapticTimeManager;
}

@property (readonly, nonatomic) NSDateFormatter *dateFormatter; // @synthesize dateFormatter=_dateFormatter;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, nonatomic) AXTapticTimeManager *tapticTimeManager; // @synthesize tapticTimeManager=_tapticTimeManager;
@property (readonly, nonatomic) VSSpeechSynthesizer *vsSpeechSynthesizer; // @synthesize vsSpeechSynthesizer=_vsSpeechSynthesizer;

+ (id)sharedInstance;
- (void).cxx_destruct;
- (BOOL)_canOutputPremiumVoice;
- (BOOL)_canSpeakTimeForVoice:(unsigned long long)arg1 andGesture:(unsigned long long)arg2;
- (BOOL)_canTapticTime;
- (id)_currentLanguageCode;
- (void)_denormalizeVolumeIfNecessary;
- (id)_getPremiumVoiceAsset;
- (id)_init;
- (void)_normalizeVolumeIfNecessary;
- (void)_outputTapticTime:(id)arg1;
- (void)_registerForNotifications;
- (void)_ringerStateChanged;
- (void)_setupAudioSessionForVoice:(unsigned long long)arg1;
- (void)_speakTime:(id)arg1 preferredVoice:(unsigned long long)arg2;
- (void)_speakTime:(id)arg1 withCharacterVoiceIdentifier:(id)arg2;
- (void)_unregisterForNotifications;
- (void)dealloc;
- (void)outputTime:(id)arg1;
- (void)outputTime:(id)arg1 preferredVoice:(unsigned long long)arg2;
- (void)outputTime:(id)arg1 preferredVoice:(unsigned long long)arg2 withGesture:(unsigned long long)arg3;
- (void)speechOutputDidComplete;
- (void)speechSynthesizer:(id)arg1 didContinueSpeakingRequest:(id)arg2;
- (void)speechSynthesizer:(id)arg1 didFinishSpeakingRequest:(id)arg2 successfully:(BOOL)arg3 phonemesSpoken:(id)arg4 withError:(id)arg5;
- (void)speechSynthesizer:(id)arg1 didPauseSpeakingRequest:(id)arg2;
- (void)speechSynthesizer:(id)arg1 didStartSpeakingRequest:(id)arg2;
- (void)speechSynthesizer:(id)arg1 willSpeakRangeOfSpeechString:(struct _NSRange)arg2 forRequest:(id)arg3;
- (void)stopOutput;

@end

