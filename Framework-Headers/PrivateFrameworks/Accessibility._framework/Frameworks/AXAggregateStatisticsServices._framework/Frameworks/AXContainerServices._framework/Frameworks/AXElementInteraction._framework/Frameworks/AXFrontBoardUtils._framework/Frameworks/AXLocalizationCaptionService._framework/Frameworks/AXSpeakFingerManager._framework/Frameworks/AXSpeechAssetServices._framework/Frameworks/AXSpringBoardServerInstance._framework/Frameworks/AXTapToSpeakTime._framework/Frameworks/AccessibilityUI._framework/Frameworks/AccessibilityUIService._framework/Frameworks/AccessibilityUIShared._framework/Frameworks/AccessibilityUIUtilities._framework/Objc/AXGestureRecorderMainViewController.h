//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Preferences/PSViewController.h>

#import <AccessibilityUIUtilities/AXGestureRecorderControlsViewDelegate-Protocol.h>
#import <AccessibilityUIUtilities/AXGestureRecorderViewControllerDelegate-Protocol.h>
#import <AccessibilityUIUtilities/UITextFieldDelegate-Protocol.h>

@class AXAssertion, AXGestureRecorderControlsView, AXGestureRecorderStyleProvider, AXGestureRecorderViewController, NSString, UIBarButtonItem, UILabel;
@protocol AXGestureRecorderMainViewControllerDelegate;

@interface AXGestureRecorderMainViewController : PSViewController <AXGestureRecorderViewControllerDelegate, AXGestureRecorderControlsViewDelegate, UITextFieldDelegate>
{
    BOOL _inReplayMode;
    BOOL _isDisplayLinkInEffect;
    AXGestureRecorderStyleProvider *_styleProvider;
    AXGestureRecorderViewController *_gestureRecorderViewController;
    AXGestureRecorderControlsView *_controlsView;
    UILabel *_instructionsLabel;
    UIBarButtonItem *_saveButton;
    unsigned long long _leftButtonIdentifier;
    unsigned long long _rightButtonIdentifier;
    double _gestureRecordingDidStartTimeInterval;
    id<AXGestureRecorderMainViewControllerDelegate> _delegate;
    AXAssertion *_disableSystemGesturesAssertion;
    id _appDidResignActiveNotificationHandlerToken;
    long long _recorderType;
}

@property (weak, nonatomic) id appDidResignActiveNotificationHandlerToken; // @synthesize appDidResignActiveNotificationHandlerToken=_appDidResignActiveNotificationHandlerToken;
@property (strong, nonatomic) AXGestureRecorderControlsView *controlsView; // @synthesize controlsView=_controlsView;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<AXGestureRecorderMainViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (strong, nonatomic) AXAssertion *disableSystemGesturesAssertion; // @synthesize disableSystemGesturesAssertion=_disableSystemGesturesAssertion;
@property (strong, nonatomic) AXGestureRecorderViewController *gestureRecorderViewController; // @synthesize gestureRecorderViewController=_gestureRecorderViewController;
@property (nonatomic) double gestureRecordingDidStartTimeInterval; // @synthesize gestureRecordingDidStartTimeInterval=_gestureRecordingDidStartTimeInterval;
@property (readonly) unsigned long long hash;
@property (nonatomic, getter=isInReplayMode) BOOL inReplayMode; // @synthesize inReplayMode=_inReplayMode;
@property (strong, nonatomic) UILabel *instructionsLabel; // @synthesize instructionsLabel=_instructionsLabel;
@property (nonatomic) BOOL isDisplayLinkInEffect; // @synthesize isDisplayLinkInEffect=_isDisplayLinkInEffect;
@property (nonatomic) unsigned long long leftButtonIdentifier; // @synthesize leftButtonIdentifier=_leftButtonIdentifier;
@property (nonatomic) long long recorderType; // @synthesize recorderType=_recorderType;
@property (nonatomic) unsigned long long rightButtonIdentifier; // @synthesize rightButtonIdentifier=_rightButtonIdentifier;
@property (strong, nonatomic) UIBarButtonItem *saveButton; // @synthesize saveButton=_saveButton;
@property (strong, nonatomic) AXGestureRecorderStyleProvider *styleProvider; // @synthesize styleProvider=_styleProvider;
@property (readonly) Class superclass;

+ (BOOL)_shouldForwardViewWillTransitionToSize;
- (void).cxx_destruct;
- (BOOL)_canSaveGestureWithName:(id)arg1;
- (void)_cancelButtonTapped:(id)arg1;
- (void)_clearProgressView;
- (void)_commonInit;
- (id)_defaultInstructionalText;
- (void)_didSaveGestureWithName:(id)arg1;
- (void)_enterReplayMode;
- (void)_enterWaitingMode;
- (void)_getButtonPropertiesForIdentifier:(unsigned long long)arg1 enabled:(BOOL)arg2 color:(int *)arg3 title:(id *)arg4;
- (void)_hide;
- (void)_hideChrome;
- (void)_hideChromeButtonTapped:(id)arg1;
- (BOOL)_isForRealTimeGesture;
- (void)_manageDisplayLinkManager:(BOOL)arg1;
- (void)_releaseOutlets;
- (void)_reset;
- (void)_saveButtonTapped:(id)arg1;
- (void)_savePoint:(struct CGPoint)arg1;
- (void)_saveReplayableGesture;
- (void)_saveWithMessage:(id)arg1;
- (void)_setLeftButtonIdentifier:(unsigned long long)arg1 enabled:(BOOL)arg2 rightButtonIdentifier:(unsigned long long)arg3 enabled:(BOOL)arg4 animate:(BOOL)arg5 completion:(CDUnknownBlockType)arg6;
- (void)_unhideChrome;
- (void)_updateProgressView:(id)arg1;
- (void)dealloc;
- (void)gestureRecorderControlsView:(id)arg1 buttonTappedAtIndex:(unsigned long long)arg2;
- (void)gestureRecorderViewController:(id)arg1 didStartRecordingAtomicFingerPathAtPoint:(struct CGPoint)arg2;
- (void)gestureRecorderViewController:(id)arg1 setChromeVisible:(BOOL)arg2;
- (void)gestureRecorderViewControllerDidFinishReplayingRecordedGesture:(id)arg1;
- (void)gestureRecorderViewControllerDidStopRecordingAtomicFingerPath:(id)arg1;
- (id)init;
- (id)initWithType:(long long)arg1;
- (BOOL)isChromeVisibleForGestureRecorderViewController:(id)arg1;
- (void)loadView;
- (double)maximumDurationOfRecordedGestureForGestureRecorderViewController:(id)arg1;
- (BOOL)shouldAutorotate;
- (unsigned long long)supportedInterfaceOrientations;
- (void)viewDidDisappear:(BOOL)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)arg1;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;

@end

