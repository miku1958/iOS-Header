//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <IDSFoundation/NSCopying-Protocol.h>

@class APSOutgoingMessageCheckpointTrace, NSArray, NSData, NSDate, NSDictionary, NSMutableArray, NSNumber, NSString, NSURL;
@protocol IDSBaseMessageSigningSession;

@interface IDSBaseMessage : NSObject <NSCopying>
{
    NSDictionary *_cachedBody;
    NSString *_topic;
    NSDictionary *_userInfo;
    NSData *_serviceData;
    NSDictionary *_clientInfo;
    NSDate *_creationDate;
    NSDictionary *_responseAlert;
    NSString *_dsAuthID;
    NSString *_dataUsageBundleIdentifier;
    id _context;
    int _timeoutRetries;
    BOOL _usingOutgoingPush;
    BOOL _wantsResponse;
    BOOL _wantsMultipleResponses;
    BOOL _wantsIntegerUniqueIDs;
    BOOL _wantsBinaryPush;
    BOOL _forceCellular;
    BOOL _highPriority;
    BOOL _hasReceivedPushAck;
    BOOL _hasAttemptedAPSDelivery;
    BOOL _httpDoNotDecodeData;
    BOOL _ignoreMaxRetryCount;
    CDUnknownBlockType _completionBlock;
    CDUnknownBlockType _deliveryAcknowledgementBlock;
    double _timeout;
    double _timeSent;
    unsigned long long _uniqueID;
    NSNumber *_retryCount;
    long long _importanceLevel;
    long long _deliveryMechanism;
    id<IDSBaseMessageSigningSession> _signingSession;
    NSString *_service;
    NSString *_subService;
    NSString *_underlyingService;
    NSURL *_URLOverride;
    unsigned long long _sentByteCount;
    unsigned long long _receivedByteCount;
    NSNumber *_pushAckTimestamp;
    BOOL _isMultipleAuthCertCapable;
    APSOutgoingMessageCheckpointTrace *_apsdCheckpointTrace;
    NSDictionary *_responseAlertInfo;
    NSNumber *_originalTimestamp;
    NSDate *_requestStart;
    NSDate *_requestEnd;
    NSDate *_responseReceived;
}

@property (readonly, copy, nonatomic) NSData *IDCertificate;
@property (copy) NSURL *URLOverride; // @synthesize URLOverride=_URLOverride;
@property (strong, setter=_setCachedBody:) NSDictionary *_cachedBody; // @synthesize _cachedBody;
@property (setter=_setUsingOutgoingPush:) BOOL _usingOutgoingPush; // @synthesize _usingOutgoingPush;
@property (readonly) NSDictionary *additionalInternalHeaders;
@property (readonly) NSDictionary *additionalMessageHeaders;
@property (readonly) NSDictionary *additionalMessageHeadersForOutgoingPush;
@property (readonly) NSDictionary *additionalQueryStringParameters;
@property (readonly) BOOL allowDualDelivery;
@property (readonly) BOOL allowsServerProvidedLenientAnisetteTimeout;
@property (readonly) double anisetteHeadersTimeout;
@property (strong) APSOutgoingMessageCheckpointTrace *apsdCheckpointTrace; // @synthesize apsdCheckpointTrace=_apsdCheckpointTrace;
@property (readonly) NSString *bagKey;
@property (copy, nonatomic) NSMutableArray *certDataArray;
@property (copy) NSDictionary *clientInfo; // @synthesize clientInfo=_clientInfo;
@property (readonly) long long command;
@property (copy) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property (strong) id context; // @synthesize context=_context;
@property (strong) NSDate *creationDate; // @synthesize creationDate=_creationDate;
@property (readonly) double customRetryInterval;
@property (readonly) NSString *dataUsageBundleIdentifier;
@property (copy) CDUnknownBlockType deliveryAcknowledgementBlock; // @synthesize deliveryAcknowledgementBlock=_deliveryAcknowledgementBlock;
@property long long deliveryMechanism; // @synthesize deliveryMechanism=_deliveryMechanism;
@property (copy, nonatomic, setter=setDSAuthID:) NSString *dsAuthID; // @synthesize dsAuthID=_dsAuthID;
@property BOOL forceCellular; // @synthesize forceCellular=_forceCellular;
@property BOOL hasAttemptedAPSDelivery; // @synthesize hasAttemptedAPSDelivery=_hasAttemptedAPSDelivery;
@property BOOL hasReceivedPushAck; // @synthesize hasReceivedPushAck=_hasReceivedPushAck;
@property BOOL highPriority; // @synthesize highPriority=_highPriority;
@property BOOL httpDoNotDecodeData; // @synthesize httpDoNotDecodeData=_httpDoNotDecodeData;
@property (readonly, nonatomic) struct __SecKey *identityPrivateKey;
@property (readonly, nonatomic) struct __SecKey *identityPublicKey;
@property BOOL ignoreMaxRetryCount; // @synthesize ignoreMaxRetryCount=_ignoreMaxRetryCount;
@property (readonly) BOOL ignoresNetworkConnectivity;
@property long long importanceLevel; // @synthesize importanceLevel=_importanceLevel;
@property (nonatomic) BOOL isMultipleAuthCertCapable; // @synthesize isMultipleAuthCertCapable=_isMultipleAuthCertCapable;
@property (readonly) BOOL isValidMessage;
@property (readonly) BOOL isWebTunnelMessage;
@property (readonly) int maxTimeoutRetries;
@property (readonly) NSDictionary *messageBody;
@property (readonly) NSDictionary *messageBodyUsingCache;
@property (readonly) NSDictionary *nonStandardMessageHeadersForOutgoingPush;
@property (copy, nonatomic) NSNumber *originalTimestamp; // @synthesize originalTimestamp=_originalTimestamp;
@property (readonly) BOOL payloadCanBeLogged;
@property (copy, nonatomic) NSMutableArray *privateKeyArray;
@property (copy, nonatomic) NSMutableArray *publicKeyArray;
@property (strong) NSNumber *pushAckTimestamp; // @synthesize pushAckTimestamp=_pushAckTimestamp;
@property (copy, nonatomic) NSData *pushCertificate;
@property (nonatomic) struct __SecKey *pushPrivateKey;
@property (nonatomic) struct __SecKey *pushPublicKey;
@property (copy, nonatomic) NSData *pushToken;
@property (nonatomic) unsigned long long receivedByteCount; // @synthesize receivedByteCount=_receivedByteCount;
@property (strong, nonatomic) NSDate *requestEnd; // @synthesize requestEnd=_requestEnd;
@property (strong, nonatomic) NSDate *requestStart; // @synthesize requestStart=_requestStart;
@property (readonly) NSArray *requiredKeys;
@property (readonly) BOOL requiresPushTokenKeys;
@property (copy) NSDictionary *responseAlertInfo; // @synthesize responseAlertInfo=_responseAlertInfo;
@property (readonly) long long responseCommand;
@property (strong, nonatomic) NSDate *responseReceived; // @synthesize responseReceived=_responseReceived;
@property (copy, nonatomic) NSNumber *retryCount; // @synthesize retryCount=_retryCount;
@property (readonly) NSString *retryCountKey;
@property (nonatomic) unsigned long long sentByteCount; // @synthesize sentByteCount=_sentByteCount;
@property (copy, nonatomic) NSNumber *serverTimestamp;
@property (copy, nonatomic) NSNumber *serverTimestampReceivedDate;
@property (copy) NSString *service; // @synthesize service=_service;
@property (copy) NSData *serviceData; // @synthesize serviceData=_serviceData;
@property (strong, nonatomic) id<IDSBaseMessageSigningSession> signingSession; // @synthesize signingSession=_signingSession;
@property (copy) NSString *subService; // @synthesize subService=_subService;
@property double timeSent; // @synthesize timeSent=_timeSent;
@property double timeout; // @synthesize timeout=_timeout;
@property int timeoutRetries; // @synthesize timeoutRetries=_timeoutRetries;
@property (strong) NSString *topic; // @synthesize topic=_topic;
@property (copy) NSString *underlyingService; // @synthesize underlyingService=_underlyingService;
@property unsigned long long uniqueID; // @synthesize uniqueID=_uniqueID;
@property (readonly) NSString *uniqueIDString;
@property (readonly) NSString *userAgentHeaderString;
@property (copy, nonatomic) NSMutableArray *userIDArray;
@property (copy) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property (readonly) BOOL wantsAPSRetries;
@property (readonly) BOOL wantsBagKey;
@property BOOL wantsBinaryPush; // @synthesize wantsBinaryPush=_wantsBinaryPush;
@property (readonly) BOOL wantsBodySignature;
@property (readonly) BOOL wantsCFNetworkTimeout;
@property (readonly) BOOL wantsCompressedBody;
@property (readonly) BOOL wantsCustomRetryInterval;
@property (readonly) BOOL wantsExtraTimeoutRetry;
@property (readonly) BOOL wantsHTTPGet;
@property (readonly) BOOL wantsHTTPHeaders;
@property (readonly) BOOL wantsIDSServer;
@property (readonly) BOOL wantsIDSSignatures;
@property BOOL wantsIntegerUniqueIDs; // @synthesize wantsIntegerUniqueIDs=_wantsIntegerUniqueIDs;
@property (readonly) BOOL wantsJSONBody;
@property (readonly) BOOL wantsManagedRetries;
@property BOOL wantsMultipleResponses; // @synthesize wantsMultipleResponses=_wantsMultipleResponses;
@property BOOL wantsResponse; // @synthesize wantsResponse=_wantsResponse;
@property (readonly) BOOL wantsSignature;
@property (readonly) BOOL wantsUserAgentInHeaders;

- (void).cxx_destruct;
- (void)_cacheBody;
- (void)_clearCache;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)handleResponseBody:(id)arg1;
- (void)handleResponseDictionary:(id)arg1;
- (void)handleResponseHeaders:(id)arg1;
- (void)handleResponseStatus:(unsigned long long)arg1;
- (BOOL)hasRequiredKeys:(id *)arg1;
- (id)init;
- (BOOL)isIDSMessage;
- (void)logFailureInfo;
- (id)messageBodyDataOverride;
- (id)overrideContentType;
- (id)parsedIDSMessageResult;
- (BOOL)wantsClientInfo;
- (BOOL)wantsGZip;
- (BOOL)wantsUDID;

@end

