//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <IDSFoundation/NSCopying-Protocol.h>

@class IDSDestination, IDSOutgoingMessageCheckpointTrace, NSArray, NSData, NSDate, NSDictionary, NSMutableDictionary, NSNumber, NSString;

@interface IDSSendParameters : NSObject <NSCopying>
{
    NSMutableDictionary *_params;
    IDSOutgoingMessageCheckpointTrace *_checkpointTrace;
}

@property (strong, nonatomic) NSData *accessToken;
@property (strong, nonatomic) NSString *accountUUID;
@property (nonatomic) BOOL activityContinuation;
@property (nonatomic) BOOL allowCloudDelivery;
@property (strong, nonatomic) NSString *alternateCallbackID;
@property (nonatomic) BOOL alwaysSkipSelf;
@property (strong, nonatomic) NSArray *bulkedPayload;
@property (nonatomic) BOOL bypassDuet;
@property (nonatomic) BOOL bypassSizeCheck;
@property (nonatomic) BOOL bypassStorage;
@property (strong, nonatomic) IDSOutgoingMessageCheckpointTrace *checkpointTrace; // @synthesize checkpointTrace=_checkpointTrace;
@property (strong, nonatomic) NSNumber *command;
@property (nonatomic) BOOL compressPayload;
@property (nonatomic) BOOL compressed;
@property (nonatomic) BOOL daemonDeathResend;
@property (strong, nonatomic) NSData *data;
@property (strong, nonatomic) NSData *dataToEncrypt;
@property (strong, nonatomic) NSDictionary *deliveryStatusContext;
@property (strong, nonatomic) IDSDestination *destinations;
@property (readonly, nonatomic) NSDictionary *dictionaryRepresentation;
@property (nonatomic) BOOL disableAliasValidation;
@property (nonatomic) BOOL disallowRefresh;
@property (strong, nonatomic) NSArray *duetIdentifiersOverride;
@property (nonatomic) BOOL encryptPayload;
@property (nonatomic) BOOL enforceRemoteTimeouts;
@property (nonatomic) BOOL expectsPeerResponse;
@property (readonly, nonatomic) NSDate *expirationDate;
@property (nonatomic) BOOL fakeMessage;
@property (strong, nonatomic) NSArray *finalDestinations;
@property (nonatomic) BOOL fireAndForget;
@property (nonatomic) BOOL forceEncryptionOff;
@property (strong, nonatomic) NSString *fromID;
@property (strong, nonatomic) NSData *groupData;
@property (nonatomic) BOOL homeKitPayload;
@property (strong, nonatomic) NSString *identifier;
@property (strong, nonatomic) NSArray *interestingRegistrationProperties;
@property (nonatomic) BOOL isProxiedOutgoingMessage;
@property (nonatomic) BOOL liveMessageDelivery;
@property (nonatomic) BOOL localDelivery;
@property (strong, nonatomic) NSString *localDestinationDeviceUUID;
@property (strong, nonatomic) NSString *mainAccountUUID;
@property (strong, nonatomic) NSDictionary *message;
@property (strong, nonatomic) NSNumber *messageType;
@property (strong, nonatomic) NSData *messageUUID;
@property (strong, nonatomic) NSString *metricReportIdentifier;
@property (nonatomic) BOOL nonCloudWaking;
@property (nonatomic) BOOL nonWaking;
@property (strong, nonatomic) NSString *originalfromID;
@property (strong, nonatomic) NSString *peerResponseIdentifier;
@property (nonatomic) long long priority;
@property (strong, nonatomic) NSDictionary *protobuf;
@property (strong, nonatomic) NSString *queueOneIdentifier;
@property (strong, nonatomic) NSArray *requireAllRegistrationProperties;
@property (nonatomic) BOOL requireBluetooth;
@property (strong, nonatomic) NSArray *requireLackOfRegistrationProperties;
@property (nonatomic) BOOL requireLocalWiFi;
@property (strong, nonatomic) NSDictionary *resourceMetadata;
@property (strong, nonatomic) NSString *resourcePath;
@property (strong, nonatomic) NSString *sessionID;
@property (strong, nonatomic) NSString *subService;
@property (strong, nonatomic) NSString *subServiceAccountUUID;
@property (nonatomic) double timeout;
@property (nonatomic) BOOL useDictAsTopLevel;
@property (nonatomic) BOOL wantsAppAck;
@property (nonatomic) BOOL wantsDeliveryStatus;
@property (nonatomic) BOOL wantsResponse;

- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)dictionaryRepresentationIncludingTrace:(BOOL)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)objectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;

@end

