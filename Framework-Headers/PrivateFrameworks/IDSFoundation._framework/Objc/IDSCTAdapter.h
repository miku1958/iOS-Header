//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <IDSFoundation/CoreTelephonyClientCarrierBundleDelegate-Protocol.h>
#import <IDSFoundation/CoreTelephonyClientDelegate-Protocol.h>
#import <IDSFoundation/CoreTelephonyClientPNRDelegate-Protocol.h>
#import <IDSFoundation/CoreTelephonyClientSubscriberDelegate-Protocol.h>
#import <IDSFoundation/IMSystemMonitorListener-Protocol.h>

@class CoreTelephonyClient, IDSCTAdapterCache, IMSystemMonitor, NSHashTable, NSMutableDictionary, NSString;

@interface IDSCTAdapter : NSObject <CoreTelephonyClientDelegate, CoreTelephonyClientSubscriberDelegate, CoreTelephonyClientPNRDelegate, CoreTelephonyClientCarrierBundleDelegate, IMSystemMonitorListener>
{
    NSHashTable *_listeners;
    id _coreTelephonyClient;
    id _cache;
    NSMutableDictionary *_registrationStateByLabelID;
    struct os_unfair_lock_s _lock;
    IMSystemMonitor *_systemMonitor;
}

@property (strong, nonatomic) IDSCTAdapterCache *cache; // @synthesize cache=_cache;
@property (strong, nonatomic) CoreTelephonyClient *coreTelephonyClient; // @synthesize coreTelephonyClient=_coreTelephonyClient;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) BOOL dualSIMCapabilityEnabled;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) BOOL isAnySIMInserted;
@property (readonly, nonatomic) BOOL isAnySIMUsable;
@property (strong, nonatomic) NSHashTable *listeners; // @synthesize listeners=_listeners;
@property (nonatomic) struct os_unfair_lock_s lock; // @synthesize lock=_lock;
@property (strong, nonatomic) NSMutableDictionary *registrationStateByLabelID; // @synthesize registrationStateByLabelID=_registrationStateByLabelID;
@property (readonly) Class superclass;
@property (readonly, nonatomic) BOOL supportsIdentification;
@property (strong, nonatomic) IMSystemMonitor *systemMonitor; // @synthesize systemMonitor=_systemMonitor;

+ (BOOL)isPhoneNumber:(id)arg1 equivalentToExistingPhoneNumber:(id)arg2;
+ (id)sharedInstance;
- (void).cxx_destruct;
- (id)CTPNRForSIM:(id)arg1;
- (id)SIMForIdentifier:(id)arg1;
- (void)SIMStatusDidChange:(id)arg1 status:(id)arg2;
- (void)_checkRegistrationStateForContext:(id)arg1;
- (void)_iterateListenersForSelector:(SEL)arg1 block:(CDUnknownBlockType)arg2;
- (BOOL)_legacy_supportsSMSIdentification;
- (void)_locked_accessCache:(CDUnknownBlockType)arg1;
- (id)_unlocked_currentSIMsWithError:(id *)arg1;
- (void)_unlocked_iterateListenersForSelector:(SEL)arg1 block:(CDUnknownBlockType)arg2;
- (void)addListener:(id)arg1;
- (void)carrierBundleChange:(id)arg1;
- (id)carrierBundleValueFromAllSIMsForKey:(id)arg1 ofType:(Class)arg2 withFallback:(id)arg3;
- (id)carrierBundleValueFromSIM:(id)arg1 forKey:(id)arg2 ofType:(Class)arg3 withFallback:(id)arg4;
- (void)context:(id)arg1 pnrSupportChanged:(BOOL)arg2;
- (id)contextForSim:(id)arg1;
- (id)currentSIMsWithError:(id *)arg1;
- (void)dealloc;
- (void)dualSimCapabilityDidChange;
- (id)initWithCoreTelephonyClient:(id)arg1 systemMonitor:(id)arg2;
- (BOOL)isPNRNumber:(id)arg1 andPhoneBookNumber:(id)arg2 differentEnoughFromSIMIdentifier:(id)arg3 toReregisterWithNewNumber:(id *)arg4;
- (BOOL)isPhoneNumberEmergencyNumber:(id)arg1;
- (void)operatorBundleChange:(id)arg1;
- (void)phoneNumberChanged:(id)arg1;
- (void)pnrReadyStateNotification:(id)arg1 regState:(BOOL)arg2;
- (void)removeListener:(id)arg1;
- (void)subscriptionInfoDidChange;
- (void)systemApplicationDidBecomeActive;

@end

