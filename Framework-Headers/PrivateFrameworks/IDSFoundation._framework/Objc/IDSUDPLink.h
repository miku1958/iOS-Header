//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <IDSFoundation/IDSLink-Protocol.h>

@class IDSSockAddrWrapper, NSDictionary, NSString;
@protocol IDSLinkDelegate;

@interface IDSUDPLink : NSObject <IDSLink>
{
    int _socket;
    int _addressFamily;
    IDSSockAddrWrapper *_localAddress;
    IDSSockAddrWrapper *_destinationAddress;
    BOOL _hasFixedDestination;
    NSDictionary *_destinationAddressToDeviceIDMap;
    unsigned short _port;
    BOOL _wantsAWDL;
    BOOL _wantsWiFi;
    BOOL _wantsCellular;
    BOOL _useDefaultInterfaceOnly;
    BOOL _allowsLinkLocal;
    BOOL _skipTransportThread;
    BOOL _needToConnect;
    BOOL _hasTemporaryError;
    BOOL _isInvalidated;
    double _lastDestinationSent;
    double _lastDestinationReceived;
    CDStruct_3b17df7f *_incomingPacketBuffer;
    unsigned long long _state;
    unsigned long long _totalBytesSent;
    unsigned long long _totalPacketsSent;
    unsigned long long _totalBytesReceived;
    unsigned long long _totalPacketsReceived;
    unsigned long long _previousBytesSent;
    unsigned long long _previousPacketsSent;
    unsigned long long _previousBytesReceived;
    unsigned long long _previousPacketsReceived;
    double _previousReportTime;
    NSString *_cbuuid;
    NSString *_deviceUniqueID;
    id<IDSLinkDelegate> _delegate;
    id<IDSLinkDelegate> _alternateDelegate;
}

@property BOOL allowsLinkLocal; // @synthesize allowsLinkLocal=_allowsLinkLocal;
@property (weak) id<IDSLinkDelegate> alternateDelegate; // @synthesize alternateDelegate=_alternateDelegate;
@property (strong) NSString *cbuuid; // @synthesize cbuuid=_cbuuid;
@property (readonly, copy) NSString *debugDescription;
@property (weak) id<IDSLinkDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (strong) NSString *deviceUniqueID; // @synthesize deviceUniqueID=_deviceUniqueID;
@property (readonly) unsigned long long hash;
@property (readonly) unsigned long long headerOverhead;
@property (readonly) BOOL isInvalidated; // @synthesize isInvalidated=_isInvalidated;
@property (readonly) double lastDestinationReceived; // @synthesize lastDestinationReceived=_lastDestinationReceived;
@property double lastDestinationSent; // @synthesize lastDestinationSent=_lastDestinationSent;
@property (readonly, getter=linkTypeString) NSString *linkTypeString;
@property unsigned short port; // @synthesize port=_port;
@property BOOL skipTransportThread; // @synthesize skipTransportThread=_skipTransportThread;
@property (readonly) int socket; // @synthesize socket=_socket;
@property (readonly) unsigned long long state; // @synthesize state=_state;
@property (readonly) Class superclass;
@property BOOL useDefaultInterfaceOnly; // @synthesize useDefaultInterfaceOnly=_useDefaultInterfaceOnly;

- (void).cxx_destruct;
- (void)_processIncomingPacket;
- (unsigned long long)_sendBytes:(const void *)arg1 length:(unsigned long long)arg2;
- (unsigned long long)_sendBytes:(const void *)arg1 length:(unsigned long long)arg2 destinationAddress:(const struct sockaddr *)arg3;
- (unsigned long long)_sendBytes:(const void *)arg1 length:(unsigned long long)arg2 localInterfaceIndex:(int)arg3 localAddress:(const struct sockaddr *)arg4 destinationAddress:(const struct sockaddr *)arg5 trafficClass:(unsigned short)arg6;
- (id)copyCurrentNetworkInterfaces;
- (id)copyLinkStatsDict;
- (void)dealloc;
- (id)generateLinkReport:(double)arg1 isCurrentLink:(BOOL)arg2;
- (id)initWithDeviceUniqueID:(id)arg1 cbuuid:(id)arg2;
- (void)invalidate;
- (id)newSocketWithIPVersion:(unsigned long long)arg1 wantsAWDL:(BOOL)arg2 wantsWiFi:(BOOL)arg3 wantsCellular:(BOOL)arg4;
- (id)newSocketWithIPVersion:(unsigned long long)arg1 wantsAWDL:(BOOL)arg2 wantsWiFi:(BOOL)arg3 wantsCellular:(BOOL)arg4 clientUUID:(unsigned char [16])arg5;
- (void)reconnectWithLocalAddress:(id)arg1;
- (void)removeSocket;
- (unsigned long long)sendPacketBuffer:(CDStruct_3b17df7f *)arg1 destination:(id)arg2 toDeviceID:(id)arg3;
- (unsigned long long)sendPacketBuffer:(CDStruct_3b17df7f *)arg1 sourceInterface:(id)arg2 destination:(id)arg3 toDeviceID:(id)arg4;
- (unsigned long long)sendPacketBuffer:(CDStruct_3b17df7f *)arg1 toDeviceUniqueID:(id)arg2 cbuuid:(id)arg3;
- (BOOL)setDestinationAddress:(id)arg1 isFixedDestination:(BOOL)arg2 fromAddress:(id)arg3;
- (BOOL)setDestinationAddressToDeviceIDMap:(id)arg1;

@end

