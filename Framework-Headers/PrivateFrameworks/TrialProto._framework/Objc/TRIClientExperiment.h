//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <TrialProto/TRIPBMessage.h>

@class NSString, TRIAssignment, TRIPBTimestamp;

@interface TRIClientExperiment : TRIPBMessage
{
}

@property (strong, nonatomic) TRIAssignment *assignment; // @dynamic assignment;
@property (copy, nonatomic) NSString *assignmentEndpoint; // @dynamic assignmentEndpoint;
@property (nonatomic) long long delaySeconds; // @dynamic delaySeconds;
@property (nonatomic) unsigned int deploymentId; // @dynamic deploymentId;
@property (strong, nonatomic) TRIPBTimestamp *endDate; // @dynamic endDate;
@property (copy, nonatomic) NSString *experimentId; // @dynamic experimentId;
@property (nonatomic) BOOL hasAssignment; // @dynamic hasAssignment;
@property (nonatomic) BOOL hasAssignmentEndpoint; // @dynamic hasAssignmentEndpoint;
@property (nonatomic) BOOL hasDelaySeconds; // @dynamic hasDelaySeconds;
@property (nonatomic) BOOL hasDeploymentId; // @dynamic hasDeploymentId;
@property (nonatomic) BOOL hasEndDate; // @dynamic hasEndDate;
@property (nonatomic) BOOL hasExperimentId; // @dynamic hasExperimentId;
@property (nonatomic) BOOL hasMaxFailures; // @dynamic hasMaxFailures;
@property (nonatomic) BOOL hasPriority; // @dynamic hasPriority;
@property (nonatomic) BOOL hasProjectId; // @dynamic hasProjectId;
@property (nonatomic) BOOL hasProjectName; // @dynamic hasProjectName;
@property (nonatomic) BOOL hasSeed; // @dynamic hasSeed;
@property (nonatomic) BOOL hasStartDate; // @dynamic hasStartDate;
@property (nonatomic) BOOL hasType; // @dynamic hasType;
@property (nonatomic) unsigned int maxFailures; // @dynamic maxFailures;
@property (nonatomic) int priority; // @dynamic priority;
@property (nonatomic) int projectId; // @dynamic projectId;
@property (copy, nonatomic) NSString *projectName; // @dynamic projectName;
@property (nonatomic) unsigned int seed; // @dynamic seed;
@property (strong, nonatomic) TRIPBTimestamp *startDate; // @dynamic startDate;
@property (nonatomic) int type; // @dynamic type;

+ (id)descriptor;

@end

