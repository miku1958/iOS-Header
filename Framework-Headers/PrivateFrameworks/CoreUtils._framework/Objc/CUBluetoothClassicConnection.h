//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <CoreUtils/CUReadWriteRequestable-Protocol.h>

@class CBL2CAPChannel, CUReadRequest, CUWriteRequest, NSMutableArray, NSString;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface CUBluetoothClassicConnection : NSObject <CUReadWriteRequestable>
{
    CDUnknownBlockType _activateCompletion;
    BOOL _connected;
    BOOL _invalidateCalled;
    BOOL _invalidateDone;
    NSObject<OS_dispatch_source> *_readSource;
    unsigned char _readSuspended;
    CUReadRequest *_readRequestCurrent;
    NSMutableArray *_readRequests;
    int _socketFD;
    int _state;
    NSObject<OS_dispatch_source> *_writeSource;
    unsigned char _writeSuspended;
    CUWriteRequest *_writeRequestCurrent;
    NSMutableArray *_writeRequests;
    struct LogCategory *_ucat;
    NSString *_destinationPeer;
    NSString *_destinationService;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    CDUnknownBlockType _errorHandler;
    CDUnknownBlockType _invalidationHandler;
    NSString *_label;
    CBL2CAPChannel *_l2capChannel;
    CDUnknownBlockType _serverInvalidationHandler;
}

@property (copy, nonatomic) NSString *destinationPeer; // @synthesize destinationPeer=_destinationPeer;
@property (copy, nonatomic) NSString *destinationService; // @synthesize destinationService=_destinationService;
@property (strong, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
@property (copy, nonatomic) CDUnknownBlockType errorHandler; // @synthesize errorHandler=_errorHandler;
@property (copy, nonatomic) CDUnknownBlockType invalidationHandler; // @synthesize invalidationHandler=_invalidationHandler;
@property (strong, nonatomic) CBL2CAPChannel *l2capChannel; // @synthesize l2capChannel=_l2capChannel;
@property (copy, nonatomic) NSString *label; // @synthesize label=_label;
@property (copy, nonatomic) CDUnknownBlockType serverInvalidationHandler; // @synthesize serverInvalidationHandler=_serverInvalidationHandler;

- (void).cxx_destruct;
- (void)_abortReadsWithError:(id)arg1;
- (void)_abortWritesWithError:(id)arg1;
- (void)_completeReadRequest:(id)arg1 error:(id)arg2;
- (void)_completeWriteRequest:(id)arg1 error:(id)arg2;
- (void)_invalidate;
- (void)_invalidated;
- (void)_prepareReadRequest:(id)arg1;
- (BOOL)_prepareWriteRequest:(id)arg1 error:(id *)arg2;
- (BOOL)_processReadStatus;
- (void)_processReads:(BOOL)arg1;
- (void)_processWrites;
- (void)_reportError:(id)arg1;
- (void)_run;
- (BOOL)_runConnectStart;
- (BOOL)_runOpenChannelStart;
- (BOOL)_runSetupChannel;
- (BOOL)_setupIOAndReturnError:(id *)arg1;
- (BOOL)_startConnectingAndReturnError:(id *)arg1;
- (BOOL)activateDirectAndReturnError:(id *)arg1;
- (void)activateWithCompletion:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)init;
- (void)invalidate;
- (void)readWithRequest:(id)arg1;
- (void)writeEndOfDataWithCompletion:(CDUnknownBlockType)arg1;
- (void)writeWithRequest:(id)arg1;

@end

