//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <CoreUtils/CUActivatable-Protocol.h>
#import <CoreUtils/CUXPCCodable-Protocol.h>

@class AVAudioSession, CUHomeKitManager, NSArray, NSMutableDictionary, NSMutableSet, NSString, NSURL, RPCompanionLinkClient, RPCompanionLinkDevice;
@protocol OS_dispatch_queue, OS_dispatch_source, OS_os_transaction;

@interface CULiveAction : NSObject <CUXPCCodable, CUActivatable>
{
    BOOL _activateCalled;
    CDUnknownBlockType _activateCompletion;
    AVAudioSession *_audioSession;
    BOOL _clinkActivated;
    RPCompanionLinkClient *_clinkClient;
    RPCompanionLinkDevice *_clinkLocalDevice;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    NSArray *_destinationDevices;
    CUHomeKitManager *_homeKitManager;
    NSString *_homeKitSelfID;
    NSObject<OS_dispatch_source> *_homeKitTimer;
    BOOL _invalidateCalled;
    BOOL _invalidateDone;
    BOOL _peersActivated;
    BOOL _peersSetupDone;
    BOOL _peersPerformDone;
    NSMutableSet *_peerSessionSet;
    BOOL _performLocally;
    BOOL _prefStereoSpeak;
    NSMutableDictionary *_request;
    int _sessionState;
    BOOL _sentTimingInfo;
    NSObject<OS_os_transaction> *_transaction;
    BOOL _xpcDone;
    BOOL _direct;
    int _alertType;
    CDUnknownBlockType _invalidationHandler;
    NSArray *_destinationIDs;
    NSString *_originatingHomeKitAccessoryID;
    NSURL *_soundFileURL;
    NSString *_speakText;
}

@property (nonatomic) int alertType; // @synthesize alertType=_alertType;
@property (copy, nonatomic) NSArray *destinationIDs; // @synthesize destinationIDs=_destinationIDs;
@property (nonatomic) BOOL direct; // @synthesize direct=_direct;
@property (strong, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
@property (copy, nonatomic) CDUnknownBlockType invalidationHandler; // @synthesize invalidationHandler=_invalidationHandler;
@property (copy, nonatomic) NSString *originatingHomeKitAccessoryID; // @synthesize originatingHomeKitAccessoryID=_originatingHomeKitAccessoryID;
@property (copy, nonatomic) NSURL *soundFileURL; // @synthesize soundFileURL=_soundFileURL;
@property (copy, nonatomic) NSString *speakText; // @synthesize speakText=_speakText;

- (void).cxx_destruct;
- (id)_findStereoCounterpart:(id)arg1;
- (void)_invalidate:(BOOL)arg1;
- (void)_invalidated;
- (void)_reportError:(id)arg1 where:(const char *)arg2;
- (void)_run;
- (void)_runCLinkActivateCompleted;
- (void)_runCLinkActivateStart;
- (void)_runCLinkPeersActivateStart;
- (void)_runCLinkPeersPerformStart;
- (void)_runCLinkPeersSetupStart;
- (void)_runFinish;
- (void)_runHomeKitStart;
- (BOOL)_runPrepareRequest;
- (void)_runXPCStart;
- (BOOL)_shouldPerformLocally;
- (void)activateWithCompletion:(CDUnknownBlockType)arg1;
- (void)encodeWithXPCObject:(id)arg1;
- (id)init;
- (id)initWithXPCObject:(id)arg1 error:(id *)arg2;
- (void)invalidate;

@end

