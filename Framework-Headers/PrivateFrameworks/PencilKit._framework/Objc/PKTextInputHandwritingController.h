//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <PencilKit/PKTextInputCanvasControllerChangeObserver-Protocol.h>
#import <PencilKit/PKTextInputDebugStateReporting-Protocol.h>
#import <PencilKit/PKTextInputHandwritingShotDelegate-Protocol.h>
#import <PencilKit/PKTextInputResultCommandDelegate-Protocol.h>

@class NSMutableArray, NSString, NSUUID, PKDrawing, PKTextInputCanvasController, PKTextInputCursorController, PKTextInputDebugLogController, PKTextInputElementsController, PKTextInputFeedbackController, PKTextInputHandwritingShot, PKTextInputRecognitionManager, PKTextInputReserveSpaceController, PKTextInputResultCommand, PKTextInputTargetState, PKTextInputWritingSession;
@protocol PKTextInputHandwritingControllerDelegate;

@interface PKTextInputHandwritingController : NSObject <PKTextInputHandwritingShotDelegate, PKTextInputResultCommandDelegate, PKTextInputCanvasControllerChangeObserver, PKTextInputDebugStateReporting>
{
    id<PKTextInputHandwritingControllerDelegate> _delegate;
    PKTextInputCanvasController *_canvasController;
    PKTextInputElementsController *_elementsController;
    PKTextInputFeedbackController *_feedbackController;
    PKTextInputReserveSpaceController *_reserveSpaceController;
    PKTextInputDebugLogController *_debugLogController;
    PKTextInputCursorController *_cursorController;
    double _strokeAlphaOverride;
    PKTextInputRecognitionManager *__recognitionManager;
    PKTextInputWritingSession *__writingSession;
    PKTextInputHandwritingShot *__activeHandwritingShot;
    PKTextInputHandwritingShot *__possibleHandwritingShot;
    PKTextInputResultCommand *__activeResultCommand;
    NSMutableArray *__resultCommandsQueue;
    double __lastInProgressStrokeUpdateTime;
    NSUUID *__lastInProgressStrokeUUID;
    PKDrawing *__lastKnownDrawing;
    PKTextInputTargetState *__activeInputTargetState;
    double __floatingBackgroundLastUpdateTime;
}

@property (strong, nonatomic, setter=_setActiveHandwritingShot:) PKTextInputHandwritingShot *_activeHandwritingShot; // @synthesize _activeHandwritingShot=__activeHandwritingShot;
@property (strong, nonatomic, setter=_setActiveInputTargetState:) PKTextInputTargetState *_activeInputTargetState; // @synthesize _activeInputTargetState=__activeInputTargetState;
@property (strong, nonatomic, setter=_setActiveResultCommand:) PKTextInputResultCommand *_activeResultCommand; // @synthesize _activeResultCommand=__activeResultCommand;
@property (nonatomic) double _floatingBackgroundLastUpdateTime; // @synthesize _floatingBackgroundLastUpdateTime=__floatingBackgroundLastUpdateTime;
@property (copy, nonatomic) NSUUID *_lastInProgressStrokeUUID; // @synthesize _lastInProgressStrokeUUID=__lastInProgressStrokeUUID;
@property (nonatomic) double _lastInProgressStrokeUpdateTime; // @synthesize _lastInProgressStrokeUpdateTime=__lastInProgressStrokeUpdateTime;
@property (copy, nonatomic, setter=_setLastKnownDrawing:) PKDrawing *_lastKnownDrawing; // @synthesize _lastKnownDrawing=__lastKnownDrawing;
@property (strong, nonatomic, setter=_setPossibleHandwritingShot:) PKTextInputHandwritingShot *_possibleHandwritingShot; // @synthesize _possibleHandwritingShot=__possibleHandwritingShot;
@property (strong, nonatomic) PKTextInputRecognitionManager *_recognitionManager; // @synthesize _recognitionManager=__recognitionManager;
@property (readonly, nonatomic) NSMutableArray *_resultCommandsQueue; // @synthesize _resultCommandsQueue=__resultCommandsQueue;
@property (strong, nonatomic, setter=_setWritingSession:) PKTextInputWritingSession *_writingSession; // @synthesize _writingSession=__writingSession;
@property (readonly, nonatomic) PKTextInputCanvasController *canvasController; // @synthesize canvasController=_canvasController;
@property (readonly, nonatomic) PKTextInputCursorController *cursorController; // @synthesize cursorController=_cursorController;
@property (readonly, nonatomic) PKTextInputTargetState *debugActiveInputTargetState;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) PKTextInputDebugLogController *debugLogController; // @synthesize debugLogController=_debugLogController;
@property (readonly, nonatomic) PKTextInputRecognitionManager *debugRecognitionManager;
@property (weak, nonatomic) id<PKTextInputHandwritingControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) PKTextInputElementsController *elementsController; // @synthesize elementsController=_elementsController;
@property (readonly, nonatomic) PKTextInputFeedbackController *feedbackController; // @synthesize feedbackController=_feedbackController;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) PKTextInputReserveSpaceController *reserveSpaceController; // @synthesize reserveSpaceController=_reserveSpaceController;
@property (readonly, nonatomic) double strokeAlphaOverride; // @synthesize strokeAlphaOverride=_strokeAlphaOverride;
@property (readonly) Class superclass;
@property (readonly, nonatomic) long long writingState;

+ (BOOL)_isCorrectionResultGesture:(id)arg1;
- (void).cxx_destruct;
- (void)_cancelInProgressStrokeFromHandwritingShots;
- (void)_cancelPendingResultCommand;
- (double)_continuousRecognitionInterval;
- (void)_createPossibleHandwritingShotIfNeeded;
- (void)_evaluateAndProcessResultCommandsQueue;
- (void)_handleActiveHandwritingShotRecognitionFinished;
- (void)_handleResultCommandFinished:(id)arg1;
- (long long)_immediateCommitTypeForQueryItem:(id)arg1 handwritingShot:(id)arg2;
- (void)_notifyDelegateOfResultCommandState;
- (id)_pendingResultCommand;
- (void)_processPossibleShotIfReady;
- (id)_resultCommandToProcessQueryItem:(id)arg1 handwritingShot:(id)arg2;
- (void)_scheduleCommitForResultCommandIfNeeded:(id)arg1;
- (void)_updateFloatingBackground;
- (void)_updateRecognitionManager;
- (void)_updateStrokeAlphaOverride;
- (void)_updateWritingSession;
- (BOOL)_wantsFloatingBackground;
- (void)canvasController:(id)arg1 drawingDidChange:(id)arg2;
- (void)canvasControllerDidBeginDrawing:(id)arg1;
- (void)canvasControllerDidCancelStroke:(id)arg1 strokeAcceptanceState:(long long)arg2;
- (void)canvasControllerDidEndDrawing:(id)arg1;
- (void)canvasControllerEndedStroke:(id)arg1;
- (void)canvasControllerInProgressStrokeDidChange:(id)arg1;
- (void)cleanUpFromCancelledReplay;
- (struct _NSRange)handwritingShot:(id)arg1 activePreviewRangeForElementRecognitionIdentifier:(id)arg2 queryItemStableIdentifier:(id)arg3;
- (BOOL)handwritingShot:(id)arg1 hasCommittedResultsInSessionToElementRecognitionIdentifier:(id)arg2;
- (struct _NSRange)handwritingShot:(id)arg1 inProgressGestureInitialSelectedRangeForElementRecognitionIdentifier:(id)arg2;
- (long long)handwritingShot:(id)arg1 lastCharacterLevelPositionForElementRecognitionIdentifier:(id)arg2;
- (id)handwritingShot:(id)arg1 preferredTargetElementForQueryItemStableIdentifier:(id)arg2 simultaneousItemStableIdentifiers:(id)arg3 proposedTargetElement:(id)arg4;
- (BOOL)handwritingShot:(id)arg1 shouldSuppressGesturesForStrokesBounds:(struct CGRect)arg2 coordinateSpace:(id)arg3;
- (void)handwritingShot:(id)arg1 willFocusAndLoadDataForTargetElement:(id)arg2;
- (void)handwritingShotDidChangeState:(id)arg1;
- (void)handwritingShotDidOverrideStrongCursor:(id)arg1;
- (id)handwritingShotStrokeIdentifiersToExcludeFromRecognition:(id)arg1;
- (id)initWithCanvasController:(id)arg1 elementsController:(id)arg2 feedbackController:(id)arg3 reserveSpaceController:(id)arg4 debugLogController:(id)arg5 cursorController:(id)arg6;
- (void)reportDebugStateDescription:(CDUnknownBlockType)arg1;
- (void)reserveSpaceControllerIsActiveChanged;
- (void)reserveSpaceControllerWillFocusElement:(id)arg1;
- (id)resultCommandCanvasController:(id)arg1;
- (id)resultCommandCursorController:(id)arg1;
- (id)resultCommandFeedbackController:(id)arg1;
- (void)resultCommandStateDidChange:(id)arg1;
- (id)resultCommandSupportedElementDelegate:(id)arg1;

@end

