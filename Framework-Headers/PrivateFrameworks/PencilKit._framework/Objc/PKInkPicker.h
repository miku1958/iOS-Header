//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIControl.h>

#import <PencilKit/UIScrollViewDelegate-Protocol.h>

@class CALayer, NSArray, NSMutableDictionary, NSString, PKColorInfiniteScrollView, PKInk, PKInternalDrawingRulerView, PKPageIndicatorView, UIButton, UIColor, UIImage, UIView;

@interface PKInkPicker : UIControl <UIScrollViewDelegate>
{
    BOOL _wantsObjectErase;
    BOOL _wantsThickerInks;
    BOOL _showColors;
    BOOL _rulerSelected;
    BOOL _dockHidden;
    unsigned int _state;
    UIView *_toolsView;
    UIView *_dockView;
    UIView *_aboveDockView;
    CALayer *_navigationBarLayer;
    NSArray *_colors;
    NSArray *_toolButtons;
    UIButton *_eraseButton;
    UIButton *_collapsedColorButton;
    NSArray *_colorButtons;
    PKColorInfiniteScrollView *_colorScrollView;
    PKPageIndicatorView *_pageIndicatorView;
    NSMutableDictionary *_colorButtonImages;
    NSMutableDictionary *_colorSelectedButtonImages;
    NSMutableDictionary *_toolDockMaskImages;
    UIImage *_selectedToolImage;
    PKInternalDrawingRulerView *_drawingView;
}

@property (strong, nonatomic) UIView *aboveDockView; // @synthesize aboveDockView=_aboveDockView;
@property (strong, nonatomic) UIButton *collapsedColorButton; // @synthesize collapsedColorButton=_collapsedColorButton;
@property (strong, nonatomic) NSMutableDictionary *colorButtonImages; // @synthesize colorButtonImages=_colorButtonImages;
@property (strong, nonatomic) NSArray *colorButtons; // @synthesize colorButtons=_colorButtons;
@property (strong, nonatomic) PKColorInfiniteScrollView *colorScrollView; // @synthesize colorScrollView=_colorScrollView;
@property (nonatomic) BOOL colorScrollViewEnabled;
@property (strong, nonatomic) NSMutableDictionary *colorSelectedButtonImages; // @synthesize colorSelectedButtonImages=_colorSelectedButtonImages;
@property (strong, nonatomic) NSArray *colors; // @synthesize colors=_colors;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) BOOL dockHasBorder;
@property (nonatomic) BOOL dockHidden; // @synthesize dockHidden=_dockHidden;
@property (strong, nonatomic) UIView *dockView; // @synthesize dockView=_dockView;
@property (weak, nonatomic) PKInternalDrawingRulerView *drawingView; // @synthesize drawingView=_drawingView;
@property (strong, nonatomic) UIButton *eraseButton; // @synthesize eraseButton=_eraseButton;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) struct CGSize idealSize;
@property (readonly, nonatomic) BOOL isCollapsed;
@property (strong, nonatomic) CALayer *navigationBarLayer; // @synthesize navigationBarLayer=_navigationBarLayer;
@property (strong, nonatomic) PKPageIndicatorView *pageIndicatorView; // @synthesize pageIndicatorView=_pageIndicatorView;
@property (nonatomic) BOOL rulerSelected; // @synthesize rulerSelected=_rulerSelected;
@property (readonly, nonatomic) UIColor *selectedColor;
@property (copy, nonatomic) PKInk *selectedInk;
@property (strong, nonatomic) UIImage *selectedToolImage; // @synthesize selectedToolImage=_selectedToolImage;
@property (readonly, nonatomic) BOOL shouldUseLargeTools;
@property (nonatomic) BOOL showColors; // @synthesize showColors=_showColors;
@property (nonatomic) unsigned int state; // @synthesize state=_state;
@property (readonly) Class superclass;
@property (strong, nonatomic) NSArray *toolButtons; // @synthesize toolButtons=_toolButtons;
@property (strong, nonatomic) NSMutableDictionary *toolDockMaskImages; // @synthesize toolDockMaskImages=_toolDockMaskImages;
@property (strong, nonatomic) UIView *toolsView; // @synthesize toolsView=_toolsView;
@property (nonatomic) BOOL wantsObjectErase; // @synthesize wantsObjectErase=_wantsObjectErase;
@property (nonatomic) BOOL wantsThickerInks; // @synthesize wantsThickerInks=_wantsThickerInks;

+ (unsigned int)_stateForWidth:(double)arg1;
+ (id)imageCache;
- (void).cxx_destruct;
- (BOOL)_accessibilityOnlyComparesByXAxis;
- (BOOL)_accessibilityServesAsContainingParentForOrdering;
- (unsigned long long)_controlEventsForActionTriggered;
- (id)accessibilityLabel;
- (BOOL)accessibilityScroll:(long long)arg1;
- (unsigned long long)accessibilityTraits;
- (double)allToolsWidth;
- (void)animateIn;
- (void)animateOut;
- (void)announceSelectedToolForAccessibility:(unsigned int)arg1 afterDelay:(double)arg2;
- (id)buttonImageForColor:(id)arg1 selected:(BOOL)arg2;
- (void)changeColor:(id)arg1;
- (void)changeTool:(id)arg1;
- (void)changeToolType:(unsigned int)arg1;
- (double)collapsedColorYOrigin;
- (id)colorForIndex:(unsigned long long)arg1;
- (unsigned long long)colorIndexClosestToColor:(id)arg1;
- (id)dockColor;
- (void)erase:(id)arg1;
- (void)fadeColorButtons;
- (void)hideAllColors;
- (id)imageNamed:(id)arg1 small:(BOOL)arg2;
- (id)init;
- (BOOL)navigationBackgroundHidden;
- (double)paletteSpacing;
- (double)paletteTotalWidth;
- (void)positionToolsOffscreen;
- (unsigned int)previousTool;
- (void)scrollViewDidScroll:(id)arg1;
- (unsigned long long)selectedColorIndex;
- (unsigned int)selectedTool;
- (void)setDockHidden:(BOOL)arg1 animationDuration:(double)arg2;
- (void)setFrame:(struct CGRect)arg1;
- (void)setNavigationBackgroundHidden:(BOOL)arg1;
- (void)setPreviousTool:(unsigned int)arg1;
- (void)setRulerSelected:(BOOL)arg1 animated:(BOOL)arg2;
- (void)setSelectedColorIndex:(unsigned long long)arg1;
- (void)setSelectedTool:(unsigned int)arg1;
- (void)setupColors;
- (void)setupDock;
- (void)setupTools;
- (void)showAllColors:(id)arg1;
- (void)shrinkColorButtons;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (unsigned long long)swatchFromIndex:(unsigned long long)arg1;
- (double)swatchHeight;
- (double)swatchTotalWidth;
- (double)swatchWidth;
- (void)toggleRuler:(id)arg1;
- (id)toolDockMaskImage:(unsigned long long)arg1;
- (double)toolHeight;
- (id)toolImage:(unsigned long long)arg1;
- (double)toolNotSelectedYOrigin;
- (void)toolPressed:(id)arg1;
- (double)toolSelectedYOrigin;
- (double)toolSpacing;
- (double)toolToSwatchSpacing;
- (void)toolUnpressed:(id)arg1;
- (void)updateColorButtons;
- (void)updateColorScrollView;
- (void)updateRulerButtonAccessibilityLabel;
- (void)updateToolButtons:(CDUnknownBlockType)arg1;
- (BOOL)useLargeColorsForState:(unsigned int)arg1;

@end

