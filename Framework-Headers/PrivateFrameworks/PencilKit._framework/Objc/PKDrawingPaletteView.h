//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <PencilKit/PKPaletteView.h>

#import <PencilKit/PKDrawingPaletteViewStateSubject-Protocol.h>
#import <PencilKit/PKPaletteAdditionalOptionsViewDelegate-Protocol.h>
#import <PencilKit/PKPaletteColorPickerViewDelegate-Protocol.h>
#import <PencilKit/PKPaletteContentViewInputAssistantDelegate-Protocol.h>
#import <PencilKit/PKPaletteFloatingKeyboardControllerDelegate-Protocol.h>
#import <PencilKit/PKPalettePopoverUpdating-Protocol.h>
#import <PencilKit/PKPaletteToolPickerViewDelegate-Protocol.h>
#import <PencilKit/PKPaletteToolPreviewDelegate-Protocol.h>
#import <PencilKit/PKPaletteUndoRedoViewDelegate-Protocol.h>
#import <PencilKit/PKPaletteViewStateSubject-Protocol.h>
#import <PencilKit/PKTextInputWindowFirstResponderControllerDelegate-Protocol.h>

@class MTMaterialView, NSArray, NSLayoutConstraint, NSString, NSUndoManager, PKInk, PKPaletteContentView, PKPaletteFloatingKeyboardController, PKPaletteInputAssistantButtonProvider, PKPaletteTapToRadarCommand, PKTextInputWindowFirstResponder, PKTextInputWindowFirstResponderController, UIPencilInteraction, UIView, UIWindowScene;
@protocol PKPaletteTool, PKPaletteViewAnnotationDelegate;

@interface PKDrawingPaletteView : PKPaletteView <PKDrawingPaletteViewStateSubject, PKPaletteUndoRedoViewDelegate, PKPaletteToolPickerViewDelegate, PKPaletteColorPickerViewDelegate, PKPaletteAdditionalOptionsViewDelegate, PKPaletteToolPreviewDelegate, PKPalettePopoverUpdating, PKTextInputWindowFirstResponderControllerDelegate, PKPaletteFloatingKeyboardControllerDelegate, PKPaletteContentViewInputAssistantDelegate, PKPaletteViewStateSubject>
{
    NSUndoManager *_undoManager;
    BOOL _fingerDrawsOptionEnabled;
    BOOL _showsHandwritingTool;
    BOOL _pencilInteractionEnabledWhenNotVisible;
    BOOL _isEditingOpacity;
    BOOL _isEditingStrokeSelection;
    BOOL _supportsOpacityEditing;
    BOOL _wantsClearBackgroundColorInCompactSize;
    long long _colorUserInterfaceStyle;
    NSString *_handwritingToolLocaleIdentifier;
    MTMaterialView *_backgroundView;
    PKPaletteContentView *_contentView;
    NSLayoutConstraint *_contentViewBottomConstraint;
    NSLayoutConstraint *_contentViewWidthConstraint;
    NSLayoutConstraint *_contentViewHeightConstraint;
    UIView *_bottomThinSeparator;
    PKTextInputWindowFirstResponderController *_firstResponderController;
    PKPaletteFloatingKeyboardController *_floatingKeyboardController;
    PKPaletteInputAssistantButtonProvider *_inputAssistantButtonProvider;
    UIPencilInteraction *_pencilInteraction;
    PKPaletteTapToRadarCommand *_tapToRadarCommand;
    id<PKPaletteViewAnnotationDelegate> _annotationDelegate;
    UIView *_opacityEditingView;
}

@property (weak, nonatomic) id<PKPaletteViewAnnotationDelegate> annotationDelegate; // @synthesize annotationDelegate=_annotationDelegate;
@property (readonly, nonatomic, getter=isAnnotationSupportEnabled) BOOL annotationSupportEnabled;
@property (readonly, nonatomic, getter=isAutoHideEnabled) BOOL autoHideEnabled;
@property (strong, nonatomic) MTMaterialView *backgroundView; // @synthesize backgroundView=_backgroundView;
@property (strong, nonatomic) UIView *bottomThinSeparator; // @synthesize bottomThinSeparator=_bottomThinSeparator;
@property (nonatomic) long long colorUserInterfaceStyle; // @synthesize colorUserInterfaceStyle=_colorUserInterfaceStyle;
@property (strong, nonatomic) PKPaletteContentView *contentView; // @synthesize contentView=_contentView;
@property (strong, nonatomic) NSLayoutConstraint *contentViewBottomConstraint; // @synthesize contentViewBottomConstraint=_contentViewBottomConstraint;
@property (strong, nonatomic) NSLayoutConstraint *contentViewHeightConstraint; // @synthesize contentViewHeightConstraint=_contentViewHeightConstraint;
@property (strong, nonatomic) NSLayoutConstraint *contentViewWidthConstraint; // @synthesize contentViewWidthConstraint=_contentViewWidthConstraint;
@property (nonatomic) long long contextEditingMode;
@property (readonly, nonatomic) UIView *contextualEditingView;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) BOOL enableKeyboardButtons;
@property (nonatomic, getter=isFingerDrawsOptionEnabled) BOOL fingerDrawsOptionEnabled; // @synthesize fingerDrawsOptionEnabled=_fingerDrawsOptionEnabled;
@property (strong, nonatomic) PKTextInputWindowFirstResponderController *firstResponderController; // @synthesize firstResponderController=_firstResponderController;
@property (strong, nonatomic) PKPaletteFloatingKeyboardController *floatingKeyboardController; // @synthesize floatingKeyboardController=_floatingKeyboardController;
@property (readonly, nonatomic) long long floatingKeyboardType;
@property (copy, nonatomic) NSString *handwritingToolLocaleIdentifier; // @synthesize handwritingToolLocaleIdentifier=_handwritingToolLocaleIdentifier;
@property (readonly, nonatomic, getter=isHandwritingToolSelected) BOOL handwritingToolSelected;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) PKPaletteInputAssistantButtonProvider *inputAssistantButtonProvider; // @synthesize inputAssistantButtonProvider=_inputAssistantButtonProvider;
@property (readonly, copy, nonatomic) NSArray *inputAssistantItems;
@property (nonatomic) BOOL isEditingOpacity; // @synthesize isEditingOpacity=_isEditingOpacity;
@property (nonatomic) BOOL isEditingStrokeSelection; // @synthesize isEditingStrokeSelection=_isEditingStrokeSelection;
@property (readonly, nonatomic) UIView *opacityEditingView; // @synthesize opacityEditingView=_opacityEditingView;
@property (readonly, nonatomic) double paletteScaleFactor;
@property (readonly, nonatomic) UIPencilInteraction *pencilInteraction; // @synthesize pencilInteraction=_pencilInteraction;
@property (nonatomic, getter=isPencilInteractionEnabledWhenNotVisible) BOOL pencilInteractionEnabledWhenNotVisible; // @synthesize pencilInteractionEnabledWhenNotVisible=_pencilInteractionEnabledWhenNotVisible;
@property (readonly, nonatomic) id<PKPaletteTool> selectedTool;
@property (strong, nonatomic) PKInk *selectedToolInk;
@property (nonatomic) BOOL showsHandwritingTool; // @synthesize showsHandwritingTool=_showsHandwritingTool;
@property (readonly) Class superclass;
@property (nonatomic) BOOL supportsOpacityEditing; // @synthesize supportsOpacityEditing=_supportsOpacityEditing;
@property (strong, nonatomic) PKPaletteTapToRadarCommand *tapToRadarCommand; // @synthesize tapToRadarCommand=_tapToRadarCommand;
@property (copy, nonatomic) NSArray *toolIdentifiers;
@property (copy, nonatomic) NSArray *toolProperties;
@property (readonly, nonatomic, getter=isVisible) BOOL visible;
@property (nonatomic) BOOL wantsClearBackgroundColorInCompactSize; // @synthesize wantsClearBackgroundColorInCompactSize=_wantsClearBackgroundColorInCompactSize;
@property (readonly, nonatomic) PKTextInputWindowFirstResponder *windowFirstResponder;
@property (readonly, nonatomic) UIWindowScene *windowScene;

- (void).cxx_destruct;
- (BOOL)_canHandlePencilInteraction;
- (BOOL)_canShowFingerDrawsOption;
- (void)_centerPaletteContainerSubviewToCurrentlySelectedToolForEdge:(unsigned long long)arg1 needsContainerViewLayout:(BOOL)arg2;
- (void)_changeWasDone:(id)arg1;
- (void)_changeWasRedone:(id)arg1;
- (void)_changeWasUndone:(id)arg1;
- (id)_clippingViewBackgroundColor;
- (void)_installPaletteContentViewInView:(id)arg1;
- (BOOL)_isPaletteConsideredMinimized;
- (BOOL)_isPaletteContentViewHidden;
- (void)_presentOrDismissFloatingKeyboard;
- (void)_releaseUndoManager;
- (id)_selectedToolViewInToolPicker;
- (void)_setSelectedColor:(id)arg1;
- (void)_setToolPickerViewSelectedToolColor:(id)arg1 ignoreColorOpacity:(BOOL)arg2;
- (BOOL)_shouldHandlePencilInteractionWhenNotVisible;
- (BOOL)_shouldShowFingerDrawsOption;
- (void)_updateColorPickerSelectedColor;
- (void)_updateHandwritingAssistantItems;
- (void)_updateHandwritingAssistantItemsFromResponder:(id)arg1;
- (void)_updateInputResponderControllerInputAssistantSupressionState;
- (void)_updateToolPreview;
- (void)_updateToolPreviewForEdge:(unsigned long long)arg1;
- (void)_updateUI;
- (void)_updateUIForAnnotationSupportIfNeeded;
- (void)_willDockPaletteToCorner:(unsigned long long)arg1;
- (void)_willDockPaletteToEdge:(unsigned long long)arg1 prepareForExpansion:(BOOL)arg2 isPaletteChangingOrientation:(BOOL)arg3;
- (void)additionalOptionsView:(id)arg1 didToggleAutoHideOption:(BOOL)arg2;
- (void)additionalOptionsViewDidPressKeyboardButton:(id)arg1;
- (void)additionalOptionsViewDidPressReturnKeyButton:(id)arg1;
- (void)additionalOptionsViewDidPressTapToRadarButton:(id)arg1;
- (void)additionalOptionsViewDidSelectPlusButton:(id)arg1;
- (id)borderColorForTraitCollection:(id)arg1;
- (double)borderWidthForTraitCollection:(id)arg1;
- (void)colorPickerDidChangeSelectedColor:(id)arg1 isFromExtendedColorPicker:(BOOL)arg2;
- (BOOL)colorPickerShouldDisplayColorSelection:(id)arg1;
- (double)compactPaletteHeight;
- (void)configureForDockedAtCorner;
- (void)configureForDockedAtEdge:(unsigned long long)arg1;
- (void)contentViewDidDismissInputAssistantView:(id)arg1;
- (void)contentViewDidSelectInputAssistantKeyboardItem:(id)arg1;
- (void)contentViewDidSelectInputAssistantReturnKeyItem:(id)arg1;
- (double)dampingRatioForThrowingFromPosition:(long long)arg1 toPosition:(long long)arg2 withVelocity:(struct CGPoint)arg3;
- (void)dealloc;
- (void)didChangePalettePosition;
- (void)didChangePaletteScaleFactor;
- (void)didEndAppearanceAnimation;
- (void)dismissPalettePopoverWithCompletion:(CDUnknownBlockType)arg1;
- (void)endOpacityEditing;
- (void)floatingKeyboardController:(id)arg1 didChangeKeyboardType:(long long)arg2;
- (void)floatingKeyboardControllerWillHide:(id)arg1;
- (void)floatingKeyboardControllerWillShow:(id)arg1;
- (void)hostView:(id)arg1 didDockPaletteToPosition:(long long)arg2;
- (void)hostView:(id)arg1 willDockPaletteToPosition:(long long)arg2 prepareForExpansion:(BOOL)arg3;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)layoutSubviews;
- (struct CGSize)paletteSizeForEdge:(unsigned long long)arg1;
- (unsigned long long)paletteViewType;
- (void)pencilInteractionDidTap:(id)arg1;
- (struct CGRect)plusButtonFrame;
- (id)responderForFloatingKeyboardController:(id)arg1;
- (double)responseForThrowingFromPosition:(long long)arg1 toPosition:(long long)arg2 withVelocity:(struct CGPoint)arg3;
- (void)safeAreaInsetsDidChange;
- (void)selectPenTool;
- (void)setDelegate:(id)arg1;
- (void)setSelectedAnnotationType:(long long)arg1;
- (void)setUndoManager:(id)arg1;
- (double)shadowOpacity;
- (double)shadowRadius;
- (BOOL)shouldAdjustShadowRadiusForMinimized;
- (void)startOpacityEditing;
- (void)toolPickerDidChangeSelectedTool:(id)arg1;
- (void)toolPickerDidToggleRulerTool:(id)arg1;
- (void)toolPickerViewDidChangeTraitCollectionSizeClass:(id)arg1;
- (void)toolPreviewDidChangeToolColor:(id)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (id)undoManager;
- (void)undoRedoViewDidTapRedo:(id)arg1;
- (void)undoRedoViewDidTapUndo:(id)arg1;
- (void)updateConstraints;
- (void)updatePopoverUI;
- (void)updateUndoRedo;
- (void)willStartAppearanceAnimation;
- (void)windowFirstResponderController:(id)arg1 didChangeFirstResponder:(id)arg2;

@end

