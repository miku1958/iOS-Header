//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <PencilKit/PKInternalDrawingLightView.h>

#import <PencilKit/PKControllerDelegate-Protocol.h>
#import <PencilKit/PKDrawingGestureTarget-Protocol.h>
#import <PencilKit/UIGestureRecognizerDelegate-Protocol.h>

@class CADisplayLink, NSString, NSTimer, PKController, PKDrawingGestureRecognizer, PKFreeTransformGestureRecognizer, PKInk, PKOpenGLESView, PKSelectionController, PKUndoSwipeGestureRecognizer, UIActivityIndicatorView, UIView;
@protocol PKInternalDrawingViewDelegate;

@interface PKInternalDrawingView : PKInternalDrawingLightView <PKControllerDelegate, PKDrawingGestureTarget, UIGestureRecognizerDelegate>
{
    UIView *_transitionBackgroundView;
    UIView *_transitionImageView;
    CADisplayLink *_displayLink;
    BOOL _shouldPause;
    struct CGAffineTransform _imageTransform;
    BOOL _didCancelSelection;
    BOOL _isSelecting;
    struct CGPoint _drawingBeganLocation;
    BOOL _isErasingObjects;
    struct CGPoint _oldEraseLocation;
    long long _undoGroupCount;
    BOOL _isDrawing;
    BOOL _disableWideGamut;
    BOOL _zooming;
    BOOL _allowLiveInteraction;
    BOOL _editable;
    BOOL _pinchingFromSmallestState;
    BOOL _pinchValid;
    BOOL _fullySetup;
    BOOL _claimedLiveDrawing;
    BOOL _layerFixedPixelSize;
    id<PKInternalDrawingViewDelegate> _delegate;
    PKInk *_ink;
    PKDrawingGestureRecognizer *_drawingGestureRecognizer;
    PKFreeTransformGestureRecognizer *_pinchGestureRecognizer;
    PKController *_drawingController;
    PKOpenGLESView *_glView;
    id _undoTarget;
    SEL _undoSelector;
    UIActivityIndicatorView *_activityView;
    double _minimumZoomScale;
    double _maximumZoomScale;
    double _drawingStartTimestamp;
    NSTimer *_imageTransformTimer;
    double _initialDrawingBoundsYOrigin;
    PKUndoSwipeGestureRecognizer *_undoGestureRecognizer;
    PKUndoSwipeGestureRecognizer *_redoGestureRecognizer;
    PKSelectionController *_selectionController;
    struct CGPoint _drawingStartPointInScreenSpace;
    struct CGAffineTransform _strokeTransform;
    struct CGAffineTransform _pinchStartAffineTransform;
}

@property (weak, nonatomic) UIActivityIndicatorView *activityView; // @synthesize activityView=_activityView;
@property (nonatomic) BOOL allowLiveInteraction; // @synthesize allowLiveInteraction=_allowLiveInteraction;
@property (nonatomic) BOOL claimedLiveDrawing; // @synthesize claimedLiveDrawing=_claimedLiveDrawing;
@property (nonatomic) BOOL contentHidden;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<PKInternalDrawingViewDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) BOOL didCancelSelection; // @synthesize didCancelSelection=_didCancelSelection;
@property (nonatomic) BOOL disableWideGamut; // @synthesize disableWideGamut=_disableWideGamut;
@property (readonly, nonatomic) PKController *drawingController; // @synthesize drawingController=_drawingController;
@property (strong, nonatomic) PKDrawingGestureRecognizer *drawingGestureRecognizer; // @synthesize drawingGestureRecognizer=_drawingGestureRecognizer;
@property (nonatomic) struct CGPoint drawingStartPointInScreenSpace; // @synthesize drawingStartPointInScreenSpace=_drawingStartPointInScreenSpace;
@property double drawingStartTimestamp; // @synthesize drawingStartTimestamp=_drawingStartTimestamp;
@property (nonatomic, getter=isEditable) BOOL editable; // @synthesize editable=_editable;
@property (nonatomic) BOOL fullySetup; // @synthesize fullySetup=_fullySetup;
@property (readonly, nonatomic) PKOpenGLESView *glView; // @synthesize glView=_glView;
@property (readonly) unsigned long long hash;
@property (nonatomic) struct CGAffineTransform imageTransform;
@property (strong, nonatomic) NSTimer *imageTransformTimer; // @synthesize imageTransformTimer=_imageTransformTimer;
@property (nonatomic) double initialDrawingBoundsYOrigin; // @synthesize initialDrawingBoundsYOrigin=_initialDrawingBoundsYOrigin;
@property (strong, nonatomic) PKInk *ink; // @synthesize ink=_ink;
@property (nonatomic) BOOL isDrawing; // @synthesize isDrawing=_isDrawing;
@property (readonly, nonatomic) BOOL isRendering;
@property (nonatomic) BOOL layerFixedPixelSize; // @synthesize layerFixedPixelSize=_layerFixedPixelSize;
@property (nonatomic) double maximumZoomScale; // @synthesize maximumZoomScale=_maximumZoomScale;
@property (nonatomic) double minimumZoomScale; // @synthesize minimumZoomScale=_minimumZoomScale;
@property (strong, nonatomic) PKFreeTransformGestureRecognizer *pinchGestureRecognizer; // @synthesize pinchGestureRecognizer=_pinchGestureRecognizer;
@property (nonatomic) struct CGAffineTransform pinchStartAffineTransform; // @synthesize pinchStartAffineTransform=_pinchStartAffineTransform;
@property (nonatomic) BOOL pinchValid; // @synthesize pinchValid=_pinchValid;
@property (nonatomic) BOOL pinchingFromSmallestState; // @synthesize pinchingFromSmallestState=_pinchingFromSmallestState;
@property (readonly, nonatomic) id pkaxOpenGLView;
@property (strong, nonatomic) PKUndoSwipeGestureRecognizer *redoGestureRecognizer; // @synthesize redoGestureRecognizer=_redoGestureRecognizer;
@property (readonly, weak, nonatomic) PKSelectionController *selectionController; // @synthesize selectionController=_selectionController;
@property (nonatomic) BOOL shouldPause; // @synthesize shouldPause=_shouldPause;
@property (nonatomic) struct CGAffineTransform strokeTransform; // @synthesize strokeTransform=_strokeTransform;
@property (readonly) Class superclass;
@property (strong, nonatomic) PKUndoSwipeGestureRecognizer *undoGestureRecognizer; // @synthesize undoGestureRecognizer=_undoGestureRecognizer;
@property (nonatomic) SEL undoSelector; // @synthesize undoSelector=_undoSelector;
@property (weak, nonatomic) id undoTarget; // @synthesize undoTarget=_undoTarget;
@property (nonatomic) BOOL zooming; // @synthesize zooming=_zooming;

+ (void)initialize;
+ (void)setupDefaults;
- (void).cxx_destruct;
- (void)_closeLassoForTouch:(id)arg1;
- (void)_drawingDisplay:(double)arg1;
- (void)_gestureRecognizerFailed:(id)arg1;
- (void)_rebuildOpenGLView;
- (void)_setDrawing:(id)arg1 tiles:(id)arg2 setupComplete:(CDUnknownBlockType)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)accessibilityElements;
- (BOOL)accessibilityElementsHidden;
- (id)accessibilityHint;
- (id)accessibilityLabel;
- (void)adjustedPixelSize:(struct CGSize *)arg1 drawingSize:(struct CGSize *)arg2;
- (struct CGPoint)applyTransformToTouchLocation:(struct CGPoint)arg1;
- (BOOL)canBecomeFirstResponder;
- (BOOL)canEraseAll;
- (BOOL)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (BOOL)canPerformUserAction;
- (BOOL)canRedo;
- (BOOL)canUndo;
- (void)cancelNonDrawingGestures;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (void)dealloc;
- (void)decrementUndoGroupCount;
- (void)delayCompletionBlockUntilPresentation:(CDUnknownBlockType)arg1;
- (void)delete:(id)arg1;
- (void)didMoveToWindow;
- (void)dismissEditMenuIfNecessary;
- (void)done;
- (void)drawStrokeWithPath:(struct CGPath *)arg1;
- (void)drawingBegan:(id)arg1;
- (void)drawingBeganForHIDPoint:(id)arg1;
- (void)drawingCancelled;
- (void)drawingChanged:(id)arg1;
- (void)drawingEnded:(id)arg1;
- (void)drawingEndedForHIDPoint:(id)arg1;
- (void)drawingEstimatedPropertiesUpdated:(id)arg1;
- (CDStruct_f17e9403)drawingInputPoint:(struct CGPoint)arg1 forHIDEvent:(id)arg2 predicted:(BOOL)arg3;
- (CDStruct_f17e9403)drawingInputPoint:(struct CGPoint)arg1 forTouch:(id)arg2 predicted:(BOOL)arg3;
- (void)drawingMoved:(id)arg1 withEvent:(id)arg2;
- (void)drawingMovedForHIDPoint:(id)arg1;
- (void)duplicate:(id)arg1;
- (BOOL)enableUserActionButton;
- (void)eraseAll;
- (void)eraseStrokesForPoint:(struct CGPoint)arg1;
- (void)eraseStrokesForPoint:(struct CGPoint)arg1 prevPoint:(struct CGPoint)arg2;
- (struct CGAffineTransform)fitTransform;
- (void)forceCancelDrawing;
- (void)forceEndDrawing;
- (BOOL)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;
- (BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (id)glLayer;
- (void)handleDrawingShouldPause:(BOOL)arg1;
- (void)incrementUndoGroupCount;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 editable:(BOOL)arg2 pixelSize:(struct CGSize)arg3 drawingScale:(double)arg4 layerFixedPixelSize:(BOOL)arg5 drawingController:(id)arg6 selectionController:(id)arg7;
- (BOOL)isAccessibilityElement;
- (double)layerContentScale;
- (double)offsetForCenteringRangeMin:(double)arg1 size:(double)arg2 inSize:(double)arg3;
- (void)paste:(id)arg1;
- (void)performUndo:(id)arg1;
- (void)performUndoModifyStrokesCommand:(id)arg1;
- (void)performUndoSelectionCommand:(id)arg1;
- (void)pinchGesture:(id)arg1;
- (struct CGAffineTransform)pinchTransform:(id)arg1 elasticity:(double)arg2;
- (void)postDrawingBeganAnnouncementFor:(id)arg1;
- (void)postDrawingEndedAnnouncementFor:(id)arg1;
- (void)registerUndoForStroke:(id)arg1;
- (void)resizeBackingBuffersForPixelSize:(struct CGSize)arg1 drawingScale:(double)arg2;
- (void)rotate:(id)arg1;
- (void)rotateIfNeeded;
- (void)selectionBegan:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setBackgroundImage:(struct CGImage *)arg1;
- (void)setDisplayLinkPaused:(BOOL)arg1;
- (void)setDrawing:(id)arg1;
- (void)setDrawing:(id)arg1 image:(id)arg2 imageDrawing:(id)arg3 completion:(CDUnknownBlockType)arg4 fullyRenderedCompletionBlock:(CDUnknownBlockType)arg5;
- (void)setFrame:(struct CGRect)arg1;
- (void)setImageTransform:(struct CGAffineTransform)arg1 animated:(BOOL)arg2;
- (void)setImageTransformFrom:(struct CGAffineTransform)arg1 toTransform:(struct CGAffineTransform)arg2 animated:(BOOL)arg3 duration:(double)arg4;
- (void)setIsDrawingForRecap:(BOOL)arg1;
- (void)setNeedsDrawingDisplay;
- (void)setOpaque:(BOOL)arg1;
- (void)setupDisplayLink;
- (void)setupFullScreenTransform;
- (void)setupFullScreenTransform:(struct CGAffineTransform)arg1 toViewOrientation:(struct CGAffineTransform)arg2 animated:(BOOL)arg3;
- (void)setupGestures;
- (void)setupOpenGLViewForWideGamut:(BOOL)arg1 withPixelSize:(struct CGSize)arg2;
- (void)setupOpenGLWithPixelSize:(struct CGSize)arg1 drawingSize:(struct CGSize)arg2;
- (BOOL)showEraseAllButton;
- (void)simulateHIDPoints:(id)arg1;
- (void)toggleEditMenuAtLocation:(struct CGPoint)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (struct CGPoint)translationOffsetForTransform:(struct CGAffineTransform)arg1;
- (void)updateImageTransform:(id)arg1;
- (void)updatePanEdgesForTransform:(struct CGAffineTransform)arg1;
- (void)updateZoomScaleCaps;

@end

