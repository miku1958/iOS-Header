//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSMutableArray, NSString, PKInkFeatheringDescriptor, PKInkParticleDescriptor, PKInkRenderingDescriptor, PKInkSmoothingDescriptor;

@interface PKInkBehavior : NSObject
{
    BOOL _timeDependent;
    BOOL _usesAzimuthOrAltitude;
    BOOL _showBrushIndicator;
    double _rulerOffsetScale;
    double _rulerOffsetConstant;
    BOOL _variableSnappedWidth;
    NSMutableArray *_cachedRadiusFunctions;
    NSMutableArray *_cachedOpacityFunctions;
    NSMutableArray *_cachedEdgeWidthFunctions;
    NSMutableArray *_cachedAspectRatioFunctions;
    unique_ptr_94812230 _weightFunction;
    vector_2b0a8222 _radiusOutput;
    vector_2b0a8222 _opacityOutput;
    vector_2b0a8222 _edgeWidthOutput;
    vector_2b0a8222 _aspectRatioOutput;
    vector_2b0a8222 _brushOpacityOutput;
    NSString *_variant;
    PKInkRenderingDescriptor *_renderingDescriptor;
    double _blendAlpha;
    double _targetMultiple;
    double _baseAlpha;
    double _baseRadiusStylus;
    double _baseRadiusTouchPad;
    double _baseRadiusTouchPhone;
    PKInkSmoothingDescriptor *_smoothingDescriptor;
    PKInkFeatheringDescriptor *_featheringDescriptor;
}

@property (nonatomic) double baseAlpha; // @synthesize baseAlpha=_baseAlpha;
@property (nonatomic) double baseRadiusStylus; // @synthesize baseRadiusStylus=_baseRadiusStylus;
@property (nonatomic) double baseRadiusTouchPad; // @synthesize baseRadiusTouchPad=_baseRadiusTouchPad;
@property (nonatomic) double baseRadiusTouchPhone; // @synthesize baseRadiusTouchPhone=_baseRadiusTouchPhone;
@property (nonatomic) double blendAlpha; // @synthesize blendAlpha=_blendAlpha;
@property (strong, nonatomic) PKInkFeatheringDescriptor *featheringDescriptor; // @synthesize featheringDescriptor=_featheringDescriptor;
@property (readonly, nonatomic) NSArray *inkFunctions;
@property (readonly, nonatomic) PKInkParticleDescriptor *particleDescriptor;
@property (readonly, nonatomic) PKInkRenderingDescriptor *renderingDescriptor; // @synthesize renderingDescriptor=_renderingDescriptor;
@property (strong, nonatomic) PKInkSmoothingDescriptor *smoothingDescriptor; // @synthesize smoothingDescriptor=_smoothingDescriptor;
@property (nonatomic) double targetMultiple; // @synthesize targetMultiple=_targetMultiple;
@property (readonly, nonatomic) NSString *variant; // @synthesize variant=_variant;

+ (id)arrayFromVector:(vector_b67dfe3a)arg1;
+ (id)inkFunctionForProperty:(unsigned long long)arg1 outputFunctions:(vector_2b0a8222 *)arg2 index:(unsigned long long)arg3;
+ (double)inkRadiusOverride;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)addNewInkFunction:(id)arg1;
- (double)alphaForStroke:(id)arg1;
- (double)baseRadiusForInputType:(long long)arg1;
- (double)brushOpacityForPoint:(CDStruct_f17e9403)arg1 context:(CDStruct_5237edf5 *)arg2;
- (id)description;
- (double)evaluateWeight:(double)arg1;
- (id)functionsForProperty:(unsigned long long)arg1;
- (BOOL)immutableVelocity;
- (id)initWithRenderingDescriptor:(id)arg1 variant:(id)arg2;
- (void)inkFunctionDidChange:(id)arg1;
- (id)inkFunctionsForProperty:(unsigned long long)arg1;
- (BOOL)isEraser;
- (BOOL)isTimeDependent;
- (struct _PKStrokePoint)outputForPoint:(CDStruct_f17e9403)arg1 context:(CDStruct_5237edf5 *)arg2;
- (struct PKOutputFunction)outputFunctionFromInkFunction:(id)arg1;
- (struct _PKStrokePoint)outputTimePoint:(struct _PKStrokePoint)arg1 atTime:(double)arg2 stillChanging:(BOOL *)arg3;
- (vector_2b0a8222 *)outputVectorForProperty:(unsigned long long)arg1;
- (double)particleSpacingForRadius:(double)arg1;
- (unsigned int)particleTexture;
- (id)particleTextureName;
- (void)removeInkFunction:(id)arg1;
- (double)rulerOffsetForBaseValues:(struct _PKStrokePoint)arg1 inputType:(long long)arg2 inputScale:(double)arg3;
- (void)setAspectRatioOutput:(vector_2b0a8222)arg1;
- (void)setBrushOpacityOutput:(vector_2b0a8222)arg1;
- (void)setEdgeWidthOutput:(vector_2b0a8222)arg1;
- (void)setOpacityOutput:(vector_2b0a8222)arg1;
- (void)setRadiusOutput:(vector_2b0a8222)arg1;
- (void)setRulerOffsetConstant:(double)arg1;
- (void)setRulerOffsetScale:(double)arg1;
- (void)setShowBrushIndicator:(BOOL)arg1;
- (void)setTimeDependent:(BOOL)arg1;
- (void)setUsesAzimuthOrAltitude:(BOOL)arg1;
- (void)setVariableSnappedWidth:(BOOL)arg1;
- (void)setWeightFunction:(unique_ptr_94812230)arg1;
- (id)setupParticleShader:(id)arg1 resourceHandler:(id)arg2;
- (id)shaderFrom:(id)arg1;
- (BOOL)showBrushIndicator;
- (double)solve:(vector_2b0a8222 *)arg1 forPoint:(CDStruct_f17e9403)arg2 context:(CDStruct_5237edf5 *)arg3 weight:(double)arg4;
- (double)solveForTime:(vector_2b0a8222 *)arg1 forTime:(double)arg2 stillChanging:(BOOL *)arg3;
- (BOOL)usesAzimuthOrAltitude;
- (BOOL)variableSnappedWidth;

@end

