//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <QuartzCore/CALayer.h>

#import <PencilKit/UIGestureRecognizerDelegate-Protocol.h>

@class CATextLayer, NSString, NSTimer, PKRulerController;

@interface PKRulerLayer : CALayer <UIGestureRecognizerDelegate>
{
    BOOL _isInlineResizing;
    BOOL _isExpandedInline;
    BOOL _isRulerDrawingMovingToEndOfRuler;
    BOOL _zooming;
    PKRulerController *_rulerController;
    double _rulerAlpha;
    CALayer *_rulerAngleMarker;
    NSTimer *_imageTransformTimer;
    double _initialDrawingBoundsYOrigin;
    CALayer *_rulerLayer;
    CALayer *_rulerAngleTick;
    CATextLayer *_rulerAngleText;
    CALayer *_rulerDistanceHUD;
    CATextLayer *_rulerDistanceText;
    double _currentTValueForSnappedDrawing;
    double _minTValueForSnappedDrawing;
    double _maxTValueForSnappedDrawing;
    double _originTValueForSnappedDrawing;
    double _rulerZoomStartCenterTValueOnScreen;
    double _rulerZoomStartScale;
    struct CGAffineTransform _previousRulerTransform;
    struct CGAffineTransform _rulerZoomStartTransform;
}

@property (nonatomic) double currentTValueForSnappedDrawing; // @synthesize currentTValueForSnappedDrawing=_currentTValueForSnappedDrawing;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) NSTimer *imageTransformTimer; // @synthesize imageTransformTimer=_imageTransformTimer;
@property (nonatomic) double initialDrawingBoundsYOrigin; // @synthesize initialDrawingBoundsYOrigin=_initialDrawingBoundsYOrigin;
@property (nonatomic) BOOL isExpandedInline; // @synthesize isExpandedInline=_isExpandedInline;
@property (nonatomic) BOOL isInlineResizing; // @synthesize isInlineResizing=_isInlineResizing;
@property (nonatomic) BOOL isRulerDrawingMovingToEndOfRuler; // @synthesize isRulerDrawingMovingToEndOfRuler=_isRulerDrawingMovingToEndOfRuler;
@property (nonatomic) double maxTValueForSnappedDrawing; // @synthesize maxTValueForSnappedDrawing=_maxTValueForSnappedDrawing;
@property (nonatomic) double minTValueForSnappedDrawing; // @synthesize minTValueForSnappedDrawing=_minTValueForSnappedDrawing;
@property (nonatomic) double originTValueForSnappedDrawing; // @synthesize originTValueForSnappedDrawing=_originTValueForSnappedDrawing;
@property (nonatomic) struct CGAffineTransform previousRulerTransform; // @synthesize previousRulerTransform=_previousRulerTransform;
@property (nonatomic) double rulerAlpha; // @synthesize rulerAlpha=_rulerAlpha;
@property (strong, nonatomic) CALayer *rulerAngleMarker; // @synthesize rulerAngleMarker=_rulerAngleMarker;
@property (strong, nonatomic) CATextLayer *rulerAngleText; // @synthesize rulerAngleText=_rulerAngleText;
@property (strong, nonatomic) CALayer *rulerAngleTick; // @synthesize rulerAngleTick=_rulerAngleTick;
@property (weak, nonatomic) PKRulerController *rulerController; // @synthesize rulerController=_rulerController;
@property (strong, nonatomic) CALayer *rulerDistanceHUD; // @synthesize rulerDistanceHUD=_rulerDistanceHUD;
@property (strong, nonatomic) CATextLayer *rulerDistanceText; // @synthesize rulerDistanceText=_rulerDistanceText;
@property (strong, nonatomic) CALayer *rulerLayer; // @synthesize rulerLayer=_rulerLayer;
@property (nonatomic) struct CGAffineTransform rulerTransform;
@property (nonatomic) double rulerZoomStartCenterTValueOnScreen; // @synthesize rulerZoomStartCenterTValueOnScreen=_rulerZoomStartCenterTValueOnScreen;
@property (nonatomic) double rulerZoomStartScale; // @synthesize rulerZoomStartScale=_rulerZoomStartScale;
@property (nonatomic) struct CGAffineTransform rulerZoomStartTransform; // @synthesize rulerZoomStartTransform=_rulerZoomStartTransform;
@property (readonly) Class superclass;
@property (nonatomic) BOOL zooming; // @synthesize zooming=_zooming;

- (void).cxx_destruct;
- (double)_distanceMarkerFontSize;
- (double)_fontSizeForRulerTextHUD:(id)arg1;
- (id)_rulerImage;
- (id)_textForRulerHUD:(double)arg1;
- (id)addOpacityAnimationOnLayer:(id)arg1 delegate:(id)arg2 toOpacity:(double)arg3;
- (void)addScaleAndOpacityAnimationOnLayer:(id)arg1 delegate:(id)arg2 fromScale:(double)arg3 toScale:(double)arg4 fromAlpha:(double)arg5 toAlpha:(double)arg6;
- (id)addScaleAnimationOnLayer:(id)arg1 delegate:(id)arg2 fromScale:(double)arg3 toScale:(double)arg4;
- (void)animationDidStop:(id)arg1 finished:(BOOL)arg2;
- (BOOL)compactRuler;
- (long long)currentAngle;
- (struct CGPoint)getRulerCenterLineOriginAndTangent:(struct CGPoint *)arg1;
- (void)hideRulerAngleMarker;
- (void)hideRulerAnimated:(BOOL)arg1;
- (id)initWithRulerController:(id)arg1;
- (void)removeRulerMarkers;
- (double)rulerAlignInset;
- (id)rulerDialImage;
- (id)rulerDialLevelImage;
- (double)rulerTickMarkInset;
- (double)rulerWidth;
- (void)setImageTransformFrom:(struct CGAffineTransform)arg1 toTransform:(struct CGAffineTransform)arg2 animated:(BOOL)arg3 duration:(double)arg4;
- (BOOL)shouldUseLargestRulerTextFontSize;
- (void)showRuler;
- (void)updateAngleWithAngleMarkerPosition:(struct CGPoint)arg1;
- (void)updateDistanceMarkerWithSpacing:(double)arg1;
- (void)updateImageTransform:(id)arg1;
- (void)updateRulerAlpha:(double)arg1;
- (void)updateRulerMarkerForLocation:(struct CGPoint)arg1 firstTouch:(BOOL)arg2;
- (void)updateRulerTickMarkImage;
- (long long)userAngle;
- (BOOL)viewPointInRuler:(struct CGPoint)arg1;

@end

