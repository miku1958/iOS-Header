//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <SpotlightUI/SPQueryTaskDelegate-Protocol.h>

@class NSArray, NSString, SFResultSection, SPQueryResponse, SPQueryTask;
@protocol SPSearchAgentDelegate;

@interface SPUISearchModel : NSObject <SPQueryTaskDelegate>
{
    long long _updatesDisabled;
    NSString *_lastQueryString;
    BOOL _springBoardIsActive;
    BOOL _infinitePatience;
    BOOL _queryComplete;
    BOOL _queryDelayedFinished;
    BOOL _queryDidFinish;
    BOOL _forceStableResults;
    SFResultSection *_searchThroughSection;
    NSObject<SPSearchAgentDelegate> *_delegate;
    SPQueryTask *_queryTask;
    SPQueryResponse *_lastResponse;
}

@property (strong) NSObject<SPSearchAgentDelegate> *delegate; // @synthesize delegate=_delegate;
@property BOOL forceStableResults; // @synthesize forceStableResults=_forceStableResults;
@property BOOL infinitePatience; // @synthesize infinitePatience=_infinitePatience;
@property (strong) SPQueryResponse *lastResponse; // @synthesize lastResponse=_lastResponse;
@property BOOL queryComplete; // @synthesize queryComplete=_queryComplete;
@property BOOL queryDelayedFinished; // @synthesize queryDelayedFinished=_queryDelayedFinished;
@property BOOL queryDidFinish; // @synthesize queryDidFinish=_queryDidFinish;
@property (strong) SPQueryTask *queryTask; // @synthesize queryTask=_queryTask;
@property (readonly) SFResultSection *searchThroughSection; // @synthesize searchThroughSection=_searchThroughSection;
@property (readonly) NSArray *sections;
@property BOOL springBoardIsActive; // @synthesize springBoardIsActive=_springBoardIsActive;
@property (readonly) BOOL wantsCompletions;

+ (void)preheat;
+ (void)retrieveFirstTimeExperienceTextWithReply:(CDUnknownBlockType)arg1;
+ (id)sharedFullZWKInstance;
+ (id)sharedGeneralInstance;
+ (id)sharedInstance;
- (void).cxx_destruct;
- (BOOL)_suggestionsReadyForDisplay;
- (void)activate;
- (void)clear;
- (void)deactivate;
- (void)didReceiveResponse:(id)arg1;
- (void)disableUpdates;
- (void)enableUpdates;
- (void)invalidate;
- (void)invalidateCurrentQuery;
- (void)invalidateQuery:(id)arg1;
- (void)resultsDidBecomeInvalid:(id)arg1;
- (void)updateWithQueryContext:(id)arg1;
- (void)updateWithResponse:(id)arg1;
- (void)updatesDisabled;
- (void)updatesEnabled;

@end

