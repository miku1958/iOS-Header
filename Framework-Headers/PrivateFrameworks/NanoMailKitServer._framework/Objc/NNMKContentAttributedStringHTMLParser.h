//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <NanoMailKitServer/NNMKHTMLParser.h>

@class NSDataDetector, NSLock, NSMutableAttributedString, NSMutableDictionary;

@interface NNMKContentAttributedStringHTMLParser : NNMKHTMLParser
{
    NSLock *_lock;
    NSMutableAttributedString *_parsedAttributedString;
    unsigned long long _maxLength;
    double _maxImageWidth;
    BOOL *_partiallyParsed;
    NSMutableDictionary *_imageAtachmentsDataByContentId;
    NSDataDetector *_dataDetector;
}

@property (strong, nonatomic) NSDataDetector *dataDetector; // @synthesize dataDetector=_dataDetector;
@property (strong, nonatomic) NSMutableDictionary *imageAtachmentsDataByContentId; // @synthesize imageAtachmentsDataByContentId=_imageAtachmentsDataByContentId;
@property (strong, nonatomic) NSLock *lock; // @synthesize lock=_lock;
@property (nonatomic) double maxImageWidth; // @synthesize maxImageWidth=_maxImageWidth;
@property (nonatomic) unsigned long long maxLength; // @synthesize maxLength=_maxLength;
@property (strong, nonatomic) NSMutableAttributedString *parsedAttributedString; // @synthesize parsedAttributedString=_parsedAttributedString;
@property (nonatomic) BOOL *partiallyParsed; // @synthesize partiallyParsed=_partiallyParsed;

+ (id)_scaleAndPrepareImageForClient:(id)arg1 maxWidth:(double)arg2 screenScale:(double)arg3;
+ (struct CGSize)_scaledDownSize:(struct CGSize)arg1 maxWidth:(double)arg2;
+ (id)adjustedImage:(id)arg1 maxWidth:(double)arg2 screenScale:(double)arg3;
+ (id)attachmentAttributedStringWithContentId:(id)arg1 mergingAttributes:(id)arg2;
+ (id)imageAttachmentAttributedStringWithContentId:(id)arg1 imageSize:(struct CGSize)arg2 mergingAttributes:(id)arg3;
+ (id)trimAttributedString:(id)arg1;
- (void).cxx_destruct;
- (void)_addDataDetectionAttributes:(id)arg1;
- (id)_parseHTMLBody:(id)arg1 encoding:(unsigned long long)arg2 maxLength:(unsigned long long)arg3 maxImageWidth:(double)arg4 partiallyParsed:(BOOL *)arg5 imageAttachmentsLoaded:(id *)arg6 urlsForValidation:(id)arg7 urlsFound:(id *)arg8;
- (BOOL)_validateURLsAndHTMLTagsInParsedString:(id)arg1 urlsFound:(id *)arg2;
- (void)appendImageWithSource:(id)arg1 width:(double)arg2 height:(double)arg3 stringAttributes:(id)arg4;
- (void)appendString:(id)arg1 stringAttributes:(id)arg2;
- (BOOL)isElementBlacklisted:(id)arg1 attributeQueryBlock:(CDUnknownBlockType)arg2;
- (BOOL)isElementIgnorable:(id)arg1;
- (BOOL)isErrorTypeBlacklisted:(char *)arg1;
- (BOOL)isWebLink:(id)arg1;
- (id)parseHTMLBody:(id)arg1 encoding:(unsigned long long)arg2 maxLength:(unsigned long long)arg3 maxImageWidth:(double)arg4 partiallyParsed:(BOOL *)arg5 imageAttachmentsLoaded:(id *)arg6 urlsForValidation:(id)arg7;
- (id)parseHTMLBody:(id)arg1 encoding:(unsigned long long)arg2 maxLength:(unsigned long long)arg3 maxImageWidth:(double)arg4 partiallyParsed:(BOOL *)arg5 imageAttachmentsLoaded:(id *)arg6 urlsFound:(id *)arg7;

@end

