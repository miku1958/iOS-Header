//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <ConfigurationEngineModel/CEMConfigurationBase.h>

#import <ConfigurationEngineModel/CEMRegisteredTypeProtocol-Protocol.h>

@class NSDictionary, NSNumber, NSString;

@interface CEMNetworkVPNDeclaration : CEMConfigurationBase <CEMRegisteredTypeProtocol>
{
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) NSDictionary *payloadAlwaysOn;
@property (readonly, nonatomic) NSNumber *payloadDisconnectOnIdle;
@property (readonly, nonatomic) NSNumber *payloadDisconnectOnIdleTimer;
@property (readonly, nonatomic) NSDictionary *payloadEAP;
@property (readonly, nonatomic) NSDictionary *payloadIKEv2;
@property (readonly, nonatomic) NSDictionary *payloadIPSec;
@property (readonly, nonatomic) NSDictionary *payloadIPv4;
@property (readonly, nonatomic) NSDictionary *payloadPPP;
@property (readonly, nonatomic) NSDictionary *payloadProxies;
@property (readonly, nonatomic) NSString *payloadUserDefinedName;
@property (readonly, nonatomic) NSDictionary *payloadVPN;
@property (readonly, nonatomic) NSString *payloadVPNSubType;
@property (readonly, nonatomic) NSString *payloadVPNType;
@property (readonly, nonatomic) NSDictionary *payloadVendorConfig;
@property (readonly) Class superclass;

+ (id)AlwaysOn_TunnelConfiguration_allowedPayloadKeys;
+ (id)AlwaysOn_allowedPayloadKeys;
+ (id)IKEv2_allowedPayloadKeys;
+ (id)IPSec_allowedPayloadKeys;
+ (id)IPv4_allowedPayloadKeys;
+ (id)MatchDomainRules_allowedPayloadKeys;
+ (id)PPP_allowedPayloadKeys;
+ (id)Proxies_allowedPayloadKeys;
+ (id)SecurityAssociation_allowedPayloadKeys;
+ (id)VPN_allowedPayloadKeys;
+ (id)VendorConfig_allowedPayloadKeys;
+ (id)allowedPayloadKeys;
+ (id)allowedReasons;
+ (id)allowedStatusKeys;
+ (id)profileType;
+ (id)registeredClass;
+ (id)registeredType;
+ (id)restrictionPayloadKeys;
- (int)activationLevel;
- (id)assetReferences;
- (BOOL)multipleAllowed;
- (BOOL)mustBeSupervised;
- (id)serializePayload:(id)arg1 withAssetProviders:(id)arg2;
- (id)serializePayloadAlwaysOn:(id)arg1 withAssetProviders:(id)arg2;
- (id)serializePayloadAlwaysOn_TunnelConfiguration:(id)arg1 withAssetProviders:(id)arg2;
- (id)serializePayloadIKEv2:(id)arg1 withAssetProviders:(id)arg2;
- (id)serializePayloadIPSec:(id)arg1 withAssetProviders:(id)arg2;
- (id)serializePayloadIPv4:(id)arg1 withAssetProviders:(id)arg2;
- (id)serializePayloadMatchDomainRules:(id)arg1 withAssetProviders:(id)arg2;
- (id)serializePayloadPPP:(id)arg1 withAssetProviders:(id)arg2;
- (id)serializePayloadProxies:(id)arg1 withAssetProviders:(id)arg2;
- (id)serializePayloadSecurityAssociation:(id)arg1 withAssetProviders:(id)arg2;
- (id)serializePayloadVPN:(id)arg1 withAssetProviders:(id)arg2;
- (id)serializePayloadVendorConfig:(id)arg1 withAssetProviders:(id)arg2;
- (BOOL)validPayloadAlwaysOn_Dictionary:(id)arg1 parentKeyPath:(id)arg2 error:(id *)arg3;
- (BOOL)validPayloadAlwaysOn_TunnelConfiguration_Dictionary:(id)arg1 parentKeyPath:(id)arg2 error:(id *)arg3;
- (BOOL)validPayloadDictionary:(id)arg1 error:(id *)arg2;
- (BOOL)validPayloadIKEv2_Dictionary:(id)arg1 parentKeyPath:(id)arg2 error:(id *)arg3;
- (BOOL)validPayloadIPSec_Dictionary:(id)arg1 parentKeyPath:(id)arg2 error:(id *)arg3;
- (BOOL)validPayloadIPv4_Dictionary:(id)arg1 parentKeyPath:(id)arg2 error:(id *)arg3;
- (BOOL)validPayloadMatchDomainRules_Dictionary:(id)arg1 parentKeyPath:(id)arg2 error:(id *)arg3;
- (BOOL)validPayloadPPP_Dictionary:(id)arg1 parentKeyPath:(id)arg2 error:(id *)arg3;
- (BOOL)validPayloadProxies_Dictionary:(id)arg1 parentKeyPath:(id)arg2 error:(id *)arg3;
- (BOOL)validPayloadSecurityAssociation_Dictionary:(id)arg1 parentKeyPath:(id)arg2 error:(id *)arg3;
- (BOOL)validPayloadVPN_Dictionary:(id)arg1 parentKeyPath:(id)arg2 error:(id *)arg3;
- (BOOL)validPayloadVendorConfig_Dictionary:(id)arg1 parentKeyPath:(id)arg2 error:(id *)arg3;
- (BOOL)validStatusDictionary:(id)arg1 error:(id *)arg2;

@end

