//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <ConfigurationEngineModel/CEMConfigurationBase.h>

#import <ConfigurationEngineModel/CEMRegisteredTypeProtocol-Protocol.h>

@class NSNumber, NSString;

@interface CEMSecuritySmartCardDeclaration : CEMConfigurationBase <CEMRegisteredTypeProtocol>
{
    NSNumber *_payloadUserPairing;
    NSNumber *_payloadAllowSmartCard;
    NSNumber *_payloadCheckCertificateTrust;
    NSNumber *_payloadOneCardPerUser;
    NSNumber *_payloadTokenRemovalAction;
    NSNumber *_payloadEnforceSmartCard;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (copy, nonatomic) NSNumber *payloadAllowSmartCard; // @synthesize payloadAllowSmartCard=_payloadAllowSmartCard;
@property (copy, nonatomic) NSNumber *payloadCheckCertificateTrust; // @synthesize payloadCheckCertificateTrust=_payloadCheckCertificateTrust;
@property (copy, nonatomic) NSNumber *payloadEnforceSmartCard; // @synthesize payloadEnforceSmartCard=_payloadEnforceSmartCard;
@property (copy, nonatomic) NSNumber *payloadOneCardPerUser; // @synthesize payloadOneCardPerUser=_payloadOneCardPerUser;
@property (copy, nonatomic) NSNumber *payloadTokenRemovalAction; // @synthesize payloadTokenRemovalAction=_payloadTokenRemovalAction;
@property (copy, nonatomic) NSNumber *payloadUserPairing; // @synthesize payloadUserPairing=_payloadUserPairing;
@property (readonly) Class superclass;

+ (id)allowedPayloadKeys;
+ (id)buildRequiredOnlyWithIdentifier:(id)arg1;
+ (id)buildWithIdentifier:(id)arg1 withUserPairing:(id)arg2 withAllowSmartCard:(id)arg3 withCheckCertificateTrust:(id)arg4 withOneCardPerUser:(id)arg5 withTokenRemovalAction:(id)arg6 withEnforceSmartCard:(id)arg7;
+ (id)profileType;
+ (id)registeredClassName;
+ (id)registeredIdentifier;
+ (id)restrictionPayloadKeys;
- (void).cxx_destruct;
- (int)activationLevel;
- (id)assetReferences;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)loadPayload:(id)arg1 error:(id *)arg2;
- (BOOL)multipleAllowed;
- (BOOL)mustBeSupervised;
- (id)serializePayloadWithAssetProviders:(id)arg1;

@end

