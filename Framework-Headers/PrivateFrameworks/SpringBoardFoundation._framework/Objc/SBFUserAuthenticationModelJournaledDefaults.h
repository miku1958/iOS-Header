//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <SpringBoardFoundation/SBFUserAuthenticationModel-Protocol.h>

@class MCProfileConnection, NSDictionary, NSString, SBSecurityDefaults;
@protocol OS_dispatch_queue, SBFUserAuthenticationModelDelegate;

@interface SBFUserAuthenticationModelJournaledDefaults : NSObject <SBFUserAuthenticationModel>
{
    MCProfileConnection *_profileConnection;
    SBSecurityDefaults *_securityDefaults;
    NSString *_journalPath;
    NSObject<OS_dispatch_queue> *_persistentStateQueue;
    BOOL _speculativePasscodeFailureChargeOutstanding;
    NSDictionary *_originalDefaultsForRollback;
    BOOL _pendingWipe;
    BOOL _permanentlyBlocked;
    double _unblockTime;
    id<SBFUserAuthenticationModelDelegate> _delegate;
}

@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) id<SBFUserAuthenticationModelDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic, getter=isPermanentlyBlocked) BOOL permanentlyBlocked;
@property (readonly) Class superclass;
@property (readonly, nonatomic, getter=isTemporarilyBlocked) BOOL temporarilyBlocked;
@property (readonly, nonatomic) double timeUntilUnblockedSinceReferenceDate;

+ (id)_journaledDefaultsAndTypes;
- (void).cxx_destruct;
- (id)_copyLockControllerDefaults;
- (void)_evaluatePendingWipe;
- (id)_initWithJournalPath:(id)arg1 securityDefaults:(id)arg2 profileConnection:(id)arg3;
- (BOOL)_isDeviceWipePreferenceEnabled;
- (void)_loadLockControllerDefaults:(id)arg1;
- (void)_loadLockControllerDefaultsJournalIfNecessary;
- (void)_persistentStateQueue_beginSpeculativeFailureCharge;
- (void)_persistentStateQueue_cancelSpeculativeFailureCharge;
- (void)_persistentStateQueue_clearBlockedState;
- (void)_persistentStateQueue_evaluatePendingWipe;
- (void)_persistentStateQueue_loadLockState;
- (void)_persistentStateQueue_unlockFailedWithError:(id)arg1;
- (void)_persistentStateQueue_unlockSucceeded;
- (void)_updateLockControllerDefaultsJournal;
- (void)clearBlockedState;
- (id)init;
- (void)notePasscodeEntryBegan;
- (void)notePasscodeEntryCancelled;
- (void)notePasscodeUnlockFailedWithError:(id)arg1;
- (void)notePasscodeUnlockSucceeded;
- (void)performPasswordTest:(CDUnknownBlockType)arg1;
- (void)synchronize;
- (void)test_reloadState;
- (id)updateLockControllerDefaultsWithBlock:(CDUnknownBlockType)arg1 journaled:(BOOL)arg2;

@end

