//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <SpringBoardFoundation/BSDescriptionProviding-Protocol.h>

@class NSArray, NSMutableDictionary, NSString, SBFMagnifyMode, SBFWallpaperConfiguration;
@protocol SBFProceduralWallpaperProvider, SBFWallpaperConfigurationManagerDelegate;

@interface SBFWallpaperConfigurationManager : NSObject <BSDescriptionProviding>
{
    NSMutableDictionary *_wallpaperImageCache;
    NSMutableDictionary *_proceduralWallpaperCache;
    int _externalNotificationToken;
    BOOL _cachedVariantsShareWallpaperConfiguration;
    BOOL _cachedVariantsShareWallpaperConfigurationValid;
    id<SBFWallpaperConfigurationManagerDelegate> _delegate;
    double _wallpaperScale;
    long long _wallpaperSizeType;
    id<SBFProceduralWallpaperProvider> _proceduralWallpaperProvider;
    SBFMagnifyMode *_magnifyMode;
    NSArray *_dataStores;
    struct CGSize _wallpaperSize;
}

@property (nonatomic) BOOL cachedVariantsShareWallpaperConfiguration; // @synthesize cachedVariantsShareWallpaperConfiguration=_cachedVariantsShareWallpaperConfiguration;
@property (nonatomic, getter=isCachedVariantsShareWallpaperConfigurationValid) BOOL cachedVariantsShareWallpaperConfigurationValid; // @synthesize cachedVariantsShareWallpaperConfigurationValid=_cachedVariantsShareWallpaperConfigurationValid;
@property (copy, nonatomic) NSArray *dataStores; // @synthesize dataStores=_dataStores;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<SBFWallpaperConfigurationManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, copy, nonatomic) SBFWallpaperConfiguration *homeScreenWallpaperConfiguration;
@property (readonly, copy, nonatomic) SBFWallpaperConfiguration *lockScreenWallpaperConfiguration;
@property (strong, nonatomic) SBFMagnifyMode *magnifyMode; // @synthesize magnifyMode=_magnifyMode;
@property (readonly, nonatomic) unsigned long long numberOfCachedStaticImages;
@property (weak, nonatomic) id<SBFProceduralWallpaperProvider> proceduralWallpaperProvider; // @synthesize proceduralWallpaperProvider=_proceduralWallpaperProvider;
@property (readonly) Class superclass;
@property (readonly, nonatomic) BOOL variantsShareWallpaperConfiguration;
@property (readonly, nonatomic) double wallpaperScale; // @synthesize wallpaperScale=_wallpaperScale;
@property (readonly, nonatomic) struct CGSize wallpaperSize; // @synthesize wallpaperSize=_wallpaperSize;
@property (readonly, nonatomic) struct CGSize wallpaperSizeIncludingParallaxOverhang;
@property (readonly, nonatomic) long long wallpaperSizeType; // @synthesize wallpaperSizeType=_wallpaperSizeType;

+ (long long)currentDeviceWallpaperSizeType;
+ (void)initialize;
- (void).cxx_destruct;
- (id)cachedProceduralWallpaperWithIdentifier:(id)arg1 options:(id)arg2 forVariant:(long long)arg3;
- (void)clearCacheForVariants:(long long)arg1;
- (struct CGRect)cropRectForOldCropRect:(struct CGRect)arg1 portrait:(BOOL)arg2 zoomScale:(double)arg3 oldParallaxFactor:(double)arg4 forImageSize:(struct CGSize)arg5 newZoomScale:(double *)arg6;
- (struct CGRect)cropRectForViewPort:(struct CGRect)arg1 portrait:(BOOL)arg2 zoomScale:(double)arg3 parallaxFactor:(double)arg4 forImageSize:(struct CGSize)arg5 contentScaleFactor:(double)arg6;
- (void)dealloc;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
- (long long)effectiveSharedVariantForVariants:(long long)arg1;
- (id)init;
- (id)initWithWallpaperDataStores:(id)arg1;
- (id)initWithWallpaperDataStores:(id)arg1 wallpaperSize:(struct CGSize)arg2 scale:(double)arg3 sizeType:(long long)arg4;
- (BOOL)isProceduralWallpaperInfoValid:(id)arg1;
- (BOOL)isVideoSupportedByDefaultForVariant:(long long)arg1;
- (BOOL)isVideoSupportedForVariant:(long long)arg1;
- (void)migrateWallpaperOptionsForImageIfNecessaryForVariant:(long long)arg1;
- (id)normalizeImage:(id)arg1;
- (long long)parallaxDeviceType;
- (double)parallaxFactorForCropRect:(struct CGRect)arg1 portrait:(BOOL)arg2 forImageSize:(struct CGSize)arg3 zoomScale:(double)arg4;
- (void)performMigrationWithFailureHandler:(CDUnknownBlockType)arg1;
- (void)preheatImageCacheForVariant:(long long)arg1;
- (Class)proceduralWallpaperClassForIdentifier:(id)arg1;
- (id)proceduralWallpaperInfoForVariant:(long long)arg1;
- (void)regenerateStaticWallpaperThumbnailImages;
- (void)regenerateThumbnailIfNecessaryForVariant:(long long)arg1;
- (void)regenerateThumbnailsIfNecessary;
- (void)removeProceduralWallpaperForVariants:(long long)arg1;
- (void)removeVideoForVariants:(long long)arg1;
- (void)removeWallpaperImagesForVariants:(long long)arg1;
- (void)removeWallpaperImagesForVariants:(long long)arg1 variantsShareWallpaperConfiguration:(BOOL)arg2;
- (void)removeWallpaperOptionsForVariants:(long long)arg1;
- (void)restoreDefaultWallpaperForAllVariantsAndNotify:(BOOL)arg1;
- (void)safeMigrateWallpaperImageIfNecessary;
- (BOOL)safeMigrateWallpaperImageIfNecessaryForVariant:(long long)arg1;
- (void)saveCroppedVideo:(id)arg1 toURL:(id)arg2 cropRect:(struct CGRect)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (BOOL)setProceduralWallpaperIdentifier:(id)arg1 options:(id)arg2 forVariants:(long long)arg3;
- (BOOL)setVideoURL:(id)arg1 forVariant:(long long)arg2 shoudCrop:(BOOL)arg3 relativeCropRect:(struct CGRect)arg4;
- (BOOL)setWallpaperImage:(id)arg1 originalImage:(id)arg2 forVariants:(long long)arg3 options:(unsigned long long)arg4;
- (BOOL)setWallpaperImage:(id)arg1 originalImage:(id)arg2 wallpaperOptions:(id)arg3 forVariants:(long long)arg4 options:(unsigned long long)arg5;
- (BOOL)setWallpaperImage:(id)arg1 wallpaperOptions:(id)arg2 forVariants:(long long)arg3;
- (BOOL)setWallpaperOptions:(id)arg1 forVariants:(long long)arg2;
- (id)succinctDescription;
- (id)succinctDescriptionBuilder;
- (id)thumbnailDataForImage:(id)arg1;
- (double)thumbnailWidth;
- (BOOL)variantsShareWallpaperConfigurationForTypes:(unsigned long long)arg1;
- (id)videoURLForVariant:(long long)arg1;
- (id)wallpaperConfigurationForVariant:(long long)arg1;
- (void)wallpaperDidChangeForVariants:(long long)arg1 shouldNotify:(BOOL)arg2;
- (id)wallpaperImageForVariant:(long long)arg1;
- (id)wallpaperOptionsForVariant:(long long)arg1;
- (id)wallpaperOriginalImageForVariant:(long long)arg1;
- (id)wallpaperThumbnailImageDataForVariant:(long long)arg1;
- (id)wallpaperThumbnailImageForVariant:(long long)arg1;
- (void)wallpaperWillChangeForVariants:(long long)arg1;

@end

