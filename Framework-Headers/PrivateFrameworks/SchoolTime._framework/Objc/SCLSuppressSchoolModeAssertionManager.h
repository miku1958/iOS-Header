//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <SchoolTime/NSXPCListenerDelegate-Protocol.h>
#import <SchoolTime/SCLSuppressSchoolModeAssertionClientDelegate-Protocol.h>

@class NSHashTable, NSMutableSet, NSString, NSXPCListener;
@protocol OS_dispatch_queue;

@interface SCLSuppressSchoolModeAssertionManager : NSObject <NSXPCListenerDelegate, SCLSuppressSchoolModeAssertionClientDelegate>
{
    NSObject<OS_dispatch_queue> *_targetQueue;
    NSObject<OS_dispatch_queue> *_queue;
    NSXPCListener *_listener;
    NSMutableSet *_clients;
    NSMutableSet *_acquiredClients;
    NSHashTable *_observers;
    unsigned long long _stateHandle;
}

@property (strong, nonatomic) NSMutableSet *acquiredClients; // @synthesize acquiredClients=_acquiredClients;
@property (strong, nonatomic) NSMutableSet *clients; // @synthesize clients=_clients;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) NSXPCListener *listener; // @synthesize listener=_listener;
@property (strong, nonatomic) NSHashTable *observers; // @synthesize observers=_observers;
@property (strong, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property (nonatomic) unsigned long long stateHandle; // @synthesize stateHandle=_stateHandle;
@property (readonly, nonatomic) unsigned long long status;
@property (readonly) Class superclass;
@property (strong, nonatomic) NSObject<OS_dispatch_queue> *targetQueue; // @synthesize targetQueue=_targetQueue;

- (void).cxx_destruct;
- (struct os_state_data_s *)_stateDataWithHints:(struct os_state_hints_s *)arg1;
- (void)activate;
- (void)addObserver:(id)arg1;
- (void)clientDidAcquireAssertion:(id)arg1;
- (void)clientDidInvalidate:(id)arg1;
- (void)dealloc;
- (id)initWithTargetQueue:(id)arg1;
- (BOOL)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (void)performObserverBlock:(CDUnknownBlockType)arg1;
- (void)removeObserver:(id)arg1;

@end

