//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <SchoolTime/SCLSettingsSyncStateMachineDelegate-Protocol.h>

@class NSString, NSURL, SCLScheduleSettings, SCLSettingsSyncStateMachine;
@protocol OS_dispatch_queue, OS_dispatch_source, SCLSettingsSyncTransport;

@interface SCLSettingsSyncCoordinator : NSObject <SCLSettingsSyncStateMachineDelegate>
{
    SCLScheduleSettings *_schedule;
    id<SCLSettingsSyncTransport> _transport;
    NSObject<OS_dispatch_queue> *_queue;
    SCLSettingsSyncStateMachine *_stateMachine;
    NSObject<OS_dispatch_source> *_timerSource;
    NSURL *_contextURL;
    NSString *_xpcActivityName;
}

@property (readonly, nonatomic) NSURL *contextURL; // @synthesize contextURL=_contextURL;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property (readonly, nonatomic) SCLScheduleSettings *schedule; // @synthesize schedule=_schedule;
@property (readonly, nonatomic) SCLSettingsSyncStateMachine *stateMachine; // @synthesize stateMachine=_stateMachine;
@property (readonly) Class superclass;
@property (strong, nonatomic) NSObject<OS_dispatch_source> *timerSource; // @synthesize timerSource=_timerSource;
@property (weak, nonatomic) id<SCLSettingsSyncTransport> transport; // @synthesize transport=_transport;
@property (readonly, nonatomic) NSString *xpcActivityName; // @synthesize xpcActivityName=_xpcActivityName;

- (void).cxx_destruct;
- (void)activate;
- (void)applySchedule:(id)arg1;
- (void)beginActivity:(id)arg1;
- (void)cancelCommitTimerForStateMachine:(id)arg1;
- (void)cancelRetryActivityForStateMachine:(id)arg1;
- (void)commitTimerFired;
- (void)didDeliverMessageWithIdentifier:(id)arg1;
- (void)identifier:(id)arg1 didSendWithSuccess:(BOOL)arg2 error:(id)arg3;
- (id)initWithFileURL:(id)arg1 pairingID:(id)arg2 schedule:(id)arg3 queue:(id)arg4;
- (void)noteSignificantUserInteractionOccured;
- (void)performSyncForStateMachine:(id)arg1;
- (void)registerActivityWithCriteria:(id)arg1;
- (void)stateMachine:(id)arg1 didTransitionFromState:(id)arg2 toState:(id)arg3;
- (void)stateMachine:(id)arg1 scheduleCommitTimerWithInterval:(double)arg2;
- (void)stateMachine:(id)arg1 scheduleRetryWithActivityCriteria:(id)arg2;

@end

