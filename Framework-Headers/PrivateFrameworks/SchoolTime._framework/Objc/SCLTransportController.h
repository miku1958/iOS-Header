//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <SchoolTime/SCLSettingsSyncTransport-Protocol.h>

@class IDSDevice, IDSService, NRDevice, NRPairedDeviceRegistry, NSString, SCLSettingsSyncCoordinator, SCLTransportService;
@protocol SCLTransportControllerDelegate;

@interface SCLTransportController : NSObject <SCLSettingsSyncTransport>
{
    NRDevice *_NRDevice;
    NRPairedDeviceRegistry *_deviceRegistry;
    IDSService *_service;
    NSString *_IDSDeviceIdentifier;
    SCLTransportService *_transportService;
    id<SCLTransportControllerDelegate> _delegate;
    SCLSettingsSyncCoordinator *_settingsSyncCoordinator;
}

@property (readonly, nonatomic) NSString *IDSDeviceIdentifier; // @synthesize IDSDeviceIdentifier=_IDSDeviceIdentifier;
@property (readonly, nonatomic) NRDevice *NRDevice; // @synthesize NRDevice=_NRDevice;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<SCLTransportControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) IDSDevice *device; // @dynamic device;
@property (readonly, nonatomic) NRPairedDeviceRegistry *deviceRegistry; // @synthesize deviceRegistry=_deviceRegistry;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) IDSService *service; // @synthesize service=_service;
@property (weak, nonatomic) SCLSettingsSyncCoordinator *settingsSyncCoordinator; // @synthesize settingsSyncCoordinator=_settingsSyncCoordinator;
@property (readonly) Class superclass;
@property (weak, nonatomic) SCLTransportService *transportService; // @synthesize transportService=_transportService;

- (void).cxx_destruct;
- (void)addUnlockHistoryItem:(id)arg1;
- (void)applySchedule:(id)arg1;
- (void)handleIncomingHistoryItem:(id)arg1;
- (void)handleIncomingSchedule:(id)arg1 forType:(int)arg2;
- (void)handleRemoteScheduleSettingsRequest;
- (id)initWithNRDevice:(id)arg1 deviceRegistry:(id)arg2 service:(id)arg3 deviceIdentifier:(id)arg4;
- (void)requestRemoteSettings;
- (BOOL)sendSchedule:(id)arg1 identifier:(id *)arg2 error:(id *)arg3;
- (void)service:(id)arg1 didDeliverMessageWithIdentifier:(id)arg2;
- (void)service:(id)arg1 identifier:(id)arg2 didSendWithSuccess:(BOOL)arg3 error:(id)arg4;
- (void)service:(id)arg1 incomingProtobuf:(id)arg2 fromID:(id)arg3 context:(id)arg4;

@end

