//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSMutableSet, NSSet, RBAssertionCollection, RBAttributeContext, RBProcessIndex, RBProcessMap, RBProcessStateChangeSet, RBSystemState;
@protocol RBBundlePropertiesManaging, RBDomainAttributeManaging, RBEntitlementManaging;

@interface RBAssertionResolutionContext : NSObject
{
    NSMutableSet *_assertions;
    NSMutableSet *_touchedAssertions;
    NSMutableSet *_lostStartTimeDefining;
    NSMutableSet *_gainedStartTimeDefining;
    NSMutableSet *_targetsPendingResolution;
    RBProcessMap *_resolvedState;
    RBProcessMap *_originatorInheritances;
    RBAttributeContext *_attributeContext;
    RBProcessStateChangeSet *_changeSet;
    RBAssertionCollection *_assertionCollection;
    RBProcessIndex *_processIndex;
    RBProcessMap *_stateMap;
    id<RBDomainAttributeManaging> _domainAttributeManager;
    id<RBBundlePropertiesManaging> _bundlePropertiesManager;
    id<RBEntitlementManaging> _entitlementManager;
    RBSystemState *_systemState;
}

@property (readonly, nonatomic) RBProcessStateChangeSet *changeSet; // @synthesize changeSet=_changeSet;
@property (readonly, nonatomic) NSSet *gainedStartTimeDefining; // @synthesize gainedStartTimeDefining=_gainedStartTimeDefining;
@property (readonly, nonatomic) NSSet *lostStartTimeDefining; // @synthesize lostStartTimeDefining=_lostStartTimeDefining;
@property (readonly, nonatomic) RBSystemState *systemState; // @synthesize systemState=_systemState;
@property (readonly, nonatomic) NSSet *touchedAssertions; // @synthesize touchedAssertions=_touchedAssertions;

- (void).cxx_destruct;
- (id)_assertionGraphFromAssertion:(id)arg1;
- (void)_assertionGraphFromAssertion:(id)arg1 graph:(id)arg2;
- (void)_finalizeStateChangeSet;
- (id)_inheritancesForOriginator:(id)arg1;
- (id)_latestStateForIdentity:(id)arg1;
- (id)_originatorInheritancesForAssertion:(id)arg1;
- (void)_resolveProcessStateForTarget:(id)arg1 ofType:(unsigned long long)arg2 viaAssertion:(id)arg3;
- (void)_resolveSystemState;
- (void)_suspendOrResumeAssertionsForTarget:(id)arg1 oldState:(id)arg2 newState:(id)arg3;
- (void)_updateStatesForAssertion:(id)arg1;

@end

