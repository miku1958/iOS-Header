//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <SleepDaemon/HDSPDiagnosticsProvider-Protocol.h>
#import <SleepDaemon/HDSPEnvironmentAware-Protocol.h>
#import <SleepDaemon/HDSPSleepEventHandler-Protocol.h>
#import <SleepDaemon/HDSPSleepEventProvider-Protocol.h>
#import <SleepDaemon/HDSPSleepScheduleModelObserver-Protocol.h>
#import <SleepDaemon/HDSPSleepScheduleStateObserver-Protocol.h>
#import <SleepDaemon/HDSPTimeChangeObserver-Protocol.h>
#import <SleepDaemon/HDSPWakeDetectionStateMachineDelegate-Protocol.h>
#import <SleepDaemon/HDSPWakeDetectionStateMachineInfoProvider-Protocol.h>
#import <SleepDaemon/HDSPWakeDetectorDelegate-Protocol.h>

@class HDSPEnvironment, HDSPWakeDetectionStateMachine, HKSPSleepScheduleModel, HKSPSleepScheduleOccurrence, NSArray, NSDate, NSString;
@protocol HDSPSleepEventDelegate, NAScheduler;

@interface HDSPWakeDetectionManager : NSObject <HDSPWakeDetectorDelegate, HDSPWakeDetectionStateMachineDelegate, HDSPWakeDetectionStateMachineInfoProvider, HDSPDiagnosticsProvider, HDSPEnvironmentAware, HDSPSleepScheduleModelObserver, HDSPSleepEventHandler, HDSPSleepScheduleStateObserver, HDSPSleepEventProvider, HDSPTimeChangeObserver>
{
    struct os_unfair_lock_s _wakeDetectionLock;
    HDSPEnvironment *_environment;
    id<HDSPSleepEventDelegate> _sleepEventDelegate;
    NSArray *_wakeDetectors;
    HDSPWakeDetectionStateMachine *_stateMachine;
}

@property (readonly, nonatomic) id<NAScheduler> callbackScheduler;
@property (readonly, nonatomic) NSDate *currentDate;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, weak, nonatomic) HDSPEnvironment *environment; // @synthesize environment=_environment;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) BOOL inDetectionWindow;
@property (readonly, nonatomic) BOOL isDetecting;
@property (readonly, nonatomic) BOOL isWatch;
@property (readonly, copy, nonatomic) NSString *providerIdentifier;
@property (readonly, nonatomic) HKSPSleepScheduleOccurrence *relevantOccurrence;
@property (weak, nonatomic) id<HDSPSleepEventDelegate> sleepEventDelegate; // @synthesize sleepEventDelegate=_sleepEventDelegate;
@property (readonly, nonatomic) BOOL sleepModeIsOff;
@property (readonly, nonatomic) HKSPSleepScheduleModel *sleepScheduleModel;
@property (readonly, nonatomic) unsigned long long sleepScheduleState;
@property (readonly, nonatomic) HDSPWakeDetectionStateMachine *stateMachine; // @synthesize stateMachine=_stateMachine;
@property (readonly) Class superclass;
@property (readonly, nonatomic) struct os_unfair_lock_s wakeDetectionLock; // @synthesize wakeDetectionLock=_wakeDetectionLock;
@property (readonly, nonatomic) NSArray *wakeDetectors; // @synthesize wakeDetectors=_wakeDetectors;

+ (id)platformSpecificProviders:(id)arg1;
- (void).cxx_destruct;
- (id)_currentState;
- (id)_detectionWindowForDetector:(id)arg1 afterDate:(id)arg2 nextWakeUp:(id)arg3;
- (id)_detectionWindowsAfterDate:(id)arg1 nextWakeUp:(id)arg2;
- (void)_withLock:(CDUnknownBlockType)arg1;
- (id)detectionWindowForDetector:(id)arg1 afterDate:(id)arg2;
- (id)detectionWindowsAfterDate:(id)arg1;
- (id)diagnosticDescription;
- (id)diagnosticInfo;
- (void)earlyWakeUpWasNotifiedRemotely;
- (void)environmentDidBecomeReady:(id)arg1;
- (void)environmentWillBecomeReady:(id)arg1;
- (id)eventIdentifiers;
- (id)initWithEnvironment:(id)arg1;
- (id)initWithEnvironment:(id)arg1 wakeDetectorProviders:(id)arg2;
- (id)nextWakeUpAfterDate:(id)arg1;
- (void)postWakeDetectionNotification;
- (void)scheduleWakeDetection;
- (void)significantTimeChangeDetected:(id)arg1;
- (void)sleepEventIsDue:(id)arg1;
- (BOOL)sleepFeaturesEnabled;
- (void)sleepScheduleModelManager:(id)arg1 source:(id)arg2 didUpdateSleepScheduleModel:(id)arg3;
- (void)sleepScheduleStateDidChange:(unsigned long long)arg1 previousState:(unsigned long long)arg2 reason:(unsigned long long)arg3;
- (void)startWakeDetection;
- (void)stopWakeDetection;
- (void)unscheduleWakeDetection;
- (id)upcomingEventsDueAfterDate:(id)arg1;
- (id)upcomingStartDetectionDateAfterDate:(id)arg1;
- (id)upcomingStartDetectionDatesAfterDate:(id)arg1;
- (void)updateState;
- (void)wakeDetector:(id)arg1 didDetectWakeUpEventOnDate:(id)arg2;

@end

