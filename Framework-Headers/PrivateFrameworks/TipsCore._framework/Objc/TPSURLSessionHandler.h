//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <TipsCore/TPSURLSessionDelegate-Protocol.h>
#import <TipsCore/TPSURLSessionManagerDelegate-Protocol.h>

@class NSIndexSet, NSString;
@protocol TPSURLSessionHandlerDelegate;

@interface TPSURLSessionHandler : NSObject <TPSURLSessionManagerDelegate, TPSURLSessionDelegate>
{
    BOOL _shouldIgnoreInMemoryCaching;
    id<TPSURLSessionHandlerDelegate> _delegate;
    NSIndexSet *_excludeCachingDataTypes;
    NSString *_passphrase;
    NSString *_certificateFilePath;
}

@property (strong, nonatomic) NSString *certificateFilePath; // @synthesize certificateFilePath=_certificateFilePath;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<TPSURLSessionHandlerDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (strong, nonatomic) NSIndexSet *excludeCachingDataTypes; // @synthesize excludeCachingDataTypes=_excludeCachingDataTypes;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) NSString *passphrase; // @synthesize passphrase=_passphrase;
@property (nonatomic) BOOL shouldIgnoreInMemoryCaching; // @synthesize shouldIgnoreInMemoryCaching=_shouldIgnoreInMemoryCaching;
@property (readonly) Class superclass;

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)URLSessionManagerDidReceiveChallenge:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)URLSessionManagerSessionConfiguration:(id)arg1;
- (id)URLSessionManagerSessionOperationQueue:(id)arg1;
- (BOOL)URLSessionManagerShouldCoalesceRequest:(id)arg1;
- (id)cacheControllerForDataType:(long long)arg1;
- (id)init;
- (id)processJSONFormattedDataForCDSError:(id)arg1;
- (BOOL)respectCachingForRequest:(id)arg1;
- (void)sessionTask:(id)arg1 didCompleteWithError:(id)arg2;
- (void)sessionTask:(id)arg1 didFinishDownloadingToURL:(id)arg2;
- (void)sessionTask:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)sessionTask:(id)arg1 didReceiveResponse:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)sessionTask:(id)arg1 willCacheResponse:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (BOOL)shouldCacheToDiskForSessionTask:(id)arg1;

@end

