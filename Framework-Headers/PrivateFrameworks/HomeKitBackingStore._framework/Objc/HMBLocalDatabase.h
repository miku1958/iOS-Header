//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <HMFoundation/HMFObject.h>

#import <HomeKitBackingStore/HMFLogging-Protocol.h>

@class HMBLocalSQLContext, HMBModelContainer, HMFUnfairLock, NSMapTable, NSOperationQueue, NSString;
@protocol HMBLocalDatabaseDelegate;

@interface HMBLocalDatabase : HMFObject <HMFLogging>
{
    HMBModelContainer *_modelContainer;
    id<HMBLocalDatabaseDelegate> _delegate;
    NSOperationQueue *_queue;
    HMBLocalSQLContext *_local;
    HMFUnfairLock *_lock;
    NSMapTable *_openZonesByZoneID;
    CDUnknownBlockType _localZoneFactory;
}

@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<HMBLocalDatabaseDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) HMBLocalSQLContext *local; // @synthesize local=_local;
@property (copy, nonatomic) CDUnknownBlockType localZoneFactory; // @synthesize localZoneFactory=_localZoneFactory;
@property (readonly, nonatomic) HMFUnfairLock *lock; // @synthesize lock=_lock;
@property (readonly, nonatomic) HMBModelContainer *modelContainer; // @synthesize modelContainer=_modelContainer;
@property (readonly, nonatomic) NSMapTable *openZonesByZoneID; // @synthesize openZonesByZoneID=_openZonesByZoneID;
@property (strong, nonatomic) NSOperationQueue *queue; // @synthesize queue=_queue;
@property (readonly) Class superclass;

+ (id)logCategory;
- (void).cxx_destruct;
- (void)detectedLocalCorruptionWithInfo:(id)arg1;
- (id)fetchZonesWithError:(id *)arg1;
- (id)initWithDatastorePath:(id)arg1 readOnly:(BOOL)arg2 modelContainer:(id)arg3;
- (id)initWithLocalSQLContext:(id)arg1 modelContainer:(id)arg2;
- (id)logIdentifier;
- (id)openExistingZoneWithMirror:(id)arg1 delegate:(id)arg2 error:(id *)arg3;
- (id)openExistingZoneWithZoneID:(id)arg1 delegate:(id)arg2 error:(id *)arg3;
- (id)openOrCreateZoneWithMirror:(id)arg1 delegate:(id)arg2 error:(id *)arg3;
- (id)openOrCreateZoneWithZoneID:(id)arg1 delegate:(id)arg2 error:(id *)arg3;
- (id)openedZoneWithMirror:(id)arg1;
- (id)openedZoneWithZoneID:(id)arg1;
- (BOOL)removeLocalDataForZone:(id)arg1 error:(id *)arg2;
- (id)removeZone:(id)arg1;
- (id)schemaHashForModel:(id)arg1;
- (BOOL)shouldLogPrivateInformation;

@end

