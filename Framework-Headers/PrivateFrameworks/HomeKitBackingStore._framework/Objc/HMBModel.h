//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <HMFoundation/HMFObject.h>

#import <HomeKitBackingStore/HMBModelProperties-Protocol.h>
#import <HomeKitBackingStore/HMFLogging-Protocol.h>

@class HMBModelContainer, HMFVersion, NSDictionary, NSMutableDictionary, NSSet, NSString, NSUUID;

@interface HMBModel : HMFObject <HMFLogging, HMBModelProperties>
{
    NSMutableDictionary *_hmbReserved;
    NSUUID *_hmbModelID;
    NSUUID *_hmbParentModelID;
    NSString *_hmbType;
    HMFVersion *_hmbDataVersion;
    unsigned long long _hmbRecordRow;
    NSSet *_hmbUnavailableProperties;
    NSSet *_hmbReadOnlyProperties;
    HMBModelContainer *_hmbModelContainer;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) NSString *hmbCanonicalType;
@property (readonly, nonatomic) HMFVersion *hmbContainerDataVersion;
@property (strong, nonatomic) HMFVersion *hmbDataVersion; // @synthesize hmbDataVersion=_hmbDataVersion;
@property (readonly, nonatomic) NSSet *hmbDependentUUIDs;
@property (readonly, nonatomic) NSString *hmbDescription;
@property (nonatomic) BOOL hmbExternallyFetched;
@property (readonly, nonatomic) BOOL hmbIgnoreModel;
@property (strong, nonatomic) HMFVersion *hmbIgnoredBefore;
@property (readonly, nonatomic) BOOL hmbIsModelGenericRepresentation;
@property (readonly, nonatomic) BOOL hmbIsModelReadOnly;
@property (weak, nonatomic) HMBModelContainer *hmbModelContainer; // @synthesize hmbModelContainer=_hmbModelContainer;
@property (strong, nonatomic) NSUUID *hmbModelID; // @synthesize hmbModelID=_hmbModelID;
@property (strong, nonatomic) NSUUID *hmbParentModelID; // @synthesize hmbParentModelID=_hmbParentModelID;
@property (readonly, nonatomic) NSDictionary *hmbQueryableProperties;
@property (strong, nonatomic) NSSet *hmbReadOnlyProperties; // @synthesize hmbReadOnlyProperties=_hmbReadOnlyProperties;
@property (nonatomic) unsigned long long hmbRecordRow; // @synthesize hmbRecordRow=_hmbRecordRow;
@property (strong, nonatomic) NSMutableDictionary *hmbReserved; // @synthesize hmbReserved=_hmbReserved;
@property (readonly, nonatomic) NSSet *hmbSetProperties;
@property (strong, nonatomic) NSString *hmbType; // @synthesize hmbType=_hmbType;
@property (strong, nonatomic) NSSet *hmbUnavailableProperties; // @synthesize hmbUnavailableProperties=_hmbUnavailableProperties;
@property (readonly) Class superclass;

+ (id)formattedStringForValue:(id)arg1;
+ (id)hmbExternalProperties;
+ (id)hmbExternalRecordType;
+ (Class)hmbGenericRepresentation;
+ (id)hmbProperties;
+ (id)hmbReadOnlyBefore;
+ (id)hmbSchemaHashRoot;
+ (BOOL)hmbShouldLogPrivateInformation;
+ (id)logCategory;
+ (id)properties;
+ (BOOL)propertyDiffersFrom:(id)arg1 to:(id)arg2;
+ (BOOL)resolveInstanceMethod:(SEL)arg1;
+ (void)setHmbShouldLogPrivateInformation:(BOOL)arg1;
+ (id)shortDescription;
+ (id)sort:(id)arg1;
- (void).cxx_destruct;
- (BOOL)_validateType:(id)arg1 error:(id *)arg2;
- (id)copy;
- (void)dumpDebug;
- (void)dumpDebug:(id)arg1;
- (void)hmbAssociateWithContainer:(id)arg1;
- (BOOL)hmbCanonicalTypeInferred;
- (id)hmbDefaultValueForPropertyNamed:(id)arg1;
- (BOOL)hmbDiff:(id)arg1 differingFields:(id *)arg2;
- (id)hmbMerge:(id)arg1 fromStorageLocation:(unsigned long long)arg2;
- (void)hmbMergeMetadataFromModel:(id)arg1 fromStorageLocation:(unsigned long long)arg2;
- (id)hmbPrepareFor:(unsigned long long)arg1;
- (BOOL)hmbPropertyIsAvailable:(id)arg1;
- (BOOL)hmbPropertyIsExternal:(id)arg1;
- (BOOL)hmbPropertyIsReadOnly:(id)arg1;
- (id)hmbPropertyNamed:(id)arg1;
- (id)hmbPropertyNamed:(id)arg1 isSet:(BOOL *)arg2;
- (BOOL)hmbPropertyWasSet:(id)arg1;
- (void)hmbSetProperty:(id)arg1 named:(id)arg2;
- (void)hmbSetPropertyIfNotNil:(id)arg1 named:(id)arg2;
- (BOOL)hmbValidForStorage:(id)arg1;
- (id)initWithModelID:(id)arg1 parentModelID:(id)arg2;
- (BOOL)isEqual:(id)arg1;
- (id)logIdentifier;
- (id)populateModelWithDictionary:(id)arg1 fromStorageLocation:(unsigned long long)arg2;
- (id)prepareForStorageLocation:(unsigned long long)arg1 using:(id)arg2 updatedModelIDs:(id)arg3 error:(id *)arg4;
- (id)validateType:(id)arg1 path:(id)arg2;

@end

