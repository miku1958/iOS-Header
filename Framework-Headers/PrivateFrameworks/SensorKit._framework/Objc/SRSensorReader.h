//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <SensorKit/SRAuthorizationClientDelegate-Protocol.h>
#import <SensorKit/SRDaemonNotificationDelegate-Protocol.h>

@class NSDictionary, NSString, NSXPCConnection, SRAuthorizationClient, SRDaemonNotification, SRDatastore;
@protocol SRSensorReaderDelegate;

@interface SRSensorReader : NSObject <SRAuthorizationClientDelegate, SRDaemonNotificationDelegate>
{
    SRDaemonNotification *_daemonNotification;
    SRDatastore *_datastore;
    NSDictionary *_deviceDetails;
    double _serviceStartTime;
    double _earliestEligibleTime;
    _Atomic int _authState;
    BOOL _connectionDidInvalidate;
    BOOL _bypassHoldingPeriod;
    NSString *_sensor;
    id<SRSensorReaderDelegate> _delegate;
    NSDictionary *_nextDatastoreFiles;
    SRAuthorizationClient *_authorizationClient;
    NSXPCConnection *_connection;
    NSString *_bundleId;
    Class _sampleClass;
    Class _exportingSampleClass;
}

@property (strong) SRAuthorizationClient *authorizationClient; // @synthesize authorizationClient=_authorizationClient;
@property (readonly) long long authorizationStatus;
@property (copy) NSString *bundleId; // @synthesize bundleId=_bundleId;
@property (nonatomic) BOOL bypassHoldingPeriod; // @synthesize bypassHoldingPeriod=_bypassHoldingPeriod;
@property (strong, nonatomic) NSXPCConnection *connection; // @synthesize connection=_connection;
@property BOOL connectionDidInvalidate; // @synthesize connectionDidInvalidate=_connectionDidInvalidate;
@property (readonly, strong) SRDatastore *datastore;
@property (readonly, copy) NSString *debugDescription;
@property (weak) id<SRSensorReaderDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) double earliestEligibleTime;
@property (readonly, nonatomic) Class exportingSampleClass; // @synthesize exportingSampleClass=_exportingSampleClass;
@property (readonly) unsigned long long hash;
@property (strong) NSDictionary *nextDatastoreFiles; // @synthesize nextDatastoreFiles=_nextDatastoreFiles;
@property (readonly, nonatomic) Class sampleClass; // @synthesize sampleClass=_sampleClass;
@property (copy) NSString *sensor; // @synthesize sensor=_sensor;
@property (readonly, nonatomic) double serviceStartTime;
@property (readonly) Class superclass;

+ (void)authorizationRequestStatusForBundle:(id)arg1 sensors:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (id)clientInterface;
+ (id)connectionToDaemon;
+ (CDUnknownBlockType)createExportDataForServices:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
+ (CDUnknownBlockType)createExportDataWithCompletionHandler:(CDUnknownBlockType)arg1;
+ (void)initialize;
+ (id)new;
+ (id)remoteInterface;
+ (void)requestAuthorizationForBundle:(id)arg1 sensors:(id)arg2 legacyPromptErrorBehavior:(BOOL)arg3 withCompletionHandler:(CDUnknownBlockType)arg4;
+ (void)requestAuthorizationForBundle:(id)arg1 sensors:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
+ (void)requestAuthorizationForSensors:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void).cxx_destruct;
- (void)_startRecordingWithSensorConfiguration:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)authorizedServices;
- (void)authorizedServicesDidChange:(id)arg1 deniedServices:(id)arg2 dataCollectionEnabled:(BOOL)arg3 onboardingCompleted:(BOOL)arg4 forBundleIdentifier:(id)arg5;
- (void)continueFetchRequest:(id)arg1 from:(double)arg2 to:(double)arg3 withDatastoreFiles:(id)arg4 callback:(CDUnknownBlockType)arg5;
- (CDUnknownBlockType)createExportDataWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)daemonNotificationDaemonDidStart:(id)arg1;
- (void)dealloc;
- (void)didCompleteFetch:(id)arg1;
- (void)didFetchDevices:(id)arg1;
- (void)fetch:(id)arg1;
- (void)fetchDevices;
- (void)fetchDevices:(CDUnknownBlockType)arg1;
- (void)fetchDevicesDidFailWithError:(id)arg1;
- (void)fetchReaderMetadata;
- (void)fetchSampleBytesFrom:(double)arg1 to:(double)arg2 inSegment:(id)arg3 fetchRequest:(id)arg4 retryAttempt:(long long)arg5 sampleCallback:(CDUnknownBlockType)arg6;
- (void)fetchSampleBytesFrom:(double)arg1 to:(double)arg2 inSegment:(id)arg3 fetchRequest:(id)arg4 sampleCallback:(CDUnknownBlockType)arg5;
- (BOOL)fetchingRequest:(id)arg1 didFetchResult:(id)arg2;
- (void)fetchingRequest:(id)arg1 failedWithError:(id)arg2;
- (id)init;
- (id)initWithSensor:(id)arg1;
- (id)initWithSensor:(id)arg1 bundle:(id)arg2;
- (id)initWithSensor:(id)arg1 xpcConnection:(id)arg2 daemonNotification:(id)arg3 authorizationClient:(id)arg4 bundleId:(id)arg5;
- (BOOL)isAuthorized;
- (void)resetDatastoreFiles:(id)arg1;
- (void)sensorReaderDidStopRecording;
- (void)sensorReaderWillStartRecording;
- (void)setAuthorizationStatus:(long long)arg1;
- (void)setExportingSampleClass:(Class)arg1;
- (void)setSampleClass:(Class)arg1;
- (void)setupConnection;
- (void)startRecording;
- (void)startRecordingFailedWithError:(id)arg1;
- (void)startRecordingWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)stopRecording;
- (void)stopRecordingFailedWithError:(id)arg1;
- (void)stopRecordingWithCompletionHandler:(CDUnknownBlockType)arg1;

@end

