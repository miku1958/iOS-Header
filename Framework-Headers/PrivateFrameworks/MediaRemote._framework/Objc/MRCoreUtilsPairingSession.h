//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <MediaRemote/MRCryptoPairingSession.h>

@class MRDeviceInfo, MRPasscodeCredentials, NSArray, NSData, NSMutableData, NSMutableDictionary, NSObject, NSString;
@protocol OS_dispatch_queue;

@interface MRCoreUtilsPairingSession : MRCryptoPairingSession
{
    MRPasscodeCredentials *_credentials;
    struct PairingSessionPrivate *_pairingSession;
    struct {
        void *context;
        CDUnknownFunctionPointerType showSetupCode_f;
        CDUnknownFunctionPointerType hideSetupCode_f;
        CDUnknownFunctionPointerType promptForSetupCode_f;
        CDUnknownFunctionPointerType copyIdentity_f;
        CDUnknownFunctionPointerType findPeer_f;
        CDUnknownFunctionPointerType savePeer_f;
        CDUnknownFunctionPointerType resumeRequest_f;
        CDUnknownFunctionPointerType resumeResponse_f;
    } _pairingDelegate;
    NSObject<OS_dispatch_queue> *_queue;
    BOOL _hasExchangedMessage;
    unsigned int _pairingFlags;
    unsigned long long _state;
    NSData *_inputKey;
    NSMutableData *_inputNonce;
    NSData *_outputKey;
    NSMutableData *_outputNonce;
}

@property (readonly, nonatomic) BOOL hasExchangedMessage; // @synthesize hasExchangedMessage=_hasExchangedMessage;
@property (strong, nonatomic) NSData *inputKey; // @synthesize inputKey=_inputKey;
@property (strong, nonatomic) NSMutableData *inputNonce; // @synthesize inputNonce=_inputNonce;
@property (readonly, nonatomic) NSMutableDictionary *mediaRemotePairedDevices;
@property (strong, nonatomic) NSData *outputKey; // @synthesize outputKey=_outputKey;
@property (strong, nonatomic) NSMutableData *outputNonce; // @synthesize outputNonce=_outputNonce;
@property (readonly, nonatomic) MRDeviceInfo *pairedPeerDevice;
@property (readonly, nonatomic) NSArray *pairedPeerDevices;
@property (nonatomic) unsigned int pairingFlags; // @synthesize pairingFlags=_pairingFlags;
@property (readonly, nonatomic) NSString *peerIdentifier;
@property (readonly, nonatomic) unsigned long long state; // @synthesize state=_state;

- (void).cxx_destruct;
- (id)addPeer;
- (void)close;
- (void)dealloc;
- (id)decryptData:(id)arg1 withError:(id *)arg2;
- (BOOL)deleteIdentityWithError:(id *)arg1;
- (id)encryptData:(id)arg1 withError:(id *)arg2;
- (void)handlePairingExchangeData:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)handlePairingFailureWithStatus:(int)arg1;
- (id)initWithRole:(unsigned long long)arg1 device:(id)arg2;
- (id)initializePairingSession:(struct PairingSessionPrivate *)arg1;
- (BOOL)isPaired;
- (BOOL)isValid;
- (void)open;
- (void)openInState:(unsigned long long)arg1;
- (id)pairedDevices;
- (id)removePeer;
- (BOOL)shouldAutoRetryPairingExchange:(id)arg1;
- (id)updatePeer;

@end

