//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class HDStatisticsCollectionCalculator, HDStatisticsCollectionCalculatorDefaultDataSource, HKStatistics, NSDate, NSDateInterval, NSNumber;
@protocol HDStatisticsCollectionCalculatorSourceOrderProvider;

@interface HDHeadphoneAudioExposureStatisticsBucket : NSObject
{
    struct os_unfair_lock_s _lock;
    HDStatisticsCollectionCalculator *_primaryCalculator;
    HDStatisticsCollectionCalculator *_journaledCalculator;
    NSDate *_startDate;
    NSDate *_earliestStartDate;
    BOOL _boundedInterval;
    NSNumber *_anchor;
    HKStatistics *_previousStatistics;
    BOOL _includesPrunableData;
    HDStatisticsCollectionCalculatorDefaultDataSource *_dataSource;
    id<HDStatisticsCollectionCalculatorSourceOrderProvider> _sourceOrderProvider;
}

@property (readonly, nonatomic) NSNumber *anchor; // @synthesize anchor=_anchor;
@property (readonly, nonatomic) BOOL boundedInterval; // @synthesize boundedInterval=_boundedInterval;
@property (readonly, nonatomic) NSDateInterval *dateInterval;
@property (readonly, nonatomic) NSDate *earliestStartDate; // @synthesize earliestStartDate=_earliestStartDate;
@property (readonly, nonatomic) BOOL hasPreviousStatistics;
@property (readonly, nonatomic) BOOL includesJournaledSamples;
@property (nonatomic, setter=unitTesting_setIncludesPrunableData:) BOOL includesPrunableData; // @synthesize includesPrunableData=_includesPrunableData;
@property (readonly, nonatomic) HDStatisticsCollectionCalculator *journaledCalculator; // @synthesize journaledCalculator=_journaledCalculator;
@property (strong, nonatomic, setter=unitTesting_setPreviousStatistics:) HKStatistics *previousStatistics; // @synthesize previousStatistics=_previousStatistics;
@property (readonly, nonatomic) HDStatisticsCollectionCalculator *primaryCalculator; // @synthesize primaryCalculator=_primaryCalculator;
@property (readonly, nonatomic) NSDate *startDate; // @synthesize startDate=_startDate;

+ (id)_currentDoseStringForEndDate:(id)arg1 earliestStartDate:(id)arg2 profile:(id)arg3;
+ (id)_makeBucketsForNowDate:(id)arg1 earliestStartDate:(id)arg2 profile:(id)arg3;
+ (id)_makeDataSourceWithProfile:(id)arg1;
+ (id)_makeJournaledCalculator;
+ (id)_makePrimaryCalculator;
+ (id)_makeSourceOrderProviderWithProfile:(id)arg1;
+ (id)bucketForArchivedRepresentation:(id)arg1 profile:(id)arg2 error:(id *)arg3;
+ (id)makeBucketsForProfile:(id)arg1 earliestStartDate:(id)arg2;
- (void).cxx_destruct;
- (id)_initWithProfile:(id)arg1 primaryCalculator:(id)arg2 journaledCalculator:(id)arg3 startDate:(id)arg4 earliestStartDate:(id)arg5 boundedInterval:(BOOL)arg6 anchor:(id)arg7 previousStatistics:(id)arg8 includesPrunableData:(BOOL)arg9;
- (id)_initWithProfile:(id)arg1 startDate:(id)arg2 earliestStartDate:(id)arg3 boundedInterval:(BOOL)arg4;
- (id)_lock_addQuantitySamples:(id)arg1 anchor:(id)arg2 error:(id *)arg3;
- (id)_lock_archivedRepresentationWithError:(id *)arg1;
- (id)_lock_copyWithEarliestStartDate:(id)arg1 resetDoseToZero:(BOOL)arg2 error:(id *)arg3;
- (id)_lock_currentStatisticsWithError:(id *)arg1;
- (id)_lock_dateInterval;
- (id)_lock_fetchIncludesPrunableDataWithError:(id *)arg1;
- (id)_lock_journalQuantitySamples:(id)arg1 error:(id *)arg2;
- (id)_lock_queryForInitialStatisticsWithError:(id *)arg1;
- (id)archivedRepresentationWithError:(id *)arg1;
- (id)copyWithEarliestStartDate:(id)arg1 resetDoseToZero:(BOOL)arg2 error:(id *)arg3;
- (BOOL)isExpiredForNowDate:(id)arg1;
- (id)queryForInitialStatisticsWithError:(id *)arg1;
- (id)snapshotStatisticsWithError:(id *)arg1;
- (id)updateWithSampleBatch:(id)arg1 error:(id *)arg2;

@end

