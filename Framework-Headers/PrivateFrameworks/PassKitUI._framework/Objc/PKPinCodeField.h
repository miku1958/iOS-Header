//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIView.h>

#import <PassKitUI/UIKeyInput-Protocol.h>

@class NSArray, NSCharacterSet, NSMutableString, NSString, UILabel, UITextInputPasswordRules;
@protocol PKPinCodeFieldDelegate;

@interface PKPinCodeField : UIView <UIKeyInput>
{
    unsigned long long _pinCodeLength;
    NSCharacterSet *_numbersOnlyCharacterSet;
    NSMutableString *_pinCode;
    double _fontHeight;
    NSArray *_numberLabels;
    NSArray *_dashViews;
    UILabel *_hyphenLabel;
    BOOL _keyboardOverrideEnabled;
    BOOL _hyphenatePinCode;
    id<PKPinCodeFieldDelegate> _delegate;
}

@property (nonatomic) long long autocapitalizationType;
@property (nonatomic) long long autocorrectionType;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<PKPinCodeFieldDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) BOOL enablesReturnKeyAutomatically;
@property (readonly, nonatomic) BOOL hasText;
@property (readonly) unsigned long long hash;
@property (nonatomic) BOOL hyphenatePinCode; // @synthesize hyphenatePinCode=_hyphenatePinCode;
@property (nonatomic) long long keyboardAppearance;
@property (nonatomic) long long keyboardType;
@property (copy, nonatomic) UITextInputPasswordRules *passwordRules;
@property (copy, nonatomic) NSString *pinCode;
@property (nonatomic) long long returnKeyType;
@property (nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;
@property (nonatomic) long long smartDashesType;
@property (nonatomic) long long smartInsertDeleteType;
@property (nonatomic) long long smartQuotesType;
@property (nonatomic) long long spellCheckingType;
@property (readonly) Class superclass;
@property (copy, nonatomic) NSString *textContentType;

- (void).cxx_destruct;
- (BOOL)canBecomeFirstResponder;
- (void)deleteBackward;
- (id)initWithPinCodeLength:(unsigned long long)arg1 delegate:(id)arg2;
- (void)insertText:(id)arg1;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)updateCharacterVisibility;

@end

