//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/NSOperation.h>

@class NSDictionary, NSError, NSString, NSURL, NSXPCConnection, SSURLConnectionResponse;
@protocol WLKNetworkRequestOperationDelegate;

@interface WLKNetworkRequestOperation : NSOperation
{
    NSError *_error;
    id _response;
    unsigned long long _numRetries;
    NSXPCConnection *_connection;
    BOOL _allowAuthentication;
    BOOL _requiresMescal;
    BOOL _encodeQueryParams;
    BOOL _runsInDaemon;
    id<WLKNetworkRequestOperationDelegate> _delegate;
    NSDictionary *_additionalHeaderFields;
    NSString *_serverRouteKey;
    NSDictionary *_serverRouteReplacements;
    NSDictionary *_queryParameters;
    double _timeout;
    NSString *_identifier;
    CDUnknownBlockType _requestCompletionBlock;
    NSString *_endpoint;
    NSString *_httpMethod;
    SSURLConnectionResponse *_fullResponse;
    NSString *_callerOverride;
    NSURL *_baseURL;
}

@property (strong, nonatomic) NSDictionary *additionalHeaderFields; // @synthesize additionalHeaderFields=_additionalHeaderFields;
@property (nonatomic) BOOL allowAuthentication; // @synthesize allowAuthentication=_allowAuthentication;
@property (copy, nonatomic) NSURL *baseURL; // @synthesize baseURL=_baseURL;
@property (strong, nonatomic) NSString *callerOverride; // @synthesize callerOverride=_callerOverride;
@property (readonly, copy, nonatomic) NSURL *defaultBaseURL;
@property (weak, nonatomic) id<WLKNetworkRequestOperationDelegate> delegate; // @synthesize delegate=_delegate;
@property (nonatomic) BOOL encodeQueryParams; // @synthesize encodeQueryParams=_encodeQueryParams;
@property (readonly, copy, nonatomic) NSString *endpoint; // @synthesize endpoint=_endpoint;
@property (readonly, nonatomic) NSError *error; // @synthesize error=_error;
@property (readonly, copy, nonatomic) SSURLConnectionResponse *fullResponse; // @synthesize fullResponse=_fullResponse;
@property (readonly, copy, nonatomic) NSString *httpMethod; // @synthesize httpMethod=_httpMethod;
@property (readonly, copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property (readonly, copy, nonatomic) NSDictionary *queryParameters; // @synthesize queryParameters=_queryParameters;
@property (copy, nonatomic) CDUnknownBlockType requestCompletionBlock; // @synthesize requestCompletionBlock=_requestCompletionBlock;
@property (nonatomic) BOOL requiresMescal; // @synthesize requiresMescal=_requiresMescal;
@property (readonly, nonatomic) id response; // @synthesize response=_response;
@property (nonatomic) BOOL runsInDaemon; // @synthesize runsInDaemon=_runsInDaemon;
@property (readonly, copy, nonatomic) NSString *serverRouteKey; // @synthesize serverRouteKey=_serverRouteKey;
@property (readonly, copy, nonatomic) NSDictionary *serverRouteReplacements; // @synthesize serverRouteReplacements=_serverRouteReplacements;
@property (readonly, nonatomic) double timeout; // @synthesize timeout=_timeout;

+ (id)_defaultBaseURL;
+ (void)_networkRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)logNetworkHeaders:(id)arg1 identifier:(id)arg2;
+ (unsigned long long)preferredCachePolicy;
- (void).cxx_destruct;
- (id)_connection;
- (void)_didFailWithError:(id)arg1;
- (void)_didFinishWithResponse:(id)arg1;
- (void)_failWithError:(id)arg1;
- (void)_finishWithResponse:(id)arg1;
- (id)_requestPropertiesWithAPIEndpoint:(id)arg1 baseURL:(id)arg2 queryParameters:(id)arg3 httpMethod:(id)arg4 additionalHeaderFields:(id)arg5;
- (id)_requestPropertiesWithServerRouteKey:(id)arg1 queryParameters:(id)arg2 additionalHeaderFields:(id)arg3;
- (id)_runNetworkOperationAndReturnError:(id *)arg1;
- (void)didFail;
- (void)didFinish;
- (id)init;
- (id)initWithEndpoint:(id)arg1 queryParameters:(id)arg2;
- (id)initWithEndpoint:(id)arg1 queryParameters:(id)arg2 httpMethod:(id)arg3;
- (id)initWithEndpoint:(id)arg1 queryParameters:(id)arg2 httpMethod:(id)arg3 timeout:(double)arg4;
- (id)initWithServerRouteKey:(id)arg1;
- (id)initWithServerRouteKey:(id)arg1 serverRouteReplacements:(id)arg2;
- (id)initWithServerRouteKey:(id)arg1 serverRouteReplacements:(id)arg2 queryParameters:(id)arg3;
- (id)initWithServerRouteKey:(id)arg1 serverRouteReplacements:(id)arg2 queryParameters:(id)arg3 timeout:(double)arg4;
- (void)main;
- (id)responseProcessor;

@end

