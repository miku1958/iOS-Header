//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <WatchListKit/WLKInstallable-Protocol.h>

@class NSArray, NSDictionary, NSString, NSURL, WLKArtworkVariantListing;

@interface WLKChannelDetails : NSObject <WLKInstallable>
{
    BOOL _subscribed;
    BOOL _itunes;
    BOOL _firstParty;
    BOOL _watchListEnabled;
    BOOL _consented;
    BOOL _apSubscription;
    BOOL _shouldTrackPlayActivity;
    BOOL _appInstalled;
    BOOL _requiresAccountLevelConsent;
    BOOL _requiresSubscriptionForConsent;
    BOOL _shouldPromptForConsentOnSubscriptionChange;
    BOOL _shouldIncludeInConsent;
    NSString *_channelID;
    NSString *_name;
    NSArray *_appAdamIDs;
    NSArray *_appBundleIDs;
    NSString *_appName;
    WLKArtworkVariantListing *_images;
    NSDictionary *_rateLimit;
    unsigned long long _channelType;
    NSString *_minRequiredAppVersion;
    NSString *_appStoreURLString;
}

@property (readonly, nonatomic, getter=isApSubscription) BOOL apSubscription; // @synthesize apSubscription=_apSubscription;
@property (readonly, copy, nonatomic) NSArray *appAdamIDs;
@property (readonly, copy, nonatomic) NSArray *appAdamIDs; // @synthesize appAdamIDs=_appAdamIDs;
@property (readonly, copy, nonatomic) NSArray *appBundleIDs;
@property (readonly, copy, nonatomic) NSArray *appBundleIDs; // @synthesize appBundleIDs=_appBundleIDs;
@property (readonly, nonatomic, getter=isAppInstalled) BOOL appInstalled; // @synthesize appInstalled=_appInstalled;
@property (readonly, copy, nonatomic) NSString *appName; // @synthesize appName=_appName;
@property (readonly, copy, nonatomic) NSURL *appStoreURL;
@property (readonly, copy, nonatomic) NSURL *appStoreURL;
@property (copy, nonatomic) NSString *appStoreURLString; // @synthesize appStoreURLString=_appStoreURLString;
@property (readonly, copy, nonatomic) NSString *channelID; // @synthesize channelID=_channelID;
@property (readonly, nonatomic) unsigned long long channelType; // @synthesize channelType=_channelType;
@property (readonly, nonatomic, getter=isConsented) BOOL consented; // @synthesize consented=_consented;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic, getter=isFirstParty) BOOL firstParty; // @synthesize firstParty=_firstParty;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) WLKArtworkVariantListing *images; // @synthesize images=_images;
@property (readonly, nonatomic, getter=isiTunes) BOOL itunes; // @synthesize itunes=_itunes;
@property (readonly, nonatomic) NSString *minRequiredAppVersion; // @synthesize minRequiredAppVersion=_minRequiredAppVersion;
@property (readonly, copy, nonatomic) NSString *name;
@property (readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
@property (readonly, nonatomic) NSDictionary *rateLimit; // @synthesize rateLimit=_rateLimit;
@property (readonly, nonatomic) BOOL requiresAccountLevelConsent; // @synthesize requiresAccountLevelConsent=_requiresAccountLevelConsent;
@property (readonly, nonatomic) BOOL requiresSubscriptionForConsent; // @synthesize requiresSubscriptionForConsent=_requiresSubscriptionForConsent;
@property (readonly, nonatomic) BOOL shouldIncludeInConsent; // @synthesize shouldIncludeInConsent=_shouldIncludeInConsent;
@property (readonly, nonatomic) BOOL shouldPromptForConsentOnSubscriptionChange; // @synthesize shouldPromptForConsentOnSubscriptionChange=_shouldPromptForConsentOnSubscriptionChange;
@property (readonly, nonatomic) BOOL shouldTrackPlayActivity; // @synthesize shouldTrackPlayActivity=_shouldTrackPlayActivity;
@property (readonly, nonatomic, getter=isSubscribed) BOOL subscribed; // @synthesize subscribed=_subscribed;
@property (readonly) Class superclass;
@property (readonly, nonatomic, getter=isWatchListEnabled) BOOL watchListEnabled; // @synthesize watchListEnabled=_watchListEnabled;

- (void).cxx_destruct;
- (id)appIconURLForSize:(struct CGSize)arg1;
- (id)init;
- (id)initWithDictionary:(id)arg1;
- (id)sui_channelName;

@end

