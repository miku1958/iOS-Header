//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class GEOUserSessionEntity, NSArray, NSDictionary, NSMutableArray, NSSet, NSString, NSURL, PARBag, PRSRankingKnobs;
@protocol OS_dispatch_group, OS_dispatch_queue, PRSSessionController;

@interface PRSBagHandler : NSObject
{
    BOOL _waitingForLocation;
    NSObject<OS_dispatch_group> *_locationGroup;
    id _lockObject;
    NSMutableArray *_tasks;
    PARBag *_bag;
    NSObject<OS_dispatch_queue> *_bagQueue;
    BOOL _active;
    BOOL _cep_sort_of_tophits;
    id<PRSSessionController> _client;
    long long _status;
    double _searchRenderTimeout;
    NSDictionary *_model_parameter_values;
    long long _cep_probability_factor;
    double _cep_top_hit_threshold;
    NSDictionary *_cep_server_values;
    PRSRankingKnobs *_ranking_server_knobs;
    long long _cat_score_enum;
    NSSet *_appBlacklist;
    NSArray *_enabledDomains;
    NSString *_fteLocString;
    NSString *_fteLearnMoreString;
    NSString *_fteContinueString;
    NSString *_lookupFirstUseDescription1;
    NSString *_lookupFirstUseDescription2;
    NSString *_lookupFirstUseLearnMore;
    GEOUserSessionEntity *_geoUserSessionEntity;
    NSURL *_correctionDictURL;
    NSDictionary *_correctionDict;
}

@property (nonatomic) BOOL active; // @synthesize active=_active;
@property (strong, nonatomic) NSSet *appBlacklist; // @synthesize appBlacklist=_appBlacklist;
@property (nonatomic) long long cat_score_enum; // @synthesize cat_score_enum=_cat_score_enum;
@property (nonatomic) long long cep_probability_factor; // @synthesize cep_probability_factor=_cep_probability_factor;
@property (strong, nonatomic) NSDictionary *cep_server_values; // @synthesize cep_server_values=_cep_server_values;
@property (nonatomic) BOOL cep_sort_of_tophits; // @synthesize cep_sort_of_tophits=_cep_sort_of_tophits;
@property (nonatomic) double cep_top_hit_threshold; // @synthesize cep_top_hit_threshold=_cep_top_hit_threshold;
@property (weak) id<PRSSessionController> client; // @synthesize client=_client;
@property (strong) NSDictionary *correctionDict; // @synthesize correctionDict=_correctionDict;
@property (strong) NSURL *correctionDictURL; // @synthesize correctionDictURL=_correctionDictURL;
@property (strong, nonatomic) NSArray *enabledDomains; // @synthesize enabledDomains=_enabledDomains;
@property (strong, nonatomic) NSString *fteContinueString; // @synthesize fteContinueString=_fteContinueString;
@property (strong, nonatomic) NSString *fteLearnMoreString; // @synthesize fteLearnMoreString=_fteLearnMoreString;
@property (strong, nonatomic) NSString *fteLocString; // @synthesize fteLocString=_fteLocString;
@property (readonly) GEOUserSessionEntity *geoUserSessionEntity; // @synthesize geoUserSessionEntity=_geoUserSessionEntity;
@property (readonly, nonatomic) NSString *lookupFirstUseDescription1; // @synthesize lookupFirstUseDescription1=_lookupFirstUseDescription1;
@property (readonly, nonatomic) NSString *lookupFirstUseDescription2; // @synthesize lookupFirstUseDescription2=_lookupFirstUseDescription2;
@property (readonly, nonatomic) NSString *lookupFirstUseLearnMore; // @synthesize lookupFirstUseLearnMore=_lookupFirstUseLearnMore;
@property (strong, nonatomic) NSDictionary *model_parameter_values; // @synthesize model_parameter_values=_model_parameter_values;
@property (strong) PRSRankingKnobs *ranking_server_knobs; // @synthesize ranking_server_knobs=_ranking_server_knobs;
@property (readonly) double searchRenderTimeout; // @synthesize searchRenderTimeout=_searchRenderTimeout;
@property (nonatomic) long long status; // @synthesize status=_status;

+ (void)initialize;
+ (id)sharedHandler;
- (void).cxx_destruct;
- (id)_base64CEPDataNoCopyFromFeatureData:(id)arg1;
- (void)_processQIFeatures:(id)arg1 forClient:(id)arg2;
- (void)activate;
- (id)applicationNameForUserAgent;
- (void)deactivate;
- (id)excludedDomainIdentifiers;
- (void)getFTEStringsWithReply:(CDUnknownBlockType)arg1;
- (id)init;
- (BOOL)isEnabled;
- (BOOL)isLocaleSupported:(id)arg1;
- (void)parseCEPFromData:(id)arg1 forClient:(id)arg2;
- (void)refreshGUID;
- (void)removeTask:(id)arg1;
- (BOOL)searchSupported:(BOOL)arg1;
- (BOOL)sessionReady;
- (id)supportedServices;
- (void)triggerTaskWhenReady:(id)arg1;
- (void)updateFromSession:(id)arg1 bag:(id)arg2 forClient:(id)arg3 error:(id)arg4;
- (void)updateWithBagDictionary:(id)arg1 error:(id)arg2;
- (void)updateWithDictionary:(id)arg1;
- (id)userId;

@end

