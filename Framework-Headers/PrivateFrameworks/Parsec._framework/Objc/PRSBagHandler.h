//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <Parsec/CLLocationManagerDelegate-Protocol.h>
#import <Parsec/PRSParsecDataHandler-Protocol.h>
#import <Parsec/PRSResourceProvider-Protocol.h>
#import <Parsec/PRSSessionController-Protocol.h>

@class CLInUseAssertion, CLLocation, CLLocationManager, GEOUserSessionEntity, NSArray, NSDictionary, NSError, NSMutableArray, NSMutableData, NSSet, NSString, NSTimer, NSURL, NSURLSessionConfiguration, NSURLSessionDataTask, PRSFairPlaySAPSession, PRSSharedParsecSession;
@protocol OS_dispatch_group, OS_dispatch_queue, PRSBagFetchSuccessDelegate><PRSInstalledAppsDataSourceDelegate, PRSSessionController;

@interface PRSBagHandler : NSObject <PRSParsecDataHandler, PRSResourceProvider, PRSSessionController, CLLocationManagerDelegate>
{
    PRSSharedParsecSession *_bagSession;
    NSString *_waldoIP;
    struct __SCNetworkReachability *_networkReachability;
    NSObject<OS_dispatch_queue> *_bagQueue;
    BOOL _bagFailed;
    NSSet *_appIdentifierWhitelist;
    NSString *_connectionType;
    BOOL _userIdUsed;
    BOOL _waitingForLocation;
    NSObject<OS_dispatch_group> *_locationGroup;
    id _lockObject;
    BOOL _active;
    BOOL _parsecEnabled;
    BOOL _mescalEnabled;
    BOOL _ledbellyEnabled;
    BOOL _spriteEnabled;
    BOOL _useGUID;
    BOOL _limitedFeedback;
    BOOL _cep_sort_of_tophits;
    BOOL _allowStoreResults;
    BOOL _reloadSAP;
    int _version;
    id<PRSBagFetchSuccessDelegate><PRSInstalledAppsDataSourceDelegate> delegate;
    NSTimer *_guidTimer;
    NSArray *_enabledDomains;
    NSString *_userId;
    double _userIdTimeout;
    NSString *_feedback_content_encoding;
    NSURL *_searchURL;
    NSURL *_webSearchURL;
    NSURL *_feedbackURL;
    NSURL *_guidURL;
    NSURL *_qiFeaturesURL;
    NSURL *_appBlacklistURL;
    NSURL *_fallbackSearchURL;
    NSURL *_fallbackWebSearchURL;
    NSURL *_fallbackFeedbackURL;
    NSURL *_fallbackGuidURL;
    double _feedbackStatsInterval;
    double _retryAfter;
    double _searchRenderTimeout;
    NSError *_error;
    NSString *_serverVersion;
    long long _status;
    long long _minimumStringLength;
    long long _maximumCachedQueryCount;
    long long _maximumCachedResultCount;
    CLLocationManager *_locationManager;
    NSArray *_supportedGeoSources;
    GEOUserSessionEntity *_geoUserSessionEntity;
    long long _lookupSearchRenderTimeout;
    long long _lookupMinimumQueryLength;
    long long _lookupMaximumQueryLength;
    NSArray *_lookupEnabledDomains;
    NSString *_installedAppWhitelist;
    CLInUseAssertion *_assertion;
    NSSet *_appBlacklist;
    NSDictionary *_cep_qi_ratios;
    long long _cep_probability_factor;
    double _cep_top_hit_threshold;
    NSDictionary *_cep_server_values;
    NSDictionary *_ranking_server_knobs;
    long long _cat_score_enum;
    double _guidStartTime;
    NSDictionary *_namedResources;
    NSString *_locale;
    NSString *_storeFrontId;
    NSString *_preferredLanguages;
    NSURLSessionDataTask *_dataTask;
    NSMutableData *_collectedData;
    NSURLSessionDataTask *_guidDataTask;
    NSMutableData *_guidCollectedData;
    NSURLSessionDataTask *_qiFeaturesURLTask;
    NSURLSessionDataTask *_appBlacklistURLTask;
    NSMutableData *_qiFeaturesCollectedData;
    NSMutableData *_appBlacklistCollectedData;
    NSString *_appIdentifierListString;
    NSString *_fteLocString;
    NSString *_fteLearnMoreString;
    NSString *_fteContinueString;
    NSString *_lookupFirstUseDescription1;
    NSString *_lookupFirstUseDescription2;
    NSString *_lookupFirstUseLearnMore;
    NSDictionary *_installedApps;
    NSString *_whitelistSignature;
    NSDictionary *_resources;
    NSMutableArray *_queryTasks;
    id<PRSSessionController> _client;
    NSArray *_subscriptionServiceIdentifiers;
    NSArray *_subscriptionServiceDomains;
    long long _subscriptionTTL;
    NSArray *_subscriptions;
    NSDictionary *_mescalDict;
    PRSFairPlaySAPSession *_SAPSession;
}

@property (strong, nonatomic) PRSFairPlaySAPSession *SAPSession; // @synthesize SAPSession=_SAPSession;
@property (nonatomic) BOOL active; // @synthesize active=_active;
@property (readonly) BOOL allowStoreResults; // @synthesize allowStoreResults=_allowStoreResults;
@property (readonly, nonatomic) NSSet *appBlacklist; // @synthesize appBlacklist=_appBlacklist;
@property (strong) NSMutableData *appBlacklistCollectedData; // @synthesize appBlacklistCollectedData=_appBlacklistCollectedData;
@property (readonly) NSURL *appBlacklistURL; // @synthesize appBlacklistURL=_appBlacklistURL;
@property (strong) NSURLSessionDataTask *appBlacklistURLTask; // @synthesize appBlacklistURLTask=_appBlacklistURLTask;
@property (strong) NSString *appIdentifierListString; // @synthesize appIdentifierListString=_appIdentifierListString;
@property (readonly, nonatomic) NSString *applicationNameForUserAgent;
@property (readonly) CLInUseAssertion *assertion; // @synthesize assertion=_assertion;
@property (readonly) long long cat_score_enum; // @synthesize cat_score_enum=_cat_score_enum;
@property (readonly) long long cep_probability_factor; // @synthesize cep_probability_factor=_cep_probability_factor;
@property (readonly, nonatomic) NSDictionary *cep_qi_ratios; // @synthesize cep_qi_ratios=_cep_qi_ratios;
@property (readonly) NSDictionary *cep_server_values; // @synthesize cep_server_values=_cep_server_values;
@property (readonly) BOOL cep_sort_of_tophits; // @synthesize cep_sort_of_tophits=_cep_sort_of_tophits;
@property (readonly) double cep_top_hit_threshold; // @synthesize cep_top_hit_threshold=_cep_top_hit_threshold;
@property (weak) id<PRSSessionController> client; // @synthesize client=_client;
@property (strong) NSMutableData *collectedData; // @synthesize collectedData=_collectedData;
@property (readonly) NSString *connectionType; // @synthesize connectionType=_connectionType;
@property (strong) NSURLSessionDataTask *dataTask; // @synthesize dataTask=_dataTask;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<PRSBagFetchSuccessDelegate><PRSInstalledAppsDataSourceDelegate> delegate; // @synthesize delegate;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic, getter=isEnabled) BOOL enabled;
@property (strong, nonatomic) NSArray *enabledDomains; // @synthesize enabledDomains=_enabledDomains;
@property (readonly) NSError *error; // @synthesize error=_error;
@property (readonly, nonatomic) NSArray *excludedDomainIdentifiers;
@property (readonly) NSURL *fallbackFeedbackURL; // @synthesize fallbackFeedbackURL=_fallbackFeedbackURL;
@property (readonly) NSURL *fallbackGuidURL; // @synthesize fallbackGuidURL=_fallbackGuidURL;
@property (readonly) NSURL *fallbackSearchURL; // @synthesize fallbackSearchURL=_fallbackSearchURL;
@property (readonly) NSURL *fallbackWebSearchURL; // @synthesize fallbackWebSearchURL=_fallbackWebSearchURL;
@property (readonly) double feedbackStatsInterval; // @synthesize feedbackStatsInterval=_feedbackStatsInterval;
@property (readonly) NSURL *feedbackURL; // @synthesize feedbackURL=_feedbackURL;
@property (strong, nonatomic) NSString *feedback_content_encoding; // @synthesize feedback_content_encoding=_feedback_content_encoding;
@property (readonly, nonatomic) NSString *fteContinueString; // @synthesize fteContinueString=_fteContinueString;
@property (readonly, nonatomic) NSString *fteLearnMoreString; // @synthesize fteLearnMoreString=_fteLearnMoreString;
@property (readonly, nonatomic) NSString *fteLocString; // @synthesize fteLocString=_fteLocString;
@property (readonly) GEOUserSessionEntity *geoUserSessionEntity; // @synthesize geoUserSessionEntity=_geoUserSessionEntity;
@property (strong) NSMutableData *guidCollectedData; // @synthesize guidCollectedData=_guidCollectedData;
@property (strong) NSURLSessionDataTask *guidDataTask; // @synthesize guidDataTask=_guidDataTask;
@property double guidStartTime; // @synthesize guidStartTime=_guidStartTime;
@property (strong, nonatomic) NSTimer *guidTimer; // @synthesize guidTimer=_guidTimer;
@property (readonly) NSURL *guidURL; // @synthesize guidURL=_guidURL;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) NSString *installedAppWhitelist; // @synthesize installedAppWhitelist=_installedAppWhitelist;
@property (strong, nonatomic) NSDictionary *installedApps; // @synthesize installedApps=_installedApps;
@property (nonatomic) BOOL ledbellyEnabled; // @synthesize ledbellyEnabled=_ledbellyEnabled;
@property (readonly) BOOL limitedFeedback; // @synthesize limitedFeedback=_limitedFeedback;
@property (readonly) NSString *locale; // @synthesize locale=_locale;
@property (readonly) CLLocation *location;
@property (readonly) CLLocationManager *locationManager; // @synthesize locationManager=_locationManager;
@property (readonly, nonatomic) NSArray *lookupEnabledDomains; // @synthesize lookupEnabledDomains=_lookupEnabledDomains;
@property (readonly, nonatomic) NSString *lookupFirstUseDescription1; // @synthesize lookupFirstUseDescription1=_lookupFirstUseDescription1;
@property (readonly, nonatomic) NSString *lookupFirstUseDescription2; // @synthesize lookupFirstUseDescription2=_lookupFirstUseDescription2;
@property (readonly, nonatomic) NSString *lookupFirstUseLearnMore; // @synthesize lookupFirstUseLearnMore=_lookupFirstUseLearnMore;
@property (readonly, nonatomic) long long lookupMaximumQueryLength; // @synthesize lookupMaximumQueryLength=_lookupMaximumQueryLength;
@property (readonly, nonatomic) long long lookupMinimumQueryLength; // @synthesize lookupMinimumQueryLength=_lookupMinimumQueryLength;
@property (readonly, nonatomic) long long lookupSearchRenderTimeout; // @synthesize lookupSearchRenderTimeout=_lookupSearchRenderTimeout;
@property (readonly) long long maximumCachedQueryCount; // @synthesize maximumCachedQueryCount=_maximumCachedQueryCount;
@property (readonly) long long maximumCachedResultCount; // @synthesize maximumCachedResultCount=_maximumCachedResultCount;
@property (strong, nonatomic) NSDictionary *mescalDict; // @synthesize mescalDict=_mescalDict;
@property (nonatomic) BOOL mescalEnabled; // @synthesize mescalEnabled=_mescalEnabled;
@property (readonly) long long minimumStringLength; // @synthesize minimumStringLength=_minimumStringLength;
@property (readonly) NSDictionary *namedResources; // @synthesize namedResources=_namedResources;
@property (readonly, nonatomic) NSString *parsecBaseURL;
@property (nonatomic) BOOL parsecEnabled; // @synthesize parsecEnabled=_parsecEnabled;
@property (readonly) NSString *preferredLanguages; // @synthesize preferredLanguages=_preferredLanguages;
@property (strong) NSMutableData *qiFeaturesCollectedData; // @synthesize qiFeaturesCollectedData=_qiFeaturesCollectedData;
@property (readonly) NSURL *qiFeaturesURL; // @synthesize qiFeaturesURL=_qiFeaturesURL;
@property (strong) NSURLSessionDataTask *qiFeaturesURLTask; // @synthesize qiFeaturesURLTask=_qiFeaturesURLTask;
@property (strong, nonatomic) NSMutableArray *queryTasks; // @synthesize queryTasks=_queryTasks;
@property (readonly) NSDictionary *ranking_server_knobs; // @synthesize ranking_server_knobs=_ranking_server_knobs;
@property (nonatomic) BOOL reloadSAP; // @synthesize reloadSAP=_reloadSAP;
@property (strong) NSDictionary *resources; // @synthesize resources=_resources;
@property (readonly) double retryAfter; // @synthesize retryAfter=_retryAfter;
@property (readonly) double searchRenderTimeout; // @synthesize searchRenderTimeout=_searchRenderTimeout;
@property (readonly) NSURL *searchURL; // @synthesize searchURL=_searchURL;
@property (readonly) NSString *serverVersion; // @synthesize serverVersion=_serverVersion;
@property (readonly, nonatomic) double sessionStartTime;
@property (nonatomic) BOOL spriteEnabled; // @synthesize spriteEnabled=_spriteEnabled;
@property (nonatomic) long long status; // @synthesize status=_status;
@property (readonly) NSString *storeFrontId; // @synthesize storeFrontId=_storeFrontId;
@property (strong, nonatomic) NSArray *subscriptionServiceDomains; // @synthesize subscriptionServiceDomains=_subscriptionServiceDomains;
@property (strong, nonatomic) NSArray *subscriptionServiceIdentifiers; // @synthesize subscriptionServiceIdentifiers=_subscriptionServiceIdentifiers;
@property (nonatomic) long long subscriptionTTL; // @synthesize subscriptionTTL=_subscriptionTTL;
@property (strong, nonatomic) NSArray *subscriptions; // @synthesize subscriptions=_subscriptions;
@property (readonly) Class superclass;
@property (readonly, nonatomic) NSArray *supportedDomainIdentifiers;
@property (readonly) NSArray *supportedGeoSources; // @synthesize supportedGeoSources=_supportedGeoSources;
@property (readonly, nonatomic) NSURLSessionConfiguration *urlSessionConfiguration;
@property (nonatomic) BOOL useGUID; // @synthesize useGUID=_useGUID;
@property (readonly, nonatomic) long long useLedBelly;
@property (readonly, nonatomic) long long useSprite;
@property (strong, nonatomic) NSString *userId; // @synthesize userId=_userId;
@property (nonatomic) double userIdTimeout; // @synthesize userIdTimeout=_userIdTimeout;
@property int version; // @synthesize version=_version;
@property (readonly) NSString *waldoIP; // @synthesize waldoIP=_waldoIP;
@property (readonly) NSURL *webSearchURL; // @synthesize webSearchURL=_webSearchURL;
@property (strong, nonatomic) NSString *whitelistSignature; // @synthesize whitelistSignature=_whitelistSignature;

+ (void)initialize;
+ (id)sharedHandler;
- (void).cxx_destruct;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)_activateLocationManager;
- (void)_activateLocationManagerUnsafe;
- (void)_deactivateLocationManager;
- (void)_deactivateLocationManagerUnsafe;
- (void)_generateBagImagesFromDictionary:(id)arg1;
- (void)_generateInstalledApplicationsSignatureWithDictionary:(id)arg1;
- (void)_generateSpriteImagesFromArray:(id)arg1;
- (id)_locationManagerBundle;
- (void)_runLocationBlock:(CDUnknownBlockType)arg1;
- (void)_setupLocationManager;
- (void)_setupSAPSession;
- (void)_tearDownLocationManager;
- (void)_updateLocale:(BOOL)arg1;
- (void)dealloc;
- (id)determineConnectionType;
- (void)discardRecentlyUsedAppIdentifiers;
- (void)generateInstalledApplicationsSignature;
- (void)getFTEStringsWithReply:(CDUnknownBlockType)arg1;
- (void)getLocation:(CDUnknownBlockType)arg1;
- (id)init;
- (BOOL)isLocaleSupported:(id)arg1;
- (void)isLocaleSupported:(id)arg1 userAgent:(id)arg2 withReply:(CDUnknownBlockType)arg3;
- (void)loadAppBlacklistURL;
- (void)loadQIFeaturesURL;
- (void)loadUserID;
- (void)localeChanged:(id)arg1;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateToLocation:(id)arg2 fromLocation:(id)arg3;
- (id)locationSourceForLocation:(id)arg1;
- (void)refreshGUID;
- (void)reloadBagFromClient:(id)arg1;
- (void)reloadBagFromClient:(id)arg1 version:(int)arg2;
- (void)reloadGuid;
- (void)removeTask:(id)arg1;
- (id)resourceWithID:(id)arg1;
- (BOOL)searchSupported:(BOOL)arg1;
- (BOOL)sessionReady;
- (void)setupNetworkReachability;
- (void)signRequest:(id)arg1 withData:(id)arg2;
- (id)supportedServices;
- (void)triggerTaskWhenReady:(id)arg1;
- (void)triggerTaskWhenReadyInternal:(id)arg1;
- (void)updateRecentlyUsedAppIdentifiers;
- (void)updateStoreRestrictions;
- (void)updateWithDictionary:(id)arg1;

@end

