//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <WiFiPeerToPeer/WiFiAwarePublisherXPCDelegate-Protocol.h>

@class NSNumber, NSString, NSXPCConnection, WiFiAwarePublishConfiguration;
@protocol OS_dispatch_queue, WiFiAwarePublisherDelegate, WiFiAwarePublisherXPC;

@interface WiFiAwarePublisher : NSObject <WiFiAwarePublisherXPCDelegate>
{
    NSXPCConnection *_xpcConnection;
    NSObject<OS_dispatch_queue> *_queue;
    NSNumber *_publishID;
    id<WiFiAwarePublisherXPC> _publisherProxy;
    id<WiFiAwarePublisherDelegate> _delegate;
    WiFiAwarePublishConfiguration *_configuration;
}

@property (readonly, nonatomic) WiFiAwarePublishConfiguration *configuration; // @synthesize configuration=_configuration;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<WiFiAwarePublisherDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)dealloc;
- (void)handleError;
- (id)initWithConfiguration:(id)arg1;
- (BOOL)isConnected;
- (void)publishDataConfirmedForHandle:(id)arg1 localInterfaceIndex:(unsigned int)arg2 serviceSpecificInfo:(id)arg3;
- (void)publishDataTerminatedForHandle:(id)arg1 reason:(long long)arg2;
- (void)publishFailedToStartWithError:(long long)arg1;
- (void)publishReceivedMessage:(id)arg1 fromSubscriberID:(unsigned char)arg2 subscriberAddress:(id)arg3;
- (void)publishStartedWithInstanceID:(unsigned char)arg1;
- (void)publishTerminatedWithReason:(long long)arg1;
- (void)reportIssue:(id)arg1 forDataSession:(id)arg2;
- (void)resetState;
- (void)sendMessage:(id)arg1 toPeerAddress:(id)arg2 withInstanceID:(unsigned char)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)start;
- (void)startPublishSync;
- (void)stop;
- (void)terminateDataSession:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)updateDatapathServiceSpecificInfo:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)updateServiceSpecificInfo:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;

@end

