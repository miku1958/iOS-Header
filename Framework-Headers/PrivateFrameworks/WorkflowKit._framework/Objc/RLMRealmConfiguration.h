//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <WorkflowKit/NSCopying-Protocol.h>

@class NSArray, NSData, NSString, NSURL, RLMSchema;

@interface RLMRealmConfiguration : NSObject <NSCopying>
{
    struct Config _config;
    BOOL _cache;
    BOOL _dynamic;
    CDUnknownBlockType _migrationBlock;
    RLMSchema *_customSchema;
    NSString *_pathOnDisk;
}

@property (readonly, nonatomic) NSArray *allRealmFileURLs;
@property (nonatomic) BOOL cache; // @synthesize cache=_cache;
@property (copy, nonatomic) RLMSchema *customSchema; // @synthesize customSchema=_customSchema;
@property (nonatomic) BOOL deleteRealmIfMigrationNeeded;
@property (nonatomic) BOOL disableFormatUpgrade;
@property (nonatomic) BOOL dynamic; // @synthesize dynamic=_dynamic;
@property (copy, nonatomic) NSData *encryptionKey;
@property (copy, nonatomic) NSURL *fileURL;
@property (copy, nonatomic) NSString *inMemoryIdentifier;
@property (copy, nonatomic) CDUnknownBlockType migrationBlock; // @synthesize migrationBlock=_migrationBlock;
@property (copy, nonatomic) NSArray *objectClasses;
@property (copy, nonatomic) NSString *pathOnDisk; // @synthesize pathOnDisk=_pathOnDisk;
@property (nonatomic) BOOL readOnly;
@property (nonatomic) unsigned long long schemaVersion;

+ (id)defaultConfiguration;
+ (id)rawDefaultConfiguration;
+ (void)resetRealmConfigurationState;
+ (void)setDefaultConfiguration:(id)arg1;
+ (id)wf_appStoreShortcutsConfiguration;
+ (id)wf_configurationWithAppGroupIdentifier:(id)arg1 filename:(id)arg2;
+ (id)wf_configurationWithDirectoryURL:(id)arg1 filename:(id)arg2;
+ (id)wf_inMemoryConfiguration;
+ (id)wf_inMemoryConfigurationWithIdentifier:(id)arg1;
+ (id)wf_shortcutsDirectoryURL;
+ (id)wf_systemShortcutsConfiguration;
+ (id)wf_workflowConfiguration;
- (id).cxx_construct;
- (void).cxx_destruct;
- (struct Config *)config;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (id)init;
- (unsigned char)schemaMode;
- (void)setSchemaMode:(unsigned char)arg1;

@end

