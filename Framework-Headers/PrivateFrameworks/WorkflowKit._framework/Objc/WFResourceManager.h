//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <WorkflowKit/WFResourceNodeDelegate-Protocol.h>

@class NSArray, NSMapTable, NSMutableArray, NSMutableOrderedSet, NSOrderedSet, NSSet, NSString;
@protocol OS_dispatch_queue;

@interface WFResourceManager : NSObject <WFResourceNodeDelegate>
{
    NSMutableArray *_resourceNodes;
    BOOL _resourcesAvailable;
    BOOL _resourcesRequiredForDisplayAvailable;
    BOOL _didEvaluateAvailabilityOfNodes;
    NSMutableOrderedSet *_unavailableResources;
    NSOrderedSet *_unavailableResourceErrors;
    NSMapTable *_targetSelectorTable;
    NSObject<OS_dispatch_queue> *_stateAccessQueue;
}

@property (readonly, nonatomic) NSSet *accessResources;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) BOOL didEvaluateAvailabilityOfNodes; // @synthesize didEvaluateAvailabilityOfNodes=_didEvaluateAvailabilityOfNodes;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) NSArray *resourceNodes; // @synthesize resourceNodes=_resourceNodes;
@property (nonatomic) BOOL resourcesAvailable; // @synthesize resourcesAvailable=_resourcesAvailable;
@property (nonatomic) BOOL resourcesRequiredForDisplayAvailable; // @synthesize resourcesRequiredForDisplayAvailable=_resourcesRequiredForDisplayAvailable;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *stateAccessQueue; // @synthesize stateAccessQueue=_stateAccessQueue;
@property (readonly) Class superclass;
@property (strong, nonatomic) NSMapTable *targetSelectorTable; // @synthesize targetSelectorTable=_targetSelectorTable;
@property (strong, nonatomic) NSOrderedSet *unavailableResourceErrors; // @synthesize unavailableResourceErrors=_unavailableResourceErrors;
@property (strong, nonatomic) NSMutableOrderedSet *unavailableResources; // @synthesize unavailableResources=_unavailableResources;

- (void).cxx_destruct;
- (void)addResource:(id)arg1;
- (void)addResource:(id)arg1 withRequiredResources:(id)arg2;
- (void)addResourceObjectsOfClassesOrProtocols:(id)arg1 withinNode:(id)arg2 toSet:(id)arg3;
- (void)addTarget:(id)arg1 selector:(SEL)arg2;
- (id)currentlyRequiredResourcesOfClass:(Class)arg1;
- (BOOL)currentlyRequiresResourceOfClass:(Class)arg1;
- (void)evaluateAvailabilityOfNodesIfNeeded;
- (void)evaluateAvailabilityOfNodesWithChangedNode:(id)arg1;
- (id)initWithDefinitions:(id)arg1;
- (void)makeAccessResourcesAvailableAtGlobalLevelWithUserInterface:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)makeAccessResourcesAvailableAtWorkflowLevelWithUserInterface:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (BOOL)nodeIsAvailable:(id)arg1 error:(id *)arg2;
- (BOOL)nodeIsRelevant:(id)arg1;
- (void)notifyTargets;
- (id)relevantNodes;
- (void)removeTarget:(id)arg1 selector:(SEL)arg2;
- (void)resourceNodeAvailabilityChanged:(id)arg1;
- (id)resourceObjectsConformingToProtocol:(id)arg1;
- (id)resourceObjectsOfClass:(Class)arg1;
- (id)resourceObjectsOfClasses:(id)arg1;
- (id)selectorSetForTarget:(id)arg1;

@end

