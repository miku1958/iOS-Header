//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <WorkflowKit/WFActionParameterInputProvider-Protocol.h>
#import <WorkflowKit/WFRemoteQuarantinePolicyEvaluatorDelegate-Protocol.h>
#import <WorkflowKit/WFVariableDataSource-Protocol.h>

@class NSDictionary, NSMapTable, NSProgress, NSString, WFContentCollection, WFWorkflow, WFWorkflowControllerState;
@protocol WFWorkflowControllerDelegate;

@interface WFWorkflowController : NSObject <WFRemoteQuarantinePolicyEvaluatorDelegate, WFVariableDataSource, WFActionParameterInputProvider>
{
    WFWorkflowController *_strongSelf;
    BOOL _donateInteraction;
    BOOL _paused;
    BOOL _running;
    BOOL _stepping;
    WFWorkflow *_workflow;
    WFContentCollection *_input;
    WFContentCollection *_output;
    id<WFWorkflowControllerDelegate> _delegate;
    NSProgress *_progress;
    NSString *_runSource;
    NSString *_automationType;
    unsigned long long _currentIndex;
    NSMapTable *_variableTable;
    WFWorkflowControllerState *_pendingState;
    NSDictionary *_pendingProcessedParameters;
}

@property (copy, nonatomic) NSString *automationType; // @synthesize automationType=_automationType;
@property (nonatomic) unsigned long long currentIndex; // @synthesize currentIndex=_currentIndex;
@property (strong, nonatomic) WFWorkflowControllerState *currentState;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<WFWorkflowControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) BOOL donateInteraction; // @synthesize donateInteraction=_donateInteraction;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) WFContentCollection *input; // @synthesize input=_input;
@property (strong, nonatomic) WFContentCollection *output; // @synthesize output=_output;
@property (nonatomic, getter=isPaused) BOOL paused; // @synthesize paused=_paused;
@property (strong, nonatomic) NSDictionary *pendingProcessedParameters; // @synthesize pendingProcessedParameters=_pendingProcessedParameters;
@property (strong, nonatomic) WFWorkflowControllerState *pendingState; // @synthesize pendingState=_pendingState;
@property (strong, nonatomic) NSProgress *progress; // @synthesize progress=_progress;
@property (copy, nonatomic) NSString *runSource; // @synthesize runSource=_runSource;
@property (nonatomic, getter=isRunning) BOOL running; // @synthesize running=_running;
@property (nonatomic, getter=isStepping) BOOL stepping; // @synthesize stepping=_stepping;
@property (readonly) Class superclass;
@property (strong, nonatomic) NSMapTable *variableTable; // @synthesize variableTable=_variableTable;
@property (strong, nonatomic) WFWorkflow *workflow; // @synthesize workflow=_workflow;

+ (void)initialize;
- (void).cxx_destruct;
- (void)_stepWithCompletionHandler:(CDUnknownBlockType)arg1;
- (BOOL)action:(id)arg1 canProvideInputForParameter:(id)arg2;
- (void)action:(id)arg1 provideInputForParameters:(id)arg2 withDefaultStates:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)autoreleaseSelf;
- (id)contentForVariableWithName:(id)arg1;
- (id)currentAction;
- (void)evaluateRemoteQuarantinePolicyWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)init;
- (void)logRunEvent:(BOOL)arg1;
- (void)logStartEvent;
- (id)parameterInputProviderForAction:(id)arg1;
- (void)reset;
- (void)retainSelf;
- (void)run;
- (BOOL)setContent:(id)arg1 forVariableWithName:(id)arg2;
- (void)setFinishedRunningWithSuccess:(BOOL)arg1;
- (id)stateWithActionIndex:(unsigned long long)arg1 input:(id)arg2 processedParameters:(id)arg3;
- (void)stop;
- (id)userInterfaceForAction:(id)arg1;
- (id)userInterfaceToPresentAlertForEvaluator:(id)arg1;
- (void)workflowController:(id)arg1 didFinishRunningWithError:(id)arg2 cancelled:(BOOL)arg3;
- (void)workflowController:(id)arg1 didRunAction:(id)arg2;
- (void)workflowController:(id)arg1 prepareToRunAction:(id)arg2 withInput:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)workflowControllerWillRun:(id)arg1;
- (id)workflowInput;

@end

