//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <RTCReporting/RTCReportingDeallocNotifierDelegate-Protocol.h>

@class NSArray, NSMutableDictionary, NSXPCConnection, RTCReportingDeallocNotifier;
@protocol OS_dispatch_queue, OS_dispatch_source, RTCReportingMessageSentNotifier;

@interface RTCReporting : NSObject <RTCReportingDeallocNotifierDelegate>
{
    NSObject<OS_dispatch_queue> *_reportingQueue;
    NSObject<OS_dispatch_queue> *_reportingPeriodicTasksQueue;
    CDUnknownBlockType _loggingBlock;
    NSXPCConnection *_connection;
    NSObject<OS_dispatch_source> *_timer;
    int _counter;
    NSMutableDictionary *_periodicServiceDict;
    NSArray *_enabledBackendNames;
    NSArray *_whitelistedEvents;
    NSArray *_blacklistedEvents;
    RTCReportingDeallocNotifier *_strongDeallocNotifier;
    id _weakDeallocNotifier;
    id _weakMessageSentDelegate;
}

@property (copy, nonatomic) CDUnknownBlockType messageLoggingBlock; // @synthesize messageLoggingBlock=_loggingBlock;
@property (nonatomic) id<RTCReportingMessageSentNotifier> messageSentDelegate;

+ (BOOL)closeEphemeralSessiontWithSessionId:(id)arg1;
+ (id)createEphemeralSessionWithSessionInfo:(id)arg1 userInfo:(id)arg2 error:(id *)arg3;
+ (id)getPersistentIdentifierForDNU:(BOOL)arg1;
+ (id)newHierarchyTokenFromParentToken:(id)arg1;
+ (id)newSecureHierarchyTokenFromParentToken:(id)arg1;
+ (void)regeneratePersistentIdentifierForDNU:(BOOL)arg1;
+ (BOOL)sendOneMessageWithSessionInfo:(id)arg1 userInfo:(id)arg2 category:(unsigned short)arg3 type:(unsigned short)arg4 payload:(id)arg5 error:(id *)arg6;
- (void)_myPeriodicTask:(unsigned short)arg1 type:(unsigned short)arg2 intervalMultiplier:(int)arg3 updateTimeout:(unsigned long long)arg4;
- (void)aboutToDealloc;
- (void)dealloc;
- (void)fetchReportingStatesWithUserInfo:(id)arg1 fetchComplete:(CDUnknownBlockType)arg2;
- (void)finishSession;
- (BOOL)flushMessages;
- (void)flushMessagesWithCompletion:(CDUnknownBlockType)arg1;
- (id)initWithSessionInfo:(id)arg1 userInfo:(id)arg2 frameworksToCheck:(id)arg3;
- (id)initWithSessionInfo:(id)arg1 userInfo:(id)arg2 frameworksToCheck:(id)arg3 aggregationBlock:(CDUnknownBlockType)arg4;
- (BOOL)isBlacklistedEvent:(unsigned short)arg1;
- (BOOL)isWhitelistedEvent:(unsigned short)arg1;
- (void)notifyMessageWasSent:(id)arg1;
- (BOOL)registerPeriodicTaskForModule:(unsigned int)arg1 needToUpdate:(BOOL)arg2 needToReport:(BOOL)arg3 serviceBlock:(CDUnknownBlockType)arg4;
- (oneway void)release;
- (id)retain;
- (BOOL)sendMessageWithCategory:(unsigned short)arg1 type:(unsigned short)arg2 payload:(id)arg3 error:(id *)arg4;
- (BOOL)sendMessageWithDictionary:(id)arg1 error:(id *)arg2;
- (BOOL)serverSupportsFileUpload;
- (BOOL)setDigestKey:(id)arg1 algorithm:(int)arg2;
- (void)startConfigurationWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)startLogTimerWithInterval:(int)arg1 reportingMultiplier:(int)arg2 category:(unsigned short)arg3 type:(unsigned short)arg4;
- (void)stopLogTimer;
- (BOOL)unregisterPeriodTaskForModule:(unsigned int)arg1;
- (void)updateSharedDataForKey:(id)arg1 value:(id)arg2;
- (void)updateSharedDataWithDictionary:(id)arg1;
- (BOOL)uploadDataArray:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (BOOL)uploadFileWithURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;

@end

