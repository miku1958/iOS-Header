//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <CloudKitDaemon/CKDDatabaseOperation.h>

@class CKDFetchRecordZonesOperation, CKDFetchRecordsOperation, CKDMarkAssetBrokenURLRequestWrapperOperation, CKDModifyRecordZonesOperation, CKDModifyRecordsOperation, CKRecord, CKRecordID, CKRecordZone, CKUploadRequestConfiguration, NSError, NSString;
@protocol CKMarkAssetBrokenOperationCallbacks;

__attribute__((visibility("hidden")))
@interface CKDMarkAssetBrokenOperation : CKDDatabaseOperation
{
    BOOL _touchRepairZone;
    BOOL _bypassPCSEncryptionForTouchRepairZone;
    BOOL _simulateCorruptAsset;
    BOOL _writeRepairRecord;
    CDUnknownBlockType _assetOrPackageMarkedBrokenBlock;
    CKUploadRequestConfiguration *_uploadRequestConfiguration;
    CKRecordID *_recordID;
    NSString *_field;
    long long _listIndex;
    CKDFetchRecordsOperation *_fetchOperation;
    CKDFetchRecordZonesOperation *_zoneFetchOperation;
    CKDModifyRecordZonesOperation *_zoneCreateOperation;
    CKDModifyRecordsOperation *_corruptOperation;
    CKDMarkAssetBrokenURLRequestWrapperOperation *_wrapperOperation;
    CKRecordZone *_repairZone;
    CKRecord *_record;
    unsigned long long _numMarkAssetBrokenFailures;
    NSError *_markAssetBrokenError;
}

@property (copy, nonatomic) CDUnknownBlockType assetOrPackageMarkedBrokenBlock; // @synthesize assetOrPackageMarkedBrokenBlock=_assetOrPackageMarkedBrokenBlock;
@property (nonatomic) BOOL bypassPCSEncryptionForTouchRepairZone; // @synthesize bypassPCSEncryptionForTouchRepairZone=_bypassPCSEncryptionForTouchRepairZone;
@property (strong, nonatomic) id<CKMarkAssetBrokenOperationCallbacks> clientOperationCallbackProxy; // @dynamic clientOperationCallbackProxy;
@property (strong, nonatomic) CKDModifyRecordsOperation *corruptOperation; // @synthesize corruptOperation=_corruptOperation;
@property (strong, nonatomic) CKDFetchRecordsOperation *fetchOperation; // @synthesize fetchOperation=_fetchOperation;
@property (strong, nonatomic) NSString *field; // @synthesize field=_field;
@property (nonatomic) long long listIndex; // @synthesize listIndex=_listIndex;
@property (strong, nonatomic) NSError *markAssetBrokenError; // @synthesize markAssetBrokenError=_markAssetBrokenError;
@property (nonatomic) unsigned long long numMarkAssetBrokenFailures; // @synthesize numMarkAssetBrokenFailures=_numMarkAssetBrokenFailures;
@property (strong, nonatomic) CKRecord *record; // @synthesize record=_record;
@property (strong, nonatomic) CKRecordID *recordID; // @synthesize recordID=_recordID;
@property (strong, nonatomic) CKRecordZone *repairZone; // @synthesize repairZone=_repairZone;
@property (nonatomic) BOOL simulateCorruptAsset; // @synthesize simulateCorruptAsset=_simulateCorruptAsset;
@property (nonatomic) unsigned long long state; // @dynamic state;
@property (nonatomic) BOOL touchRepairZone; // @synthesize touchRepairZone=_touchRepairZone;
@property (strong, nonatomic) CKUploadRequestConfiguration *uploadRequestConfiguration; // @synthesize uploadRequestConfiguration=_uploadRequestConfiguration;
@property (strong, nonatomic) CKDMarkAssetBrokenURLRequestWrapperOperation *wrapperOperation; // @synthesize wrapperOperation=_wrapperOperation;
@property (nonatomic) BOOL writeRepairRecord; // @synthesize writeRepairRecord=_writeRepairRecord;
@property (strong, nonatomic) CKDModifyRecordZonesOperation *zoneCreateOperation; // @synthesize zoneCreateOperation=_zoneCreateOperation;
@property (strong, nonatomic) CKDFetchRecordZonesOperation *zoneFetchOperation; // @synthesize zoneFetchOperation=_zoneFetchOperation;

- (void).cxx_destruct;
- (void)_breakAsset;
- (void)_fetchRecord;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)_markAssetBroken;
- (void)_touchCreateRepairZone;
- (void)_touchFetchRepairZone;
- (id)activityCreate;
- (id)assetOrPackageForFetchedRecord;
- (id)checkPreconditions;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;
- (void)main;
- (BOOL)makeStateTransition;
- (id)nameForState:(unsigned long long)arg1;
- (int)operationType;
- (id)repairContext;

@end

