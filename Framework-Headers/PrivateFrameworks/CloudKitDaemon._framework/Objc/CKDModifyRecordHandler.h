//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class CKDModifyRecordsOperation, CKDPCSCache, CKDPCSManager, CKDProgressTracker, CKDRecordPCSData, CKDSharePCSData, CKRecord, CKRecordID, NSError, NSMutableDictionary, NSString;
@protocol OS_dispatch_group;

__attribute__((visibility("hidden")))
@interface CKDModifyRecordHandler : NSObject
{
    BOOL _isDelete;
    BOOL _saveCompletionBlockCalled;
    BOOL _needsRefetch;
    BOOL _didRollRecordPCSMasterKey;
    int _saveAttempts;
    CKDModifyRecordsOperation *_operation;
    CKRecord *_record;
    NSObject<OS_dispatch_group> *_pcsGroup;
    CKDRecordPCSData *_recordPCSData;
    CKDSharePCSData *_sharePCSData;
    CKRecord *_serverRecord;
    NSString *_etag;
    unsigned long long _state;
    NSError *_error;
    NSMutableDictionary *_rereferencedAssetArrayByFieldname;
    CKDProgressTracker *_progressTracker;
    long long _batchRank;
    CKRecordID *_recordID;
}

@property (nonatomic) long long batchRank; // @synthesize batchRank=_batchRank;
@property (nonatomic) BOOL didRollRecordPCSMasterKey; // @synthesize didRollRecordPCSMasterKey=_didRollRecordPCSMasterKey;
@property (strong, nonatomic) NSError *error; // @synthesize error=_error;
@property (strong, nonatomic) NSString *etag; // @synthesize etag=_etag;
@property (nonatomic) BOOL isDelete; // @synthesize isDelete=_isDelete;
@property (readonly, nonatomic) BOOL isShare;
@property (nonatomic) BOOL needsRefetch; // @synthesize needsRefetch=_needsRefetch;
@property (weak, nonatomic) CKDModifyRecordsOperation *operation; // @synthesize operation=_operation;
@property (readonly, nonatomic) CKDPCSCache *pcsCache;
@property (strong, nonatomic) NSObject<OS_dispatch_group> *pcsGroup; // @synthesize pcsGroup=_pcsGroup;
@property (readonly, nonatomic) CKDPCSManager *pcsManager;
@property (strong, nonatomic) CKDProgressTracker *progressTracker; // @synthesize progressTracker=_progressTracker;
@property (strong, nonatomic) CKRecord *record; // @synthesize record=_record;
@property (strong, nonatomic) CKRecordID *recordID; // @synthesize recordID=_recordID;
@property (strong, nonatomic) CKDRecordPCSData *recordPCSData; // @synthesize recordPCSData=_recordPCSData;
@property (strong, nonatomic) NSMutableDictionary *rereferencedAssetArrayByFieldname; // @synthesize rereferencedAssetArrayByFieldname=_rereferencedAssetArrayByFieldname;
@property (nonatomic) int saveAttempts; // @synthesize saveAttempts=_saveAttempts;
@property (nonatomic) BOOL saveCompletionBlockCalled; // @synthesize saveCompletionBlockCalled=_saveCompletionBlockCalled;
@property (strong, nonatomic) CKRecord *serverRecord; // @synthesize serverRecord=_serverRecord;
@property (strong, nonatomic) CKDSharePCSData *sharePCSData; // @synthesize sharePCSData=_sharePCSData;
@property (nonatomic) unsigned long long state; // @synthesize state=_state;

+ (id)_stringForState:(unsigned long long)arg1;
+ (id)modifyHandlerForDeleteWithRecordID:(id)arg1 operation:(id)arg2;
+ (id)modifyHandlerWithRecord:(id)arg1 operation:(id)arg2;
- (void).cxx_destruct;
- (id)_addParentPCS:(id)arg1 toRecordPCS:(id)arg2;
- (void)_addShareToPCSData:(id)arg1 withError:(id)arg2;
- (BOOL)_canSetPreviousProtectionEtag;
- (void)_clearRecordProtectionDataForRecord;
- (void)_continueCreateAndSavePCSWithZonePCS:(id)arg1 sharePCS:(id)arg2;
- (void)_createAndSavePCS;
- (BOOL)_createPublicSharingKeyWithError:(id *)arg1;
- (void)_fetchExistingPCSForProvidedPCSData:(id)arg1;
- (void)_fetchPCSData;
- (void)_fetchParentPCSForData:(id)arg1 withError:(id)arg2;
- (void)_fetchParentPCSForID:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)_fetchSharePCSForID:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)_handlePCSData:(id)arg1 withError:(id)arg2;
- (id)_initCommonWithOperation:(id)arg1;
- (id)_initForDeleteWithRecordID:(id)arg1 operation:(id)arg2;
- (id)_initWithRecord:(id)arg1 operation:(id)arg2;
- (void)_loadPCSData;
- (BOOL)_prepareAsset:(id)arg1 recordKey:(id)arg2 record:(id)arg3 error:(id *)arg4;
- (void)_pretendToWrapEncryptedDataForRecordValueStore:(id)arg1;
- (void)_reallyFetchPCSDataWithOptions:(unsigned long long)arg1;
- (void)_unwrapRecordPCSForParent;
- (void)_unwrapRecordPCSForZone;
- (void)_unwrapRecordPCSWithShareID:(id)arg1;
- (BOOL)_wrapEncryptedData:(id)arg1 withPCS:(struct _OpaquePCSShareProtection *)arg2 forField:(id)arg3 recordID:(id)arg4;
- (BOOL)_wrapEncryptedDataForRecordValueStore:(id)arg1 withPCS:(struct _OpaquePCSShareProtection *)arg2;
- (BOOL)_wrapEncryptedDataOnRecord:(id)arg1;
- (id)assetsWhichNeedRecordFetch;
- (void)clearProtectionDataForRecord;
- (id)description;
- (void)fetchRecordPCSData;
- (void)fetchSharePCSData;
- (void)noteSideEffectRecordAbsent:(id)arg1;
- (void)noteSideEffectRecordPendingDelete:(id)arg1;
- (void)noteSideEffectRecordPendingModify:(id)arg1;
- (id)prepareAssetsForUploadWithError:(id *)arg1;
- (void)prepareForSave;
- (void)savePCSDataToCache;
- (id)sideEffectRecordIDs;

@end

