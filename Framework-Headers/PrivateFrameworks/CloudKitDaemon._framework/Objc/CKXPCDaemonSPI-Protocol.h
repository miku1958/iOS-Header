//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <CloudKitDaemon/NSObject-Protocol.h>

@class CKAggregateZonePCSOperationInfo, CKArchiveRecordsOperationInfo, CKCompleteParticipantVettingOperationInfo, CKContainerSetupInfo, CKDPResponseOperationResult, CKDatabaseOperationInfo, CKFetchArchivedRecordsOperationInfo, CKFetchRecordVersionsOperationInfo, CKFetchShareParticipantKeyOperationInfo, CKInitiateParticipantVettingOperationInfo, CKMarkAssetBrokenOperationInfo, CKModifyRecordAccessOperationInfo, CKModifyWebSharingOperationInfo, CKOperationInfo, CKPublishAssetsOperationInfo, CKRecordID, CKRecordZoneID, CKRepairAssetsOperationInfo, CKRepairZonePCSOperationInfo, CKShare, NSArray, NSDictionary, NSError, NSFileHandle, NSString;
@protocol CKArchiveRecordsOperationCallbacks, CKCompleteParticipantVettingOperationCallbacks, CKFetchArchivedRecordsOperationCallbacks, CKFetchRecordVersionsOperationCallbacks, CKFetchShareParticipantKeyOperationCallbacks, CKFetchUserQuotaOperationCallbacks, CKFetchWhitelistedBundleIDsOperationCallbacks, CKInitiateParticipantVettingOperationCallbacks, CKMarkAssetBrokenOperationCallbacks, CKModifyRecordAccessOperationCallbacks, CKModifyWebSharingOperationCallbacks, CKOperationCallbacks, CKPublishAssetsOperationCallbacks, CKRepairAssetsOperationCallbacks, CKRepairZonePCSOperationCallbacks;

@protocol CKXPCDaemonSPI <NSObject>
- (void)accountWithID:(NSString *)arg1 changedWithChangeType:(long long)arg2;
- (void)accountsDidGrantAccessToBundleID:(NSString *)arg1 containerIdentifiers:(NSArray *)arg2;
- (void)accountsDidRevokeAccessToBundleID:(NSString *)arg1 containerIdentifiers:(NSArray *)arg2;
- (void)accountsWillDeleteAccount:(NSString *)arg1 completionHandler:(void (^)(NSError *))arg2;
- (void)addClouddThrottle:(NSDictionary *)arg1;
- (void)clearAllClouddThrottles;
- (void)clearAssetCacheWithSetupInfo:(CKContainerSetupInfo *)arg1 databaseScope:(long long)arg2 completionHandler:(void (^)(NSError *))arg3;
- (void)clearAuthTokensWithSetupInfo:(CKContainerSetupInfo *)arg1 recordID:(CKRecordID *)arg2 databaseScope:(long long)arg3;
- (void)clearCachesForRecordWithSetupInfo:(CKContainerSetupInfo *)arg1 recordID:(CKRecordID *)arg2 databaseScope:(long long)arg3 completionHandler:(void (^)(NSError *))arg4;
- (void)clearCachesForZoneWithSetupInfo:(CKContainerSetupInfo *)arg1 zoneID:(CKRecordZoneID *)arg2 databaseScope:(long long)arg3 completionHandler:(void (^)(NSError *))arg4;
- (void)clearCachesWithSetupInfo:(CKContainerSetupInfo *)arg1 options:(unsigned long long)arg2 databaseScope:(long long)arg3 completionHandler:(void (^)(NSError *))arg4;
- (void)clearContextFromMetadataCache;
- (void)clearPCSCachesForKnownContextsWithSetupInfo:(CKContainerSetupInfo *)arg1 completionHandler:(void (^)(NSError *))arg2;
- (void)clearPILSCacheForLookupInfos:(NSArray *)arg1;
- (void)clearRecordCacheWithSetupInfo:(CKContainerSetupInfo *)arg1 databaseScope:(long long)arg2;
- (void)countAssetCacheItemsWithSetupInfo:(CKContainerSetupInfo *)arg1 databaseScope:(long long)arg2 completionHandler:(void (^)(unsigned long long, NSError *))arg3;
- (void)currentDeviceIDWithSetupInfo:(CKContainerSetupInfo *)arg1 completionHandler:(void (^)(NSString *, NSError *))arg2;
- (void)currentUserBoundaryKeyWithSetupInfo:(CKContainerSetupInfo *)arg1 completionHandler:(void (^)(NSData *, NSError *))arg2;
- (void)decryptPersonalInfoOnShare:(CKShare *)arg1 setupInfo:(CKContainerSetupInfo *)arg2 completionHandler:(void (^)(CKShare *, NSError *))arg3;
- (void)deviceCountWithSetupInfo:(CKContainerSetupInfo *)arg1 completionHandler:(void (^)(long long, NSError *))arg2;
- (void)dumpAllClientsStatusReportToFileHandle:(NSFileHandle *)arg1 completionHandler:(void (^)(NSError *))arg2;
- (void)fetchPCSFromCacheForZoneWithSetupInfo:(CKContainerSetupInfo *)arg1 zoneID:(CKRecordZoneID *)arg2 databaseScope:(long long)arg3 completionHandler:(void (^)(CKDPCSData *, NSError *))arg4;
- (void)fetchXPCCriteriaWithSetupInfo:(CKContainerSetupInfo *)arg1 completionHandler:(void (^)(NSObject<OS_xpc_object> *, NSError *))arg2;
- (void)flushOperationMetricsToPowerLog;
- (void)frameworkCachesDirectoryWithSetupInfo:(CKContainerSetupInfo *)arg1 completionHandler:(void (^)(NSString *, NSError *))arg2;
- (void)getNewWebSharingIdentityDataWithSetupInfo:(CKContainerSetupInfo *)arg1 completionHandler:(void (^)(NSData *, NSError *))arg2;
- (void)getOutstandingOperationCountWithSetupInfo:(CKContainerSetupInfo *)arg1 completionHandler:(void (^)(unsigned long long, NSError *))arg2;
- (void)getPCSDiagnosticsForZonesWithSetupInfo:(CKContainerSetupInfo *)arg1 completionHandler:(void (^)(CKPCSDiagnosticInformation *))arg2;
- (void)getRecordPCSDiagnosticsForZonesWithSetupInfo:(CKContainerSetupInfo *)arg1 completionHandler:(void (^)(NSArray *))arg2;
- (void)performAggregateZonePCSOperation:(CKAggregateZonePCSOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)performArchiveRecordsOperation:(CKArchiveRecordsOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKArchiveRecordsOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)performCompleteParticipantVettingOperation:(CKCompleteParticipantVettingOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKCompleteParticipantVettingOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)performFetchArchivedRecordsOperation:(CKFetchArchivedRecordsOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKFetchArchivedRecordsOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)performFetchRecordVersionsOperation:(CKFetchRecordVersionsOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKFetchRecordVersionsOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)performFetchShareParticipantKeyOperation:(CKFetchShareParticipantKeyOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKFetchShareParticipantKeyOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)performFetchUserQuotaOperation:(CKDatabaseOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKFetchUserQuotaOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)performFetchWhitelistedBundleIDsOperation:(CKOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKFetchWhitelistedBundleIDsOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)performInitiateParticipantVettingOperation:(CKInitiateParticipantVettingOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKInitiateParticipantVettingOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)performMarkAssetBrokenOperation:(CKMarkAssetBrokenOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKMarkAssetBrokenOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)performModifyRecordAccessOperation:(CKModifyRecordAccessOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKModifyRecordAccessOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)performModifyWebSharingOperation:(CKModifyWebSharingOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKModifyWebSharingOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)performPublishAssetsOperation:(CKPublishAssetsOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKPublishAssetsOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)performRepairAssetsOperation:(CKRepairAssetsOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKRepairAssetsOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)performRepairZonePCSOperation:(CKRepairZonePCSOperationInfo *)arg1 clientOperationCallbackProxy:(id<CKRepairZonePCSOperationCallbacks>)arg2 withBlock:(void (^)(void))arg3;
- (void)representativeDataclassEnabledWithSetupInfo:(CKContainerSetupInfo *)arg1 completionHandler:(void (^)(BOOL, NSError *))arg2;
- (void)resetAllApplicationPermissionsWithSetupInfo:(CKContainerSetupInfo *)arg1 completionHandler:(void (^)(NSError *))arg2;
- (void)serverEnvironmentWithSetupInfo:(CKContainerSetupInfo *)arg1 completionHandler:(void (^)(long long, NSError *))arg2;
- (void)serverPreferredPushEnvironmentWithSetupInfo:(CKContainerSetupInfo *)arg1 completionHandler:(void (^)(NSString *, NSError *))arg2;
- (void)setApplicationPermission:(unsigned long long)arg1 enabled:(BOOL)arg2 setupInfo:(CKContainerSetupInfo *)arg3 completionHandler:(void (^)(long long, NSError *))arg4;
- (void)setFakeError:(NSError *)arg1 forNextRequestOfClassName:(NSString *)arg2 setupInfo:(CKContainerSetupInfo *)arg3;
- (void)setFakeResponseOperationResult:(CKDPResponseOperationResult *)arg1 forNextRequestOfClassName:(NSString *)arg2 forItemID:(id)arg3 withLifetime:(int)arg4 setupInfo:(CKContainerSetupInfo *)arg5;
- (void)showAssetCacheWithSetupInfo:(CKContainerSetupInfo *)arg1 databaseScope:(long long)arg2;
- (void)statusGroupsForApplicationPermission:(unsigned long long)arg1 setupInfo:(CKContainerSetupInfo *)arg2 completionHandler:(void (^)(NSArray *, NSError *))arg3;
- (void)tossConfigWithSetupInfo:(CKContainerSetupInfo *)arg1 completionHandler:(void (^)(NSError *))arg2;
- (void)triggerAutoBugCaptureSnapshot;
- (void)updatePushTokens;
- (void)wipeAllCachedLongLivedProxiesWithSetupInfo:(CKContainerSetupInfo *)arg1 completionHandler:(void (^)(NSError *))arg2;
- (void)wipeAllCachesAndDie;
@end

