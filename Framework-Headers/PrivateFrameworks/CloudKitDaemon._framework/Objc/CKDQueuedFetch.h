//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class CKDClientContext, CKDOperation, NSDate, NSMutableDictionary, NSMutableSet, NSOperationQueue, NSString;
@protocol OS_dispatch_queue, OS_os_activity;

__attribute__((visibility("hidden")))
@interface CKDQueuedFetch : NSObject
{
    BOOL _isFinished;
    BOOL _isCancelled;
    NSDate *_queuedDate;
    CDUnknownBlockType _completionHandler;
    CKDQueuedFetch *_equivalentRunningFetch;
    NSObject<OS_os_activity> *_osActivity;
    NSMutableDictionary *_completionHandlersByItemID;
    unsigned long long _lastCompletionHandlerCount;
    NSDate *_startDate;
    NSDate *_lastRequestDate;
    CKDClientContext *_context;
    NSOperationQueue *_operationQueue;
    long long _scope;
    NSObject<OS_dispatch_queue> *_callbackQueue;
    long long _highestQOS;
    NSString *_runningOperationID;
    NSMutableSet *_dependentOperationIDs;
    NSMutableDictionary *_dependentOperationIDsByItemID;
    NSMutableDictionary *_unitTestOverrides;
    CKDOperation *_initialOperation;
}

@property (strong, nonatomic) NSObject<OS_dispatch_queue> *callbackQueue; // @synthesize callbackQueue=_callbackQueue;
@property (copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property (strong, nonatomic) NSMutableDictionary *completionHandlersByItemID; // @synthesize completionHandlersByItemID=_completionHandlersByItemID;
@property (weak, nonatomic) CKDClientContext *context; // @synthesize context=_context;
@property (strong, nonatomic) NSMutableSet *dependentOperationIDs; // @synthesize dependentOperationIDs=_dependentOperationIDs;
@property (strong, nonatomic) NSMutableDictionary *dependentOperationIDsByItemID; // @synthesize dependentOperationIDsByItemID=_dependentOperationIDsByItemID;
@property (weak, nonatomic) CKDQueuedFetch *equivalentRunningFetch; // @synthesize equivalentRunningFetch=_equivalentRunningFetch;
@property (nonatomic) long long highestQOS; // @synthesize highestQOS=_highestQOS;
@property (strong, nonatomic) CKDOperation *initialOperation; // @synthesize initialOperation=_initialOperation;
@property (nonatomic) BOOL isCancelled; // @synthesize isCancelled=_isCancelled;
@property (nonatomic) BOOL isFinished; // @synthesize isFinished=_isFinished;
@property (nonatomic) unsigned long long lastCompletionHandlerCount; // @synthesize lastCompletionHandlerCount=_lastCompletionHandlerCount;
@property (strong, nonatomic) NSDate *lastRequestDate; // @synthesize lastRequestDate=_lastRequestDate;
@property (weak, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property (strong, nonatomic) NSObject<OS_os_activity> *osActivity; // @synthesize osActivity=_osActivity;
@property (strong, nonatomic) NSDate *queuedDate; // @synthesize queuedDate=_queuedDate;
@property (strong, nonatomic) NSString *runningOperationID; // @synthesize runningOperationID=_runningOperationID;
@property (nonatomic) long long scope; // @synthesize scope=_scope;
@property (strong, nonatomic) NSDate *startDate; // @synthesize startDate=_startDate;
@property (strong, nonatomic) NSMutableDictionary *unitTestOverrides; // @synthesize unitTestOverrides=_unitTestOverrides;

- (void).cxx_destruct;
- (id)CKPropertiesDescription;
- (void)addCallbackForItemWithID:(id)arg1 operation:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (id)allItemIDs;
- (id)callbacksForItemWithID:(id)arg1;
- (BOOL)canBeUsedForOperation:(id)arg1;
- (BOOL)canBeUsedForPendingFetch:(id)arg1;
- (void)cancelFetchOperation;
- (void)createFetchOperationForItemIDs:(id)arg1 operationQueue:(id)arg2 operationConfigurationBlock:(CDUnknownBlockType)arg3;
- (BOOL)dependentOperationListContainsOperationID:(id)arg1;
- (BOOL)dependentOperationListContainsRunningFetch:(id)arg1;
- (id)description;
- (void)finishFetchOperationWithError:(id)arg1;
- (id)init;
- (id)initWithOperation:(id)arg1 context:(id)arg2 operationQueue:(id)arg3;
- (int)numberOfCallbacks;
- (void)performCallbacksForItemWithID:(id)arg1 withItem:(id)arg2 error:(id)arg3;
- (void)removeCallbacksForItemWithID:(id)arg1;
- (void)start;

@end

