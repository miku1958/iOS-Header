//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSMutableArray, NSOperationQueue, NSXPCListener;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface CKDCloudDatabaseServer : NSObject
{
    int _tccToken;
    NSXPCListener *_xpcListener;
    NSMutableArray *_connectedClients;
    NSObject<OS_dispatch_source> *_sighandlerSource;
    NSOperationQueue *_clientTeardownQueue;
    unsigned long long _stateHandle;
    NSObject<OS_dispatch_source> *_statusReportRequestSource;
    NSObject<OS_dispatch_queue> *_statusReportQueue;
    NSObject<OS_dispatch_queue> *_statusReportCallbackQueue;
    NSMutableArray *_statusReportCallbacks;
}

@property (strong, nonatomic) NSOperationQueue *clientTeardownQueue; // @synthesize clientTeardownQueue=_clientTeardownQueue;
@property (strong, nonatomic) NSMutableArray *connectedClients; // @synthesize connectedClients=_connectedClients;
@property (strong, nonatomic) NSObject<OS_dispatch_source> *sighandlerSource; // @synthesize sighandlerSource=_sighandlerSource;
@property (nonatomic) unsigned long long stateHandle; // @synthesize stateHandle=_stateHandle;
@property (strong, nonatomic) NSObject<OS_dispatch_queue> *statusReportCallbackQueue; // @synthesize statusReportCallbackQueue=_statusReportCallbackQueue;
@property (strong, nonatomic) NSMutableArray *statusReportCallbacks; // @synthesize statusReportCallbacks=_statusReportCallbacks;
@property (strong, nonatomic) NSObject<OS_dispatch_queue> *statusReportQueue; // @synthesize statusReportQueue=_statusReportQueue;
@property (strong, nonatomic) NSObject<OS_dispatch_source> *statusReportRequestSource; // @synthesize statusReportRequestSource=_statusReportRequestSource;
@property (nonatomic) int tccToken; // @synthesize tccToken=_tccToken;
@property (strong, nonatomic) NSXPCListener *xpcListener; // @synthesize xpcListener=_xpcListener;

+ (id)sharedServer;
- (void).cxx_destruct;
- (id)CKStatusReportArray;
- (void)_dumpStatusReportArrayToOsTrace:(id)arg1;
- (void)_dumpStatusReportToFileHandle:(id)arg1;
- (void)dealloc;
- (void)dumpStatusReportToFileHandle:(id)arg1;
- (void)enumerateConnectedClients:(CDUnknownBlockType)arg1;
- (id)init;
- (void)kickOffPendingLongLivedOperations;
- (BOOL)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (void)resume;
- (void)statusReportWithCompletionHandler:(CDUnknownBlockType)arg1;

@end

