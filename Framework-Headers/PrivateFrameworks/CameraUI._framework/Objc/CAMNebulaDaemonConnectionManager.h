//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <CameraUI/CAMNebulaDaemonClientProtocol-Protocol.h>
#import <CameraUI/NSXPCConnectionDelegate-Protocol.h>

@class NSMutableArray, NSMutableDictionary, NSString, NSXPCConnection, Protocol;
@protocol CAMNebulaDaemonConnectionManagerDelegate, OS_dispatch_queue;

@interface CAMNebulaDaemonConnectionManager : NSObject <NSXPCConnectionDelegate, CAMNebulaDaemonClientProtocol>
{
    NSString *_identifier;
    id<CAMNebulaDaemonConnectionManagerDelegate> _delegate;
    NSXPCConnection *__connection;
    NSString *__name;
    NSObject<OS_dispatch_queue> *__queue;
    Protocol *__allowedProtocol;
    NSMutableDictionary *__tasksPerIdentifier;
    NSMutableArray *__registeredTargets;
    NSMutableArray *__registeredProtocols;
}

@property (readonly, nonatomic) Protocol *_allowedProtocol; // @synthesize _allowedProtocol=__allowedProtocol;
@property (readonly, nonatomic) NSXPCConnection *_connection; // @synthesize _connection=__connection;
@property (readonly, copy, nonatomic) NSString *_name; // @synthesize _name=__name;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *_queue; // @synthesize _queue=__queue;
@property (readonly, nonatomic) NSMutableArray *_registeredProtocols; // @synthesize _registeredProtocols=__registeredProtocols;
@property (readonly, nonatomic) NSMutableArray *_registeredTargets; // @synthesize _registeredTargets=__registeredTargets;
@property (readonly, nonatomic) NSMutableDictionary *_tasksPerIdentifier; // @synthesize _tasksPerIdentifier=__tasksPerIdentifier;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<CAMNebulaDaemonConnectionManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property (readonly) Class superclass;

+ (id)_clientProtocolInterface;
+ (id)_daemonProtocolInterface;
- (void).cxx_destruct;
- (void)_getProxyForExecutingBlock:(CDUnknownBlockType)arg1;
- (id)_targetsForSelector:(SEL)arg1;
- (void)addTarget:(id)arg1 forProtocol:(id)arg2;
- (void)connection:(id)arg1 handleInvocation:(id)arg2 isReply:(BOOL)arg3;
- (void)forceStopTimelapseCaptureWithReasons:(long long)arg1;
- (id)initWithConnection:(id)arg1 name:(id)arg2 identifier:(id)arg3 queue:(id)arg4 allowedProtocol:(id)arg5;

@end

