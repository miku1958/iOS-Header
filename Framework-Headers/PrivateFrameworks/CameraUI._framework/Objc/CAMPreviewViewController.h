//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import <CameraUI/CAMExposureDelegate-Protocol.h>
#import <CameraUI/CAMFacesDelegate-Protocol.h>
#import <CameraUI/CAMFocusDelegate-Protocol.h>
#import <CameraUI/CAMFocusIndicatorViewDelegate-Protocol.h>
#import <CameraUI/CAMPreviewViewSubjectIndicatorDelegate-Protocol.h>
#import <CameraUI/UIGestureRecognizerDelegate-Protocol.h>

@class CAMBurstIndicatorView, CAMExposureResult, CAMFocusIndicatorView, CAMFocusResult, CAMMotionController, CAMPreviewView, CAMStageLightOverlayView, CAMSubjectIndicatorView, CAMTimelapseController, CUCaptureController, NSDate, NSString, UILongPressGestureRecognizer, UIPanGestureRecognizer, UITapGestureRecognizer;
@protocol CAMPreviewViewControllerDelegate;

@interface CAMPreviewViewController : UIViewController <UIGestureRecognizerDelegate, CAMFocusDelegate, CAMExposureDelegate, CAMFocusIndicatorViewDelegate, CAMPreviewViewSubjectIndicatorDelegate, CAMFacesDelegate>
{
    BOOL __changingModeOrDevice;
    BOOL __userLockedFocusAndExposure;
    BOOL __updateFaceIndicators;
    BOOL _showingStandardControls;
    float __cachedExposureTargetBias;
    float __exposureBiasPanStartValue;
    id<CAMPreviewViewControllerDelegate> _delegate;
    long long _layoutStyle;
    long long _shallowDepthOfFieldStatus;
    long long _lightingType;
    CUCaptureController *__captureController;
    CAMTimelapseController *__timelapseController;
    long long __mode;
    long long __device;
    CAMBurstIndicatorView *__burstIndicator;
    CAMFocusIndicatorView *__continuousIndicator;
    CAMFocusIndicatorView *__pointIndicator;
    NSDate *__lastFocusIndictorStartTime;
    CAMFocusResult *__lastFocusResult;
    CAMExposureResult *__lastExposureResult;
    NSDate *__lastTapToFocusTime;
    unsigned long long __currentFacesCount;
    UITapGestureRecognizer *__tapToFocusAndExposeGestureRecognizer;
    UILongPressGestureRecognizer *__longPressToLockGestureRecognizer;
    UIPanGestureRecognizer *__exposureBiasPanGestureRecognizer;
    UITapGestureRecognizer *__aspectRatioToggleDoubleTapGestureRecognizer;
    double __exposureBiasVirtualSliderExponent;
    double __exposureBiasVirtualSliderPointsForFirstStop;
    NSDate *__lastExposureBiasModificationTime;
    CAMSubjectIndicatorView *__portraitModeCenteredIndicatorView;
    CAMStageLightOverlayView *__stageLightOverlayView;
    CAMMotionController *__motionController;
}

@property (readonly, nonatomic) UITapGestureRecognizer *_aspectRatioToggleDoubleTapGestureRecognizer; // @synthesize _aspectRatioToggleDoubleTapGestureRecognizer=__aspectRatioToggleDoubleTapGestureRecognizer;
@property (readonly, nonatomic) CAMBurstIndicatorView *_burstIndicator; // @synthesize _burstIndicator=__burstIndicator;
@property (nonatomic, setter=_setCachedExposureTargetBias:) float _cachedExposureTargetBias; // @synthesize _cachedExposureTargetBias=__cachedExposureTargetBias;
@property (readonly, nonatomic) CUCaptureController *_captureController; // @synthesize _captureController=__captureController;
@property (nonatomic, getter=_isChangingModeOrDevice, setter=_setChangingModeOrDevice:) BOOL _changingModeOrDevice; // @synthesize _changingModeOrDevice=__changingModeOrDevice;
@property (readonly, nonatomic) CAMFocusIndicatorView *_continuousIndicator; // @synthesize _continuousIndicator=__continuousIndicator;
@property (readonly, nonatomic) unsigned long long _currentFacesCount; // @synthesize _currentFacesCount=__currentFacesCount;
@property (readonly, nonatomic) long long _device; // @synthesize _device=__device;
@property (readonly, nonatomic) UIPanGestureRecognizer *_exposureBiasPanGestureRecognizer; // @synthesize _exposureBiasPanGestureRecognizer=__exposureBiasPanGestureRecognizer;
@property (readonly, nonatomic) float _exposureBiasPanStartValue; // @synthesize _exposureBiasPanStartValue=__exposureBiasPanStartValue;
@property (nonatomic, setter=_setExposureBiasVirtualSliderExponent:) double _exposureBiasVirtualSliderExponent; // @synthesize _exposureBiasVirtualSliderExponent=__exposureBiasVirtualSliderExponent;
@property (nonatomic, setter=_setExposureBiasVirtualSliderPointsForFirstStop:) double _exposureBiasVirtualSliderPointsForFirstStop; // @synthesize _exposureBiasVirtualSliderPointsForFirstStop=__exposureBiasVirtualSliderPointsForFirstStop;
@property (strong, nonatomic, setter=_setLastExposureBiasModifiedTime:) NSDate *_lastExposureBiasModificationTime; // @synthesize _lastExposureBiasModificationTime=__lastExposureBiasModificationTime;
@property (strong, nonatomic, setter=_setLastExposureResult:) CAMExposureResult *_lastExposureResult; // @synthesize _lastExposureResult=__lastExposureResult;
@property (strong, nonatomic, setter=_setLastFocusIndictorStartTime:) NSDate *_lastFocusIndictorStartTime; // @synthesize _lastFocusIndictorStartTime=__lastFocusIndictorStartTime;
@property (strong, nonatomic, setter=_setLastFocusResult:) CAMFocusResult *_lastFocusResult; // @synthesize _lastFocusResult=__lastFocusResult;
@property (strong, nonatomic, setter=_setLastTapToFocusTime:) NSDate *_lastTapToFocusTime; // @synthesize _lastTapToFocusTime=__lastTapToFocusTime;
@property (readonly, nonatomic) UILongPressGestureRecognizer *_longPressToLockGestureRecognizer; // @synthesize _longPressToLockGestureRecognizer=__longPressToLockGestureRecognizer;
@property (readonly, nonatomic) long long _mode; // @synthesize _mode=__mode;
@property (readonly, nonatomic) CAMMotionController *_motionController; // @synthesize _motionController=__motionController;
@property (readonly, nonatomic) CAMFocusIndicatorView *_pointIndicator; // @synthesize _pointIndicator=__pointIndicator;
@property (readonly, nonatomic) CAMSubjectIndicatorView *_portraitModeCenteredIndicatorView; // @synthesize _portraitModeCenteredIndicatorView=__portraitModeCenteredIndicatorView;
@property (readonly, nonatomic) CAMStageLightOverlayView *_stageLightOverlayView; // @synthesize _stageLightOverlayView=__stageLightOverlayView;
@property (readonly, nonatomic) UITapGestureRecognizer *_tapToFocusAndExposeGestureRecognizer; // @synthesize _tapToFocusAndExposeGestureRecognizer=__tapToFocusAndExposeGestureRecognizer;
@property (readonly, weak, nonatomic) CAMTimelapseController *_timelapseController; // @synthesize _timelapseController=__timelapseController;
@property (readonly, nonatomic) BOOL _updateFaceIndicators; // @synthesize _updateFaceIndicators=__updateFaceIndicators;
@property (nonatomic, setter=_setUserLockedFocusAndExposure:) BOOL _userLockedFocusAndExposure; // @synthesize _userLockedFocusAndExposure=__userLockedFocusAndExposure;
@property (readonly, nonatomic) UIPanGestureRecognizer *activeExposureBiasPanGestureRecognizer;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<CAMPreviewViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic, getter=isExposureLockedByUser) BOOL exposureLockedByUser;
@property (readonly, nonatomic, getter=isFocusLockedByUser) BOOL focusLockedByUser;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long layoutStyle; // @synthesize layoutStyle=_layoutStyle;
@property (nonatomic) long long lightingType; // @synthesize lightingType=_lightingType;
@property (readonly, nonatomic) CAMPreviewView *previewView;
@property (nonatomic) long long shallowDepthOfFieldStatus; // @synthesize shallowDepthOfFieldStatus=_shallowDepthOfFieldStatus;
@property (nonatomic, getter=isShowingStandardControls) BOOL showingStandardControls; // @synthesize showingStandardControls=_showingStandardControls;
@property (readonly) Class superclass;

+ (double)hideIndicatorAnimationDuration;
+ (double)showIndicatorAnimationDuration;
- (void).cxx_destruct;
- (void)_activateFocusIndicator:(id)arg1;
- (BOOL)_allowExposureBiasForMode:(long long)arg1;
- (BOOL)_allowUserToChangeFocusAndExposure;
- (void)_applicationDidEnterBackground;
- (BOOL)_canModifyExposureBias;
- (void)_cancelDelayedActions;
- (void)_cancelDelayedFaceIndicatorFadeOut;
- (void)_cancelDelayedFocusAndExposureLock;
- (void)_cancelDelayedHideOrDeactivateForFocusIndicator:(id)arg1;
- (void)_captureOrientationChanged:(id)arg1;
- (void)_createAspectRatioToggleDoubleTapGestureRecognizerIfNecessary;
- (void)_createCommonGestureRecognizersIfNecessary;
- (void)_createContinuousIndicatorIfNecessary;
- (void)_createExposureBiasPanGestureRecognizerIfNecessary;
- (void)_createLongPressToLockGestureRecognizersIfNecessary;
- (void)_createPointIndicatorIfNecessary;
- (void)_createPortraitModeCenteredIndicatorViewIfNecessary;
- (void)_createStageLightOverlayViewIfNeededWillAnimate:(BOOL)arg1;
- (void)_createTapToFocusAndExposeGestureRecognizerIfNecessary;
- (void)_deactivateFocusIndicator:(id)arg1;
- (void)_deactivateFocusIndicator:(id)arg1 afterDelay:(double)arg2;
- (void)_didChangeModeOrDeviceAnimated:(BOOL)arg1;
- (double)_effectiveExposureBiasMovementForTranslation:(struct CGPoint)arg1;
- (double)_exposureBiasForVirtualSliderPosition:(double)arg1;
- (int)_exposureBiasSide;
- (float)_exposureTargetBiasMaximum;
- (float)_exposureTargetBiasMinimum;
- (void)_fadeOutFaceIndicators;
- (void)_fadeOutFaceIndicatorsAfterDelay:(double)arg1;
- (void)_finishFocusingLockedPointOfInterestIndicator;
- (id)_focusIndicatorViewsWithExposureBiasSliders;
- (void)_focusOnPoint:(struct CGPoint)arg1;
- (void)_handleAspectRatioToggleDoubleTap:(id)arg1;
- (void)_handleExposureBiasPan:(id)arg1;
- (void)_handleLongPressToLock:(id)arg1;
- (void)_handleTapToFocusAndExpose:(id)arg1;
- (void)_hideAllFocusIndicatorsAnimated:(BOOL)arg1;
- (void)_hideAllFocusIndicatorsExceptForIndicator:(id)arg1;
- (void)_hideFaceIndicatorsAnimated:(BOOL)arg1;
- (void)_hideFocusIndicator:(id)arg1;
- (void)_hideFocusIndicator:(id)arg1 afterDelay:(double)arg2;
- (void)_hideFocusIndicator:(id)arg1 animated:(BOOL)arg2;
- (void)_hidePortaitModeTrackedSubjectIndicatorsAnimated:(BOOL)arg1;
- (void)_initializeExposureBiasParametersForFocusIndicatorView:(id)arg1;
- (void)_initializeExposureBiasSliderParameters;
- (long long)_interfaceOrientation;
- (BOOL)_isFocusLockAllowed;
- (BOOL)_isFullyAutomaticFocus:(id)arg1 andExposure:(id)arg2;
- (BOOL)_isFullyAutomaticFocusAndExposure;
- (BOOL)_isPanningExposureBias;
- (BOOL)_isPortraitEffectActive;
- (BOOL)_isShowingFaces;
- (long long)_largeStyleForPointIndicator;
- (void)_lockFocusAndExposure;
- (void)_lockFocusAndExposureAfterDelay:(double)arg1;
- (void)_resetCachedTimes;
- (void)_resetFaceTracking;
- (void)_scaleDownLockedPointOfInterest;
- (void)_scalePortraitModeFocusIndicators;
- (void)_setFocusIndicatorsPulsing:(BOOL)arg1;
- (void)_setUserLockedFocusAndExposure:(BOOL)arg1 shouldAnimate:(BOOL)arg2;
- (BOOL)_shouldAllowAspectRatioToggleForMode:(long long)arg1;
- (BOOL)_shouldAllowFaceIndicators;
- (BOOL)_shouldDisableAspectRatioToggle;
- (BOOL)_shouldDisableFocusUI;
- (BOOL)_shouldResetFocusAndExposureForSubjectAreaDidChange;
- (BOOL)_shouldShowContinuousIndicator;
- (BOOL)_shouldShowIndicatorsAsInactive;
- (BOOL)_shouldShowPortraitModeIndicatorViews;
- (BOOL)_shouldShowPortraitModeTrackedSubjectIndicatorsForLightingType:(long long)arg1;
- (BOOL)_shouldShowStageLightOverlayActive;
- (BOOL)_shouldShowStageLightOverlayViewForMode:(long long)arg1 lightingType:(long long)arg2;
- (BOOL)_shouldSuppressNewFaces;
- (BOOL)_shouldSuppressNewPortraitModeTrackedSubjectIndicators;
- (BOOL)_shouldUpdateIndicatorSizeFrom:(struct CGSize)arg1 to:(struct CGSize)arg2 minimumAreaChangeThreshold:(double)arg3 minimumAreaFractionChangeThreshold:(double)arg4;
- (BOOL)_showExposureBiasSliderForPointView;
- (void)_showIndicatorAtPointOfInterest:(struct CGPoint)arg1;
- (void)_showLockedAtPointOfInterest:(struct CGPoint)arg1;
- (void)_showUIForResetFocusAndExposure;
- (long long)_styleForPointIndicator;
- (void)_updateExposureBiasPanGestureRecognizerForOrientation;
- (void)_updateExposureBiasSideAnimated:(BOOL)arg1;
- (void)_updateExposureBiasViews;
- (void)_updateExposureBiasViews:(id)arg1;
- (void)_updateFaceIndicatorsForFaceResults:(id)arg1;
- (void)_updateFaceIndicatorsWithResults:(id)arg1;
- (void)_updateForOrientation;
- (void)_updatePortraitModeTrackedSubjectIndicatorsWithFaceResults:(id)arg1;
- (void)_updatePortraitModeViewsAnimated:(BOOL)arg1;
- (void)_updatePortraitModeViewsForFaceResults:(id)arg1;
- (void)_updatePreviewViewAspectMode;
- (void)_updateUIForCenteredContrastBasedFocusDidEnd;
- (void)_validateExposureTargetBiasFromExposureResult:(id)arg1;
- (void)_validateInternalProperties;
- (void)_validateLastExposureBiasModificationTime;
- (void)_validateUserLockedFocusAndExposure;
- (double)_virtualSliderPositionForExposureBias:(double)arg1;
- (void)_willChangeModeOrDevice;
- (void)captureController:(id)arg1 didOutputExposureResult:(id)arg2;
- (void)captureController:(id)arg1 didOutputFaceResults:(id)arg2;
- (void)captureController:(id)arg1 didOutputFocusResult:(id)arg2;
- (BOOL)captureController:(id)arg1 shouldResetFocusAndExposureForReason:(long long)arg2;
- (double)captureControllerDelayBeforeResettingFocusAndExposureAfterCapture:(id)arg1;
- (BOOL)captureControllerUserHasAdjustedExposureTargetBias:(id)arg1;
- (void)captureControllerWillResetFocusAndExposure:(id)arg1;
- (void)dealloc;
- (void)didChangeToMode:(long long)arg1 device:(long long)arg2 animated:(BOOL)arg3;
- (id)focusIndicatorViewBoundingViewForClippingFocusIndicatorView:(id)arg1;
- (void)focusOnNormalizedPoint:(struct CGPoint)arg1;
- (BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (BOOL)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;
- (BOOL)gestureRecognizerShouldBegin:(id)arg1;
- (void)handleTapAtPoint:(struct CGPoint)arg1;
- (id)initWithCaptureController:(id)arg1 motionController:(id)arg2 timelapseController:(id)arg3;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)loadView;
- (void)notifyCaptureSessionDidStopRunning;
- (void)notifyDidStopCapture;
- (void)notifyShutterButtonPressed;
- (void)notifyWillStartCapturing;
- (void)previewViewDidAddFirstTrackedSubjectIndicator:(id)arg1;
- (void)previewViewDidRemoveLastTrackedSubjectIndicator:(id)arg1;
- (void)setLightingType:(long long)arg1 animated:(BOOL)arg2;
- (void)viewDidLoad;
- (void)viewWillDisappear:(BOOL)arg1;
- (void)willChangeToMode:(long long)arg1 device:(long long)arg2;

@end

