//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIControl.h>

#import <CameraUI/CAMZoomButtonDelegate-Protocol.h>

@class CAMZoomButton, CAMZoomControlButtonMaskView, CAMZoomDial, NSDate, NSString, NSTimer, UIView;
@protocol CAMZoomControlDelegate;

@interface CAMZoomControl : UIControl <CAMZoomButtonDelegate>
{
    struct {
        BOOL respondsToDidChangeZoomFactor;
        BOOL respondsToCanToggleBetweenWideAndTelephoto;
        BOOL respondsToToggleBetweenWideAndTelephoto;
    } _delegateFlags;
    BOOL __zoomDialEnabled;
    BOOL __shouldShowZoomDial;
    BOOL __eligibleForSwipeDownToDismiss;
    id<CAMZoomControlDelegate> _delegate;
    long long _layoutStyle;
    double _zoomFactor;
    long long _orientation;
    CAMZoomButton *__zoomButton;
    CAMZoomDial *__zoomDial;
    UIView *__dialClippingView;
    CAMZoomControlButtonMaskView *__buttonMaskView;
    long long __zoomControlMode;
    double __minimumZoomFactor;
    double __maximumZoomFactor;
    double __dualCameraSwitchOverZoomFactor;
    double __previousTouchTime;
    NSTimer *__zoomDialVisibilityTimer;
    NSDate *__startTimeForHideAnimationInProgress;
    double _zoomButtonMaxYWhenContracted;
    double _zoomDialRadius;
    struct CGPoint __startTouchLocation;
    struct CGPoint __previousTouchLocation;
    struct UIEdgeInsets _contentInsets;
}

@property (readonly, nonatomic) CAMZoomControlButtonMaskView *_buttonMaskView; // @synthesize _buttonMaskView=__buttonMaskView;
@property (readonly, nonatomic) UIView *_dialClippingView; // @synthesize _dialClippingView=__dialClippingView;
@property (nonatomic, setter=_setDisplayDualCameraSwitchOverZoomFactor:) double _displayDualCameraSwitchOverZoomFactor;
@property (nonatomic, setter=_setDisplayMaximumZoomFactor:) double _displayMaximumZoomFactor;
@property (nonatomic, setter=_setDisplayMinimumZoomFactor:) double _displayMinimumZoomFactor;
@property (readonly, nonatomic) double _displayZoomValue;
@property (nonatomic, setter=_setDualCameraSwitchOverZoomFactor:) double _dualCameraSwitchOverZoomFactor; // @synthesize _dualCameraSwitchOverZoomFactor=__dualCameraSwitchOverZoomFactor;
@property (nonatomic, getter=_isEligibleForSwipeDownToDismiss, setter=_setEligibleForSwipeDownToDismiss:) BOOL _eligibleForSwipeDownToDismiss; // @synthesize _eligibleForSwipeDownToDismiss=__eligibleForSwipeDownToDismiss;
@property (nonatomic, setter=_setMaximumZoomFactor:) double _maximumZoomFactor; // @synthesize _maximumZoomFactor=__maximumZoomFactor;
@property (nonatomic, setter=_setMinimumZoomFactor:) double _minimumZoomFactor; // @synthesize _minimumZoomFactor=__minimumZoomFactor;
@property (nonatomic, setter=_setPreviousTouchLocation:) struct CGPoint _previousTouchLocation; // @synthesize _previousTouchLocation=__previousTouchLocation;
@property (nonatomic, setter=_setPreviousTouchTime:) double _previousTouchTime; // @synthesize _previousTouchTime=__previousTouchTime;
@property (nonatomic, setter=_setShouldShowZoomDial:) BOOL _shouldShowZoomDial; // @synthesize _shouldShowZoomDial=__shouldShowZoomDial;
@property (strong, nonatomic, setter=_setStartTimeForHideAnimationInProgress:) NSDate *_startTimeForHideAnimationInProgress; // @synthesize _startTimeForHideAnimationInProgress=__startTimeForHideAnimationInProgress;
@property (nonatomic, setter=_setStartTouchLocation:) struct CGPoint _startTouchLocation; // @synthesize _startTouchLocation=__startTouchLocation;
@property (readonly, nonatomic) CAMZoomButton *_zoomButton; // @synthesize _zoomButton=__zoomButton;
@property (nonatomic, setter=_setZoomControlMode:) long long _zoomControlMode; // @synthesize _zoomControlMode=__zoomControlMode;
@property (readonly, nonatomic) CAMZoomDial *_zoomDial; // @synthesize _zoomDial=__zoomDial;
@property (nonatomic, getter=_isZoomDialEnabled, setter=_setZoomDialEnabled:) BOOL _zoomDialEnabled; // @synthesize _zoomDialEnabled=__zoomDialEnabled;
@property (strong, nonatomic, setter=_setZoomDialVisibilityTimer:) NSTimer *_zoomDialVisibilityTimer; // @synthesize _zoomDialVisibilityTimer=__zoomDialVisibilityTimer;
@property (nonatomic) struct UIEdgeInsets contentInsets; // @synthesize contentInsets=_contentInsets;
@property (nonatomic) NSString *contentSizeCategory;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<CAMZoomControlDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long layoutStyle; // @synthesize layoutStyle=_layoutStyle;
@property (nonatomic) long long orientation; // @synthesize orientation=_orientation;
@property (nonatomic) BOOL shouldDisableValuesBelowDualCameraSwitchOver;
@property (readonly) Class superclass;
@property (nonatomic) double zoomButtonMaxYWhenContracted; // @synthesize zoomButtonMaxYWhenContracted=_zoomButtonMaxYWhenContracted;
@property (readonly, nonatomic) double zoomDialBorderWidth;
@property (nonatomic) double zoomDialRadius; // @synthesize zoomDialRadius=_zoomDialRadius;
@property (nonatomic) double zoomFactor; // @synthesize zoomFactor=_zoomFactor;

- (void).cxx_destruct;
- (double)_accelerationForMovementFromPointFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 elapsedTime:(double)arg3;
- (double)_additionalAccelerationForMovementFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 deltaX:(double)arg3;
- (void)_cancelDelayedZoomDialVisibilityChange;
- (void)_cleanupForCancelTracking;
- (void)_configureForControlMode:(long long)arg1 zoomFactor:(double)arg2 minimumZoomFactor:(double)arg3 displayMinimumZoomFactor:(double)arg4 maximumZoomFactor:(double)arg5 displayMaximumZoomFactor:(double)arg6 dualCameraSwitchOverZoomFactor:(double)arg7 displayDualCameraSwitchOverZoomFactor:(double)arg8;
- (double)_dampingFactorForDistanceFromDialForPoint:(struct CGPoint)arg1;
- (double)_dampingFactorForMovementFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;
- (double)_dampingFactorForPerpendicularityFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;
- (double)_displayZoomValueForZoomFactor:(double)arg1;
- (double)_distanceFromDialClippingViewToPoint:(struct CGPoint)arg1;
- (void)_handleButtonTapped;
- (void)_handleButtonTappedForDualCameraMode;
- (void)_handleButtonTappedForWideOrTeleMode;
- (void)_handleZoomDialVisibilityTimerFiredWithUserInfo:(id)arg1;
- (BOOL)_isWithinZoomButtonBoundsWithTouch:(id)arg1;
- (double)_normalizeValue:(double)arg1 betweenMinimumValue:(double)arg2 maximumValue:(double)arg3;
- (void)_setShouldShowZoomDial:(BOOL)arg1 animationDuration:(long long)arg2;
- (void)_setShouldShowZoomDial:(BOOL)arg1 animationDuration:(long long)arg2 afterDelay:(double)arg3;
- (void)_setZoomDialEnabled:(BOOL)arg1 animationDuration:(long long)arg2;
- (void)_setZoomFactor:(double)arg1 interactionType:(long long)arg2 shouldNotifyDelegate:(BOOL)arg3;
- (BOOL)_shouldInterceptTouchesForHidingZoomDial;
- (void)_updateDisplayedValues;
- (void)_updateMaskViewForZoomButtonHighlightingTransform;
- (double)_zoomFactorForDisplayZoomValue:(double)arg1;
- (struct UIEdgeInsets)alignmentRectInsets;
- (BOOL)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)cancelTrackingWithEvent:(id)arg1;
- (void)configureForDualDeviceWithZoomFactor:(double)arg1 minimumZoomFactor:(double)arg2 displayMinimumZoomFactor:(double)arg3 maximumZoomFactor:(double)arg4 displayMaximumZoomFactor:(double)arg5 dualCameraSwitchOverZoomFactor:(double)arg6 displayDualCameraSwitchOverZoomFactor:(double)arg7;
- (void)configureForSingleCameraPlusToggleWithZoomFactor:(double)arg1 minimumZoomFactor:(double)arg2 displayMinimumZoomFactor:(double)arg3 maximumZoomFactor:(double)arg4 displayMaximumZoomFactor:(double)arg5;
- (void)configureForToggleOnlyWithZoomFactor:(double)arg1 minimumZoomFactor:(double)arg2 displayMinimumZoomFactor:(double)arg3 maximumZoomFactor:(double)arg4 displayMaximumZoomFactor:(double)arg5;
- (BOOL)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)initWithLayoutStyle:(long long)arg1;
- (void)layoutSubviews;
- (void)setOrientation:(long long)arg1 animated:(BOOL)arg2;
- (void)setShouldShowZoomDial:(BOOL)arg1 animationDuration:(long long)arg2;
- (void)zoomButtonDidLayout;

@end

