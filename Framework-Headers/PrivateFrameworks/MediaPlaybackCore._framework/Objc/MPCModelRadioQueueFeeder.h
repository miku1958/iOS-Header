//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <MediaPlayer/MPQueueFeeder.h>

#import <MediaPlaybackCore/ICEnvironmentMonitorObserver-Protocol.h>
#import <MediaPlaybackCore/MPAVItemObserver-Protocol.h>
#import <MediaPlaybackCore/MPCQueueControllerDataSource-Protocol.h>
#import <MediaPlaybackCore/MPRTCReportingItemSessionContaining-Protocol.h>

@class ICPlayActivityController, ICStoreRequestContext, ICUserIdentityStore, MPAVItem, MPCModelRadioPersonalizationResponse, MPCModelRadioPlaybackContext, MPCModelRadioPlaybackQueue, MPCPlaybackRequestEnvironment, NSDictionary, NSObject, NSString;
@protocol MPMutableIdentifierListSection, OS_dispatch_queue;

@interface MPCModelRadioQueueFeeder : MPQueueFeeder <MPRTCReportingItemSessionContaining, MPAVItemObserver, ICEnvironmentMonitorObserver, MPCQueueControllerDataSource>
{
    id<MPMutableIdentifierListSection> _section;
    MPCModelRadioPlaybackQueue *_playbackQueue;
    MPCModelRadioPlaybackContext *_playbackContext;
    BOOL _needsSectionUpdate;
    NSObject<OS_dispatch_queue> *_diffQueue;
    unsigned long long _backgroundTaskIdentifier;
    unsigned long long _backgroundTasks;
    MPAVItem *_currentItem;
    BOOL _hasReachedTracklistEnd;
    BOOL _supportsLoadingAdditionalItems;
    NSString *_lastCleanPlayedIdentifier;
    NSString *_lastPlayedIdentifier;
    MPCModelRadioPersonalizationResponse *_lastResponse;
    BOOL _mayHaveRestrictedContent;
    MPCPlaybackRequestEnvironment *_playbackRequestEnvironment;
    long long _queueGeneration;
    NSString *_siriAssetInfo;
    ICUserIdentityStore *_observedIdentityStore;
    ICStoreRequestContext *_storeRequestContext;
    ICPlayActivityController *_playActivityController;
    CDUnknownBlockType _finalTracklistLoadingCompletionHandler;
}

@property (readonly, nonatomic) BOOL containsLiveStream;
@property (readonly, nonatomic) BOOL containsTransportableContent;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, copy, nonatomic) NSString *rtcReportingPlayQueueSourceIdentifier;
@property (readonly, copy, nonatomic) NSDictionary *rtcReportingSessionAdditionalUserInfo;
@property (readonly) Class superclass;

+ (id)sharedQueue;
- (void).cxx_destruct;
- (void)_allowCellularStreamingDidChangeNotification:(id)arg1;
- (void)_beginBackgroundTaskAssertion;
- (void)_beginObservingIdentityStoreForSignOut;
- (id)_defaultGetTracksRequestWithContext:(id)arg1 radioStation:(id)arg2;
- (void)_detectSignOutForIdentityStore:(id)arg1;
- (void)_detectSignOutForIdentityStoreChangeNotification:(id)arg1;
- (void)_endBackgroundTaskAssertion;
- (void)_endObservingIdentityStoreForSignOut;
- (id)_errorForRequest:(id)arg1 withError:(id)arg2;
- (void)_handleGetTracksResponse:(id)arg1 getTracksError:(id)arg2 fromRequest:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_handlePersonalizationResponse:(id)arg1 personalizationError:(id)arg2 fromRequest:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (BOOL)_isTransientLoadingError:(id)arg1;
- (void)_loadTracksWithRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_observePersonalizationResponse:(id)arg1;
- (void)_removeRestrictedTracks;
- (void)_repersonalizeCurrentTracks;
- (void)_responseDidInvalidate;
- (void)_responseDidInvalidateNotification:(id)arg1;
- (void)_savePlaybackHistoryWithCurrentIndex:(long long)arg1;
- (void)_updateAdditionalLoadingSupport;
- (BOOL)canSkipItem:(id)arg1;
- (void)dealloc;
- (void)didSignificantlyChangeItem:(id)arg1;
- (void)environmentMonitorDidChangeNetworkType:(id)arg1;
- (void)getRepresentativeMetadataForPlaybackContext:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)init;
- (long long)itemCount;
- (void)itemDidBeginPlayback:(id)arg1;
- (id)itemForItem:(id)arg1 inSection:(id)arg2;
- (void)loadAdditionalItemsWithRequest:(id)arg1 forSection:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)loadPlaybackContext:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)modelPlayEvent;
- (id)placeholderItemForLoadingAdditionalItemsInSection:(id)arg1;
- (long long)prefetchThresholdForSection:(id)arg1;
- (void)reloadSection:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (BOOL)section:(id)arg1 supportsShuffleType:(long long)arg2;
- (BOOL)shouldRequestAdditionalItemsWhenReachingTailOfSection:(id)arg1;
- (long long)supplementalPlaybackContextBehavior;
- (id)supplementalPlaybackContextWithReason:(long long)arg1;
- (BOOL)supportsAutoPlayForItem:(id)arg1 inSection:(id)arg2;
- (id)updatedPlaybackContext;

@end

