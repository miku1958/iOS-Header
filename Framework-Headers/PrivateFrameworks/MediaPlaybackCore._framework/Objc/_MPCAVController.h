//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <MediaPlayer/MPAVController.h>

@class MPAVItem, MPCPlaybackEngine, NSMutableSet;

@interface _MPCAVController : MPAVController
{
    BOOL _playedSuccessfully;
    BOOL _allowsNewPlaybackErrorItem;
    MPCPlaybackEngine *_playbackEngine;
    long long _actionAtQueueEnd;
    MPAVItem *_firstPlaybackErrorItem;
    NSMutableSet *_failedItemsIdentifiers;
}

@property (nonatomic) long long actionAtQueueEnd; // @synthesize actionAtQueueEnd=_actionAtQueueEnd;
@property (nonatomic) BOOL allowsNewPlaybackErrorItem; // @synthesize allowsNewPlaybackErrorItem=_allowsNewPlaybackErrorItem;
@property (strong, nonatomic) NSMutableSet *failedItemsIdentifiers; // @synthesize failedItemsIdentifiers=_failedItemsIdentifiers;
@property (weak, nonatomic) MPAVItem *firstPlaybackErrorItem; // @synthesize firstPlaybackErrorItem=_firstPlaybackErrorItem;
@property (readonly, weak, nonatomic) MPCPlaybackEngine *playbackEngine; // @synthesize playbackEngine=_playbackEngine;
@property (nonatomic, getter=hasPlayedSuccessfully) BOOL playedSuccessfully; // @synthesize playedSuccessfully=_playedSuccessfully;

+ (BOOL)prefersApplicationAudioSession;
- (void).cxx_destruct;
- (void)_configureAudioSession;
- (void)_connectAVPlayer;
- (void)_contentsChanged;
- (id)_expectedAssetTypesForPlaybackMode:(long long)arg1;
- (void)_itemDidChange:(id)arg1;
- (void)_itemDidSignificantlyChangeElapsedTime:(double)arg1 rate:(float)arg2;
- (void)_itemPlaybackDidEndNotification:(id)arg1;
- (void)_itemWillChange:(id)arg1;
- (void)_networkPolicyItemCellularRestrictedNotification:(id)arg1;
- (void)_playbackUserDefaultsEQPresetDidChangeNotification:(id)arg1;
- (void)_queueDidEndWithReason:(id)arg1 lastItem:(id)arg2;
- (void)_setState:(long long)arg1;
- (void)_streamBufferFull:(id)arg1;
- (void)_streamLikelyToKeepUp:(id)arg1;
- (void)_updateStateForPlaybackPrevention;
- (void)endPlayback;
- (void)handlePlaybackErrorWithUserInfo:(id)arg1;
- (id)initWithPlaybackEngine:(id)arg1;
- (id)initWithPlaybackEngine:(id)arg1 options:(unsigned long long)arg2;
- (void)playbackHasStartedForItem:(id)arg1;
- (void)queueController:(id)arg1 didChangeRepeatType:(long long)arg2;
- (void)queueController:(id)arg1 didChangeShuffleType:(long long)arg2;
- (void)queueController:(id)arg1 didIncrementVersionForSegment:(id)arg2;
- (void)reloadWithPlaybackContext:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)updateAudioSession;

@end

