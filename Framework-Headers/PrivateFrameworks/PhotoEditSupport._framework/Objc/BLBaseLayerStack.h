//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class BLPixelImageBuffer, NSDictionary, NSMutableArray, UIImage;

@interface BLBaseLayerStack : NSObject
{
    NSMutableArray *_layers;
    double _brushSize;
    double _brushSoftness;
    struct CGImage *_brushImageRef;
    BOOL _shouldNotify;
    int _maskLongEdgeSize;
    struct CGSize _maskSize;
    struct CGAffineTransform _viewToMaskTransform;
    struct CGAffineTransform _inverseViewToMaskTransform;
    struct CGAffineTransform _flippedViewToMaskTransform;
    struct CGAffineTransform _inverseFlippedViewToMaskTransform;
}

@property (nonatomic) struct CGAffineTransform flippedViewToMaskTransform; // @synthesize flippedViewToMaskTransform=_flippedViewToMaskTransform;
@property (readonly, nonatomic) struct CGAffineTransform inverseFlippedViewToMaskTransform; // @synthesize inverseFlippedViewToMaskTransform=_inverseFlippedViewToMaskTransform;
@property (readonly, nonatomic) struct CGAffineTransform inverseViewToMaskTransform; // @synthesize inverseViewToMaskTransform=_inverseViewToMaskTransform;
@property (readonly, nonatomic) NSMutableArray *layers; // @synthesize layers=_layers;
@property (nonatomic) int maskLongEdgeSize; // @synthesize maskLongEdgeSize=_maskLongEdgeSize;
@property (nonatomic) struct CGSize maskSize; // @synthesize maskSize=_maskSize;
@property (nonatomic) BOOL shouldNotify; // @synthesize shouldNotify=_shouldNotify;
@property (weak, nonatomic) NSDictionary *strokesDataDictionary;
@property (nonatomic) struct CGAffineTransform viewToMaskTransform; // @synthesize viewToMaskTransform=_viewToMaskTransform;
@property (strong, nonatomic) UIImage *workingImage;
@property (strong, nonatomic) BLPixelImageBuffer *workingImageBuffer;
@property (nonatomic) double workingImageScaleFactor;

- (void).cxx_destruct;
- (struct CGImage *)brushImageRefWithSize:(float)arg1 softness:(float)arg2;
- (void)dealloc;
- (BOOL)haveLayerMask;
- (id)imageLayer;
- (double)maskArea;
- (struct CGImage *)newImageForRect:(struct CGRect)arg1 inDestRect:(struct CGRect)arg2 andScale:(double)arg3;
- (BOOL)readyToDraw;
- (double)timestamp;

@end

