//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIView.h>

#import <SearchUI/_UIMultilineTextContentSizing-Protocol.h>

@class NSArray, NSMapTable, NSMutableArray, NSMutableDictionary, NSString;
@protocol NUIContainerStackViewDelegate;

@interface NUIContainerStackView : UIView <_UIMultilineTextContentSizing>
{
    NSMutableArray *_arrangedSubviews;
    NSArray *_visibleArrangedSubviews;
    NSMutableArray *_spacingViews;
    double _preferredMaxLayoutWidth;
    struct {
        double _field1;
        double _field2;
    } *_cachedVisibleStackLinePairs;
    double *_cachedSpacings;
    NSMutableDictionary *_cachedIntrinsicSizes;
    NSMapTable *_cachedSystemLayoutSizes;
    struct {
        unsigned int hiddenArrangedSubviewCount:8;
        unsigned int determiningPreferredMaxLayoutWidth:1;
        unsigned int inSecondConstraintsPass:1;
        unsigned int delegateDidInvalidateIntrinsicContentSize:1;
        unsigned int delegateSystemLayoutSizeFittingSizeForArrangedSubview:1;
        unsigned int delegateMinimumSpacingAdjecentToArrangedSubview:1;
        unsigned int delegateLayoutFrameForArrangedSubview:1;
        unsigned int delegateDidLayout:1;
    } _stackViewFlags;
    BOOL _baselineRelativeArrangement;
    BOOL _layoutMarginsRelativeArrangement;
    id<NUIContainerStackViewDelegate> _delegate;
    long long _axis;
    long long _distribution;
    long long _alignment;
    double _spacing;
    Class _spacingViewClass;
}

@property (nonatomic) long long alignment; // @synthesize alignment=_alignment;
@property (copy, nonatomic) NSArray *arrangedSubviews;
@property (nonatomic) long long axis; // @synthesize axis=_axis;
@property (nonatomic, getter=isBaselineRelativeArrangement) BOOL baselineRelativeArrangement; // @synthesize baselineRelativeArrangement=_baselineRelativeArrangement;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<NUIContainerStackViewDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) long long distribution; // @synthesize distribution=_distribution;
@property (readonly) unsigned long long hash;
@property (nonatomic, getter=isLayoutMarginsRelativeArrangement) BOOL layoutMarginsRelativeArrangement; // @synthesize layoutMarginsRelativeArrangement=_layoutMarginsRelativeArrangement;
@property (nonatomic) double spacing; // @synthesize spacing=_spacing;
@property (strong, nonatomic) Class spacingViewClass; // @synthesize spacingViewClass=_spacingViewClass;
@property (readonly) Class superclass;

+ (Class)layerClass;
- (void).cxx_destruct;
- (void)__calculateExtendedDistributiontPositionsForViews:(id)arg1 withBounds:(struct CGRect)arg2 totalSize:(struct CGSize)arg3 intoRects:(struct CGRect *)arg4;
- (void)__calculateIntrinsicSizesForViews:(id)arg1 withAvailableSize:(struct CGSize)arg2 intoRects:(struct CGRect *)arg3 totalSize:(struct CGSize *)arg4;
- (void)__finalizeSizesForViews:(id)arg1 withIndexesToRemeasure:(id)arg2 availableSize:(struct CGSize)arg3 intoRects:(struct CGRect *)arg4 totalSize:(struct CGSize *)arg5;
- (id)__indexesToRemeasureAfterCompressingViews:(id)arg1 ifNeededToFitAvailableSize:(struct CGSize)arg2 intoRects:(struct CGRect *)arg3 totalSize:(struct CGSize *)arg4;
- (id)__indexesToRemeasureAfterExpandingViews:(id)arg1 withDistribution:(long long)arg2 ifNeededToFillAvailableSize:(struct CGSize)arg3 intoRects:(struct CGRect *)arg4 totalSize:(struct CGSize *)arg5;
- (id)_baselineViewVendForFirstBaseline:(BOOL)arg1;
- (void)_calculateAlignmentPositionsForViews:(id)arg1 withBounds:(struct CGRect)arg2 intoRects:(struct CGRect *)arg3;
- (void)_calculateDistributiontPositionsForViews:(id)arg1 withBounds:(struct CGRect)arg2 totalSize:(struct CGSize)arg3 intoRects:(struct CGRect *)arg4;
- (void)_calculateSizesForViews:(id)arg1 withDistribution:(long long)arg2 availableSize:(struct CGSize)arg3 intoRects:(struct CGRect *)arg4 totalSize:(struct CGSize *)arg5 maxSize:(struct CGSize *)arg6;
- (void)_didRemoveSubview:(id)arg1;
- (void)_freeCachedMetricsIfNeeded;
- (void)_intrinsicContentSizeInvalidatedForChildView:(id)arg1;
- (struct CGSize)_intrinsicSizeWithinSize:(struct CGSize)arg1;
- (BOOL)_needsDoubleUpdateConstraintsPass;
- (void)_notifySubviewVisibilityChanged:(id)arg1;
- (void)_positionsViews:(id)arg1 withRects:(const struct CGRect *)arg2 inBounds:(struct CGRect)arg3;
- (void)_prepareForFirstIntrinsicContentSizeCalculation;
- (void)_prepareForSecondIntrinsicContentSizeCalculationWithLayoutEngineBounds:(struct CGRect)arg1;
- (void)_resetToBeginningOfDoublePass;
- (void)_setInSecondConstraintsPass:(BOOL)arg1;
- (struct CGSize)_systemLayoutSizeFittingSize:(struct CGSize)arg1 forArangedSubview:(id)arg2;
- (double)_totalSpacingAndCacheMetricsIfNeededForViews:(id)arg1;
- (id)_visibleArrangedSubviews;
- (void)addArrangedSubview:(id)arg1;
- (id)initWithArrangedSubviews:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)insertArrangedSubview:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)invalidateIntrinsicContentSize;
- (void)layoutSubviews;
- (void)removeArrangedSubview:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)updateConstraints;
- (id)viewForFirstBaselineLayout;
- (id)viewForLastBaselineLayout;

@end

