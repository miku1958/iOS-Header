//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <SiriVOX/SVXModuleInstance-Protocol.h>
#import <SiriVOX/SVXSessionActivityListening-Protocol.h>
#import <SiriVOX/SVXSystemVolumeDataSource-Protocol.h>

@class NSMutableDictionary, NSString, SVXModule, SVXSystemVolumeAnnouncer;
@protocol SVXSystemVolumeDataSource;

__attribute__((visibility("hidden")))
@interface SVXSystemObserver : NSObject <SVXModuleInstance, SVXSessionActivityListening, SVXSystemVolumeDataSource>
{
    SVXModule *_module;
    SVXSystemVolumeAnnouncer *_volumeAnnouncer;
    NSMutableDictionary *_volumesByCategory;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, nonatomic) id<SVXSystemVolumeDataSource> volumeDataSource;

- (void).cxx_destruct;
- (void)_fetchSystemVolumes;
- (void)_handleMediaServerConnectionDied;
- (void)_handleSystemVolumeChangeForCategory:(id)arg1 volume:(float)arg2 reason:(id)arg3;
- (void)_logSnapshot;
- (void)_startObservingInfo;
- (void)_startObservingMediaServerConnection;
- (void)_startObservingSystemVolume;
- (void)_stopObservingInfo;
- (void)_stopObservingMediaServerConnection;
- (void)_stopObservingSystemVolume;
- (void)addVolumeListener:(id)arg1;
- (void)audioSessionDidBecomeActive:(BOOL)arg1 activationContext:(id)arg2 deactivationContext:(id)arg3;
- (void)audioSessionWillBecomeActive:(BOOL)arg1 activationContext:(id)arg2 deactivationContext:(id)arg3;
- (void)getVolumeForAudioCategory:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)initWithModule:(id)arg1;
- (void)mediaServerConnectionDied:(id)arg1;
- (void)removeVolumeListener:(id)arg1;
- (void)sessionDidBecomeActiveWithActivationContext:(id)arg1;
- (void)sessionDidChangeFromState:(long long)arg1 toState:(long long)arg2;
- (void)sessionDidResignActiveWithDeactivationContext:(id)arg1;
- (void)sessionDidStartSoundWithID:(long long)arg1;
- (void)sessionDidStopSoundWithID:(long long)arg1 error:(id)arg2;
- (void)sessionWillBecomeActiveWithActivationContext:(id)arg1;
- (void)sessionWillChangeFromState:(long long)arg1 toState:(long long)arg2;
- (void)sessionWillPresentFeedbackWithDialogIdentifier:(id)arg1;
- (void)sessionWillResignActiveWithOptions:(unsigned long long)arg1 duration:(double)arg2;
- (void)sessionWillStartSoundWithID:(long long)arg1;
- (void)startWithModuleInstanceProvider:(id)arg1 platformDependencies:(id)arg2;
- (void)stopWithModuleInstanceProvider:(id)arg1;
- (void)systemVolumeChanged:(id)arg1;

@end

