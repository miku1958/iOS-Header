//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <PlugInKit/NSXPCListenerDelegate-Protocol.h>

@class NSArray, NSMutableDictionary, NSString, NSXPCListener, PKServicePersonality;
@protocol OS_dispatch_queue, PKServiceDelegate;

@interface PKService : NSObject <NSXPCListenerDelegate>
{
    BOOL _shared;
    id<PKServiceDelegate> _delegate;
    NSXPCListener *_serviceListener;
    NSMutableDictionary *_personalities;
    PKServicePersonality *_solePersonality;
    NSObject<OS_dispatch_queue> *__sync;
    NSArray *_subsystems;
}

@property (strong) NSObject<OS_dispatch_queue> *_sync; // @synthesize _sync=__sync;
@property (readonly, copy) NSString *debugDescription;
@property (strong) id<PKServiceDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (strong) NSMutableDictionary *personalities; // @synthesize personalities=_personalities;
@property (strong) NSXPCListener *serviceListener; // @synthesize serviceListener=_serviceListener;
@property BOOL shared; // @synthesize shared=_shared;
@property (strong) PKServicePersonality *solePersonality; // @synthesize solePersonality=_solePersonality;
@property (strong) NSArray *subsystems; // @synthesize subsystems=_subsystems;
@property (readonly) Class superclass;

+ (int)_defaultRun:(int)arg1 arguments:(const char **)arg2;
+ (id)defaultService;
+ (void)main;
- (void).cxx_destruct;
- (BOOL)_processDefaultSubsystemName:(id)arg1;
- (void)checkEnvironment:(id)arg1;
- (id)configuredSubsystemList;
- (id)connectionForPlugInNamed:(id)arg1;
- (void)copyAppStoreReceipt:(CDUnknownBlockType)arg1;
- (id)defaultsForPlugInNamed:(id)arg1;
- (id)discoverSubsystemNamed:(id)arg1 logMissing:(BOOL)arg2;
- (void)discoverSubsystems;
- (id)embeddedPrincipalForPlugInNamed:(id)arg1;
- (id)hostPrincipalForPlugInNamed:(id)arg1;
- (id)init;
- (void)launchContainingApplicationForPlugInNamed:(id)arg1;
- (BOOL)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (void)mergeSubsystemList:(id)arg1 from:(id)arg2;
- (void)mergeSubsystems:(id)arg1 from:(id)arg2;
- (id)personalityNamed:(id)arg1;
- (id)personalityNamed:(id)arg1 forHostPid:(int)arg2;
- (id)plugInPrincipalForPlugInNamed:(id)arg1;
- (void)registerPersonality:(id)arg1;
- (void)run;
- (BOOL)unregisterPersonality:(id)arg1;

@end

