//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <HMFoundation/HMFObject.h>

#import <HomeAI/HMFLogging-Protocol.h>
#import <HomeAI/HMIMotionDetector-Protocol.h>

@class NSMutableArray, NSMutableDictionary, NSString;

@interface HMIDenseOpticalFlowMotionDetector : HMFObject <HMIMotionDetector, HMFLogging>
{
    NSMutableArray *_frames;
    NSMutableArray *_quantizedFrames;
    NSMutableDictionary *_minRows;
    NSMutableDictionary *_maxRows;
    NSMutableDictionary *_minCols;
    NSMutableDictionary *_maxCols;
    struct CGSize _size;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) NSMutableArray *frames; // @synthesize frames=_frames;
@property (readonly) unsigned long long hash;
@property (strong) NSMutableDictionary *maxCols; // @synthesize maxCols=_maxCols;
@property (strong) NSMutableDictionary *maxRows; // @synthesize maxRows=_maxRows;
@property (strong) NSMutableDictionary *minCols; // @synthesize minCols=_minCols;
@property (strong) NSMutableDictionary *minRows; // @synthesize minRows=_minRows;
@property (readonly) NSMutableArray *quantizedFrames; // @synthesize quantizedFrames=_quantizedFrames;
@property (readonly) struct CGSize size; // @synthesize size=_size;
@property (readonly) Class superclass;

+ (id)logCategory;
- (void).cxx_destruct;
- (void)appendFramePixelBuffer:(struct __CVBuffer *)arg1 atTime:(CDStruct_1b6d18a9)arg2;
- (float)computeFlowMagnitudeMatrixFromOriginal:(struct __CVBuffer *)arg1 flowArray:(float *)arg2 error:(id *)arg3;
- (id)computeOpticalFlow:(struct __CVBuffer *)arg1 with:(struct __CVBuffer *)arg2 globalMotionScore:(float *)arg3;
- (long long)connectedComponentsQuantizedFrames:(id)arg1;
- (void)dealloc;
- (id)detectWithGlobalMotionScore:(float *)arg1;
- (id)initWithSize:(struct CGSize)arg1;
- (struct CGRect)makeRawCropRect:(id)arg1;
- (BOOL)quantizedAndBinarizeFrame:(float *)arg1 quantizedFrames:(id)arg2;
- (void)setup;
- (void)unionTheRegoins;

@end

