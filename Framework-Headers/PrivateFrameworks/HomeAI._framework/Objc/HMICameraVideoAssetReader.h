//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <HMFoundation/HMFObject.h>

#import <HomeAI/AVAssetResourceLoaderDelegate-Protocol.h>
#import <HomeAI/HMFLogging-Protocol.h>

@class AVAssetReader, HMICameraVideoFragment, NSObject, NSString;
@protocol OS_dispatch_queue;

@interface HMICameraVideoAssetReader : HMFObject <HMFLogging, AVAssetResourceLoaderDelegate>
{
    NSString *_logIdentifier;
    HMICameraVideoFragment *_videoFragment;
    unsigned long long _currentFrameId;
    NSObject<OS_dispatch_queue> *_workQueue;
    AVAssetReader *_assetReader;
    NSObject<OS_dispatch_queue> *_resourceLoaderWorkQueue;
}

@property (strong, nonatomic) AVAssetReader *assetReader; // @synthesize assetReader=_assetReader;
@property unsigned long long currentFrameId; // @synthesize currentFrameId=_currentFrameId;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) NSString *logIdentifier; // @synthesize logIdentifier=_logIdentifier;
@property (readonly) NSObject<OS_dispatch_queue> *resourceLoaderWorkQueue; // @synthesize resourceLoaderWorkQueue=_resourceLoaderWorkQueue;
@property (readonly) Class superclass;
@property (readonly) HMICameraVideoFragment *videoFragment; // @synthesize videoFragment=_videoFragment;
@property (readonly) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;

+ (id)assetKeys;
+ (id)logCategory;
+ (id)readerForVideoFragment:(id)arg1 workQueue:(id)arg2 logIdentifier:(id)arg3;
+ (id)trackKeys;
- (void).cxx_destruct;
- (id)_didKeyValueLoadFailed:(long long)arg1;
- (void)_propertiesLoadedForAsset:(id)arg1 resultCallback:(CDUnknownBlockType)arg2;
- (void)_propertiesLoadedForTrack:(id)arg1 fromAsset:(id)arg2 resultCallback:(CDUnknownBlockType)arg3;
- (unsigned long long)_sequenceNumberOfFirstFragmentInAsset:(id)arg1;
- (unsigned long long)_sequenceNumberOfLastFragmentInAsset:(id)arg1;
- (BOOL)_validateSequentialIntegrityOfFragmentsInAsset:(id)arg1;
- (id)initWithVideoFragment:(id)arg1 workQueue:(id)arg2 logIdentifier:(id)arg3;
- (BOOL)readNextFrame:(id *)arg1 error:(id *)arg2;
- (BOOL)resourceLoader:(id)arg1 shouldWaitForLoadingOfRequestedResource:(id)arg2;
- (void)startReading:(CDUnknownBlockType)arg1;

@end

