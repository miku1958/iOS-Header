//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/NSObject.h>

#import <CalendarFoundation/CalDateRangeProtocol-Protocol.h>
#import <CalendarFoundation/NSCopying-Protocol.h>
#import <CalendarFoundation/NSSecureCoding-Protocol.h>

@class NSDate, NSString;

@interface CalDateRange : NSObject <NSCopying, CalDateRangeProtocol, NSSecureCoding>
{
    NSDate *_startDate;
    NSDate *_endDate;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) double duration;
@property (strong, nonatomic) NSDate *endDate; // @synthesize endDate=_endDate;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) NSDate *startDate; // @synthesize startDate=_startDate;
@property (readonly) Class superclass;

+ (id)rangeByExpandingRange:(id)arg1 direction:(long long)arg2 components:(id)arg3 calendar:(id)arg4;
+ (id)rangeByExpandingRange:(id)arg1 direction:(long long)arg2 duration:(double)arg3;
+ (id)rangeByExpandingRange:(id)arg1 direction:(long long)arg2 multiplier:(unsigned long long)arg3;
+ (id)rangeWithRange:(id)arg1;
+ (id)rangeWithStartDate:(id)arg1 duration:(double)arg2;
+ (id)rangeWithStartDate:(id)arg1 endDate:(id)arg2;
+ (BOOL)supportsSecureCoding;
- (void).cxx_destruct;
- (id)_calculateMidnightsInCalendar:(id)arg1;
- (id)briefDescription;
- (BOOL)containsDate:(id)arg1;
- (BOOL)containsRange:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithStartDate:(id)arg1 duration:(double)arg2;
- (id)initWithStartDate:(id)arg1 endDate:(id)arg2;
- (id)intersectionWithRange:(id)arg1;
- (BOOL)intersectsRange:(id)arg1;
- (BOOL)intersectsRange:(id)arg1 allowSinglePointIntersection:(BOOL)arg2;
- (BOOL)intersectsRangeWithStartDate:(id)arg1 endDate:(id)arg2 allowSinglePointIntersection:(BOOL)arg3;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isValid;
- (id)midnightsForRangeInTimeZoneString:(id)arg1;
- (id)midpoint;
- (void)setDuration:(double)arg1;
- (void)setStartDate:(id)arg1 duration:(double)arg2;
- (void)setStartDate:(id)arg1 endDate:(id)arg2;
- (id)subtractRange:(id)arg1;
- (id)unionRange:(id)arg1;

@end

