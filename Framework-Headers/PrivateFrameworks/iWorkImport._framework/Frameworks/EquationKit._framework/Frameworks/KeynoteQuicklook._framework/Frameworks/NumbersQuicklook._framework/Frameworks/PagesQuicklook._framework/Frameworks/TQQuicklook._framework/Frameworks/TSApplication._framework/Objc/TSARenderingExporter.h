//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <TSApplication/TSKRenderingExporter-Protocol.h>

@class NSDictionary, NSString, TSADocumentRoot, TSAPdfTagger, TSDBitmapRenderingQualityInfo, TSDImager, TSUProgress, TSUProgressContext;
@protocol OS_dispatch_queue, TSARenderingExporterDelegate;

@interface TSARenderingExporter : NSObject <TSKRenderingExporter>
{
    TSADocumentRoot *mDocumentRoot;
    TSDImager *mImager;
    NSObject<OS_dispatch_queue> *mImagerAccessLock;
    NSObject<TSARenderingExporterDelegate> *mRenderingExporterDelegate;
    BOOL mIsCancelled;
    BOOL mIsQuit;
    BOOL mPaginate;
    BOOL mDoesDrawAllPages;
    TSUProgressContext *mProgressContext;
    NSDictionary *mOptions;
    TSDBitmapRenderingQualityInfo *mBitmapRenderingQualityInfo;
    TSAPdfTagger *mPdfTagger;
}

@property (readonly, nonatomic) struct CGRect boundsRect;
@property (readonly, nonatomic) BOOL canExportInBackground;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) NSString *documentSpecificTypeUTI;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) BOOL isCancelled;
@property (readonly, nonatomic) BOOL isExportSupported;
@property (readonly, nonatomic) BOOL needsSupplementalFiles;
@property (readonly, nonatomic) unsigned long long pageCount;
@property (nonatomic) BOOL paginate;
@property (readonly, nonatomic) TSUProgress *progress;
@property (strong) TSUProgressContext *progressContext; // @synthesize progressContext=mProgressContext;
@property (readonly, nonatomic) double progressForCurrentPage;
@property (readonly, nonatomic) NSString *savePanelMessage;
@property (readonly) Class superclass;
@property (copy, nonatomic) NSString *typeUTI;
@property (readonly, nonatomic) struct CGRect unscaledClipRect;

+ (Class)pdfTaggerClass;
- (void).cxx_destruct;
- (id)bitmapRenderingQualityInfo;
- (void)cancel;
- (id)currentInfos;
- (id)documentRoot;
- (void)drawAllPagesWithContext:(struct CGContext *)arg1 returnSuccess:(BOOL *)arg2;
- (BOOL)drawCurrentPageInContext:(struct CGContext *)arg1 viewScale:(double)arg2 unscaledClipRect:(struct CGRect)arg3 createPage:(BOOL)arg4;
- (void)drawCurrentPageWithContext:(struct CGContext *)arg1 returnSuccess:(BOOL *)arg2;
- (BOOL)exportToURL:(id)arg1 delegate:(id)arg2 error:(id *)arg3;
- (BOOL)exportToURL:(id)arg1 pageNumber:(unsigned long long)arg2 delegate:(id)arg3 error:(id *)arg4;
- (void)finalizeContext:(struct CGContext *)arg1;
- (id)imager;
- (Class)imagerClass;
- (BOOL)incrementPage;
- (id)initWithDocumentRoot:(id)arg1;
- (id)initWithDocumentRoot:(id)arg1 imager:(id)arg2;
- (BOOL)isQuit;
- (void)p_drawCurrentPageWithContext:(struct CGContext *)arg1 returnSuccess:(BOOL *)arg2 createPage:(BOOL)arg3;
- (BOOL)p_exportToURL:(id)arg1 pageNumber:(unsigned long long)arg2 delegate:(id)arg3 error:(id *)arg4;
- (id)p_renderingExporterDelegate;
- (id)pdfTagger;
- (void)performBlockWithImager:(CDUnknownBlockType)arg1;
- (BOOL)preparePage:(unsigned long long)arg1;
- (void)quit;
- (BOOL)setInfosToCurrentPage;
- (void)setOptions:(id)arg1;
- (BOOL)setUpAndDrawCurrentPageInContext:(struct CGContext *)arg1 viewScale:(double)arg2 unscaledClipRect:(struct CGRect)arg3 createPage:(BOOL)arg4;
- (void)setUpPdfTaggerWithOptions:(id)arg1;
- (void)setup;
- (BOOL)shouldSuppressBackgroundsForCurrentPage;
- (void)teardown;
- (double)totalProgess;
- (void)waitForRecalcToFinish;

@end

