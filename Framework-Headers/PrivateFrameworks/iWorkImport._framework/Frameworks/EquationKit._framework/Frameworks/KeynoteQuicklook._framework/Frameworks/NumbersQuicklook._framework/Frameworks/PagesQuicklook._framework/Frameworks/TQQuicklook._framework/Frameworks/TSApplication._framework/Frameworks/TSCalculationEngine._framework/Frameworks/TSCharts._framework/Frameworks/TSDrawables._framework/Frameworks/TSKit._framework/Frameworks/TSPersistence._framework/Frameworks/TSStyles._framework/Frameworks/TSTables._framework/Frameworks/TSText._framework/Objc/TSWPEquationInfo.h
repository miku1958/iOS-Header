//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <TSDrawables/TSDImageInfo.h>

#import <TSText/TSDDrawableInfoCustomUnarchivingSubclassProviding-Protocol.h>
#import <TSText/TSWPDrawableAttachmentDescriptionProvider-Protocol.h>

@class EQKitEquation, NSString, TSSPropertyMap;

@interface TSWPEquationInfo : TSDImageInfo <TSWPDrawableAttachmentDescriptionProvider, TSDDrawableInfoCustomUnarchivingSubclassProviding>
{
    BOOL _isInlineForPreviewImage;
    EQKitEquation *_equation;
    NSString *_source;
    double _depth;
    TSSPropertyMap *_textProperties;
}

@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) double depth; // @synthesize depth=_depth;
@property (readonly, copy) NSString *description;
@property (strong, nonatomic) EQKitEquation *equation; // @synthesize equation=_equation;
@property (readonly, nonatomic) int format;
@property (readonly) unsigned long long hash;
@property (nonatomic) BOOL isInlineForPreviewImage; // @synthesize isInlineForPreviewImage=_isInlineForPreviewImage;
@property (copy, nonatomic) NSString *source; // @synthesize source=_source;
@property (readonly) Class superclass;
@property (strong, nonatomic) TSSPropertyMap *textProperties; // @synthesize textProperties=_textProperties;

+ (BOOL)archiveHasEquationSource:(id)arg1;
+ (id)defaultTextProperties;
+ (Class)drawableInfoSubclassForClass:(Class)arg1 unarchiver:(id)arg2;
+ (id)eqKitEquationWithWithContext:(id)arg1 source:(id)arg2 error:(id *)arg3;
+ (id)equationAttachmentWithEquationAttachment:(id)arg1;
+ (id)equationInfoWithContext:(id)arg1 equationInfo:(id)arg2 textStorage:(id)arg3 charIndex:(unsigned long long)arg4;
+ (id)equationInfoWithContext:(id)arg1 string:(id)arg2 textStorage:(id)arg3 charIndex:(unsigned long long)arg4;
+ (id)filteredTextPropertiesFromTextProperties:(id)arg1;
+ (id)fontNameFromTextProperties:(id)arg1;
+ (id)pdfImageDataWithContext:(id)arg1 equation:(id)arg2 layout:(id)arg3 layoutContext:(id)arg4 sourceString:(id)arg5;
+ (id)propertiesForChangePropagation;
+ (id)propertiesForParagraphStyle:(id)arg1 characterStyle:(id)arg2;
+ (id)propertiesForStorage:(id)arg1 characterIndex:(unsigned long long)arg2;
- (void).cxx_destruct;
- (void)acceptVisitor:(id)arg1;
- (BOOL)canAdjustImage;
- (BOOL)canAnchor;
- (BOOL)canAspectRatioLockBeChangedByUser;
- (BOOL)canBeMasked;
- (BOOL)canBeMediaPlaceholder;
- (BOOL)canChangeWrapType;
- (BOOL)canResetMediaSize;
- (id)copyWithContext:(id)arg1;
- (struct CGSize)defaultOriginalSize;
- (id)descriptionForDrawableAttachment:(id)arg1;
- (void)didFinalizeUnarchivingFromWPStorage:(id)arg1;
- (unsigned int)elementKind;
- (id)imageDataWithObjectContext:(id)arg1;
- (id)initWithContext:(id)arg1 string:(id)arg2;
- (id)initWithContext:(id)arg1 string:(id)arg2 filteredTextProperties:(id)arg3 equation:(id)arg4 pdfImageData:(id)arg5 depth:(double)arg6 geometry:(id)arg7 style:(id)arg8;
- (id)initWithContext:(id)arg1 string:(id)arg2 targetGeometry:(id)arg3;
- (id)initWithContext:(id)arg1 string:(id)arg2 textProperties:(id)arg3;
- (BOOL)isSelectable;
- (Class)layoutClass;
- (void)loadCharacterStylePropertiesIntoPropertyMap:(id)arg1 fromArchive:(const struct CharacterStylePropertiesArchive *)arg2 unarchiver:(id)arg3;
- (void)loadFromArchive:(const struct ImageArchive *)arg1 unarchiver:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1 context:(id)arg2;
- (BOOL)needsUpdateForStyleChangeToStorage:(id)arg1 charIndex:(unsigned long long)arg2;
- (BOOL)needsUpdateForStyleChangeToStorage:(id)arg1 charIndex:(unsigned long long)arg2 isAnchoredOrFloating:(BOOL)arg3;
- (id)promisedDataForType:(id)arg1;
- (id)propertiesForParentAttachment;
- (struct CGSize)rawDataSize;
- (void)rebuildEquationPDFIncludingGeometry:(BOOL)arg1;
- (Class)repClass;
- (void)replaceSourceWithNewSource:(id)arg1;
- (void)saveCharacterStylePropertiesFromPropertyMap:(id)arg1 toArchive:(struct CharacterStylePropertiesArchive *)arg2 archiver:(id)arg3;
- (void)saveToArchive:(struct ImageArchive *)arg1 archiver:(id)arg2;
- (BOOL)supportsStyleInspecting;
- (id)typesToPromiseWhenCopyingSingleDrawable;
- (void)updateForStyleChangeToStorage:(id)arg1 charIndex:(unsigned long long)arg2;
- (void)updateForStyleChangeToStorage:(id)arg1 charIndex:(unsigned long long)arg2 isAnchoredOrFloating:(BOOL)arg3;
- (void)updateTextProperties:(id)arg1;
- (void)willChangeProperty:(int)arg1;

@end

