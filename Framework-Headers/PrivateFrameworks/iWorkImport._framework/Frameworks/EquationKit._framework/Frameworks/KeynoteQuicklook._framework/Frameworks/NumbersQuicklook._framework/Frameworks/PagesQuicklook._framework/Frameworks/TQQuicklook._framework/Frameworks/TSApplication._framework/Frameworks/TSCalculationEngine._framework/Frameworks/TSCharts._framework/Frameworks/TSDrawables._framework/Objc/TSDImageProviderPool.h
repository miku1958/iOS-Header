//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <TSDrawables/TSPDataCullingListener-Protocol.h>

@class NSString, TSUPointerKeyDictionary;

@interface TSDImageProviderPool : NSObject <TSPDataCullingListener>
{
    TSUPointerKeyDictionary *mImageDataUniqueIdentifierToImageProviderMap;
    unsigned long long mOpenFileDescriptorLimit;
    BOOL mHaveRaisedFileDescriptorLimit;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

+ (id)_singletonAlloc;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (Class)p_providerClassForData:(id)arg1;
+ (id)sharedPool;
- (void)addInterestInProviderForData:(id)arg1;
- (id)autorelease;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (void)didReplaceContentsOfDataWithUniqueIdentifier:(id)arg1 flags:(unsigned long long)arg2;
- (void)flushImageProviders;
- (void)flushProvidersToFreeMemoryIfNecessaryExcludingProvider:(id)arg1;
- (id)init;
- (BOOL)isBitmapData:(id)arg1;
- (void)p_clearCacheForDataUniqueIdentifier:(id)arg1 flags:(unsigned long long)arg2;
- (void)p_didReceiveMemoryWarning:(id)arg1;
- (unsigned long long)p_estimatedSizeOfAllProviders;
- (void)p_flushRandomImageProvidersExcludingProvider:(id)arg1;
- (void)p_freeFileDescriptorsWithProviderCount:(unsigned long long)arg1;
- (unsigned long long)p_imageProviderMemoryThreshold;
- (id)p_providerForData:(id)arg1 temporary:(BOOL)arg2 shouldValidate:(BOOL)arg3;
- (unsigned long long)p_providerLimitForFileDescriptorLimit:(unsigned long long)arg1;
- (unsigned long long)p_removeProvidersWithZeroInterest;
- (BOOL)p_rngSaysToFlush;
- (void)p_updateFileDescriptorLimit;
- (id)providerForData:(id)arg1 shouldValidate:(BOOL)arg2;
- (oneway void)release;
- (void)removeInterestInProviderForData:(id)arg1;
- (id)retain;
- (unsigned long long)retainCount;
- (id)temporaryProviderForData:(id)arg1 shouldValidate:(BOOL)arg2;
- (void)willCloseDocumentContext:(id)arg1;
- (void)willCullDataWithUniqueIdentifier:(id)arg1 flags:(unsigned long long)arg2;

@end

