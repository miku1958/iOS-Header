//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <TSDrawables/TSDLayout.h>

#import <TSText/TSDWrapInvalidationParent-Protocol.h>
#import <TSText/TSKChangeSourceObserver-Protocol.h>
#import <TSText/TSWPLayoutOwner-Protocol.h>
#import <TSText/TSWPLayoutTarget-Protocol.h>

@class NSMutableArray, NSMutableSet, NSObject, NSString, TSDCanvas, TSPObject, TSUBezierPath, TSWPLayoutManager, TSWPStorage;
@protocol TSDHint, TSWPFootnoteHeightMeasurer, TSWPFootnoteMarkProvider, TSWPLayoutParent, TSWPOffscreenColumn, TSWPTopicNumberHints;

@interface TSWPLayout : TSDLayout <TSKChangeSourceObserver, TSWPLayoutTarget, TSWPLayoutOwner, TSDWrapInvalidationParent>
{
    TSWPLayoutManager *_layoutManager;
    NSMutableArray *_columns;
    BOOL _textLayoutValid;
    TSWPStorage *_storage;
    unsigned long long _lastLayoutMgrChangeCount;
    TSDLayout<TSWPLayoutParent> *_wpLayoutParent;
    NSMutableSet *_markedHiddenInlineDrawableLayouts;
    BOOL _useBlackTextColor;
    BOOL _isLayingOutIntoTarget;
}

@property (readonly, nonatomic) struct CGPoint anchorPoint;
@property (strong, nonatomic) NSMutableArray *anchoredDrawablesForRelayout;
@property (readonly, nonatomic) unsigned long long autosizeFlags;
@property (readonly, nonatomic) TSDCanvas *canvas;
@property (readonly, nonatomic) NSMutableArray *columns; // @synthesize columns=_columns;
@property (readonly, nonatomic) struct _NSRange containedTextRange;
@property (readonly, nonatomic) struct CGSize currentSize;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) id<TSWPFootnoteHeightMeasurer> footnoteHeightMeasurer;
@property (readonly, nonatomic) id<TSWPFootnoteMarkProvider> footnoteMarkProvider;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) struct __CFLocale *hyphenationLocale;
@property (readonly, nonatomic) TSUBezierPath *interiorClippingPath;
@property (readonly, nonatomic) BOOL isInstructional;
@property (nonatomic) BOOL isLayingOutIntoTarget; // @synthesize isLayingOutIntoTarget=_isLayingOutIntoTarget;
@property (readonly, nonatomic) BOOL isLinked;
@property (readonly, nonatomic) BOOL isOverflowing;
@property (readonly, nonatomic) BOOL layoutIsValid;
@property (readonly, nonatomic) TSWPLayoutManager *layoutManager;
@property (readonly, nonatomic) BOOL marginsAreMirrored;
@property (readonly, nonatomic) struct CGRect maskRect;
@property (readonly, nonatomic) double maxAnchorInBlockDirection;
@property (readonly, nonatomic) struct CGSize maxSize;
@property (readonly, nonatomic) struct CGSize minSize;
@property (readonly, nonatomic) int naturalAlignment;
@property (readonly, nonatomic) int naturalDirection;
@property (readonly, nonatomic) TSPObject<TSDHint> *nextTargetFirstChildHint;
@property (readonly, nonatomic) id<TSWPOffscreenColumn> nextTargetFirstColumn;
@property (readonly, nonatomic) NSObject<TSWPTopicNumberHints> *nextTargetTopicNumbers;
@property (readonly, nonatomic) unsigned long long pageCount;
@property (readonly, nonatomic) unsigned long long pageNumber;
@property (readonly, nonatomic) TSDLayout *parentLayoutForInlineAttachments;
@property (readonly, nonatomic) struct CGPoint position;
@property (readonly, nonatomic) id<TSWPOffscreenColumn> previousTargetLastColumn;
@property (readonly, nonatomic) NSObject<TSWPTopicNumberHints> *previousTargetTopicNumbers;
@property (readonly, nonatomic) BOOL repShouldPreventCaret;
@property (readonly, nonatomic) BOOL shouldHyphenate;
@property (readonly, nonatomic) BOOL shouldWrapAroundExternalDrawables;
@property (readonly, nonatomic) TSWPStorage *storage; // @synthesize storage=_storage;
@property (readonly) Class superclass;
@property (readonly, nonatomic) BOOL textIsVertical;
@property (readonly, nonatomic) BOOL textLayoutValid;
@property (nonatomic) BOOL useBlackTextColor; // @synthesize useBlackTextColor=_useBlackTextColor;
@property (readonly, nonatomic) int verticalAlignment;
@property (readonly, nonatomic) BOOL wantsLineFragments;

- (void).cxx_destruct;
- (void)addAttachmentLayout:(id)arg1;
- (id)additionalDependenciesForChildLayout:(id)arg1;
- (void)beginResizeWrapInvalidationCluster;
- (struct CGPoint)capturedInfoPositionForAttachment;
- (BOOL)caresAboutStorageChanges;
- (BOOL)childLayoutIsCurrentlyHiddenWhileManipulating:(id)arg1;
- (void)clearHiddenInlineDrawableLayoutMarks;
- (id)columnMetricsForCharIndex:(unsigned long long)arg1 outRange:(struct _NSRange *)arg2;
- (id)computeLayoutGeometry;
- (id)containedPencilAnnotations;
- (BOOL)containsStartOfPencilAnnotation:(id)arg1;
- (BOOL)containsStartOfRange:(struct _NSRange)arg1;
- (id)currentAnchoredDrawableLayouts;
- (id)currentInlineDrawableLayouts;
- (id)dependentLayouts;
- (BOOL)descendersCannotClip;
- (void)didLayoutChangingDirtyRanges;
- (void)didLayoutIntoTarget;
- (void)didLayoutWithLayoutManager:(id)arg1;
- (void)endResizeWrapInvalidationCluster;
- (void)i_setTextLayoutValid:(BOOL)arg1;
- (void)i_validateTextLayout;
- (id)initWithInfo:(id)arg1;
- (id)initWithInfo:(id)arg1 frame:(struct CGRect)arg2;
- (id)initWithInfo:(id)arg1 storage:(id)arg2 frame:(struct CGRect)arg3;
- (void *)initialLayoutState;
- (id)interiorWrapSegments;
- (void)invalidate;
- (void)invalidateForChangedPrintingSettings;
- (void)invalidateForFootnoteNumberingChange;
- (BOOL)invalidateForPageCountChange;
- (void)invalidateForcingFullReLayOut;
- (void)invalidateParentForAutosizing;
- (void)invalidateSize;
- (void)invalidateTextLayout;
- (BOOL)isLastTarget;
- (BOOL)isLayoutOffscreen;
- (id)layoutForInlineDrawable:(id)arg1;
- (void)layoutManager:(id)arg1 didClearDirtyRangeWithDelta:(long long)arg2 afterCharIndex:(unsigned long long)arg3;
- (void)layoutManagerNeedsLayout:(id)arg1;
- (void)markHiddenInlineDrawableLayout:(id)arg1;
- (struct CGSize)maximumFrameSizeForChild:(id)arg1;
- (BOOL)needsAdditionalOffsetBasedOnPartitioningOfParent;
- (void)p_clearOutLayoutManager;
- (id)p_firstAncestorRespondingToSelector:(SEL)arg1;
- (void)p_invalidateTextLayout;
- (struct CGSize)p_maximumFrameSizeForChild:(id)arg1;
- (struct CGSize)p_maximumFrameSizeForChild:(id)arg1 foundInColumn:(id *)arg2;
- (struct CGRect)p_protectedRectWithinLayoutForSelectionRect:(struct CGRect)arg1;
- (struct CGRect)p_rectForSelectionPath:(id)arg1 useParagraphModeRects:(BOOL)arg2;
- (struct CGRect)p_rectInRootForSelectionPath:(id)arg1 useParagraphModeRects:(BOOL)arg2 forZoom:(BOOL)arg3;
- (BOOL)p_shouldAssertDependenciesAreCorrect;
- (id)p_wpLayoutParent;
- (id)pageAnchorDetailsForPencilAnnotationAtSelectionPath:(id)arg1 attachedType:(long long)arg2;
- (BOOL)parentAutosizes;
- (void)parentDidChange;
- (void)parentWillChangeTo:(id)arg1;
- (struct CGRect)rectInRootForPresentingAnnotationPopoverForSelectionPath:(id)arg1;
- (struct CGRect)rectInRootForSelectionPath:(id)arg1;
- (struct CGRect)rectInRootForZoomingToSelectionPath:(id)arg1;
- (struct CGRect)rectInRootOfAutoZoomContextOfSelectionPath:(id)arg1;
- (id)reliedOnLayouts;
- (Class)repClassOverride;
- (BOOL)selectionMustBeEntirelyOnscreenToCountAsVisibleInSelectionPath:(id)arg1;
- (void)setNeedsDisplayInTargetRect:(struct CGRect)arg1;
- (BOOL)shouldDisplayGuides;
- (BOOL)shouldInvalidateSizeWhenInvalidateSizeOfReliedOnLayout:(id)arg1;
- (BOOL)shouldProvideSizingGuides;
- (BOOL)shouldValidate;
- (id)styleProvider;
- (struct CGRect)targetRectForCanvasRect:(struct CGRect)arg1;
- (id)textColorOverride;
- (double)textScaleForChild:(id)arg1;
- (id)textWrapper;
- (id)unscaledContentRectsToAvoidPencilAnnotationOverlap;
- (void)updateChildrenFromInfo;
- (void)validate;
- (id)validatedLayoutForAnchoredDrawable:(id)arg1;
- (double)viewScaleForZoomingToSelectionPath:(id)arg1 targetPointSize:(double)arg2;
- (void)willBeAddedToLayoutController:(id)arg1;
- (void)willBeRemovedFromLayoutController:(id)arg1;
- (void)willLayoutIntoTarget;
- (void)wrappableChildInvalidated:(id)arg1;

@end

