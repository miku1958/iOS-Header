//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSMutableArray, NSMutableDictionary, NSSet, NSString, TSULRUCache, TSWPFontVerificationCache;

@interface TSWPFontCache : NSObject
{
    struct _opaque_pthread_rwlock_t _rwlock;
    TSULRUCache *_fontCache;
    TSWPFontVerificationCache *_verifiedFontCache;
    NSMutableArray *_familyNames;
    NSMutableDictionary *_familyDisplayNames;
    NSMutableDictionary *_familyNameToFontNameMap;
    NSMutableArray *_familyFonts;
    NSMutableArray *_cachedAvailableMembers;
    NSString *_cachedMembersFamilyName;
    NSArray *_cachedRecentFontNames;
}

@property (readonly, nonatomic) NSMutableArray *cachedAvailableMembers; // @synthesize cachedAvailableMembers=_cachedAvailableMembers;
@property (readonly, nonatomic) NSString *cachedMembersFamilyName; // @synthesize cachedMembersFamilyName=_cachedMembersFamilyName;
@property (readonly, nonatomic) NSArray *cachedRecentFontNames; // @synthesize cachedRecentFontNames=_cachedRecentFontNames;
@property (readonly, nonatomic) NSMutableDictionary *familyDisplayNames; // @synthesize familyDisplayNames=_familyDisplayNames;
@property (readonly, nonatomic) NSMutableArray *familyFonts; // @synthesize familyFonts=_familyFonts;
@property (readonly, nonatomic) NSMutableDictionary *familyNameToFontNameMap; // @synthesize familyNameToFontNameMap=_familyNameToFontNameMap;
@property (readonly, nonatomic) NSMutableArray *familyNames; // @synthesize familyNames=_familyNames;
@property (readonly, nonatomic) TSULRUCache *fontCache; // @synthesize fontCache=_fontCache;
@property (readonly, nonatomic) NSSet *missingFonts;
@property (readonly, nonatomic) TSWPFontVerificationCache *verifiedFontCache; // @synthesize verifiedFontCache=_verifiedFontCache;

+ (id)p_excludedFamilyNames;
+ (id)p_fontNameForFamilyName:(id)arg1;
+ (id)recentFonts;
+ (id)sharedCache;
- (void).cxx_destruct;
- (void)addMissingFonts:(id)arg1;
- (id)availableMembersOfFontFamily:(id)arg1;
- (const struct __CTFont *)createFontWithName:(id)arg1 size:(double)arg2;
- (id)displayNameForFontFamily:(id)arg1;
- (id)fontNameForFamilyName:(id)arg1;
- (id)init;
- (BOOL)isFontInstalledWithName:(id)arg1;
- (BOOL)isFontMissing:(id)arg1;
- (void)p_cacheExistence:(BOOL)arg1 ofFontWithName:(id)arg2;
- (long long)p_cachedStatusOfFontWithName:(id)arg1;
- (const struct __CTFont *)queryFontName:(id)arg1 fontSize:(double)arg2 bold:(BOOL)arg3 italic:(BOOL)arg4 fontFeatures:(id)arg5;
- (id)recentFontNames;
- (id)recentFonts;
- (BOOL)registerRecentFont:(id)arg1;
- (void)removeMissingFonts:(id)arg1;
- (void)resetVerifiedFonts;
- (void)setFontRef:(const struct __CTFont *)arg1 forFontName:(id)arg2 fontSize:(double)arg3 bold:(BOOL)arg4 italic:(BOOL)arg5 fontFeatures:(id)arg6;
- (id)sortedFontFamilies;

@end

