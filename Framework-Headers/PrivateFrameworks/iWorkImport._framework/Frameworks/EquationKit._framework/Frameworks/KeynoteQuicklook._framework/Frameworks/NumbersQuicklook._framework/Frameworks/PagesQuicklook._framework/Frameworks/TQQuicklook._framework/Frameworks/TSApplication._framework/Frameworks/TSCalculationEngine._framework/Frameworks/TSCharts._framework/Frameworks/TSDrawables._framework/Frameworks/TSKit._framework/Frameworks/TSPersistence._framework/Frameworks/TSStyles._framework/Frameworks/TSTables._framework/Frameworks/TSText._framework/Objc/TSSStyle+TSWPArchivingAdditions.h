//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <TSStyles/TSSStyle.h>

@class TSUColor;

@interface TSSStyle (TSWPArchivingAdditions)

@property (readonly, nonatomic) TSUColor *fallbackFontColorWhenUnableToReadCharacterFillColor;

+ (void)addIgnoreAndPreserveRulesAndDocumentWarningsForPropertyMap:(id)arg1 withArchiver:(id)arg2 archive:(struct CharacterStylePropertiesArchive *)arg3;
+ (id)adjustPropertyMapForFontColorArchiving:(id)arg1 fallbackColor:(id)arg2;
+ (struct __CTFont *)pCreateFontWithName:(id)arg1 fontSize:(double)arg2;
+ (id)pReplacementForMissingFontName:(id)arg1 outBold:(int *)arg2 outItalic:(int *)arg3 outQuiet:(BOOL *)arg4;
+ (BOOL)p_isFillAdvanced:(id)arg1;
+ (void)upgradeFontColorToIncludeCharacterFillInPropertyMap:(id)arg1 forOwningTSPObject:(id)arg2;
+ (id)validateFontInPropertyMap:(id)arg1 parentStyle:(id)arg2 checkedFontMap:(id)arg3;
+ (id)validateFontName:(id)arg1 size:(double)arg2 bold:(BOOL)arg3 italic:(BOOL)arg4 checkedFontMap:(id)arg5 newFontName:(id *)arg6 newBold:(BOOL *)arg7 newItalic:(BOOL *)arg8;
- (BOOL)boolValueForProperty:(int)arg1 defaultValue:(BOOL)arg2;
- (void)loadCharacterStylePropertiesIntoPropertyMap:(id)arg1 fromArchive:(const struct CharacterStylePropertiesArchive *)arg2 unarchiver:(id)arg3;
- (void)loadParagraphStylePropertiesIntoPropertyMap:(id)arg1 fromArchive:(const struct ParagraphStylePropertiesArchive *)arg2 unarchiver:(id)arg3;
- (void)p_removeFontColorPropertyInPropertyMap:(id)arg1;
- (void)p_upgradeOutlinesToStrokesInPropertyMap:(id)arg1 forcingUpgradeForUnderspecifiedCharacterStyles:(BOOL)arg2 overridingCharacterStrokes:(BOOL)arg3;
- (id)resolvedValueForProperty:(int)arg1 inStyles:(id)arg2;
- (void)saveCharacterStylePropertiesToArchive:(struct CharacterStylePropertiesArchive *)arg1 archiver:(id)arg2 archivingForCommand:(BOOL)arg3;
- (void)saveParagraphStylePropertiesToArchive:(struct ParagraphStylePropertiesArchive *)arg1 archiver:(id)arg2;
- (void)setBoolValue:(BOOL)arg1 forProperty:(int)arg2;
- (void)upgradeOutlinesToStrokesForcingUpgradeForUnderspecifiedCharacterStyles:(BOOL)arg1 overridingCharacterStrokes:(BOOL)arg2;
- (id)validateFontWithCheckedFontMap:(id)arg1;
- (BOOL)wantsCustomResolveLogicForProperty:(int)arg1 forStyles:(id)arg2;
@end

