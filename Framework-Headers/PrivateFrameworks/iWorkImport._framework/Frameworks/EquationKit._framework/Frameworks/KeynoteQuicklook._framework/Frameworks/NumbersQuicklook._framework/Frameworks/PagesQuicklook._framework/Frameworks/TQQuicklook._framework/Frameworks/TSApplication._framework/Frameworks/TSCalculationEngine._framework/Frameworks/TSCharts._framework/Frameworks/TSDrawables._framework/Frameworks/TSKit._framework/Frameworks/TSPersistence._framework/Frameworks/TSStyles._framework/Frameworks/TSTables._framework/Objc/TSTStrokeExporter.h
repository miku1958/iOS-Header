//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSPointerArray, TSTTableInfo, TSUIntegerKeyDictionary;
@protocol TSTCustomStrokeProviding, TSTTableStrokeProviding;

@interface TSTStrokeExporter : NSObject
{
    id<TSTTableStrokeProviding> _defaultStrokeProvider;
    id<TSTCustomStrokeProviding> _customStrokeProvider;
    TSTTableInfo *_tableProvider;
    NSPointerArray *_topRowStrokes;
    NSPointerArray *_bottomRowStrokes;
    NSPointerArray *_leftColumnStrokes;
    NSPointerArray *_rightColumnStrokes;
    TSUIntegerKeyDictionary *_rowStrokeExportCache;
    TSUIntegerKeyDictionary *_columnStrokeExportCache;
}

@property (readonly, strong, nonatomic) NSPointerArray *bottomRowStrokes; // @synthesize bottomRowStrokes=_bottomRowStrokes;
@property (strong, nonatomic) TSUIntegerKeyDictionary *columnStrokeExportCache; // @synthesize columnStrokeExportCache=_columnStrokeExportCache;
@property (readonly, strong, nonatomic) id<TSTCustomStrokeProviding> customStrokeProvider; // @synthesize customStrokeProvider=_customStrokeProvider;
@property (readonly, strong, nonatomic) id<TSTTableStrokeProviding> defaultStrokeProvider; // @synthesize defaultStrokeProvider=_defaultStrokeProvider;
@property (readonly, strong, nonatomic) NSPointerArray *leftColumnStrokes; // @synthesize leftColumnStrokes=_leftColumnStrokes;
@property (readonly, strong, nonatomic) NSPointerArray *rightColumnStrokes; // @synthesize rightColumnStrokes=_rightColumnStrokes;
@property (strong, nonatomic) TSUIntegerKeyDictionary *rowStrokeExportCache; // @synthesize rowStrokeExportCache=_rowStrokeExportCache;
@property (readonly, strong, nonatomic) TSTTableInfo *tableProvider; // @synthesize tableProvider=_tableProvider;
@property (readonly, strong, nonatomic) NSPointerArray *topRowStrokes; // @synthesize topRowStrokes=_topRowStrokes;

- (void)dealloc;
- (id)initWithDefaultStrokeProvider:(id)arg1 customStrokeProvider:(id)arg2 tableProvider:(id)arg3;
- (void)p_resolveStrokes;
- (void)strokesForCellID:(struct TSUCellCoord)arg1 top:(id *)arg2 left:(id *)arg3 bottom:(id *)arg4 right:(id *)arg5;

@end

