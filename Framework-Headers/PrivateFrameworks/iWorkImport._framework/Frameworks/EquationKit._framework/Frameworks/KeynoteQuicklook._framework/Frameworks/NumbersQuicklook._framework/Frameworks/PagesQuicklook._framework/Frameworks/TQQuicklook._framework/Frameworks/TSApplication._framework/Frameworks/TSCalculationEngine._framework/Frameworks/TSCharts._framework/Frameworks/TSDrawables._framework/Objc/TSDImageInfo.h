//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <TSDrawables/TSDMediaInfo.h>

#import <TSDrawables/TSDAttachmentAwareContainerInfo-Protocol.h>
#import <TSDrawables/TSDCompatibilityAwareMediaContainer-Protocol.h>
#import <TSDrawables/TSDContainerInfo-Protocol.h>
#import <TSDrawables/TSDMixing-Protocol.h>
#import <TSDrawables/TSDReducibleImageContainer-Protocol.h>
#import <TSDrawables/TSKTransformableObject-Protocol.h>
#import <TSDrawables/TSSPresetSource-Protocol.h>

@class NSArray, NSObject, NSSet, NSString, TSDImageAdjustments, TSDImageDataHelper, TSDInfoGeometry, TSDMaskInfo, TSDMediaStyle, TSPData, TSPObject, TSUBezierPath;
@protocol TSDContainerInfo, TSDOwningAttachment;

@interface TSDImageInfo : TSDMediaInfo <TSDReducibleImageContainer, TSDContainerInfo, TSDMixing, TSSPresetSource, TSKTransformableObject, TSDCompatibilityAwareMediaContainer, TSDAttachmentAwareContainerInfo>
{
    TSUBezierPath *mInstantAlphaPath;
    struct CGSize mNaturalSize;
    TSDImageDataHelper *mImageDataHelper;
    TSPData *mImageData;
    TSPData *mThumbnailImageData;
    TSPData *mOriginalImageData;
    TSDImageAdjustments *mImageAdjustments;
    TSPData *mAdjustedImageData;
    TSPData *mThumbnailAdjustedImageData;
    TSDImageDataHelper *mAdjustedImageDataHelper;
    TSPData *mEnhancedImageData;
    TSDMediaStyle *mStyle;
    TSDMaskInfo *mMaskInfo;
    TSUBezierPath *mTracedPath;
    BOOL mCurrentlyInDocument;
    double mDescentForInlineLayout;
    BOOL mDescentForInlineLayoutValid;
}

@property (strong, nonatomic) TSPData *adjustedImageData; // @synthesize adjustedImageData=mAdjustedImageData;
@property (readonly, nonatomic, getter=isAnchoredToText) BOOL anchoredToText; // @dynamic anchoredToText;
@property (readonly, nonatomic, getter=isAttachedToBodyText) BOOL attachedToBodyText;
@property (readonly, nonatomic) BOOL canAdjustImage;
@property (readonly, nonatomic) BOOL canBeMasked;
@property (readonly, copy, nonatomic) NSArray *childInfos;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) double descentForInlineLayout;
@property (readonly, copy) NSString *description;
@property (strong, nonatomic) TSPData *enhancedImageData;
@property (readonly, nonatomic, getter=isFloatingAboveText) BOOL floatingAboveText; // @dynamic floatingAboveText;
@property (copy, nonatomic) TSDInfoGeometry *geometry;
@property (readonly) unsigned long long hash;
@property (copy, nonatomic) TSDImageAdjustments *imageAdjustments; // @synthesize imageAdjustments=mImageAdjustments;
@property (strong, nonatomic) TSPData *imageData; // @synthesize imageData=mImageData;
@property (readonly, nonatomic) TSPData *imageDataForExport;
@property (readonly, nonatomic) TSDMediaStyle *imageStyle;
@property (readonly, nonatomic) NSSet *infosToObserveForAttachedInfo;
@property (readonly, nonatomic, getter=isInlineWithText) BOOL inlineWithText; // @dynamic inlineWithText;
@property (strong, nonatomic) TSUBezierPath *instantAlphaPath;
@property (readonly, nonatomic) BOOL isMaster;
@property (strong, nonatomic) TSDMaskInfo *maskInfo; // @synthesize maskInfo=mMaskInfo;
@property (nonatomic) BOOL matchesObjectPlaceholderGeometry;
@property (nonatomic) struct CGSize naturalSize;
@property (strong, nonatomic) TSPData *originalImageData; // @synthesize originalImageData=mOriginalImageData;
@property (nonatomic) TSPObject<TSDOwningAttachment> *owningAttachment; // @dynamic owningAttachment;
@property (readonly, nonatomic) TSPObject<TSDOwningAttachment> *owningAttachmentNoRecurse; // @dynamic owningAttachmentNoRecurse;
@property (nonatomic) NSObject<TSDContainerInfo> *parentInfo;
@property (readonly) Class superclass;
@property (strong, nonatomic) TSPData *thumbnailAdjustedImageData;
@property (strong, nonatomic) TSPData *thumbnailImageData; // @synthesize thumbnailImageData=mThumbnailImageData;
@property (readonly, nonatomic) TSUBezierPath *tracedPath;

+ (void)adjustIncomingImageGeometry:(id)arg1 maskGeometry:(id)arg2 forImageData:(id)arg3 maskedWithInstantAlphaPath:(id)arg4 withNaturalSize:(struct CGSize)arg5 forTargetImageGeometry:(id)arg6 withTargetMaskGeometry:(id)arg7;
+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3;
+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3 reservedCount:(unsigned long long)arg4;
+ (id)bootstrapPropertyMapForPresetIndex:(unsigned long long)arg1 inTheme:(id)arg2 alternate:(int)arg3;
+ (id)i_thumbnailForImageData:(id)arg1;
+ (id)presetKinds;
- (void).cxx_destruct;
- (void)acceptVisitor:(id)arg1;
- (BOOL)allowsParentGroupToBeResizedWithoutAspectRatioLock;
- (BOOL)canAspectRatioLockBeChangedByUser;
- (BOOL)canCopyData;
- (BOOL)canResetMediaSize;
- (struct CGPoint)centerForReplacingWithNewMedia;
- (struct CGAffineTransform)computeFullTransform;
- (id)copyWithContext:(id)arg1;
- (id)copyWithContext:(id)arg1 style:(id)arg2;
- (void)dealloc;
- (id)defaultMaskInfo;
- (id)defaultMaskInfoWithContext:(id)arg1;
- (struct CGSize)defaultOriginalSize;
- (id)geometryWithMask;
- (BOOL)hasPDFDataForCopy;
- (id)i_instantAlphaPathIgnoringNaturalSize;
- (id)infoForSelectionPath:(id)arg1;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 style:(id)arg3 imageData:(id)arg4 originalImageData:(id)arg5;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 style:(id)arg3 imageData:(id)arg4 thumbnailImageData:(id)arg5 originalImageData:(id)arg6 imageAdjustments:(id)arg7 adjustedImageData:(id)arg8 thumbnailAdjustedImageData:(id)arg9;
- (BOOL)isMasked;
- (BOOL)isPDF;
- (Class)layoutClass;
- (void)loadFromArchive:(const struct ImageArchive *)arg1 unarchiver:(id)arg2;
- (void)loadFromUnarchiver:(id)arg1;
- (BOOL)maskCanBeReset;
- (long long)mediaCompatibilityTypeForData:(id)arg1 associatedHint:(id)arg2;
- (id)mediaDataForDragging;
- (id)mediaDisplayName;
- (id)mediaFileType;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1 context:(id)arg2;
- (BOOL)needsDownload;
- (id)objectForProperty:(int)arg1;
- (struct CGSize)originalSize;
- (BOOL)p_aspectRatioUnlockedResizeWouldCauseSkew;
- (BOOL)p_canCopy:(id)arg1;
- (void)p_upgradeImageGeometry;
- (void)p_upgradeImageThumbnail;
- (id)presetKind;
- (id)promisedDataForType:(id)arg1;
- (unsigned short)propertyIdForFlagsCommand;
- (unsigned short)propertyIdForOriginalSizeCommand;
- (id)propertyNameForFlagsCommand;
- (id)propertyNameForOriginalSizeCommand;
- (struct CGSize)rawDataSize;
- (Class)repClass;
- (void)saveToArchive:(struct ImageArchive *)arg1 archiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)scaleDownSizeToFitWithinSize:(struct CGSize)arg1;
- (void)setAdjustedImageData:(id)arg1 thumbnailData:(id)arg2;
- (void)setExteriorTextWrap:(id)arg1;
- (void)setImageData:(id)arg1 thumbnailData:(id)arg2;
- (void)setStyle:(id)arg1;
- (id)style;
- (Class)styleClass;
- (id)styleIdentifierTemplateForNewPreset;
- (struct CGSize)targetSizeForImageData:(id)arg1 associatedHint:(id)arg2;
- (id)typesToPromiseWhenCopyingSingleDrawable;
- (void)updateGeometryToReplaceMediaInfo:(id)arg1;
- (id)updatedMaskInfoGeometryForImageDraggedBy:(struct CGPoint)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 dolcContext:(id)arg2;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeAddedToDocumentRoot:(id)arg1 dolcContext:(id)arg2;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;

@end

