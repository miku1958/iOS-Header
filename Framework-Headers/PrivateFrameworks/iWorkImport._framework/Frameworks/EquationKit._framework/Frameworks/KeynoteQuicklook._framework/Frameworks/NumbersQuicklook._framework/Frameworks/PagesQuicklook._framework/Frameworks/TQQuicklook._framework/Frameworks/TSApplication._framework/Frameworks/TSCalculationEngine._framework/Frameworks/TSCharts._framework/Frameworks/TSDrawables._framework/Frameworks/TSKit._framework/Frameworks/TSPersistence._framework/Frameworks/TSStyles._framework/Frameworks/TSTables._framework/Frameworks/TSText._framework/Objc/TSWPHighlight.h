//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <TSPersistence/TSPObject.h>

#import <TSText/TSDComment-Protocol.h>
#import <TSText/TSKDocumentObject-Protocol.h>
#import <TSText/TSPCopying-Protocol.h>
#import <TSText/TSWPOverlappingField-Protocol.h>
#import <TSText/TSWPTextSpanningObject-Protocol.h>

@class NSDate, NSString, TSDCommentStorage, TSKAnnotationAuthor, TSWPStorage;

@interface TSWPHighlight : TSPObject <TSDComment, TSPCopying, TSKDocumentObject, TSWPTextSpanningObject, TSWPOverlappingField>
{
    TSDCommentStorage *_commentStorage;
    TSWPStorage *_parentStorage;
    NSString *_textAttributeUUIDString;
}

@property (readonly, nonatomic) int annotationDisplayStringType;
@property (readonly, nonatomic) int annotationType;
@property (readonly, nonatomic) NSString *annotationUUID;
@property (strong, nonatomic) TSKAnnotationAuthor *author;
@property (strong, nonatomic) TSDCommentStorage *commentStorage; // @synthesize commentStorage=_commentStorage;
@property (readonly, nonatomic) NSDate *date;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) BOOL isHighlight;
@property (weak, nonatomic) TSWPStorage *parentStorage; // @synthesize parentStorage=_parentStorage;
@property (copy, nonatomic) TSDCommentStorage *storage;
@property (readonly) Class superclass;
@property (copy, nonatomic) NSString *textAttributeUUIDString; // @synthesize textAttributeUUIDString=_textAttributeUUIDString;

+ (id)defaultHighlightWithContext:(id)arg1 includeCommentWithAuthor:(id)arg2;
+ (id)highlightTextColorForHighlights:(id)arg1;
- (void).cxx_destruct;
- (void)commentWillBeAddedToDocumentRoot;
- (id)copyWithContext:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)i_setTextAttributeUUIDString:(id)arg1;
- (id)initWithContext:(id)arg1;
- (id)initWithContext:(id)arg1 commentStorage:(id)arg2;
- (id)initWithContext:(id)arg1 commentStorage:(id)arg2 annotationUUID:(id)arg3;
- (BOOL)isCommentEmpty;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEquivalentToObject:(id)arg1;
- (BOOL)isFloatingComment;
- (BOOL)isInDocument;
- (void)loadFromArchive:(const struct HighlightArchive *)arg1 unarchiver:(id)arg2;
- (void)loadFromUnarchiver:(id)arg1;
- (void)p_invalidateAnnotationResultsForDocumentRoot:(id)arg1 key:(id)arg2;
- (void)resetTextAttributeUUIDString;
- (void)saveToArchiver:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 dolcContext:(id)arg2;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeAddedToDocumentRoot:(id)arg1 dolcContext:(id)arg2;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;

@end

