//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AbstractOperation;

struct Arena;

struct ArenaStringPtr {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field1;
};

struct CGAffineTransform {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CachedSize {
    struct atomic<int> _field1;
};

struct CustomFormatArchive;

struct DocumentArchive {
    CDUnknownFunctionPointerType *_field1;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSP::Reference> _field5;
    struct ArenaStringPtr _field6;
    struct ArenaStringPtr _field7;
    struct Reference *_field8;
    struct Reference *_field9;
    struct FormattingSymbolsArchive *_field10;
    BOOL _field11;
    BOOL _field12;
    BOOL _field13;
    BOOL _field14;
    BOOL _field15;
};

struct ExtensionSet {
    struct Arena *_field1;
    unsigned short _field2;
    unsigned short _field3;
    union AllocatedData _field4;
};

struct FormatStructArchive {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct InternalMetadataWithArena _field3;
    struct HasBits<2> _field4;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field5;
    struct ArenaStringPtr _field6;
    struct ArenaStringPtr _field7;
    struct ArenaStringPtr _field8;
    struct ArenaStringPtr _field9;
    struct ArenaStringPtr _field10;
    struct IndexSet *_field11;
    struct UUID *_field12;
    struct CustomFormatArchive *_field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    unsigned int _field17;
    unsigned int _field18;
    BOOL _field19;
    BOOL _field20;
    BOOL _field21;
    BOOL _field22;
    unsigned int _field23;
    unsigned int _field24;
    unsigned int _field25;
    unsigned int _field26;
    double _field27;
    unsigned int _field28;
    unsigned int _field29;
    double _field30;
    double _field31;
    double _field32;
    unsigned int _field33;
    unsigned int _field34;
    BOOL _field35;
    BOOL _field36;
    BOOL _field37;
    BOOL _field38;
    unsigned int _field39;
    unsigned int _field40;
    unsigned int _field41;
    unsigned int _field42;
    unsigned int _field43;
    unsigned int _field44;
    unsigned int _field45;
    unsigned int _field46;
    unsigned int _field47;
    BOOL _field48;
    BOOL _field49;
    struct CachedSize _field50;
};

struct FormattingSymbolsArchive {
    CDUnknownFunctionPointerType *_field1;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field5;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field6;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field7;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field8;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field9;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field10;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field11;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field12;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field13;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field14;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field15;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field16;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field17;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field18;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field19;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field20;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field21;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field22;
    struct RepeatedPtrField<TSK::FormattingSymbolsArchive_CurrencySymbol> _field23;
    struct ArenaStringPtr _field24;
    struct ArenaStringPtr _field25;
    struct ArenaStringPtr _field26;
    struct ArenaStringPtr _field27;
    struct ArenaStringPtr _field28;
    struct ArenaStringPtr _field29;
    struct ArenaStringPtr _field30;
    struct ArenaStringPtr _field31;
    struct ArenaStringPtr _field32;
    struct ArenaStringPtr _field33;
    struct ArenaStringPtr _field34;
    struct ArenaStringPtr _field35;
    struct ArenaStringPtr _field36;
    struct ArenaStringPtr _field37;
    struct ArenaStringPtr _field38;
    struct ArenaStringPtr _field39;
    struct ArenaStringPtr _field40;
    struct ArenaStringPtr _field41;
    struct ArenaStringPtr _field42;
    struct ArenaStringPtr _field43;
    struct ArenaStringPtr _field44;
    struct ArenaStringPtr _field45;
    struct ArenaStringPtr _field46;
    struct ArenaStringPtr _field47;
    struct ArenaStringPtr _field48;
    struct ArenaStringPtr _field49;
    struct ArenaStringPtr _field50;
    struct ArenaStringPtr _field51;
    struct ArenaStringPtr _field52;
};

struct HasBits<1> {
    unsigned int _field1[1];
};

struct HasBits<2> {
    unsigned int _field1[2];
};

struct IndexSet;

struct InternalMetadataWithArena {
    void *_field1;
};

struct KeyValue;

struct Message {
    CDUnknownFunctionPointerType *_field1;
};

struct NativeContentDescription {
    CDUnknownFunctionPointerType *_field1;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSP::Reference> _field5;
    struct ArenaStringPtr _field6;
    struct ArenaStringPtr _field7;
    struct ArenaStringPtr _field8;
};

struct Operation {
    CDUnknownFunctionPointerType *_field1;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    RepeatedField_88f7bd5c _field5;
    int _field6;
    RepeatedField_b20a0771 _field7;
    int _field8;
    BOOL _field9;
    BOOL _field10;
    BOOL _field11;
    unsigned int _field12;
    int _field13;
    int _field14;
    unsigned long long _field15;
    int _field16;
    unsigned int _field17;
    int _field18;
    int _field19;
};

struct Reference;

struct Rep;

struct RepeatedField<unsigned int> {
    int _field1;
    int _field2;
    union Pointer _field3;
};

struct RepeatedField<unsigned long long> {
    int _field1;
    int _field2;
    union Pointer _field3;
};

struct RepeatedPtrField<TSK::FormattingSymbolsArchive_CurrencySymbol> {
    struct Arena *_field1;
    int _field2;
    int _field3;
    struct Rep *_field4;
};

struct RepeatedPtrField<TSK::ShuffleMappingArchive_Entry> {
    struct Arena *_field1;
    int _field2;
    int _field3;
    struct Rep *_field4;
};

struct RepeatedPtrField<TSP::Reference> {
    struct Arena *_field1;
    int _field2;
    int _field3;
    struct Rep *_field4;
};

struct RepeatedPtrField<TSP::UUID> {
    struct Arena *_field1;
    int _field2;
    int _field3;
    struct Rep *_field4;
};

struct RepeatedPtrField<std::__1::basic_string<char>> {
    struct Arena *_field1;
    int _field2;
    int _field3;
    struct Rep *_field4;
};

struct SelectionPathArchive {
    CDUnknownFunctionPointerType *_field1;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSP::Reference> _field5;
};

struct ShuffleMappingArchive {
    CDUnknownFunctionPointerType *_field1;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<TSK::ShuffleMappingArchive_Entry> _field5;
    unsigned int _field6;
    unsigned int _field7;
    BOOL _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    BOOL _field12;
};

struct StructuredTextImportSettings {
    CDUnknownFunctionPointerType *_field1;
    struct InternalMetadataWithArena _field2;
    struct HasBits<1> _field3;
    struct CachedSize _field4;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field5;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field6;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field7;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field8;
    struct IndexSet *_field9;
    int _field10;
    int _field11;
    unsigned long long _field12;
    BOOL _field13;
    BOOL _field14;
    BOOL _field15;
    BOOL _field16;
};

struct UIEdgeInsets {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct UUID;

struct UUIDData<TSP::UUIDData>;

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct _opaque_pthread_t {
    long long _field1;
    struct __darwin_pthread_handler_rec *_field2;
    char _field3[8176];
};

struct atomic<int> {
    struct __cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int>> {
        _Atomic int _field1;
    } _field1;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>;

struct map<int, google::protobuf::internal::ExtensionSet::Extension, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, google::protobuf::internal::ExtensionSet::Extension>>>;

struct os_unfair_lock_s {
    unsigned int _os_unfair_lock_opaque;
};

struct shared_ptr<TSKCO::AbstractOperation> {
    struct AbstractOperation *_field1;
    struct __shared_weak_count *_field2;
};

struct vector<TSKOperationPropertyId, std::__1::allocator<TSKOperationPropertyId>> {
    unsigned short *_field1;
    unsigned short *_field2;
    struct __compressed_pair<TSKOperationPropertyId *, std::__1::allocator<TSKOperationPropertyId>> {
        unsigned short *_field1;
    } _field3;
};

struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
    struct UUIDData<TSP::UUIDData> *__begin_;
    struct UUIDData<TSP::UUIDData> *__end_;
    struct __compressed_pair<TSU::UUIDData<TSP::UUIDData>*, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
        struct UUIDData<TSP::UUIDData> *__value_;
    } __end_cap_;
};

struct vector<_NSRange, std::__1::allocator<_NSRange>> {
    struct _NSRange *__begin_;
    struct _NSRange *__end_;
    struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange>> {
        struct _NSRange *__value_;
    } __end_cap_;
};

struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *__begin_;
    unsigned int *__end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *__value_;
    } __end_cap_;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int useCount;
    id ticket;
} CDStruct_2a021fcd;

typedef struct {
    unsigned short id;
    BOOL firstOneWin;
    BOOL hasDescendantProperties;
    unsigned short path[6];
} CDStruct_1464e8ba;

typedef struct {
    long long _field1;
    int _field2;
    unsigned int _field3;
    long long _field4;
} CDStruct_198678f7;

typedef struct {
    long long majorVersion;
    long long minorVersion;
    long long patchVersion;
} CDStruct_f6aba300;

typedef struct {
    int _field1;
    union {
        struct {
            unsigned int :16;
            unsigned int :8;
            unsigned int :3;
            unsigned int :1;
            unsigned int :1;
        } _field1;
        struct {
            unsigned int :8;
        } _field2;
        struct {
            unsigned int :8;
            unsigned int :8;
            unsigned int :1;
        } _field3;
        struct {
            unsigned int :1;
            unsigned int :1;
            id _field1;
        } _field4;
        struct {
            unsigned int :1;
            int _field1;
            int _field2;
            int _field3;
        } _field5;
        struct {
            id _field1;
            id _field2;
            unsigned int _field3;
            unsigned char _field4;
        } _field6;
    } _field2;
} CDStruct_cf9a5aa8;

// Template types
typedef struct RepeatedField<unsigned int> {
    int _field1;
    int _field2;
    union Pointer _field3;
} RepeatedField_b20a0771;

typedef struct RepeatedField<unsigned long long> {
    int _field1;
    int _field2;
    union Pointer _field3;
} RepeatedField_88f7bd5c;

typedef struct RepeatedPtrField<TSP::UUID> {
    struct Arena *_field1;
    int _field2;
    int _field3;
    struct Rep *_field4;
} RepeatedPtrField_c4607516;

typedef struct shared_ptr<TSKCO::AbstractOperation> {
    struct AbstractOperation *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_f167ad79;

typedef struct vector<TSKOperationPropertyId, std::__1::allocator<TSKOperationPropertyId>> {
    unsigned short *_field1;
    unsigned short *_field2;
    struct __compressed_pair<TSKOperationPropertyId *, std::__1::allocator<TSKOperationPropertyId>> {
        unsigned short *_field1;
    } _field3;
} vector_941b75ab;

typedef struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
    struct UUIDData<TSP::UUIDData> *__begin_;
    struct UUIDData<TSP::UUIDData> *__end_;
    struct __compressed_pair<TSU::UUIDData<TSP::UUIDData>*, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
        struct UUIDData<TSP::UUIDData> *__value_;
    } __end_cap_;
} vector_4dc5f307;

typedef struct vector<_NSRange, std::__1::allocator<_NSRange>> {
    struct _NSRange *__begin_;
    struct _NSRange *__end_;
    struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange>> {
        struct _NSRange *__value_;
    } __end_cap_;
} vector_b5e32e34;

typedef struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *__begin_;
    unsigned int *__end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *__value_;
    } __end_cap_;
} vector_12da65de;

#pragma mark Named Unions

union AllocatedData {
    struct KeyValue *_field1;
    struct map<int, google::protobuf::internal::ExtensionSet::Extension, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, google::protobuf::internal::ExtensionSet::Extension>>> *_field2;
};

union Pointer {
    struct Arena *_field1;
    struct Rep *_field2;
};

