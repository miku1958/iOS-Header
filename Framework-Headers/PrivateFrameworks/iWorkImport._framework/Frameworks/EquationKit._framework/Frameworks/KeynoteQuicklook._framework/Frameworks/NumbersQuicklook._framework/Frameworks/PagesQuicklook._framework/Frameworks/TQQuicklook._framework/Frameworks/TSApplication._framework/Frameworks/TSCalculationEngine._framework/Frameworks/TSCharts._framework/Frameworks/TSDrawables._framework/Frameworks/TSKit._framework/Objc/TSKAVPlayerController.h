//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <TSKit/TSKLayerMediaPlayerController-Protocol.h>

@class AVAsset, AVPlayerItem, AVPlayerLooper, AVQueuePlayer, NSArray, NSMutableSet, NSString;
@protocol TSKAVPlayerControllerPlayerItemMediating, TSKMediaPlayerControllerDelegate;

@interface TSKAVPlayerController : NSObject <TSKLayerMediaPlayerController>
{
    AVQueuePlayer *mPlayer;
    id<TSKMediaPlayerControllerDelegate> mDelegate;
    BOOL mStreaming;
    NSArray *mEnqueuedAssets;
    long long mRepeatMode;
    CDStruct_1b6d18a9 mStartCMTime;
    CDStruct_1b6d18a9 mEndCMTime;
    struct {
        CDStruct_1b6d18a9 start;
        CDStruct_1b6d18a9 duration;
    } mPlayerItemTimeRange;
    BOOL mIsPlayerItemTimeRangeForScrubbing;
    AVPlayerLooper *mPlayerLooper;
    BOOL mIsUpdatingPlayerItems;
    float mVolume;
    AVPlayerItem *mVolumeRampPlayerItem;
    id mVolumeRampBoundaryTimeObserver;
    float mRateBeforeScrubbing;
    unsigned long long mScrubbingCount;
    BOOL mCanPlay;
    float mPendingRate;
    BOOL mWasPlayingBeforeChangeToZeroRate;
    BOOL mWasFastReversingBeforeChangeToZeroRate;
    BOOL mWasFastForwardingBeforeChangeToZeroRate;
    NSMutableSet *mObservationTokens;
    BOOL mDidNotifyDelegateOfPlaybackError;
    BOOL mPlaying;
    BOOL mFastReversing;
    BOOL mFastForwarding;
    id<TSKAVPlayerControllerPlayerItemMediating> mPlayerItemMediator;
}

@property (readonly, nonatomic) AVAsset *currentAsset;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic, getter=isExternalPlaybackActive) BOOL externalPlaybackActive;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) AVQueuePlayer *player; // @synthesize player=mPlayer;
@property (strong, nonatomic) id<TSKAVPlayerControllerPlayerItemMediating> playerItemMediator; // @synthesize playerItemMediator=mPlayerItemMediator;
@property (readonly) Class superclass;

+ (BOOL)automaticallyNotifiesObserversOfRate;
+ (void)initialize;
+ (id)keyPathsForValuesAffectingAbsoluteDuration;
+ (id)keyPathsForValuesAffectingCanFastForward;
+ (id)keyPathsForValuesAffectingCanFastReverse;
+ (id)keyPathsForValuesAffectingCurrentAsset;
+ (id)keyPathsForValuesAffectingDuration;
+ (id)keyPathsForValuesAffectingEndTime;
+ (id)keyPathsForValuesAffectingExternalPlaybackActive;
+ (id)keyPathsForValuesAffectingHasCurrentTime;
+ (id)keyPathsForValuesAffectingRate;
+ (id)keyPathsForValuesAffectingStartTime;
+ (BOOL)p_canApplyVolumeRampAtRate:(float)arg1;
- (void).cxx_destruct;
- (double)absoluteCurrentTime;
- (double)absoluteDuration;
- (void)addObservationToken:(id)arg1;
- (id)addPeriodicTimeObserverForInterval:(double)arg1 block:(CDUnknownBlockType)arg2;
- (void)beginScrubbing;
- (BOOL)canFastForward;
- (BOOL)canFastReverse;
- (BOOL)canPlay;
- (void)cancelPendingSeeks;
- (double)currentTime;
- (void)dealloc;
- (id)delegate;
- (double)duration;
- (void)endScrubbing;
- (double)endTime;
- (BOOL)hasCurrentTime;
- (id)initWithAssets:(id)arg1 initialAssetIndex:(unsigned long long)arg2 delegate:(id)arg3;
- (id)initWithInitialPlayerItem:(id)arg1 enqueuedAssets:(id)arg2 initialEnqueuedAssetIndex:(unsigned long long)arg3 delegate:(id)arg4 streaming:(BOOL)arg5;
- (id)initWithPlayerItem:(id)arg1 delegate:(id)arg2 streaming:(BOOL)arg3;
- (BOOL)isFastForwarding;
- (BOOL)isFastReversing;
- (BOOL)isPlaying;
- (BOOL)isScrubbing;
- (id)newLayer;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)p_addTimeObserverForTime:(CDStruct_1b6d18a9)arg1 handler:(CDUnknownBlockType)arg2;
- (void)p_applyConstantVolumeToPlayerItem:(id)arg1;
- (void)p_applyPendingRateIfNeeded;
- (void)p_applyRate:(float)arg1;
- (BOOL)p_canFastForwardAtCurrentTime;
- (BOOL)p_canFastReverseAtCurrentTime;
- (void)p_clearVolumeRampFromPlayerItem;
- (CDStruct_1b6d18a9)p_endCMTime;
- (void)p_enqueueAssetsFromIndex:(unsigned long long)arg1;
- (BOOL)p_notifyDelegateOfPlaybackErrorIfNeeded;
- (void)p_notifyPlayerItemMediatorWithRate:(float)arg1;
- (void)p_playerItemDidJumpTime:(id)arg1;
- (void)p_playerItemDidPlayToEndTime:(id)arg1;
- (void)p_playerItemDidPlayToEndTimeAtRate:(float)arg1;
- (BOOL)p_shouldUsePlayerLooperAtRate:(float)arg1;
- (CDStruct_1b6d18a9)p_startCMTime;
- (void)p_updatePlayerItemsAndApplyRate:(float)arg1;
- (id)p_workingPlayerItems;
- (float)rate;
- (double)remainingTime;
- (void)removeObservationToken:(id)arg1;
- (void)removePeriodicTimeObserver:(id)arg1;
- (long long)repeatMode;
- (void)scrubToTime:(double)arg1 withTolerance:(double)arg2;
- (void)scrubToTime:(double)arg1 withTolerance:(double)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)seekBackwardByOneFrame;
- (void)seekForwardByOneFrame;
- (void)seekToBeginning;
- (void)seekToEnd;
- (void)setEndTime:(double)arg1;
- (void)setFastForwarding:(BOOL)arg1;
- (void)setFastReversing:(BOOL)arg1;
- (void)setPlaying:(BOOL)arg1;
- (void)setRate:(float)arg1;
- (void)setRepeatMode:(long long)arg1;
- (void)setStartTime:(double)arg1;
- (void)setVolume:(float)arg1;
- (void)setVolume:(float)arg1 rampDuration:(double)arg2;
- (void)skipToAssetAtIndex:(unsigned long long)arg1;
- (double)startTime;
- (void)stopSynchronously;
- (void)teardown;
- (float)volume;

@end

