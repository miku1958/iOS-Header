//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <TSText/TSSPropertyValueArchiving-Protocol.h>

@interface TSWPColumns : NSObject <TSSPropertyValueArchiving>
{
    double _widthArray[10];
    double _gapArray[9];
    BOOL _equalWidth;
    unsigned long long _columnCount;
}

@property (readonly, nonatomic) unsigned long long columnCount; // @synthesize columnCount=_columnCount;
@property (readonly, nonatomic) BOOL equalWidth; // @synthesize equalWidth=_equalWidth;

+ (id)columns;
+ (id)instanceWithArchive:(const struct Message *)arg1 unarchiver:(id)arg2;
- (id)copyWithColumnCount:(unsigned long long)arg1;
- (id)copyWithEqualWidth:(BOOL)arg1;
- (id)copyWithGap:(double)arg1 forColumnIndex:(unsigned long long)arg2 bodyWidth:(double)arg3;
- (id)copyWithWidth:(double)arg1 forColumnIndex:(unsigned long long)arg2 bodyWidth:(double)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (double)gapForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
- (unsigned long long)hash;
- (id)init;
- (id)initWithArchive:(const struct ColumnsArchive *)arg1 unarchiver:(id)arg2;
- (id)initWithColumnCount:(unsigned long long)arg1;
- (id)initWithColumnCount:(unsigned long long)arg1 equalWidth:(BOOL)arg2 widthArray:(double *)arg3 gapArray:(double *)arg4;
- (id)initWithColumnCount:(unsigned long long)arg1 equalWidth:(BOOL)arg2 widthArray:(double *)arg3 gapArray:(double *)arg4 assert:(BOOL)arg5;
- (id)initWithEqualColumnCount:(unsigned long long)arg1 gapFraction:(double)arg2;
- (id)initWithEqualColumnCount:(unsigned long long)arg1 gapFraction:(double)arg2 assert:(BOOL)arg3;
- (BOOL)isEqual:(id)arg1;
- (id)p_description;
- (double)p_equalGapForEqualWidth:(double)arg1;
- (double)p_equalWidthForEqualGap:(double)arg1;
- (double)p_maxEqualGapForBodyWidth:(double)arg1;
- (void)p_setColumnCount:(unsigned long long)arg1;
- (void)p_setColumnCount:(unsigned long long)arg1 gapFraction:(double)arg2;
- (void)p_setEqualWidth:(double)arg1 equalGap:(double)arg2;
- (void)p_setGap:(double)arg1 forColumnIndex:(unsigned long long)arg2 bodyWidth:(double)arg3;
- (void)p_setWidth:(double)arg1 forColumnIndex:(unsigned long long)arg2 bodyWidth:(double)arg3;
- (BOOL)p_validate:(BOOL)arg1;
- (double)positionForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2 outWidth:(double *)arg3 outGap:(double *)arg4;
- (void)saveToArchive:(struct ColumnsArchive *)arg1 archiver:(id)arg2;
- (void)setEqualWidth:(BOOL)arg1;
- (double)widthForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;

@end

