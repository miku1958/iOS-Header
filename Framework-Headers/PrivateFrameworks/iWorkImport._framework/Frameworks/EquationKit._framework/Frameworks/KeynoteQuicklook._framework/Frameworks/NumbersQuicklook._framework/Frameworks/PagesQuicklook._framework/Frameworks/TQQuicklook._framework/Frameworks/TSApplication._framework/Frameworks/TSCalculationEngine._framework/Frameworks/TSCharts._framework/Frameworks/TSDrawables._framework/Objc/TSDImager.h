//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <TSDrawables/TSDCanvasDelegate-Protocol.h>
#import <TSDrawables/TSDDynamicOverridingCanvasDelegate-Protocol.h>

@class NSArray, NSMapTable, NSSet, NSString, TSDCanvas, TSKDocumentRoot, TSUColor;
@protocol TSDCanvasProxyDelegate, TSDInfo;

@interface TSDImager : NSObject <TSDDynamicOverridingCanvasDelegate, TSDCanvasDelegate>
{
    NSArray *mInfos;
    TSUColor *mBackgroundColor;
    struct CGRect mUnscaledClipRect;
    double mViewScale;
    double mContentsScale;
    struct CGSize mScaledImageSize;
    struct CGSize mMaximumImagePixelSize;
    BOOL mUseScaledImageSize;
    BOOL mDistortedToMatch;
    BOOL mImageMustHaveEvenDimensions;
    BOOL mShouldReuseBitmapContext;
    TSKDocumentRoot *mDocumentRoot;
    TSDCanvas *mCanvas;
    BOOL mMayBeReused;
    BOOL mHasBeenUsed;
    struct CGRect mActualScaledClipRect;
    BOOL mDrawingIntoPDF;
    BOOL mIsPrinting;
    BOOL mImageIsRenderingForMovie;
    struct CGContext *mReusableBitmapContext;
    struct CGRect mReusableBounds;
    struct CGRect mReusableIntegralBounds;
    struct CGRect mReusableActualScaledClipRect;
    struct CGSize mReusableScaledImageSize;
    NSSet *mPreviousRenderDatasNeedingDownload;
    CDUnknownBlockType mPostRenderAction;
    NSMapTable *mDynamicOverrides;
    NSObject<TSDInfo> *mInfoToDrawBeneath;
    CDUnknownBlockType mInfoToDrawBeneathFilter;
    BOOL mShouldShowInstructionalText;
    BOOL mShouldSuppressBackgrounds;
    BOOL mShouldShowComments;
    BOOL mShouldShowTextCommentHighlights;
    BOOL mShouldShowCaptionInstructionalText;
}

@property (readonly, nonatomic) struct CGRect actualScaledClipRect; // @synthesize actualScaledClipRect=mActualScaledClipRect;
@property (copy, nonatomic) TSUColor *backgroundColor; // @synthesize backgroundColor=mBackgroundColor;
@property (readonly, nonatomic) TSDCanvas *canvas; // @synthesize canvas=mCanvas;
@property (readonly, nonatomic) id<TSDCanvasProxyDelegate> canvasProxyDelegate;
@property (nonatomic) double contentsScale;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) BOOL distortedToMatch; // @synthesize distortedToMatch=mDistortedToMatch;
@property (readonly) unsigned long long hash;
@property (nonatomic) BOOL imageIsRenderingForMovie; // @synthesize imageIsRenderingForMovie=mImageIsRenderingForMovie;
@property (nonatomic) BOOL imageMustHaveEvenDimensions; // @synthesize imageMustHaveEvenDimensions=mImageMustHaveEvenDimensions;
@property (strong, nonatomic) NSArray *infos; // @synthesize infos=mInfos;
@property (nonatomic) BOOL isPrinting; // @synthesize isPrinting=mIsPrinting;
@property (nonatomic) struct CGSize maximumImagePixelSize;
@property (nonatomic) BOOL mayBeReused; // @synthesize mayBeReused=mMayBeReused;
@property (copy, nonatomic) NSSet *previousRenderDatasNeedingDownload; // @synthesize previousRenderDatasNeedingDownload=mPreviousRenderDatasNeedingDownload;
@property (nonatomic) struct CGSize scaledImageSize;
@property (nonatomic) BOOL shouldReuseBitmapContext; // @synthesize shouldReuseBitmapContext=mShouldReuseBitmapContext;
@property (nonatomic) BOOL shouldShowCaptionInstructionalText; // @synthesize shouldShowCaptionInstructionalText=mShouldShowCaptionInstructionalText;
@property (nonatomic) BOOL shouldShowComments; // @synthesize shouldShowComments=mShouldShowComments;
@property (nonatomic) BOOL shouldShowInstructionalText; // @synthesize shouldShowInstructionalText=mShouldShowInstructionalText;
@property (nonatomic) BOOL shouldShowTextCommentHighlights; // @synthesize shouldShowTextCommentHighlights=mShouldShowTextCommentHighlights;
@property (nonatomic) BOOL shouldSuppressBackgrounds; // @synthesize shouldSuppressBackgrounds=mShouldSuppressBackgrounds;
@property (readonly) Class superclass;
@property (nonatomic) struct CGRect unscaledClipRect; // @synthesize unscaledClipRect=mUnscaledClipRect;
@property (nonatomic) double viewScale;

- (void).cxx_destruct;
- (void)dealloc;
- (id)documentRoot;
- (BOOL)drawPageInContext:(struct CGContext *)arg1 createPage:(BOOL)arg2;
- (id)dynamicOverrideForLayout:(id)arg1;
- (id)dynamicOverrideForRep:(id)arg1;
- (void)i_setDrawsOnlyBelowInfo:(id)arg1;
- (id)init;
- (id)initWithDocumentRoot:(id)arg1;
- (id)initWithDocumentRoot:(id)arg1 renderForWideGamut:(BOOL)arg2;
- (BOOL)isCanvasDrawingIntoPDF:(id)arg1;
- (BOOL)isPrintingCanvas;
- (struct CGImage *)newImage;
- (void)p_assertHasReadLock;
- (BOOL)p_configureCanvas;
- (void)p_drawPageInContext:(struct CGContext *)arg1 createPage:(BOOL)arg2;
- (struct CGSize)p_evenDimensionsWithSize:(struct CGSize)arg1;
- (struct CGImage *)p_newImageInReusableContext;
- (id)pdfData;
- (id)pngData;
- (void)setDynamicOverride:(id)arg1 forInfo:(id)arg2;
- (void)setInfos:(id)arg1 allowLayoutIfNeeded:(BOOL)arg2;
- (void)setPostRenderAction:(CDUnknownBlockType)arg1;
- (BOOL)shouldShowCommentsForCanvas:(id)arg1;
- (BOOL)shouldShowInstructionalTextForLayout:(id)arg1;
- (BOOL)shouldShowTextCommentHighlightsForCanvas:(id)arg1;
- (struct CGRect)visibleScaledBoundsForClippingRepsOnCanvas:(id)arg1;

@end

