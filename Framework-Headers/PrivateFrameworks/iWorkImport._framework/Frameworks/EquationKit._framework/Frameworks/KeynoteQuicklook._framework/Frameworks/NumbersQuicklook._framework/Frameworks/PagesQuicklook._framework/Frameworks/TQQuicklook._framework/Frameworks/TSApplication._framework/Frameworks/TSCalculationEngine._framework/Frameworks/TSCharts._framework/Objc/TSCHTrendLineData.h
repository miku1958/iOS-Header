//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <TSCharts/TSCHUnretainedParent-Protocol.h>

@class NSString, TSCHChartSeries, TSUBezierPath, TSURegressionModel;

@interface TSCHTrendLineData : NSObject <TSCHUnretainedParent>
{
    TSCHChartSeries *mSeries;
    long long mLineType;
    BOOL mShowTrendLine;
    TSURegressionModel *mRegression;
    double mMaxYValue;
    double mMinYValue;
    double mMaxXValue;
    double mMinXValue;
    int mInputAxisType;
    int mOutputAxisType;
    BOOL mTrendLineInvalid;
    TSUBezierPath *mCachedTrendLinePath;
    struct CGRect mCachedChartFrame;
    double mOffsetInBody;
    BOOL mCachedChartVertical;
}

@property (readonly, nonatomic) float equationTextOpacity;
@property (readonly, nonatomic) NSString *rSquaredText;
@property (readonly, nonatomic) float rSquaredTextOpacity;
@property (readonly, nonatomic) BOOL showEquation;
@property (readonly, nonatomic) BOOL showRSquared;
@property (readonly, nonatomic) BOOL showTrendLine; // @synthesize showTrendLine=mShowTrendLine;
@property (readonly, nonatomic) BOOL showTrendLineLegendText;
@property (readonly, nonatomic) NSString *trendLineLegendText;

+ (long long)getTrendLineTypeForSeries:(id)arg1;
- (void).cxx_destruct;
- (void)clearParent;
- (void)dealloc;
- (id)initWithSeries:(id)arg1;
- (void)invalidateData;
- (double)maxValueForAxisID:(id)arg1;
- (double)minValueForAxisID:(id)arg1;
- (struct __CFAttributedString *)newEquationAttributedString;
- (void)p_addPathToTrendLinePathWithPoints:(CDStruct_c3b9c2ee *)arg1 count:(unsigned long long)arg2 curved:(BOOL)arg3 curveFitter:(id)arg4;
- (void)p_calcBounds;
- (void)p_calcBoundsForMovingAverage;
- (void)p_calcMARegression:(unsigned long long)arg1 xData:(id)arg2 yData:(id)arg3;
- (void)p_calcRegression:(unsigned long long)arg1 xData:(double *)arg2 yData:(double *)arg3;
- (id)p_dataPointValues;
- (unsigned long long)p_fillArrayX:(id)arg1 andY:(id)arg2 fromPoints:(id)arg3;
- (unsigned long long)p_fillArrayX:(double *)arg1 andY:(double *)arg2 fromPoints:(id)arg3 hasNegativeX:(BOOL *)arg4;
- (void)p_generateRegression;
- (long long)p_getTrendLineType;
- (id)p_linePathFromPoints:(CDStruct_c3b9c2ee *)arg1 count:(unsigned long long)arg2;
- (void)p_releaseCache;
- (CDStruct_c3b9c2ee)p_unitPoint:(CDStruct_c3b9c2ee)arg1 toScreenFrame:(struct CGRect)arg2 offset:(double)arg3 vertical:(BOOL)arg4;
- (void)p_updateTrendLineData;
- (BOOL)showTrendLineForAxisID:(id)arg1;
- (id)trendLinePathForChartRect:(struct CGRect)arg1 offsetInBody:(double)arg2 vertical:(BOOL)arg3;
- (void)trendLineUnitSpacePoints:(struct **)arg1 count:(unsigned long long *)arg2 drawCurve:(BOOL *)arg3 maxPoints:(unsigned long long)arg4;
- (void)updateIfNeeded;

@end

