//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <iWorkImport/TSWPPageLayout.h>

#import <iWorkImport/TSWPColumnMetrics-Protocol.h>
#import <iWorkImport/TSWPLayoutParent-Protocol.h>
#import <iWorkImport/TSWPStorageObserver-Protocol.h>

@class NSString, TNPageContentLayout, TNPageController, TNSheet, TSWPPadding;

__attribute__((visibility("hidden")))
@interface TNPageLayout : TSWPPageLayout <TSWPLayoutParent, TSWPColumnMetrics, TSWPStorageObserver>
{
    BOOL mIsChildLayoutsValid;
    struct TSUCellCoord mPageCoordinate;
    TNPageController *mPageController;
    TNPageContentLayout *mContentLayout;
    BOOL mIsPlaceholder;
    TNSheet *mSheet;
}

@property (readonly, nonatomic) BOOL alwaysStartsNewTarget;
@property (readonly, nonatomic) unsigned long long columnCount;
@property (readonly, nonatomic) BOOL columnsAreLeftToRight;
@property (readonly) struct CGRect contentFrame;
@property (strong) TNPageContentLayout *contentLayout; // @synthesize contentLayout=mContentLayout;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) TSWPPadding *layoutMargins;
@property (readonly) struct CGRect pageBounds;
@property TNPageController *pageController; // @synthesize pageController=mPageController;
@property struct TSUCellCoord pageCoordinate; // @synthesize pageCoordinate=mPageCoordinate;
@property (readonly) BOOL pageLayoutDirectionIsRTL;
@property (getter=isPlaceholder) BOOL placeholder; // @synthesize placeholder=mIsPlaceholder;
@property (strong) TNSheet *sheet; // @synthesize sheet=mSheet;
@property (readonly, nonatomic) BOOL shrinkTextToFit;
@property (readonly) Class superclass;
@property (readonly, nonatomic) double textScaleFactor;

+ (id)pageLayoutWithPageController:(id)arg1 pageCoordinate:(struct TSUCellCoord)arg2;
- (void)addChild:(id)arg1;
- (struct CGSize)adjustedInsetsForTarget:(id)arg1;
- (unsigned long long)autosizeFlagsForTextLayout:(id)arg1;
- (struct CGRect)autosizedFrameForTextLayout:(id)arg1 textSize:(struct CGSize)arg2;
- (struct CGRect)bodyRect;
- (id)computeLayoutGeometry;
- (BOOL)containsLayoutForInfo:(id)arg1;
- (void)dealloc;
- (id)dependentLayouts;
- (id)dependentsOfTextLayout:(id)arg1;
- (double)gapForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
- (id)headerFooterProvider;
- (id)initWithPageController:(id)arg1 pageCoordinate:(struct TSUCellCoord)arg2;
- (void)invalidateForAutosizingTextLayout:(id)arg1;
- (void)invalidateSize;
- (struct CGRect)nonAutosizedFrameForTextLayout:(id)arg1;
- (id)p_pageInfo;
- (unsigned long long)pageCount;
- (unsigned long long)pageNumber;
- (void)parentDidChange;
- (void)performBlockForEachHeaderFooterLayout:(CDUnknownBlockType)arg1;
- (double)positionForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2 target:(id)arg3 outWidth:(double *)arg4 outGap:(double *)arg5;
- (Class)repClassForTextLayout:(id)arg1;
- (Class)repClassOverride;
- (void)setChildren:(id)arg1;
- (void)storage:(id)arg1 didChangeRange:(struct _NSRange)arg2 delta:(long long)arg3 broadcastKind:(int)arg4;
- (BOOL)textIsVertical;
- (void)updateChildrenFromInfo;
- (int)verticalAlignmentForTextLayout:(id)arg1;
- (double)widthForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
- (void)willBeAddedToLayoutController:(id)arg1;
- (void)willBeRemovedFromLayoutController:(id)arg1;

@end

