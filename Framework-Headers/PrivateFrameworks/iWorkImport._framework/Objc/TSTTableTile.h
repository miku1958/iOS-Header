//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <iWorkImport/TSPObject.h>

@class NSMutableArray;

__attribute__((visibility("hidden")))
@interface TSTTableTile : TSPObject
{
    unsigned char _maxColumn;
    unsigned char _storageVersion;
    unsigned short _maxRow;
    unsigned short _numCells;
    unsigned short _numRows;
    NSMutableArray *_rowInfos;
}

@property (nonatomic) unsigned char maxColumn; // @synthesize maxColumn=_maxColumn;
@property (nonatomic) unsigned short maxRow; // @synthesize maxRow=_maxRow;
@property (readonly, nonatomic) unsigned short midpointForRowSplit;
@property (nonatomic) unsigned short numCells; // @synthesize numCells=_numCells;
@property (nonatomic) unsigned short numRows; // @synthesize numRows=_numRows;
@property (strong, nonatomic) NSMutableArray *rowInfos; // @synthesize rowInfos=_rowInfos;
@property (readonly, nonatomic) BOOL shouldMergeRows;
@property (readonly, nonatomic) BOOL shouldSplitRows;
@property (nonatomic) unsigned char storageVersion; // @synthesize storageVersion=_storageVersion;

- (void).cxx_destruct;
- (struct TSTCellStorage *)cellStorageRefAtColumnIndex:(unsigned char)arg1 tileRowIndex:(unsigned short)arg2;
- (id)description;
- (void)i_upgradeTileRowInfosWithDataStore:(id)arg1;
- (id)initWithContext:(id)arg1;
- (id)initWithRows:(id)arg1 context:(id)arg2;
- (int)insertColumnsAtColumnIndex:(unsigned char)arg1 numberOfColumns:(unsigned short)arg2;
- (void)insertRowsAtTileRowIndex:(unsigned short)arg1 numberOfRows:(unsigned short)arg2;
- (void)loadFromUnarchiver:(id)arg1;
- (void)mergeWithTile:(id)arg1 atRowOffset:(unsigned short)arg2;
- (void)moveColumnsAtColumnIndex:(unsigned char)arg1 numberOfColumns:(unsigned short)arg2 toDestColumnIndex:(unsigned char)arg3;
- (id)p_addRowInfoAtTileRowIndex:(unsigned short)arg1;
- (void)p_insertRowInfo:(id)arg1 atTileRowIndex:(unsigned short)arg2;
- (void)p_recalculateCellCount;
- (void)p_recalculateMaxColumn;
- (void)p_recalculateMaxRow;
- (void)p_recalculateMaxRowAndColumn;
- (void)p_removeRowInfo:(id)arg1;
- (id)packageLocator;
- (void)pruneEmptyRows;
- (int)removeColumnsAtColumnIndex:(unsigned char)arg1 numberOfColumns:(unsigned short)arg2;
- (void)removeRowsAtTileRowIndex:(unsigned short)arg1 numberOfRows:(unsigned short)arg2;
- (id)rowInfoAtOrAfterTileRowIndex:(unsigned short)arg1 outTileRowIndex:(out unsigned short *)arg2;
- (id)rowInfoForTileArrayIndex:(unsigned short)arg1;
- (id)rowInfoForTileRowIndex:(unsigned short)arg1 createIfMissing:(BOOL)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)setCell:(id)arg1 atColumnIndex:(unsigned char)arg2 tileRowIndex:(unsigned short)arg3;
- (BOOL)shouldMergeRowsWithTile:(id)arg1;
- (void)spliceAtTileRowIndex:(unsigned short)arg1 withRowInfo:(id)arg2;
- (id)splitAtRowIndex:(unsigned short)arg1;
- (id)yankRowInfoAtTileRowIndex:(unsigned short)arg1;
- (void)yankRowsAtTileRowIndex:(unsigned short)arg1 numberOfRows:(unsigned short)arg2 outRowArray:(id)arg3;

@end

