//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <iWorkImport/TSPObject.h>

#import <iWorkImport/NSCopying-Protocol.h>

@class NSArray, NSMutableArray, NSMutableDictionary;

__attribute__((visibility("hidden")))
@interface TSTConcurrentCellList : TSPObject <NSCopying>
{
    struct TSUViewCellRect _viewCellRect;
    UUIDRect_d701734b _cellUIDRange;
    NSMutableArray *_tilesPerRow;
    NSMutableArray *_rowInfosPerRow;
    vector_73284f0b _cells;
    struct vector<TSUModelRowIndex, std::__1::allocator<TSUModelRowIndex>> _baseRows;
    vector_5e7df3d8 _baseColumns;
    struct vector<TSUViewRowIndex, std::__1::allocator<TSUViewRowIndex>> _viewRows;
    struct vector<TSUViewColumnIndex, std::__1::allocator<TSUViewColumnIndex>> _viewColumns;
    vector_afed86a5 _cellCountDiffsPerRow;
    vector_afed86a5 _cellCountDiffsPerColumn;
    struct vector<TSTNineKeyStructPreBNC, std::__1::allocator<TSTNineKeyStructPreBNC>> _preBNCKeysList;
    vector_73284f0b _oldCells;
    BOOL _uidBased;
    BOOL _containsCellBorderChanges;
    NSArray *_interestingCells;
    NSMutableDictionary *_formatsAdded;
    NSMutableDictionary *_formatsRemoved;
}

@property (readonly, nonatomic) unsigned long long cellCount;
@property (nonatomic) UUIDRect_d701734b cellUIDRange; // @synthesize cellUIDRange=_cellUIDRange;
@property (readonly, nonatomic) BOOL containsCellBorderChanges; // @synthesize containsCellBorderChanges=_containsCellBorderChanges;
@property (strong, nonatomic) NSMutableDictionary *formatsAdded; // @synthesize formatsAdded=_formatsAdded;
@property (strong, nonatomic) NSMutableDictionary *formatsRemoved; // @synthesize formatsRemoved=_formatsRemoved;
@property (readonly, nonatomic) BOOL hasCells;
@property (strong, nonatomic) NSArray *interestingCells; // @synthesize interestingCells=_interestingCells;
@property (strong, nonatomic) NSMutableArray *rowInfosPerRow; // @synthesize rowInfosPerRow=_rowInfosPerRow;
@property (strong, nonatomic) NSMutableArray *tilesPerRow; // @synthesize tilesPerRow=_tilesPerRow;
@property (readonly, nonatomic, getter=isUIDBased) BOOL uidBased; // @synthesize uidBased=_uidBased;
@property (nonatomic) struct TSUViewCellRect viewCellRect; // @synthesize viewCellRect=_viewCellRect;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)addCell:(id)arg1 atViewCellCoord:(struct TSUViewCellCoord)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithContext:(id)arg1 cellUIDRange:(UUIDRect_d701734b)arg2;
- (id)initWithContext:(id)arg1 viewCellRect:(struct TSUViewCellRect)arg2;
- (id)initWithContext:(id)arg1 viewCellRect:(struct TSUViewCellRect)arg2 cellUIDRange:(UUIDRect_d701734b)arg3;
- (void)loadFromUnarchiver:(id)arg1;
- (void)p_accumulateCurrentCellsConcurrentlyUsingBlock:(CDUnknownBlockType)arg1;
- (id)p_baseColumnIndexes;
- (id)p_baseRowIndexes;
- (void)p_clearDataListIDs;
- (void)p_convertToInverseCellMap;
- (void)p_convertToUuidBasedCellListUsingTableInfo:(id)arg1 pruneCategorizedCells:(BOOL)arg2;
- (void)p_enumerateCellsAddedAndRemovedForFormatsUsingBlock:(CDUnknownBlockType)arg1;
- (void)p_enumerateCellsAddedAndRemovedOfType:(long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)p_enumerateColumnCellCountDiffUsingBlock:(CDUnknownBlockType)arg1;
- (void)p_enumerateCustomFormatsBeingAddedUsingReplacementBlock:(CDUnknownBlockType)arg1;
- (void)p_enumerateNewAndOldCellsSeriallyUsingBlock:(CDUnknownBlockType)arg1;
- (void)p_enumerateNewAndOldCellsSeriallyUsingPreBNCBlock:(CDUnknownBlockType)arg1;
- (void)p_enumerateRowCellCountDiffUsingBlock:(CDUnknownBlockType)arg1;
- (void)p_enumerateRowsOfCellsConcurrentlyUsingBlock:(CDUnknownBlockType)arg1;
- (void)p_gatherRowState:(CDUnknownBlockType)arg1;
- (void)p_invokeBlock:(CDUnknownBlockType)arg1;
- (void)p_pruneCellsAtColumn:(unsigned long long)arg1 rowsSize:(unsigned long long)arg2 columnsSize:(unsigned long long)arg3;
- (void)p_pruneCellsAtRow:(unsigned long long)arg1 rowsSize:(unsigned long long)arg2 columnsSize:(unsigned long long)arg3;
- (void)p_pruneToBaseWithTableInfo:(id)arg1;
- (void)p_setObjectLocale:(id)arg1;
- (void)p_setupInterestingCells:(vector_73284f0b *)arg1 forAdding:(BOOL)arg2;
- (void)saveToArchiver:(id)arg1;

@end

