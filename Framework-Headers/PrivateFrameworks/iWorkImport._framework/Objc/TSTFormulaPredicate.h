//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/NSObject.h>

#import <iWorkImport/NSCopying-Protocol.h>

@class NSDate, NSLock, NSString, TSTFormulaPredArg;

__attribute__((visibility("hidden")))
@interface TSTFormulaPredicate : NSObject <NSCopying>
{
    struct TSCEFormula mFormula;
    int mPredicateType;
    int mQualifier1;
    int mQualifier2;
    int mArgIndex0;
    int mArgIndex1;
    int mArgIndex2;
    BOOL mParamsAreDone;
    unsigned char mNodeTag0;
    unsigned char mNodeTag1;
    unsigned char mNodeTag2;
    double mNumberParam1;
    double mNumberParam2;
    NSString *mStringParam1;
    NSDate *mDateTimeParam1;
    NSDate *mDateTimeParam2;
    struct TSCENumberValue *mDurationParam1;
    struct TSCENumberValue *mDurationParam2;
    struct TSCEASTNodeCrossTableCellReference mCrossTableRefParam0;
    struct TSCEASTNodeCrossTableCellReference mCrossTableRefParam1;
    struct TSCEASTNodeCrossTableCellReference mCrossTableRefParam2;
    struct TSCEASTNodeCrossTableRowReference mCrossTableRowRefParam0;
    struct TSCEASTNodeCrossTableRowReference mCrossTableRowRefParam1;
    struct TSCEASTNodeCrossTableRowReference mCrossTableRowRefParam2;
    struct TSCEASTNodeCrossTableColumnReference mCrossTableColumnRefParam0;
    struct TSCEASTNodeCrossTableColumnReference mCrossTableColumnRefParam1;
    struct TSCEASTNodeCrossTableColumnReference mCrossTableColumnRefParam2;
    TSTFormulaPredArg *mPredArg1;
    TSTFormulaPredArg *mPredArg2;
    NSLock *mPopulateMembersLock;
}

@property (strong, nonatomic) TSTFormulaPredArg *predArg1; // @synthesize predArg1=mPredArg1;
@property (strong, nonatomic) TSTFormulaPredArg *predArg2; // @synthesize predArg2=mPredArg2;

+ (id)defaultPredicateForType:(int)arg1 argumentCellRef:(struct TSCECellRef)arg2 hostCell:(struct TSUCellCoord)arg3;
+ (id)defaultPredicateForType:(int)arg1 argumentCellReference:(id)arg2 hostCell:(struct TSUCellCoord)arg3;
+ (BOOL)isThresholdNeededForType:(int)arg1;
- (id).cxx_construct;
- (void).cxx_destruct;
- (BOOL)containsUidReferences;
- (id)copyByClearingUids:(id)arg1 containingTableUID:(const UUIDData_5fbc143e *)arg2;
- (id)copyByOffsettingRelativeReferencesWithColumnOffset:(short)arg1 rowOffset:(int)arg2;
- (id)copyByRemappingHostCellAgnosticOwnerUIDsWithMap:(const UUIDMap_b66c2694 *)arg1 calcEngine:(id)arg2 ownerUID:(const UUIDData_5fbc143e *)arg3 error:(BOOL *)arg4;
- (id)copyByRemappingOwnerUIDsWithMap:(const UUIDMap_b66c2694 *)arg1 calcEngine:(id)arg2 error:(BOOL *)arg3;
- (id)copyByRepairingBadReferences:(id)arg1;
- (id)copyByRewritingWithSpec:(id)arg1 inOwner:(id)arg2 inCellCoordinate:(struct TSUCellCoord)arg3;
- (id)copyByUpdatingLinkedTable:(const UUIDData_5fbc143e *)arg1 hostCell:(struct TSUCellCoord)arg2;
- (id)copyByUpgradingToLinkedRefForTable:(const UUIDData_5fbc143e *)arg1 hostCell:(struct TSUCellCoord)arg2;
- (id)copyToGeometricFormForConditionalStylesWithTableInfo:(id)arg1 containingCell:(struct TSUCellCoord)arg2 rewriteFlags:(unsigned char)arg3;
- (id)copyToGeometricFormForHiddenRowsWithTableInfo:(id)arg1 containsBadRef:(BOOL *)arg2;
- (id)copyToGeometricFormWithRewriteContext:(id)arg1;
- (id)copyToUidFormForConditionalStylesWithTableInfo:(id)arg1 containingCell:(struct TSUCellCoord)arg2 preserveHostCell:(BOOL)arg3;
- (id)copyToUidFormForHiddenRowsWithTableInfo:(id)arg1;
- (id)copyToUidFormWithRewriteContext:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (const struct TSCEASTNodeCrossTableColumnReference *)crossTableColumnRefParam0;
- (const struct TSCEASTNodeCrossTableColumnReference *)crossTableColumnRefParam1;
- (const struct TSCEASTNodeCrossTableColumnReference *)crossTableColumnRefParam2;
- (const struct TSCEASTNodeCrossTableCellReference *)crossTableRefParam0;
- (const struct TSCEASTNodeCrossTableCellReference *)crossTableRefParam1;
- (const struct TSCEASTNodeCrossTableCellReference *)crossTableRefParam2;
- (const struct TSCEASTNodeCrossTableRowReference *)crossTableRowRefParam0;
- (const struct TSCEASTNodeCrossTableRowReference *)crossTableRowRefParam1;
- (const struct TSCEASTNodeCrossTableRowReference *)crossTableRowRefParam2;
- (id)dateTimeParam1;
- (id)dateTimeParam2;
- (void)dealloc;
- (id)description;
- (struct TSCENumberValue *)durationParam1;
- (struct TSCENumberValue *)durationParam2;
- (void)encodeToArchive:(struct FormulaPredicateArchive *)arg1 archiver:(id)arg2;
- (BOOL)evaluateAtCellID:(struct TSUCellCoord)arg1 inFormulaOwner:(const UUIDData_5fbc143e *)arg2 calculationEngine:(id)arg3;
- (struct TSCEFormula *)formula;
- (BOOL)hasBadRefWithUidInfo;
- (unsigned long long)hash;
- (id)init;
- (id)initFromArchive:(const struct FormulaPredicateArchive *)arg1;
- (id)initWithLiteralDateType:(int)arg1 date1:(id)arg2 date2:(id)arg3 number1:(double)arg4 number2:(double)arg5 qualifier1:(int)arg6 qualifier2:(int)arg7 argumentCellRef:(struct TSCECellRef)arg8 hostCell:(struct TSUCellCoord)arg9;
- (id)initWithLiteralDateType:(int)arg1 date1:(id)arg2 date2:(id)arg3 number1:(double)arg4 number2:(double)arg5 qualifier1:(int)arg6 qualifier2:(int)arg7 argumentCellRef:(struct TSCECellRef)arg8 hostCell:(struct TSUCellCoord)arg9 forConditionalStyle:(BOOL)arg10;
- (id)initWithLiteralDurationType:(int)arg1 duration1:(double)arg2 durationUnits1:(int)arg3 duration2:(double)arg4 durationUnits2:(int)arg5 qualifier:(int)arg6 argumentCellRef:(struct TSCECellRef)arg7 hostCell:(struct TSUCellCoord)arg8;
- (id)initWithLiteralNumberType:(int)arg1 number1:(double)arg2 number2:(double)arg3 qualifier:(int)arg4 argumentCellRef:(struct TSCECellRef)arg5 hostCell:(struct TSUCellCoord)arg6;
- (id)initWithLiteralTextType:(int)arg1 string:(id)arg2 argumentCellRef:(struct TSCECellRef)arg3 hostCell:(struct TSUCellCoord)arg4;
- (id)initWithPredicateType:(int)arg1 arg1:(id)arg2 arg2:(id)arg3 qualifier1:(int)arg4 qualifier2:(int)arg5 argumentCellRef:(struct TSCECellRef)arg6 hostCell:(struct TSUCellCoord)arg7;
- (id)initWithPredicateType:(int)arg1 arg1:(id)arg2 arg2:(id)arg3 qualifier1:(int)arg4 qualifier2:(int)arg5 argumentCellRef:(struct TSCECellRef)arg6 hostCell:(struct TSUCellCoord)arg7 forConditionalStyle:(BOOL)arg8;
- (id)initWithPredicateType:(int)arg1 arg1:(id)arg2 arg2:(id)arg3 qualifier1:(int)arg4 qualifier2:(int)arg5 argumentCellReference:(id)arg6 hostCell:(struct TSUCellCoord)arg7 forConditionalStyle:(BOOL)arg8;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualForInspector:(id)arg1 atHostCoordinate:(struct TSUCellCoord)arg2;
- (unsigned char)nodeTag0;
- (unsigned char)nodeTag1;
- (unsigned char)nodeTag2;
- (double)numberParam1;
- (double)numberParam2;
- (int)p_argTypeForNodeTag:(unsigned char)arg1 argNum:(unsigned long long)arg2 calculationEngine:(id)arg3 hostCell:(struct TSUCellCoord)arg4;
- (void)p_clearDerivedVariables;
- (struct TSCEFormulaCreator)p_creatorForPeriodBoundaryWithScale:(int)arg1 direction:(int)arg2 offset:(id)arg3 argIndex:(unsigned int)arg4 earlierBound:(BOOL)arg5 isCalPers:(BOOL)arg6 hostCell:(struct TSUCellCoord)arg7;
- (BOOL)p_isEqualForNonFormulaItems:(id)arg1;
- (void)p_populateMembersFromFormula;
- (void)p_setArgumentAt:(long long)arg1 nodeTag:(unsigned char)arg2 withCellRef:(struct TSCEASTNodeCrossTableCellReference)arg3;
- (void)p_setArgumentAt:(long long)arg1 nodeTag:(unsigned char)arg2 withColumnRef:(struct TSCEASTNodeCrossTableColumnReference)arg3;
- (void)p_setArgumentAt:(long long)arg1 nodeTag:(unsigned char)arg2 withDate:(id)arg3;
- (void)p_setArgumentAt:(long long)arg1 nodeTag:(unsigned char)arg2 withDouble:(double)arg3;
- (void)p_setArgumentAt:(long long)arg1 nodeTag:(unsigned char)arg2 withDurationValue:(double)arg3 withUnit:(int)arg4;
- (void)p_setArgumentAt:(long long)arg1 nodeTag:(unsigned char)arg2 withRowRef:(struct TSCEASTNodeCrossTableRowReference)arg3;
- (void)p_setArgumentAt:(long long)arg1 nodeTag:(unsigned char)arg2 withString:(id)arg3;
- (void)p_setArgumentAt:(long long)arg1 nodeTag:(unsigned char)arg2 withUidRangeRef:(id)arg3;
- (void)p_setParamIndex0:(int)arg1;
- (void)p_setParamIndex1:(int)arg1;
- (void)p_setParamIndex2:(int)arg1;
- (void)p_setPredicateType:(int)arg1;
- (void)p_setQualifier1:(int)arg1;
- (void)p_setQualifier2:(int)arg1;
- (BOOL)p_testDataTypesForArg0:(int)arg1 arg1:(int)arg2 arg2:(int)arg3 predShouldReturn:(BOOL *)arg4;
- (id)predicateArg1atHostCoordinate:(struct TSUCellCoord)arg1 calcEngine:(id)arg2;
- (id)predicateArg2atHostCoordinate:(struct TSUCellCoord)arg1 calcEngine:(id)arg2;
- (int)predicateType;
- (int)qualifier1;
- (int)qualifier2;
- (void)setFormula:(const struct TSCEFormula *)arg1;
- (void)setHostCell:(const UUIDData_5fbc143e *)arg1 hostColumnUID:(const UUIDData_5fbc143e *)arg2 hostRowUID:(const UUIDData_5fbc143e *)arg3;
- (id)stringParam1;
- (void)upgradeTopAndBottom;

@end

