//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <iWorkImport/TSPObject.h>

#import <iWorkImport/TSPCopying-Protocol.h>

@class NSString, TSUColor;

__attribute__((visibility("hidden")))
@interface TSKAnnotationAuthor : TSPObject <TSPCopying>
{
    TSUColor *mColor;
    BOOL _isPublicAuthor;
    NSString *_name;
    NSString *_publicID;
}

@property (readonly, nonatomic) NSString *authorColorName;
@property (readonly, nonatomic) TSUColor *cellViolatorColor;
@property (readonly, nonatomic) TSUColor *changeAdornmentsColor;
@property (readonly, nonatomic) NSString *displayName;
@property (readonly, nonatomic) TSUColor *flagFillColor;
@property (readonly, nonatomic) TSUColor *flagPressedColor;
@property (readonly, nonatomic) TSUColor *flagStrokeColor;
@property (readonly, nonatomic) TSUColor *gradientEndColor;
@property (readonly, nonatomic) TSUColor *gradientStartColor;
@property (readonly, nonatomic) BOOL hasPublicID;
@property (readonly, nonatomic) TSUColor *indicatorDarkColor;
@property (readonly, nonatomic) TSUColor *indicatorLightColor;
@property (nonatomic) BOOL isPublicAuthor; // @synthesize isPublicAuthor=_isPublicAuthor;
@property (readonly, nonatomic) NSString *menuSwatchColorForAuthor;
@property (copy, nonatomic) NSString *name; // @synthesize name=_name;
@property (readonly, nonatomic) TSUColor *popoverAuthorLabelColor;
@property (readonly, nonatomic) TSUColor *popoverButtonTintColor;
@property (readonly, nonatomic) TSUColor *popoverColor;
@property (copy, nonatomic) NSString *publicID; // @synthesize publicID=_publicID;
@property (readonly, nonatomic) BOOL showAuthorComments;
@property (readonly, nonatomic) TSUColor *sidebarChangeBarColor;
@property (readonly, nonatomic) TSUColor *sidebarDecoratorLineColor;
@property (readonly, nonatomic) TSUColor *sidebarHoverColor;
@property (readonly, nonatomic) TSUColor *sidebarSelectedBorderColor;
@property (readonly, nonatomic) TSUColor *sidebarSelectedColor;
@property (readonly, nonatomic) TSUColor *sidebarUsernameColor;
@property (strong, nonatomic) TSUColor *storageColor;
@property (readonly, nonatomic) TSUColor *textHighlightColor;
@property (readonly, nonatomic) TSUColor *textHighlightOverlappingDuplicateColor;
@property (readonly, nonatomic) TSUColor *textMarkupColor;

+ (id)authorColorForIndex:(unsigned long long)arg1 forKey:(id)arg2;
+ (unsigned long long)authorColorIndexClosestToImportedFloatingCommentColor:(id)arg1;
+ (id)authorMenuSwatchColorForIndex:(unsigned long long)arg1;
+ (id)authorNameExplanatoryStringWithUseExplanation:(BOOL)arg1 withSettingsExplanation:(BOOL)arg2;
+ (id)authorStorageColorForIndex:(unsigned long long)arg1;
+ (id)authorTextMarkupColorForIndex:(unsigned long long)arg1;
+ (id)defaultAuthorName;
+ (void)enumerateAnnotationsInDocument:(id)arg1 withAuthor:(id)arg2 usingHitBlock:(CDUnknownBlockType)arg3;
+ (id)indicatorDarkColorByLightColor:(id)arg1;
+ (id)indicatorDarkColorForIndex:(unsigned long long)arg1;
+ (id)indicatorLightColorByAuthorColor:(id)arg1;
+ (id)indicatorLightColorForIndex:(unsigned long long)arg1;
+ (id)localizedAuthorColorNameForIndex:(unsigned long long)arg1;
+ (id)normalizedAuthorNameForAuthorName:(id)arg1;
+ (id)p_authorColorDictionaryForAuthorIndex:(unsigned long long)arg1;
+ (unsigned long long)p_authorColorIndexWithColor:(id)arg1 forIndicator:(BOOL)arg2;
+ (id)p_publicIDFromSeed:(id)arg1 privateID:(id)arg2;
+ (unsigned long long)presetColorCount;
- (void).cxx_destruct;
- (BOOL)allowsImplicitComponentOwnership;
- (id)componentRootObject;
- (id)copyWithContext:(id)arg1;
- (id)description;
- (unsigned long long)hash;
- (id)initWithContext:(id)arg1 name:(id)arg2 color:(id)arg3;
- (id)initWithContext:(id)arg1 name:(id)arg2 color:(id)arg3 privateID:(id)arg4;
- (id)initWithContext:(id)arg1 name:(id)arg2 color:(id)arg3 publicID:(id)arg4 isPublicAuthor:(BOOL)arg5;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isPreferredOver:(id)arg1;
- (void)loadFromUnarchiver:(id)arg1;
- (BOOL)matchesAuthor:(id)arg1;
- (BOOL)matchesPrivateID:(id)arg1;
- (unsigned long long)p_authorColorIndex;
- (void)saveToArchiver:(id)arg1;
- (id)themeFilenameForAuthor;

@end

