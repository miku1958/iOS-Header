//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/NSObject.h>

#import <iWorkImport/NSCopying-Protocol.h>

@class NSDate, NSString, TSDCommentStorage, TSDFill, TSKFormat, TSTCellBorder, TSTCellStyle, TSTConditionalStyleSet, TSTImportWarningSet, TSTRichTextPayload, TSULocale, TSWPParagraphStyle, TSWPStorage;

__attribute__((visibility("hidden")))
@interface TSTCell : NSObject <NSCopying>
{
    double _valueDouble;
    unsigned int _valueID;
    NSObject *_valueObject;
    struct TSCEFormula *_formula;
    unsigned char _conditionalStyleAppliedRule;
    unsigned short _explicitFormatFlags;
    unsigned short _cellFlags;
    unsigned int _cellStyleID;
    unsigned int _textStyleID;
    unsigned int _conditionalStyleID;
    unsigned int _formulaID;
    unsigned int _currentFormatID;
    unsigned int _numberFormatID;
    unsigned int _currencyFormatID;
    unsigned int _dateFormatID;
    unsigned int _durationFormatID;
    unsigned int _customFormatID;
    unsigned int _baseFormatID;
    unsigned int _controlFormatID;
    unsigned int _multipleChoiceListFormatID;
    unsigned int _commentStorageID;
    unsigned int _importWarningSetID;
    int _valueType;
    TSTCellStyle *_cellStyle;
    TSWPParagraphStyle *_textStyle;
    TSTConditionalStyleSet *_conditionalStyle;
    TSTCellBorder *_cellBorder;
    TSKFormat *_currentFormat;
    TSKFormat *_numberFormat;
    TSKFormat *_currencyFormat;
    TSKFormat *_dateFormat;
    TSKFormat *_durationFormat;
    TSKFormat *_customFormat;
    TSKFormat *_baseFormat;
    TSKFormat *_controlFormat;
    TSKFormat *_multipleChoiceListFormat;
    TSULocale *_locale;
    TSDCommentStorage *_commentStorage;
    TSTImportWarningSet *_importWarningSet;
}

@property (readonly, nonatomic) TSKFormat *baseFormat; // @synthesize baseFormat=_baseFormat;
@property (nonatomic) unsigned int baseFormatID; // @synthesize baseFormatID=_baseFormatID;
@property (nonatomic) BOOL boolValue;
@property (strong, nonatomic) TSTCellBorder *cellBorder; // @synthesize cellBorder=_cellBorder;
@property (readonly, nonatomic) TSDFill *cellFill;
@property (nonatomic) unsigned short cellFlags; // @synthesize cellFlags=_cellFlags;
@property (strong, nonatomic) TSTCellStyle *cellStyle; // @synthesize cellStyle=_cellStyle;
@property (nonatomic) unsigned int cellStyleID; // @synthesize cellStyleID=_cellStyleID;
@property (strong, nonatomic) TSDCommentStorage *commentStorage; // @synthesize commentStorage=_commentStorage;
@property (nonatomic) unsigned int commentStorageID; // @synthesize commentStorageID=_commentStorageID;
@property (strong, nonatomic) TSTConditionalStyleSet *conditionalStyle; // @synthesize conditionalStyle=_conditionalStyle;
@property (nonatomic) unsigned char conditionalStyleAppliedRule; // @synthesize conditionalStyleAppliedRule=_conditionalStyleAppliedRule;
@property (nonatomic) unsigned int conditionalStyleID; // @synthesize conditionalStyleID=_conditionalStyleID;
@property (readonly, nonatomic) TSKFormat *controlFormat; // @synthesize controlFormat=_controlFormat;
@property (nonatomic) unsigned int controlFormatID; // @synthesize controlFormatID=_controlFormatID;
@property (readonly, nonatomic) TSKFormat *currencyFormat; // @synthesize currencyFormat=_currencyFormat;
@property (nonatomic) unsigned int currencyFormatID; // @synthesize currencyFormatID=_currencyFormatID;
@property (readonly, nonatomic) TSKFormat *currentFormat; // @synthesize currentFormat=_currentFormat;
@property (nonatomic) unsigned int currentFormatID; // @synthesize currentFormatID=_currentFormatID;
@property (readonly, nonatomic) BOOL currentFormatIsExplicit;
@property (readonly, nonatomic) BOOL currentFormatIsMultipleChoice;
@property (readonly, nonatomic) int currentFormatNegativeStyle;
@property (readonly, nonatomic) BOOL currentFormatUsesAccountingStyle;
@property (readonly, nonatomic) TSKFormat *customFormat; // @synthesize customFormat=_customFormat;
@property (nonatomic) unsigned int customFormatID; // @synthesize customFormatID=_customFormatID;
@property (readonly, nonatomic) NSString *customFormatString;
@property (readonly, nonatomic) BOOL dataIsReplaceable;
@property (readonly, nonatomic) TSKFormat *dateFormat; // @synthesize dateFormat=_dateFormat;
@property (nonatomic) unsigned int dateFormatID; // @synthesize dateFormatID=_dateFormatID;
@property (strong, nonatomic) NSDate *dateValue;
@property (nonatomic) double doubleValue;
@property (readonly, nonatomic) TSKFormat *durationFormat; // @synthesize durationFormat=_durationFormat;
@property (nonatomic) unsigned int durationFormatID; // @synthesize durationFormatID=_durationFormatID;
@property (nonatomic) double durationTimeIntervalValue;
@property (readonly, nonatomic) TSWPParagraphStyle *effectiveTextStyle;
@property (nonatomic) unsigned short explicitFormatFlags; // @synthesize explicitFormatFlags=_explicitFormatFlags;
@property (readonly, nonatomic) int formatType;
@property (readonly, nonatomic) NSString *formattedValue;
@property (nonatomic) struct TSCEFormula *formula;
@property (nonatomic) unsigned int formulaID; // @synthesize formulaID=_formulaID;
@property (strong, nonatomic) TSWPStorage *formulaSyntaxError;
@property (nonatomic) unsigned int formulaSyntaxErrorID;
@property (readonly, nonatomic) NSString *formulaSyntaxErrorString;
@property (readonly, nonatomic) BOOL hasAnyFormats;
@property (readonly, nonatomic) BOOL hasCellStyle;
@property (readonly, nonatomic) BOOL hasCommentStorage;
@property (readonly, nonatomic) BOOL hasConditionalStyle;
@property (readonly, nonatomic) BOOL hasControl;
@property (readonly, nonatomic) BOOL hasCurrentFormat;
@property (readonly, nonatomic) BOOL hasFormula;
@property (readonly, nonatomic) BOOL hasFormulaAnyError;
@property (readonly, nonatomic) BOOL hasFormulaEvaluationError;
@property (readonly, nonatomic) BOOL hasFormulaSyntaxError;
@property (readonly, nonatomic) BOOL hasImportWarningSet;
@property (readonly, nonatomic) BOOL hasMismatchedFormatAndValue;
@property (readonly, nonatomic) BOOL hasRichTextPayload;
@property (readonly, nonatomic) BOOL hasTextStyle;
@property (readonly, nonatomic) BOOL hasValueOrError;
@property (readonly, nonatomic) int impliedFormatType;
@property (strong, nonatomic) TSTImportWarningSet *importWarningSet; // @synthesize importWarningSet=_importWarningSet;
@property (nonatomic) unsigned int importWarningSetID; // @synthesize importWarningSetID=_importWarningSetID;
@property (readonly, nonatomic) BOOL isEmpty;
@property (readonly, nonatomic) BOOL isEmptyForDataStore;
@property (readonly, nonatomic) BOOL isMostRecentlyExplicitPercent;
@property (strong, nonatomic) TSULocale *locale; // @synthesize locale=_locale;
@property (readonly, nonatomic) TSKFormat *multipleChoiceListFormat; // @synthesize multipleChoiceListFormat=_multipleChoiceListFormat;
@property (nonatomic) unsigned int multipleChoiceListFormatID; // @synthesize multipleChoiceListFormatID=_multipleChoiceListFormatID;
@property (readonly, nonatomic) TSKFormat *numberFormat; // @synthesize numberFormat=_numberFormat;
@property (nonatomic) unsigned int numberFormatID; // @synthesize numberFormatID=_numberFormatID;
@property (strong, nonatomic) TSTRichTextPayload *richTextPayload;
@property (nonatomic) unsigned int richTextPayloadID;
@property (readonly, nonatomic) TSWPStorage *richTextStorageForLayout;
@property (readonly, nonatomic) NSString *stringForEditing;
@property (readonly, nonatomic) NSString *stringForUnderlyingValue;
@property (nonatomic) unsigned int stringID;
@property (strong, nonatomic) NSString *stringValue;
@property (strong, nonatomic) TSWPParagraphStyle *textStyle; // @synthesize textStyle=_textStyle;
@property (nonatomic) unsigned int textStyleID; // @synthesize textStyleID=_textStyleID;
@property (readonly, nonatomic) BOOL valueIsNumberOrTime;
@property (readonly, nonatomic) BOOL valueIsStringOrNumber;
@property (readonly, nonatomic) BOOL valueIsText;
@property (readonly, nonatomic) BOOL valueRepresentsDateWithoutTime;
@property (nonatomic) int valueType; // @synthesize valueType=_valueType;
@property (readonly, nonatomic) int writingDirection;

+ (BOOL)formatType:(int)arg1 sharesASpareSlotWithFormatType:(int)arg2;
+ (BOOL)hasASlotForFormatType:(int)arg1;
+ (BOOL)mismatchBetweenValueType:(int)arg1 andFormatType:(int)arg2;
+ (BOOL)p_TSTCellFormatIsANumberFormatTypeForMostRecentlySet:(int)arg1;
+ (id)stringForCellValueType:(int)arg1;
- (void).cxx_destruct;
- (void)applyFormulaResult:(const struct TSCEValue *)arg1;
- (void)applyFormulaResult:(const struct TSCEValue *)arg1 context:(id)arg2 hasWarnings:(BOOL)arg3 outWriteDidBeginOrEndWithTextCell:(BOOL *)arg4;
- (void)bakeFormulaToValue;
- (id)cellByApplyingCellDiff:(id)arg1 andUpdateInverse:(id)arg2;
- (id)cellFillComparedToDefault:(id)arg1 suppressCS:(BOOL)arg2 isDefault:(BOOL *)arg3;
- (id)cellValueDescription;
- (id)cellValueTypeDescription;
- (void)clear;
- (void)clearAllFormats;
- (void)clearDataListIDs;
- (BOOL)clearNoncurrentImplicitFormats;
- (void)clearSpareFormatOfType:(int)arg1;
- (void)clearStrokes;
- (void)clearValue;
- (void)copyAllFormatsToCell:(id)arg1;
- (void)copyFormulaToCell:(id)arg1;
- (void)copyJustStrokesToCell:(id)arg1;
- (void)copyJustStyleAndStrokesToCell:(id)arg1;
- (void)copyToCell:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)description;
- (BOOL)hasEqualContentToCell:(id)arg1;
- (BOOL)hasEqualContentToCell:(id)arg1 usingRichTextStyleComparisonBlock:(CDUnknownBlockType)arg2;
- (BOOL)hasEqualValueToCell:(id)arg1;
- (BOOL)hasExplicitFormatOfType:(int)arg1 allowMismatchedSpare:(BOOL)arg2;
- (BOOL)hasFormatOfType:(int)arg1 allowMismatchedSpare:(BOOL)arg2;
- (void)inflateFromStorageRef:(struct TSTCellStorage *)arg1 dataStore:(id)arg2 suppressingFormulaInflation:(BOOL)arg3;
- (void)inflateFromStorageRef:(struct TSTCellStorage *)arg1 dataStore:(id)arg2 suppressingFormulaInflation:(BOOL)arg3 suppressingTransmutation:(BOOL)arg4;
- (id)initWithLocale:(id)arg1;
- (id)initWithStorageRef:(struct TSTCellStorage *)arg1 dataStore:(id)arg2;
- (void)p_TSTCellSetMostRecentlySetDateFormat:(int)arg1;
- (void)p_TSTCellSetMostRecentlySetNumberFormat:(int)arg1;
- (void)p_TSTCellSetMostRecentlySetTextFormat:(int)arg1;
- (BOOL)p_currentFormatIsEqualToOtherCellFormat:(id)arg1;
- (int)p_mostRecentlySetDateFormatType;
- (int)p_mostRecentlySetNumberFormatType;
- (int)p_mostRecentlySetTextFormatType;
- (void)p_setFormatExplicit:(BOOL)arg1 fromFormatType:(int)arg2 setMostRecentlySet:(BOOL)arg3;
- (void)p_setFormatFlags:(unsigned short)arg1 explicit:(BOOL)arg2;
- (void)p_setFormatForFormulaResult:(id)arg1 propagation:(BOOL)arg2;
- (id)p_spareFormatOfType:(int)arg1 allowMismatchedSpare:(BOOL)arg2 explicitOnly:(BOOL)arg3;
- (void)removeControlFormatIncludingSpares:(BOOL)arg1;
- (void)removeControlFormatIncludingSpares:(BOOL)arg1 cellChanged:(BOOL *)arg2;
- (void)setCellStyle:(id)arg1 clearingID:(BOOL)arg2;
- (void)setCommentStorage:(id)arg1 clearingID:(BOOL)arg2;
- (void)setConditionalStyle:(id)arg1 clearingID:(BOOL)arg2;
- (void)setCurrentFormat:(id)arg1 flags:(unsigned short)arg2;
- (void)setCurrentFormat:(id)arg1 isExplicit:(BOOL)arg2;
- (void)setDefaultFormatForValue;
- (void)setFormat:(id)arg1 shouldSetExplFlags:(BOOL)arg2 isExplicit:(BOOL)arg3 makeCurrent:(BOOL)arg4 clearingID:(BOOL)arg5;
- (void)setFormula:(struct TSCEFormula *)arg1 clearingID:(BOOL)arg2;
- (void)setFormulaByRef:(const struct TSCEFormula *)arg1;
- (void)setFormulaSyntaxError:(id)arg1 clearingID:(BOOL)arg2;
- (void)setImportWarningSet:(id)arg1 clearingID:(BOOL)arg2;
- (void)setRichTextPayload:(id)arg1 clearingID:(BOOL)arg2 convertToPlaintextIfPossible:(BOOL)arg3;
- (void)setRichTextPayloadWithoutPlaintextCollapse:(id)arg1;
- (void)setSpareFormat:(id)arg1 isExplicit:(BOOL)arg2;
- (void)setStringValue:(id)arg1 clearingID:(BOOL)arg2;
- (void)setTextStyle:(id)arg1 clearingID:(BOOL)arg2;
- (void)shallowCopyToCell:(id)arg1;
- (id)spareFormatOfType:(int)arg1 allowMismatchedSpare:(BOOL)arg2;
- (void)updateCustomFormatFromPaste:(id)arg1;
- (void)writeToStorageRef:(struct TSTCellStorage *)arg1;

@end

