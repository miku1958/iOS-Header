//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/NSObject.h>

#import <iWorkImport/NSCopying-Protocol.h>

@protocol OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface TSTCellUIDList : NSObject <NSCopying>
{
    vector_dadc1b26 _rowIdList;
    vector_dadc1b26 _columnIdList;
    vector_e0f2bd7e _rowUIDIndexList;
    vector_e0f2bd7e _columnUIDIndexList;
    vector_afe065ba _uncompressedCellUIDs;
    unsigned long long _compressedSize;
    NSObject<OS_dispatch_queue> *_queue;
}

@property (readonly, nonatomic) unsigned long long compressedSize; // @synthesize compressedSize=_compressedSize;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;

+ (id)cellUIDList;
+ (id)cellUIDListFromRange:(const struct TSTCellUIDRange *)arg1;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)addCellRegion:(id)arg1 withColumnUIDs:(const vector_dadc1b26 *)arg2 rowUIDs:(const vector_dadc1b26 *)arg3;
- (void)addCellUID:(const struct TSTCellUID *)arg1;
- (const vector_dadc1b26 *)columnUIDs;
- (void)compress;
- (void)compressUIDIndexListFrom:(const vector_e0f2bd7e *)arg1 withUIDCount:(unsigned long long)arg2 to:(vector_e0f2bd7e *)arg3;
- (const vector_e0f2bd7e *)compressedColumnIndexes;
- (const vector_dadc1b26 *)compressedColumnUIDs;
- (const vector_e0f2bd7e *)compressedRowIndexes;
- (const vector_dadc1b26 *)compressedRowUIDs;
- (unsigned long long)computeValidCount;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)count;
- (void)dealloc;
- (void)enumerateCellUIDsUsingBlock:(CDUnknownBlockType)arg1;
- (id)init;
- (id)initFromMessage:(const struct CellUIDListArchive *)arg1 unarchiver:(id)arg2;
- (id)iterator;
- (void)p_compressUID:(const UUIDData_5fbc143e *)arg1 index:(unsigned long long)arg2 UIDtoIndexMap:(map_2cd530a9 *)arg3 UIDs:(vector_dadc1b26 *)arg4 compressedIndexes:(vector_e0f2bd7e *)arg5 lastSameUIDIndex:(vector_88016b54 *)arg6;
- (const vector_dadc1b26 *)rowUIDs;
- (void)saveToMessage:(struct CellUIDListArchive *)arg1 archiver:(id)arg2;
- (void)setCompressedColumnIndexes:(const vector_e0f2bd7e *)arg1;
- (vector_afe065ba *)uncompressedCellUIDs;

@end

