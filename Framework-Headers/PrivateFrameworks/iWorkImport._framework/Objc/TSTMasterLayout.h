//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/NSObject.h>

#import <iWorkImport/TSTTableHiddenRowColumnProviding-Protocol.h>
#import <iWorkImport/TSTTableInternalGeometryProviding-Protocol.h>
#import <iWorkImport/TSTTableMergeRangeProviding-Protocol.h>

@class NSIndexSet, NSMutableArray, NSMutableSet, NSPointerArray, NSString, TSDFill, TSDInfoGeometry, TSDLayoutGeometry, TSKChangeNotifier, TSTCellRegion, TSTCellSelection, TSTConcurrentMutableIndexSet, TSTDupContentCache, TSTHiddenRowsColumnsCache, TSTInfo, TSTLayout, TSTLayoutDynamicResizeInfo, TSTMergeRangeSortedSet, TSTRWRetainedPointerKeyDictionary, TSTStrokeDefaultVendor, TSTStrokeWidthCache, TSTWPColumnCache, TSTWidthHeightCache, TSUColor, TSUWidthLimitedQueue, TSWPColumnStyle;
@protocol OS_dispatch_group, TSTLayoutDynamicCellFillProtocol, TSTLayoutDynamicColumnMoveProtocol, TSTLayoutDynamicContentProtocol, TSTLayoutDynamicRowMoveProtocol;

__attribute__((visibility("hidden")))
@interface TSTMasterLayout : NSObject <TSTTableHiddenRowColumnProviding, TSTTableInternalGeometryProviding, TSTTableMergeRangeProviding>
{
    double _tableDefaultFontHeightForArea[5];
    NSObject<OS_dispatch_group> *_layoutInFlight;
    struct _opaque_pthread_rwlock_t _strokesRWLock;
    struct _opaque_pthread_rwlock_t _contentRWLock;
    TSWPColumnStyle *_defaultColumnStyle;
    BOOL _inDynamicLayoutMode;
    BOOL _dynamicBandedFill;
    BOOL _dynamicBandedFillSetting;
    BOOL _dynamicRepResize;
    BOOL _dynamicResizingColumns;
    BOOL _dynamicResizingRows;
    BOOL _processHiddenRowsForExport;
    BOOL _headerColumnsFrozen;
    BOOL _headerRowsFrozen;
    BOOL _headerColumnsRepeat;
    BOOL _headerRowsRepeat;
    BOOL _tableNameEnabled;
    BOOL _tableNameHeightValid;
    BOOL _bandedFillIsValid;
    BOOL _useBandedFill;
    BOOL _tableDefaultFontHeightsAreValid;
    BOOL _emptyFilteredTable;
    BOOL _isGrouped;
    BOOL _dynamicRepressFrozenHeaderRows;
    BOOL _dynamicRepressFrozenHeaderColumns;
    unsigned short _cachedNumberOfHeaderColumns;
    unsigned short _cachedNumberOfHeaderRows;
    unsigned short _cachedNumberOfFooterRows;
    unsigned int _maxConcurrentTasks;
    unsigned int _numCellsPerTask;
    int _tableEnvironment;
    int _tableRowsBehavior;
    int _dynamicColumnAdjustment;
    int _dynamicRowAdjustment;
    struct TSUCellCoord _dynamicSuppressingConditionalStylesCellID;
    TSTInfo *_tableInfo;
    TSKChangeNotifier *_changeNotifier;
    TSTStrokeDefaultVendor *_strokesDefaultVendor;
    TSTWPColumnCache *_cellIDToWPColumnCache;
    TSTDupContentCache *_dupContentCache;
    TSTWPColumnCache *_tempWPColumnCache;
    TSTWidthHeightCache *_widthHeightCache;
    TSTHiddenRowsColumnsCache *_hiddenRowsColumnsCache;
    TSDFill *_bandedFillObject;
    double _dynamicAddOrRemoveColumnElementSize;
    double _dynamicAddOrRemoveRowElementSize;
    double _dynamicColumnTabSize;
    TSUColor *_dynamicFontColor;
    struct TSUCellRect _dynamicFontColorCellRange;
    TSDInfoGeometry *_dynamicInfoGeometry;
    double _dynamicWidthResize;
    double _dynamicHeightResize;
    struct TSUCellRect _dynamicResizingColumnRange;
    double _dynamicResizingColumnAdjustment;
    struct TSUCellRect _dynamicResizingRowRange;
    double _dynamicResizingRowAdjustment;
    double _dynamicRowTabSize;
    TSDLayoutGeometry *_dynamicSavedLayoutGeometry;
    TSTCellSelection *_dynamicSelection;
    double _dynamicTableNameResize;
    NSMutableArray *_changeDescriptors;
    TSTMergeRangeSortedSet *_mergeRanges;
    TSUWidthLimitedQueue *_layoutQueue;
    NSPointerArray *_topRowStrokes;
    NSPointerArray *_bottomRowStrokes;
    NSPointerArray *_leftColumnStrokes;
    NSPointerArray *_rightColumnStrokes;
    TSTConcurrentMutableIndexSet *_spillStrokeColumns;
    TSTCellRegion *_cellRegionForClearedMergeStrokes;
    TSTStrokeWidthCache *_columnToStrokeWidthCache;
    TSTStrokeWidthCache *_rowToStrokeHeightCache;
    TSTRWRetainedPointerKeyDictionary *_paraStyleToHeightCache;
    double _cachedTableNameHeight;
    unsigned long long _cachedMaxNumberOfColumns;
    unsigned long long _cachedMaxNumberOfRows;
    NSMutableSet *_contentReadingThreads;
    NSMutableSet *_dynamicLayoutParticipants;
    TSTLayout *_dynamicLayout;
    id<TSTLayoutDynamicColumnMoveProtocol> _dynamicColumnMoveDelegate;
    id<TSTLayoutDynamicContentProtocol> _dynamicContentDelegate;
    struct TSUCellRect _dynamicHidingContent;
    struct TSUCellRect _dynamicHidingRowsCols;
    long long _dynamicHidingRowsColsDirection;
    struct TSUCellRect _dynamicHidingText;
    TSTLayoutDynamicResizeInfo *_dynamicResizeInfo;
    struct TSUCellRect _dynamicRevealingRowsCols;
    long long _dynamicRevealingRowsColsDirection;
    id<TSTLayoutDynamicRowMoveProtocol> _dynamicRowMoveDelegate;
    id<TSTLayoutDynamicCellFillProtocol> _dynamicCellFillDelegate;
    struct CGSize _maximumPartitionSize;
    struct CGRect _tableNameBounds;
}

@property (nonatomic) BOOL bandedFillIsValid; // @synthesize bandedFillIsValid=_bandedFillIsValid;
@property (strong, nonatomic) TSDFill *bandedFillObject; // @synthesize bandedFillObject=_bandedFillObject;
@property (strong, nonatomic) NSPointerArray *bottomRowStrokes; // @synthesize bottomRowStrokes=_bottomRowStrokes;
@property (nonatomic) unsigned long long cachedMaxNumberOfColumns; // @synthesize cachedMaxNumberOfColumns=_cachedMaxNumberOfColumns;
@property (nonatomic) unsigned long long cachedMaxNumberOfRows; // @synthesize cachedMaxNumberOfRows=_cachedMaxNumberOfRows;
@property (nonatomic) unsigned short cachedNumberOfFooterRows; // @synthesize cachedNumberOfFooterRows=_cachedNumberOfFooterRows;
@property (nonatomic) unsigned short cachedNumberOfHeaderColumns; // @synthesize cachedNumberOfHeaderColumns=_cachedNumberOfHeaderColumns;
@property (nonatomic) unsigned short cachedNumberOfHeaderRows; // @synthesize cachedNumberOfHeaderRows=_cachedNumberOfHeaderRows;
@property (nonatomic) double cachedTableNameHeight; // @synthesize cachedTableNameHeight=_cachedTableNameHeight;
@property (strong, nonatomic) TSTWPColumnCache *cellIDToWPColumnCache; // @synthesize cellIDToWPColumnCache=_cellIDToWPColumnCache;
@property (strong, nonatomic) TSTCellRegion *cellRegionForClearedMergeStrokes; // @synthesize cellRegionForClearedMergeStrokes=_cellRegionForClearedMergeStrokes;
@property (strong, nonatomic) NSMutableArray *changeDescriptors; // @synthesize changeDescriptors=_changeDescriptors;
@property (weak, nonatomic) TSKChangeNotifier *changeNotifier; // @synthesize changeNotifier=_changeNotifier;
@property (strong, nonatomic) TSTStrokeWidthCache *columnToStrokeWidthCache; // @synthesize columnToStrokeWidthCache=_columnToStrokeWidthCache;
@property (strong, nonatomic) NSMutableSet *contentReadingThreads; // @synthesize contentReadingThreads=_contentReadingThreads;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) TSWPColumnStyle *defaultColumnStyle;
@property (readonly, copy) NSString *description;
@property (strong, nonatomic) TSTDupContentCache *dupContentCache; // @synthesize dupContentCache=_dupContentCache;
@property (nonatomic) double dynamicAddOrRemoveColumnElementSize; // @synthesize dynamicAddOrRemoveColumnElementSize=_dynamicAddOrRemoveColumnElementSize;
@property (nonatomic) double dynamicAddOrRemoveRowElementSize; // @synthesize dynamicAddOrRemoveRowElementSize=_dynamicAddOrRemoveRowElementSize;
@property (nonatomic) BOOL dynamicBandedFill; // @synthesize dynamicBandedFill=_dynamicBandedFill;
@property (nonatomic) BOOL dynamicBandedFillSetting; // @synthesize dynamicBandedFillSetting=_dynamicBandedFillSetting;
@property (strong, nonatomic) id<TSTLayoutDynamicCellFillProtocol> dynamicCellFillDelegate; // @synthesize dynamicCellFillDelegate=_dynamicCellFillDelegate;
@property (nonatomic) int dynamicColumnAdjustment; // @synthesize dynamicColumnAdjustment=_dynamicColumnAdjustment;
@property (strong, nonatomic) id<TSTLayoutDynamicColumnMoveProtocol> dynamicColumnMoveDelegate; // @synthesize dynamicColumnMoveDelegate=_dynamicColumnMoveDelegate;
@property (nonatomic) double dynamicColumnTabSize; // @synthesize dynamicColumnTabSize=_dynamicColumnTabSize;
@property (strong, nonatomic) id<TSTLayoutDynamicContentProtocol> dynamicContentDelegate; // @synthesize dynamicContentDelegate=_dynamicContentDelegate;
@property (strong, nonatomic) TSUColor *dynamicFontColor; // @synthesize dynamicFontColor=_dynamicFontColor;
@property (nonatomic) struct TSUCellRect dynamicFontColorCellRange; // @synthesize dynamicFontColorCellRange=_dynamicFontColorCellRange;
@property (nonatomic) double dynamicHeightResize; // @synthesize dynamicHeightResize=_dynamicHeightResize;
@property (nonatomic) struct TSUCellRect dynamicHidingContent; // @synthesize dynamicHidingContent=_dynamicHidingContent;
@property (nonatomic) struct TSUCellRect dynamicHidingRowsCols; // @synthesize dynamicHidingRowsCols=_dynamicHidingRowsCols;
@property (nonatomic) long long dynamicHidingRowsColsDirection; // @synthesize dynamicHidingRowsColsDirection=_dynamicHidingRowsColsDirection;
@property (nonatomic) struct TSUCellRect dynamicHidingText; // @synthesize dynamicHidingText=_dynamicHidingText;
@property (strong, nonatomic) TSDInfoGeometry *dynamicInfoGeometry; // @synthesize dynamicInfoGeometry=_dynamicInfoGeometry;
@property (strong, nonatomic) TSTLayout *dynamicLayout; // @synthesize dynamicLayout=_dynamicLayout;
@property (strong, nonatomic) NSMutableSet *dynamicLayoutParticipants; // @synthesize dynamicLayoutParticipants=_dynamicLayoutParticipants;
@property (nonatomic) BOOL dynamicRepResize; // @synthesize dynamicRepResize=_dynamicRepResize;
@property (nonatomic) BOOL dynamicRepressFrozenHeaderColumns; // @synthesize dynamicRepressFrozenHeaderColumns=_dynamicRepressFrozenHeaderColumns;
@property (nonatomic) BOOL dynamicRepressFrozenHeaderRows; // @synthesize dynamicRepressFrozenHeaderRows=_dynamicRepressFrozenHeaderRows;
@property (strong, nonatomic) TSTLayoutDynamicResizeInfo *dynamicResizeInfo; // @synthesize dynamicResizeInfo=_dynamicResizeInfo;
@property (nonatomic) double dynamicResizingColumnAdjustment; // @synthesize dynamicResizingColumnAdjustment=_dynamicResizingColumnAdjustment;
@property (nonatomic) struct TSUCellRect dynamicResizingColumnRange; // @synthesize dynamicResizingColumnRange=_dynamicResizingColumnRange;
@property (nonatomic) BOOL dynamicResizingColumns; // @synthesize dynamicResizingColumns=_dynamicResizingColumns;
@property (nonatomic) double dynamicResizingRowAdjustment; // @synthesize dynamicResizingRowAdjustment=_dynamicResizingRowAdjustment;
@property (nonatomic) struct TSUCellRect dynamicResizingRowRange; // @synthesize dynamicResizingRowRange=_dynamicResizingRowRange;
@property (nonatomic) BOOL dynamicResizingRows; // @synthesize dynamicResizingRows=_dynamicResizingRows;
@property (nonatomic) struct TSUCellRect dynamicRevealingRowsCols; // @synthesize dynamicRevealingRowsCols=_dynamicRevealingRowsCols;
@property (nonatomic) long long dynamicRevealingRowsColsDirection; // @synthesize dynamicRevealingRowsColsDirection=_dynamicRevealingRowsColsDirection;
@property (nonatomic) int dynamicRowAdjustment; // @synthesize dynamicRowAdjustment=_dynamicRowAdjustment;
@property (strong, nonatomic) id<TSTLayoutDynamicRowMoveProtocol> dynamicRowMoveDelegate; // @synthesize dynamicRowMoveDelegate=_dynamicRowMoveDelegate;
@property (nonatomic) double dynamicRowTabSize; // @synthesize dynamicRowTabSize=_dynamicRowTabSize;
@property (copy, nonatomic) TSDLayoutGeometry *dynamicSavedLayoutGeometry; // @synthesize dynamicSavedLayoutGeometry=_dynamicSavedLayoutGeometry;
@property (strong, nonatomic) TSTCellSelection *dynamicSelection; // @synthesize dynamicSelection=_dynamicSelection;
@property (nonatomic) struct TSUCellCoord dynamicSuppressingConditionalStylesCellID; // @synthesize dynamicSuppressingConditionalStylesCellID=_dynamicSuppressingConditionalStylesCellID;
@property (nonatomic) double dynamicTableNameResize; // @synthesize dynamicTableNameResize=_dynamicTableNameResize;
@property (nonatomic) double dynamicWidthResize; // @synthesize dynamicWidthResize=_dynamicWidthResize;
@property (nonatomic) BOOL emptyFilteredTable; // @synthesize emptyFilteredTable=_emptyFilteredTable;
@property (readonly) unsigned long long hash;
@property (nonatomic) BOOL headerColumnsFrozen; // @synthesize headerColumnsFrozen=_headerColumnsFrozen;
@property (nonatomic) BOOL headerColumnsRepeat; // @synthesize headerColumnsRepeat=_headerColumnsRepeat;
@property (nonatomic) BOOL headerRowsFrozen; // @synthesize headerRowsFrozen=_headerRowsFrozen;
@property (nonatomic) BOOL headerRowsRepeat; // @synthesize headerRowsRepeat=_headerRowsRepeat;
@property (readonly, nonatomic) NSIndexSet *hiddenColumnIndices;
@property (readonly, nonatomic) NSIndexSet *hiddenRowIndices;
@property (strong, nonatomic) TSTHiddenRowsColumnsCache *hiddenRowsColumnsCache; // @synthesize hiddenRowsColumnsCache=_hiddenRowsColumnsCache;
@property (nonatomic, getter=isInDynamicLayoutMode) BOOL inDynamicLayoutMode; // @synthesize inDynamicLayoutMode=_inDynamicLayoutMode;
@property (nonatomic) BOOL isGrouped; // @synthesize isGrouped=_isGrouped;
@property (strong, nonatomic) TSUWidthLimitedQueue *layoutQueue; // @synthesize layoutQueue=_layoutQueue;
@property (strong, nonatomic) NSPointerArray *leftColumnStrokes; // @synthesize leftColumnStrokes=_leftColumnStrokes;
@property (nonatomic) unsigned int maxConcurrentTasks; // @synthesize maxConcurrentTasks=_maxConcurrentTasks;
@property (nonatomic) struct CGSize maximumPartitionSize; // @synthesize maximumPartitionSize=_maximumPartitionSize;
@property (strong, nonatomic) TSTMergeRangeSortedSet *mergeRanges; // @synthesize mergeRanges=_mergeRanges;
@property (nonatomic) unsigned int numCellsPerTask; // @synthesize numCellsPerTask=_numCellsPerTask;
@property (readonly, nonatomic) unsigned short numberOfColumns;
@property (readonly, nonatomic) unsigned short numberOfFooterRows;
@property (readonly, nonatomic) unsigned short numberOfHeaderColumns;
@property (readonly, nonatomic) unsigned short numberOfHeaderRows;
@property (readonly, nonatomic) unsigned short numberOfRows;
@property (strong, nonatomic) TSTRWRetainedPointerKeyDictionary *paraStyleToHeightCache; // @synthesize paraStyleToHeightCache=_paraStyleToHeightCache;
@property (nonatomic) BOOL processHiddenRowsForExport; // @synthesize processHiddenRowsForExport=_processHiddenRowsForExport;
@property (strong, nonatomic) NSPointerArray *rightColumnStrokes; // @synthesize rightColumnStrokes=_rightColumnStrokes;
@property (strong, nonatomic) TSTStrokeWidthCache *rowToStrokeHeightCache; // @synthesize rowToStrokeHeightCache=_rowToStrokeHeightCache;
@property (strong, nonatomic) TSTConcurrentMutableIndexSet *spillStrokeColumns; // @synthesize spillStrokeColumns=_spillStrokeColumns;
@property (strong, nonatomic) TSTStrokeDefaultVendor *strokesDefaultVendor; // @synthesize strokesDefaultVendor=_strokesDefaultVendor;
@property (readonly) Class superclass;
@property (nonatomic) BOOL tableDefaultFontHeightsAreValid; // @synthesize tableDefaultFontHeightsAreValid=_tableDefaultFontHeightsAreValid;
@property (nonatomic) int tableEnvironment; // @synthesize tableEnvironment=_tableEnvironment;
@property (weak, nonatomic) TSTInfo *tableInfo; // @synthesize tableInfo=_tableInfo;
@property (nonatomic) struct CGRect tableNameBounds; // @synthesize tableNameBounds=_tableNameBounds;
@property (nonatomic) BOOL tableNameEnabled; // @synthesize tableNameEnabled=_tableNameEnabled;
@property (nonatomic) BOOL tableNameHeightValid; // @synthesize tableNameHeightValid=_tableNameHeightValid;
@property (nonatomic) int tableRowsBehavior; // @synthesize tableRowsBehavior=_tableRowsBehavior;
@property (strong, nonatomic) TSTWPColumnCache *tempWPColumnCache; // @synthesize tempWPColumnCache=_tempWPColumnCache;
@property (strong, nonatomic) NSPointerArray *topRowStrokes; // @synthesize topRowStrokes=_topRowStrokes;
@property (nonatomic) BOOL useBandedFill; // @synthesize useBandedFill=_useBandedFill;
@property (readonly, nonatomic) NSIndexSet *visibleColumnIndices;
@property (readonly, nonatomic) NSIndexSet *visibleRowIndices;
@property (strong, nonatomic) TSTWidthHeightCache *widthHeightCache; // @synthesize widthHeightCache=_widthHeightCache;

+ (double)effectiveTableNameHeightForTable:(id)arg1;
+ (id)tableNameTextEngine:(id)arg1;
+ (struct CGSize)tableNameTextSize:(id)arg1;
+ (int)tableRowsBehaviorForTable:(id)arg1 andEnvironment:(int)arg2;
- (void).cxx_destruct;
- (id)accountingParagraphStylePropertyMapForCell:(id)arg1 atCellID:(struct TSUCellCoord)arg2;
- (void)addChangeDescriptor:(id)arg1;
- (void)addChangeDescriptorWithType:(int)arg1 andCellRange:(struct TSUCellRect)arg2;
- (void)addChangeDescriptorWithType:(int)arg1 andCellRange:(struct TSUCellRect)arg2 andStrokeRange:(struct TSUCellRect)arg3;
- (BOOL)adjustGridColumnForVisibility:(unsigned int *)arg1 isLeft:(BOOL)arg2;
- (BOOL)adjustGridRowForVisibility:(unsigned int *)arg1 isTop:(BOOL)arg2;
- (BOOL)anyHiddenColumnsInCellRange:(struct TSUCellRect)arg1;
- (BOOL)anyHiddenRowsInCellRange:(struct TSUCellRect)arg1;
- (BOOL)anyRowsUserHiddenInCellRange:(struct TSUCellRect)arg1;
- (void)beginDynamicMode:(id)arg1;
- (double)calculatedTableNameHeight;
- (double)calculatedTableNameHeightIncludingDynamicResize:(BOOL)arg1;
- (void)captureDynamicResizeInfo;
- (BOOL)cell:(id *)arg1 forCellID:(struct TSUCellCoord)arg2;
- (id)cellIteratorWithRange:(struct TSUCellRect)arg1 flags:(unsigned long long)arg2 searchFlags:(unsigned long long)arg3;
- (void)clearDynamicStrokesForCellRange:(struct TSUCellRect)arg1;
- (void)clearModelHeightWidthCacheForCellRange:(struct TSUCellRect)arg1;
- (BOOL)containsAnyContentInRange:(struct TSUCellRect)arg1;
- (id)customStrokeProvider;
- (void)dealloc;
- (struct UIEdgeInsets)defaultPaddingForCellID:(struct TSUCellCoord)arg1;
- (struct UIEdgeInsets)edgeInsetsFromPadding:(id)arg1;
- (void)endDynamicMode;
- (void)enumerateMergedStrokesAndCapsForGridColumn:(unsigned int)arg1 from:(unsigned int)arg2 to:(unsigned int)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)enumerateMergedStrokesAndCapsForGridRow:(unsigned int)arg1 from:(unsigned int)arg2 to:(unsigned int)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)enumerateMergedStrokesForGridColumn:(unsigned int)arg1 from:(unsigned int)arg2 to:(unsigned int)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)enumerateMergedStrokesForGridRow:(unsigned int)arg1 from:(unsigned int)arg2 to:(unsigned int)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (struct TSUCellRect)expandCellRangeToCoverMergedCells:(struct TSUCellRect)arg1;
- (struct TSUCellRect)expandCellRangeToVisibleNeighbors:(struct TSUCellRect)arg1;
- (id)expandCellRegionToCoverMergedCells:(id)arg1;
- (unsigned short)firstEmptyBodyRow;
- (double)fontHeightOfParagraphStyle:(id)arg1;
- (BOOL)hasHiddenColumnAtIndex:(unsigned char)arg1;
- (BOOL)hasHiddenRowAtIndex:(unsigned short)arg1;
- (BOOL)hasStrokeSpillForLeftGridColumn:(unsigned int)arg1 inRow:(unsigned int)arg2;
- (BOOL)hintIsValid:(id)arg1;
- (unsigned char)indexOfVisibleColumnAfterAndIncludingColumnAtIndex:(unsigned char)arg1;
- (unsigned char)indexOfVisibleColumnAfterColumnAtIndex:(unsigned char)arg1;
- (unsigned char)indexOfVisibleColumnBeforeAndIncludingColumnAtIndex:(unsigned char)arg1;
- (unsigned char)indexOfVisibleColumnBeforeColumnAtIndex:(unsigned char)arg1;
- (unsigned short)indexOfVisibleRowAfterAndIncludingRowAtIndex:(unsigned short)arg1;
- (unsigned short)indexOfVisibleRowAfterRowAtIndex:(unsigned short)arg1;
- (unsigned short)indexOfVisibleRowBeforeAndIncludingRowAtIndex:(unsigned short)arg1;
- (unsigned short)indexOfVisibleRowBeforeRowAtIndex:(unsigned short)arg1;
- (id)initWithInfo:(id)arg1;
- (void)invalidateBandedFill;
- (void)invalidateDefaultFontHeights;
- (void)invalidateDynamicResizeInfo;
- (void)invalidateStrokeDefaults;
- (void)invalidateStrokeSpills;
- (void)invalidateTableNameHeight;
- (BOOL)isDynamicallyChangingCellFill;
- (BOOL)isDynamicallyChangingColumnCount;
- (BOOL)isDynamicallyChangingContent;
- (BOOL)isDynamicallyChangingFontColorOfCellID:(struct TSUCellCoord)arg1;
- (BOOL)isDynamicallyChangingInfoGeometry;
- (BOOL)isDynamicallyChangingRowCount;
- (BOOL)isDynamicallyChangingRowOrColumnCount;
- (BOOL)isDynamicallyChangingSelection;
- (BOOL)isDynamicallyColumnTabResizing;
- (BOOL)isDynamicallyHidingContentOfCellID:(struct TSUCellCoord)arg1;
- (BOOL)isDynamicallyHidingRowsCols;
- (BOOL)isDynamicallyHidingRowsCols:(long long)arg1 rowColIndex:(unsigned short)arg2;
- (BOOL)isDynamicallyHidingRowsColsCellID:(struct TSUCellCoord)arg1;
- (BOOL)isDynamicallyHidingTextOfCellID:(struct TSUCellCoord)arg1;
- (BOOL)isDynamicallyMovingColumns;
- (BOOL)isDynamicallyMovingRows;
- (BOOL)isDynamicallyRepressingFrozenHeaderColumns;
- (BOOL)isDynamicallyRepressingFrozenHeaderRows;
- (BOOL)isDynamicallyResizing:(long long)arg1;
- (BOOL)isDynamicallyResizing:(long long)arg1 rowColIndex:(unsigned short)arg2;
- (BOOL)isDynamicallyResizingCellID:(struct TSUCellCoord)arg1;
- (BOOL)isDynamicallyResizingTableName;
- (BOOL)isDynamicallyRevealingRowsCols;
- (BOOL)isDynamicallyRevealingRowsCols:(long long)arg1 rowColIndex:(unsigned short)arg2;
- (BOOL)isDynamicallyRowTabResizing;
- (BOOL)isDynamicallySettingBandedFill;
- (BOOL)isEntireCellRangeHidden:(struct TSUCellRect)arg1;
- (BOOL)isRowUserHidden:(unsigned short)arg1;
- (void)iterateCellsAndTerminateWithIterator:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)iterateCellsInRange:(struct TSUCellRect)arg1 flags:(unsigned long long)arg2 searchFlags:(unsigned long long)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (struct TSUCellCoord)layoutCellIDForModelCellID:(struct TSUCellCoord)arg1;
- (id)layoutCellRegionForModelCellRegion:(id)arg1;
- (unsigned char)layoutColumnForModelColumn:(unsigned char)arg1;
- (unsigned short)layoutRowForModelRow:(unsigned short)arg1;
- (void)measureTextForLayoutState:(id)arg1;
- (id)mergeRangesProppingRowHeightsInRegion:(id)arg1;
- (id)mergedStrokesForGridColumn:(unsigned int)arg1;
- (id)mergedStrokesForGridRow:(unsigned int)arg1;
- (id)mergesIntersectingCellRegion:(id)arg1;
- (id)mergesIntersectingRange:(struct TSUCellRect)arg1;
- (struct TSUCellCoord)modelCellIDForLayoutCellID:(struct TSUCellCoord)arg1;
- (id)modelCellRegionForLayoutCellRegion:(id)arg1;
- (unsigned char)modelColumnForLayoutColumn:(unsigned char)arg1;
- (unsigned short)modelRowForLayoutRow:(unsigned short)arg1;
- (void)modifySafelyUsingBlock:(CDUnknownBlockType)arg1;
- (id)newLayoutHint;
- (id)newTextEngineForCell:(id)arg1 atCellID:(struct TSUCellCoord)arg2;
- (unsigned short)nonUserHiddenRowAfterAndIncludingRow:(unsigned short)arg1;
- (void)p_clearStrokesForMergesInCellRegion:(id)arg1;
- (BOOL)p_deferredMergeExpansionForChangeDescriptorType:(int)arg1;
- (void)p_invalidateClearedStrokesForCellRegion:(id)arg1;
- (void)p_setDynamicStroke:(id)arg1 strokeOrder:(int)arg2 forGridColumn:(unsigned int)arg3 isLeft:(BOOL)arg4 beginRow:(unsigned int)arg5 endRow:(unsigned int)arg6;
- (void)p_setDynamicStroke:(id)arg1 strokeOrder:(int)arg2 forGridRow:(unsigned int)arg3 isTop:(BOOL)arg4 beginColumn:(unsigned int)arg5 endColumn:(unsigned int)arg6;
- (id)p_strokesForGridColumn:(unsigned int)arg1 isLeft:(BOOL)arg2 takeStrokeWriteLock:(BOOL)arg3;
- (id)p_strokesForGridRow:(unsigned int)arg1 isTop:(BOOL)arg2 takeStrokeWriteLock:(BOOL)arg3;
- (struct TSUCellCoord)p_validateFittingInfoForEmptyCellsBetween:(struct TSUCellCoord)arg1 andCellID:(struct TSUCellCoord)arg2 inRange:(struct TSUCellRect)arg3 widthHeightCollection:(id)arg4;
- (void)p_validateFittingInfoForEmptyCellsOnSingleRowBetween:(struct TSUCellCoord)arg1 andEndCellID:(struct TSUCellCoord)arg2 widthHeightCollection:(id)arg3;
- (void)p_validateFittingInfoForEmptyMergeRange:(struct TSUCellRect)arg1;
- (void)p_validateStrokesForRegion:(id)arg1;
- (id)p_validationFittingCellRegionForColumnsDeleted:(id)arg1 currentRegionToValidate:(id)arg2;
- (id)p_validationFittingCellRegionForColumnsInserted:(id)arg1 currentRegionToValidate:(id)arg2;
- (id)p_validationFittingCellRegionForColumnsMovedFrom:(id)arg1 toColumnIndex:(unsigned char)arg2 currentRegionToValidate:(id)arg3;
- (id)p_validationFittingCellRegionForColumnsVisibility:(id)arg1 currentRegionToValidate:(id)arg2;
- (id)p_validationFittingCellRegionForRangeMergeUnmerge:(id)arg1 currentRegionToValidate:(id)arg2;
- (id)p_validationFittingCellRegionForRowsDeleted:(id)arg1 currentRegionToValidate:(id)arg2;
- (id)p_validationFittingCellRegionForRowsInserted:(id)arg1 currentRegionToValidate:(id)arg2;
- (id)p_validationFittingCellRegionForRowsMovedFrom:(id)arg1 toRowIndex:(unsigned short)arg2 currentRegionToValidate:(id)arg3;
- (id)p_validationFittingCellRegionForStrokesChanged:(id)arg1 currentRegionToValidate:(id)arg2;
- (id)p_validationFittingForChangeDescriptorType:(int)arg1 regionFromChangeDescriptor:(id)arg2 currentRegionToValidate:(id)arg3;
- (struct UIEdgeInsets)paddingForCellID:(struct TSUCellCoord)arg1;
- (void)processLayoutTask:(id)arg1;
- (void)queueCellForValidation:(struct TSUCellRect)arg1 cell:(id)arg2 modelMergeRange:(struct TSUCellRect)arg3 wrap:(BOOL)arg4 verticalAlignment:(int)arg5 padding:(id)arg6 prop:(BOOL)arg7 layoutCacheFlags:(int)arg8 layoutTask:(id)arg9;
- (void)readSafelyUsingBlock:(CDUnknownBlockType)arg1;
- (void)resetModelHeightWidthCache;
- (void)setClearedStrokeForGridColumn:(unsigned int)arg1 beginRow:(unsigned int)arg2 endRow:(unsigned int)arg3;
- (void)setClearedStrokeForGridRow:(unsigned int)arg1 beginColumn:(unsigned int)arg2 endColumn:(unsigned int)arg3;
- (void)setDynamicCellBorder:(id)arg1 forCellID:(struct TSUCellCoord)arg2;
- (void)setStrokeSpillForRightGridColumn:(unsigned int)arg1 leftGridColumn:(unsigned int)arg2 inRow:(unsigned int)arg3;
- (BOOL)shouldRowUseBandedFill:(unsigned short)arg1;
- (double)strokeHeightOfGridRow:(unsigned int)arg1 atColumnIndex:(unsigned int)arg2;
- (double)strokeHeightOfGridRow:(unsigned int)arg1 beginColumn:(unsigned int)arg2 endColumn:(unsigned int)arg3;
- (double)strokeWidthOfGridColumn:(unsigned int)arg1 atRowIndex:(unsigned int)arg2;
- (double)strokeWidthOfGridColumn:(unsigned int)arg1 beginRow:(unsigned int)arg2 endRow:(unsigned int)arg3;
- (void)strokesForCellID:(struct TSUCellCoord)arg1 top:(id *)arg2 left:(id *)arg3 bottom:(id *)arg4 right:(id *)arg5;
- (unsigned long long)tableAreaForCellID:(struct TSUCellCoord)arg1;
- (double)tableNameHeight;
- (id)tableNameTextEngine;
- (struct CGSize)tableNameTextSize;
- (id)tableStrokeProvider;
- (double)unwrappedFittingWidthsForColumnInCellRegionWorker:(id)arg1;
- (id)unwrappedFittingWidthsForColumnsInCellRegion:(id)arg1;
- (void)updateDynamicFontColor:(id)arg1 andRange:(struct TSUCellRect)arg2;
- (void)updateDynamicResizeInfo:(id)arg1;
- (void)updateDynamicTableNameSize:(double)arg1;
- (void)updateWHCForMergeRanges;
- (void)validate;
- (void)validateBandedFill;
- (id)validateCellForDrawing:(struct TSUCellCoord)arg1 cell:(id)arg2 contents:(id)arg3 wrap:(BOOL)arg4 verticalAlignment:(int)arg5 padding:(id)arg6 layoutCacheFlags:(int)arg7 pageNumber:(unsigned long long)arg8 pageCount:(unsigned long long)arg9;
- (void)validateChangeDescriptorQueue;
- (void)validateDefaultFontHeights;
- (void)validateDynamicResizeInfo;
- (void)validateFittingInfoForCell:(id)arg1 cellID:(struct TSUCellCoord)arg2 mergeRange:(struct TSUCellRect)arg3 setFitting:(BOOL)arg4 layoutTask:(id)arg5 widthHeightCollection:(id)arg6;
- (void)validateFittingInfoForChangeDescriptors:(id)arg1 rowsNeedingFittingInfo:(id)arg2;
- (void)validateFittingInfoWithCellRange:(struct TSUCellRect)arg1;
- (void)validateFittingInfoWithCellRangeWorker:(struct TSUCellRect)arg1;
- (void)validateFittingWidthsForRegion:(id)arg1;
- (BOOL)validateLayoutHint:(id)arg1;
- (void)validateMasterLayoutForChangeDescriptors:(id)arg1;
- (void)validateRowVisibility:(id)arg1;
- (void)validateStrokesArrays:(id)arg1;
- (void)validateStrokesForChangeDescriptors:(id)arg1;
- (void)validateTableNameHeight;
- (void)waitForLayoutToComplete;

@end

