//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <iWorkImport/NSCopying-Protocol.h>
#import <iWorkImport/TSPReferenceItem-Protocol.h>

@class NSString, NSUUID, TSPComponent, TSPObject;
@protocol TSPLazyReferenceDelegate;

__attribute__((visibility("hidden")))
@interface TSPLazyReference : NSObject <TSPReferenceItem, NSCopying>
{
    struct os_unfair_lock_s _objectLock;
    TSPObject *_strongObject;
    TSPObject *_weakObject;
    _Atomic unsigned char _flags;
    long long _identifier;
    id<TSPLazyReferenceDelegate> _delegate;
    TSPComponent *_component;
    Class _objectClass;
}

@property (readonly, nonatomic) BOOL allowUnknownObject;
@property (weak, nonatomic) TSPComponent *component; // @synthesize component=_component;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<TSPLazyReferenceDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) BOOL isExternal;
@property (nonatomic) BOOL keepObjectInMemory;
@property (nonatomic) Class objectClass; // @synthesize objectClass=_objectClass;
@property (readonly, nonatomic) id objectIfLoaded;
@property (readonly, nonatomic) NSUUID *objectUUID;
@property (readonly, nonatomic) long long ownershipMode;
@property (readonly, nonatomic) TSPObject *strongObject;
@property (readonly) Class superclass;
@property (readonly, nonatomic) long long tsp_identifier; // @synthesize tsp_identifier=_identifier;
@property (readonly, nonatomic) BOOL tsp_isLazyReference;
@property (readonly, nonatomic) TSPObject *weakObject;

+ (id)referenceForObject:(id)arg1;
+ (id)weakReferenceForObject:(id)arg1;
+ (id)weakReferenceForObject:(id)arg1 retainedUntilArchived:(BOOL)arg2;
- (void).cxx_destruct;
- (void)addLoadObserver:(id)arg1 action:(SEL)arg2;
- (id)additionalDescription;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWeakReferenceWithObject:(id)arg1;
- (id)initWeakReferenceWithObject:(id)arg1 retainedUntilArchived:(BOOL)arg2;
- (id)initWithDelegate:(id)arg1 identifier:(long long)arg2 ownershipMode:(long long)arg3 allowUnknownObject:(BOOL)arg4;
- (id)initWithObject:(id)arg1;
- (id)initWithObject:(id)arg1 ownershipMode:(long long)arg2;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToLazyReference:(id)arg1;
- (id)objectAndReturnError:(id *)arg1;
- (BOOL)referencesObject:(id)arg1;
- (long long)releaseObjectIfPossible;
- (void)resetIdentifierFromCopy:(BOOL)arg1;
- (void)resetToIdentifier:(long long)arg1;
- (void)retainObject:(id)arg1;

@end

