//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/NSObject.h>

#import <iWorkImport/NSCopying-Protocol.h>

@class NSUUID, TSPComponent, TSPObject;
@protocol TSPLazyReferenceDelegate;

__attribute__((visibility("hidden")))
@interface TSPLazyReference : NSObject <NSCopying>
{
    TSPObject *_strongObject;
    TSPObject *_weakObject;
    struct {
        unsigned int ownershipMode:2;
        unsigned int isExternal:1;
        unsigned int allowUnknownObject:1;
    } _flags;
    id<TSPLazyReferenceDelegate> _delegate;
    long long _identifier;
    TSPComponent *_component;
    Class _objectClass;
}

@property (weak, nonatomic) TSPComponent *component; // @synthesize component=_component;
@property (weak, nonatomic) id<TSPLazyReferenceDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, nonatomic) long long identifier; // @synthesize identifier=_identifier;
@property (nonatomic) BOOL isExternal;
@property (readonly, nonatomic) id object;
@property (nonatomic) Class objectClass; // @synthesize objectClass=_objectClass;
@property (readonly, nonatomic) id objectIfLoaded;
@property (readonly, nonatomic) NSUUID *objectUUID;
@property (readonly, nonatomic) long long ownershipMode;
@property (strong, nonatomic) TSPObject *strongObject;
@property (readonly, nonatomic) TSPObject *weakObject;

+ (id)referenceForObject:(id)arg1;
+ (id)weakReferenceForObject:(id)arg1;
+ (id)weakReferenceForObject:(id)arg1 retainedUntilArchived:(BOOL)arg2;
- (void).cxx_destruct;
- (void)addLoadObserver:(id)arg1 action:(SEL)arg2;
- (id)additionalDescription;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (BOOL)discardStrongObjectIfPossible;
- (unsigned long long)hash;
- (id)init;
- (id)initWeakReferenceWithObject:(id)arg1;
- (id)initWeakReferenceWithObject:(id)arg1 retainedUntilArchived:(BOOL)arg2;
- (id)initWithDelegate:(id)arg1 identifier:(long long)arg2 ownershipMode:(long long)arg3 allowUnknownObject:(BOOL)arg4;
- (id)initWithObject:(id)arg1;
- (id)initWithObject:(id)arg1 ownershipMode:(long long)arg2;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToLazyReference:(id)arg1;
- (BOOL)referencesObject:(id)arg1;
- (void)resetIdentifierFromCopy:(BOOL)arg1;
- (void)resetToIdentifier:(long long)arg1;

@end

