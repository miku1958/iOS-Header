//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <iWorkImport/TSPObject.h>

@class NSDate, NSMutableArray, NSMutableDictionary, NSMutableSet, NSObject, NSString, NSTimeZone, TSCENamedReferenceManager, TSCERemoteDataStore, TSCERewriteTableIDInfo, TSCETableInfosByName, TSCETransaction, TSCEUUidReferenceMap, TSKAccessController, TSKChangeGroup, TSKChangeNotifier;
@protocol OS_dispatch_group, OS_dispatch_queue, OS_dispatch_semaphore, TSKMultiTableRemapping;

__attribute__((visibility("hidden")))
@interface TSCECalculationEngine : TSPObject
{
    struct TSCEDependencyTracker *_dependencyTracker;
    int _recalculationThreadState;
    struct _opaque_pthread_mutex_t _recalculationThreadStateMutex;
    BOOL _shouldCancelRecalculation;
    int _calculationPauseCount;
    NSObject<OS_dispatch_group> *_recalcLoopGroup;
    BOOL _blockingUntilRecalcIsComplete;
    double _recalcTime;
    NSObject<OS_dispatch_group> *_recalcDispatchGroup;
    _Atomic int _recalcDispatchGroupSize;
    NSObject<OS_dispatch_queue> *_recalcHighPriorityQueue;
    NSObject<OS_dispatch_queue> *_recalcLowPriorityQueue;
    NSObject<OS_dispatch_semaphore> *_modifiedOwnersSem;
    unordered_set_3f00ed57 _modifiedOwnersInThisRecalcCycle;
    BOOL _shouldRefillRecalcQueue;
    NSMutableSet *_retainReferenceResolvers;
    struct unordered_map<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>>> _referenceResolversByUid;
    NSMutableDictionary *_legacyGlobalIDStringToOwnerUIDMap;
    unsigned long long _batchingGroupCellDirtyingLevel;
    BOOL _dirtyRandomVolatileFunctionsAtEndOfDirtyBatching;
    unsigned long long _documentRandomSeed;
    NSDate *_currentDate;
    NSTimeZone *_currentTimeZone;
    NSMutableArray *_calculationStateObservers;
    unsigned long long _suppressWillModifyCallsLevel;
    unsigned long long _numberOfFormulas;
    TSKChangeGroup *_pendingChangesForAsyncNotification;
    NSObject<OS_dispatch_queue> *_writeMutualExclusionQueue;
    BOOL _dirtyAllFormulasInDocumentDidLoad;
    UUIDData_5fbc143e _transposingTableUID;
    BOOL _duringRollback;
    int _XLImportDateMode;
    TSKAccessController *_accessController;
    TSKChangeNotifier *_changeNotifier;
    TSCERemoteDataStore *_remoteDataStore;
    NSString *_previousLocaleIdentifier;
    unsigned long long _loadFromFileVersion;
    TSCETableInfosByName *_tableInfosByName;
    TSCETransaction *_currentTransaction;
    TSCENamedReferenceManager *_namedReferenceManager;
    TSCEUUidReferenceMap *_uuidReferenceMap;
    TSCERewriteTableIDInfo *_tableIDHistory;
    id<TSKMultiTableRemapping> _currentTableIdRemapper;
}

@property int XLImportDateMode; // @synthesize XLImportDateMode=_XLImportDateMode;
@property (weak, nonatomic) TSKAccessController *accessController; // @synthesize accessController=_accessController;
@property (weak, nonatomic) TSKChangeNotifier *changeNotifier; // @synthesize changeNotifier=_changeNotifier;
@property (strong) NSDate *currentDate;
@property (strong) id<TSKMultiTableRemapping> currentTableIdRemapper; // @synthesize currentTableIdRemapper=_currentTableIdRemapper;
@property (strong) NSTimeZone *currentTimeZone;
@property (readonly) TSCETransaction *currentTransaction; // @synthesize currentTransaction=_currentTransaction;
@property unsigned long long documentRandomSeed;
@property (nonatomic) BOOL duringRollback; // @synthesize duringRollback=_duringRollback;
@property (nonatomic) unsigned long long loadFromFileVersion; // @synthesize loadFromFileVersion=_loadFromFileVersion;
@property (readonly, nonatomic) TSCENamedReferenceManager *namedReferenceManager; // @synthesize namedReferenceManager=_namedReferenceManager;
@property (readonly) NSString *previousLocaleIdentifier; // @synthesize previousLocaleIdentifier=_previousLocaleIdentifier;
@property (readonly) TSCERemoteDataStore *remoteDataStore; // @synthesize remoteDataStore=_remoteDataStore;
@property (readonly) BOOL shouldAbortRecalculation;
@property (readonly) TSCERewriteTableIDInfo *tableIDHistory; // @synthesize tableIDHistory=_tableIDHistory;
@property (readonly) TSCETableInfosByName *tableInfosByName; // @synthesize tableInfosByName=_tableInfosByName;
@property UUIDData_5fbc143e transposingTableUID; // @synthesize transposingTableUID=_transposingTableUID;
@property (readonly) TSCEUUidReferenceMap *uuidReferenceMap; // @synthesize uuidReferenceMap=_uuidReferenceMap;

+ (unsigned long long)generateRandomSeed;
+ (BOOL)isTerminating;
+ (BOOL)localVariablesEnabled;
+ (unsigned long long)randomSeedFromRandomLo:(int)arg1 hi:(int)arg2;
+ (Class)resolverClass;
+ (void)splitRandomSeed:(unsigned long long)arg1 intoLo:(int *)arg2 hi:(int *)arg3;
+ (void)terminate;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)addCalculationStateObserver:(id)arg1;
- (void)addFormula:(CDStruct_ed6d627d)arg1 inOwner:(const UUIDData_5fbc143e *)arg2 precedentIterator:(CDUnknownFunctionPointerType)arg3 userData:(void *)arg4;
- (id)allCellDependenciesAsString;
- (BOOL)allCellsAreClean;
- (id)allFormulaOwnersAsString;
- (vector_dadc1b26)allOwnerUIDs;
- (BOOL)allOwnersRegistered;
- (id)allSpanningDependenciesAsString;
- (id)allWholeOwnerDependenciesAsString;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)assertAllDirtyCellsAreOnLeafStack;
- (void)assertDirtyPrecedentsCountConsistency;
- (void)beginBatchingGroupCellDirtying;
- (void)beginSuppressingWillModifyCalls;
- (void)blockUntilRecalcIsCompleteWithTimeout:(double)arg1;
- (BOOL)cellContainsAFormula:(const struct TSCECellRef *)arg1;
- (unordered_set_eab92ffe)cellCoordinatesNeedingExcelImportForTable:(const UUIDData_5fbc143e *)arg1;
- (BOOL)cellIsInACycle:(const struct TSCECellRef *)arg1;
- (BOOL)clearCellIsDirtyAfterRecalc:(const struct TSCECellRef *)arg1;
- (void)clearErrorForCell:(const struct TSCECellRef *)arg1;
- (void)clearLegacyGlobalIDs;
- (void)clearRecalculationTimer;
- (void)closeTransaction:(id)arg1;
- (unordered_set_7ec2a700)corruptCellRefs;
- (void)dealloc;
- (unsigned int)delayedArchivingPriority;
- (void)detectAndRepairConsistencyViolations;
- (unsigned long long)dirtyCellCount;
- (unsigned long long)dirtyCellCountInOwner:(const UUIDData_5fbc143e *)arg1;
- (void)dirtyCellsForInsertionOfColumns:(struct _NSRange)arg1 forTable:(const UUIDData_5fbc143e *)arg2 tableRange:(struct TSCERangeCoordinate)arg3 headerRange:(struct TSCERangeCoordinate)arg4;
- (void)dirtyCellsForInsertionOfRows:(struct _NSRange)arg1 forTable:(const UUIDData_5fbc143e *)arg2 tableRange:(struct TSCERangeCoordinate)arg3 headerRange:(struct TSCERangeCoordinate)arg4;
- (void)dirtyCellsForMergingRange:(struct TSCERangeCoordinate)arg1 forTable:(const UUIDData_5fbc143e *)arg2 headerRowRange:(struct TSCERangeCoordinate)arg3 headerColumnRange:(struct TSCERangeCoordinate)arg4;
- (void)dirtyCellsForRemovalOfColumns:(struct _NSRange)arg1 fromTable:(const UUIDData_5fbc143e *)arg2 tableRange:(struct TSCERangeCoordinate)arg3;
- (void)dirtyCellsForRemovalOfRows:(struct _NSRange)arg1 fromTable:(const UUIDData_5fbc143e *)arg2 tableRange:(struct TSCERangeCoordinate)arg3;
- (void)dirtyCellsForUpgrade;
- (void)documentDidLoad;
- (id)documentLocale;
- (id)documentRoot;
- (struct TSCEReferenceSet)emptyReferenceSet;
- (void)endBatchingGroupCellDirtying;
- (void)endSuppressingWillModifyCalls;
- (void)enumerateFormulaOwnersUsingBlock:(CDUnknownBlockType)arg1;
- (id)escapedStringForRangeReference:(const struct TSCERangeRef *)arg1 contextSheetName:(id)arg2 stickyBits:(unsigned char)arg3 suppressIdenticalEndReference:(BOOL)arg4 forceEscaping:(BOOL)arg5;
- (id)escapedStringForRangeReference:(const struct TSCERangeRef *)arg1 hostTableUID:(const UUIDData_5fbc143e *)arg2 stickyBits:(unsigned char)arg3 suppressIdenticalEndReference:(BOOL)arg4 forceEscaping:(BOOL)arg5;
- (void)executeBlockWhileCalculationEngineIsNotWriting:(CDUnknownBlockType)arg1;
- (id)extendTableIDHistoryWithRewrite:(id)arg1;
- (void)foreachFormulaInOwner:(const UUIDData_5fbc143e *)arg1 block:(CDUnknownBlockType)arg2;
- (unordered_set_7ec2a700)formulaCellsUsingVolatiles:(unsigned long long)arg1;
- (vector_13f93596)formulaCoordsInRange:(const struct TSCERangeCoordinate *)arg1 inOwner:(const UUIDData_5fbc143e *)arg2;
- (vector_13f93596)formulaCoordsReferringToRange:(const struct TSCERangeRef *)arg1 fromOwner:(const UUIDData_5fbc143e *)arg2;
- (int)forwardRegisterOwnerWithOwnerUID:(const UUIDData_5fbc143e *)arg1 legacyGlobalID:(id)arg2;
- (BOOL)hasMaxNumFormulas;
- (BOOL)hasRunRecalculationALongTime;
- (void)headerStateOfTableChanged:(const UUIDData_5fbc143e *)arg1;
- (void)headerStateOfTableChanged:(const UUIDData_5fbc143e *)arg1 changeIsForColumns:(BOOL)arg2;
- (id)init;
- (id)initWithContext:(id)arg1;
- (void)initializeDispatchObjects;
- (void)invalidateAfterRecalc;
- (BOOL)isCellReferenceDirty:(const struct TSCECellRef *)arg1;
- (BOOL)isInCollaborationMode;
- (id)legacyGlobalIDStringToOwnerUIDMap;
- (void)loadFromUnarchiver:(id)arg1;
- (void)markAllFunctionsAsDirty;
- (void)markCellRefAsDirty:(const struct TSCECellRef *)arg1;
- (void)markCompassVolatileFunctionsAsDirty;
- (void)markGeometryVolatileFunctionsAsDirtyInOwner:(const UUIDData_5fbc143e *)arg1;
- (void)markIndirectCallsAsDirty;
- (void)markLocaleVolatileFunctionsAsDirty;
- (void)markLocationVolatileFunctionsAsDirty;
- (void)markOnlyDependentsDirty:(const struct TSCECellRef *)arg1;
- (void)markOwnerAsDirty:(const UUIDData_5fbc143e *)arg1;
- (void)markRandomVolatileFunctionsAsDirty;
- (void)markRangeRefAsDirty:(const struct TSCERangeRef *)arg1;
- (void)markRemoteDataVolatileFunctionsAsDirty;
- (void)markRemoteDataVolatileFunctionsAsDirtyForKeys:(id)arg1;
- (void)markTimeVolatileFunctionsAsDirty;
- (void)markTimeVolatileFunctionsAsDirtyForCurrentDateTime;
- (void)notifyObserversOfRecalcProgress;
- (unsigned long long)numFormulaCellsInOwner:(const UUIDData_5fbc143e *)arg1;
- (unsigned long long)numberOfCellsWithFormulas;
- (id)openTransaction;
- (id)ownerForOwnerUID:(const UUIDData_5fbc143e *)arg1;
- (BOOL)ownerIsRegistered:(const UUIDData_5fbc143e *)arg1;
- (int)ownerKindForTableUID:(const UUIDData_5fbc143e *)arg1;
- (UUIDData_5fbc143e)ownerUIDForLegacyGlobalID:(id)arg1 registeringIfNeeded:(BOOL)arg2;
- (void)p_addApplicationNotification;
- (void)p_blockUntilRecalcIsCompleteOnNewThreadWithTimeout:(id)arg1;
- (void)p_blockUntilRecalcTaskExitedWithTimeout:(double)arg1;
- (void)p_enqueueTaskForCell:(struct TSCEInternalCellReference)arg1;
- (void)p_recalcOneCellHoldingReadLock:(struct TSCEInternalCellReference)arg1 formulaOwner:(id)arg2 hasExistingCalculatedPrecedents:(BOOL)arg3 isInACycle:(BOOL)arg4;
- (struct TSCEInternalCellReference)p_refillRecalcQueue;
- (void)p_removeApplicationNotification;
- (void)p_startRecalculationTask;
- (id)p_stringForRangeReference:(const struct TSCERangeRef *)arg1 hostTableUID:(const UUIDData_5fbc143e *)arg2 contextSheetName:(id)arg3 stickyBits:(unsigned char)arg4 suppressIdenticalEndReference:(BOOL)arg5 quoteComponents:(BOOL)arg6 forceEscaping:(BOOL)arg7;
- (id)packageLocator;
- (BOOL)parseComponentsOfReference:(id)arg1 gettingSheetName:(id *)arg2 gettingTableName:(id *)arg3 gettingRest:(id *)arg4;
- (struct TSUCellCoord)parseStringAsGeometricReferenceComponent:(id)arg1 inResolver:(id)arg2 outStickyBits:(char *)arg3 gettingReferencesMatchingInputAsPrefix:(id *)arg4;
- (struct TSCERangeRef)parseStringAsReference:(id)arg1 withParsingContext:(id)arg2;
- (struct TSCERangeRef)parseStringAsReferenceComponentIntersection:(id)arg1 inResolver:(id)arg2 inTableNamed:(id)arg3 preferredGeometricResolver:(id)arg4 withParsingContext:(id)arg5;
- (id)parseWithParsingContext:(id)arg1;
- (void)pauseRecalculation;
- (void)pauseRecalculationForBlock:(CDUnknownBlockType)arg1;
- (void)pauseRecalculationSometimeSoon;
- (struct TSCEReferenceSet)precedentsOfCell:(struct TSCECellRef)arg1;
- (int)preferredDispatchQueueSize;
- (BOOL)rangeIsWithinTable:(const struct TSCERangeRef *)arg1;
- (BOOL)recalcHoldingReadLock;
- (void)recalcHoldingWriteLock;
- (double)recalcTimeInSecs;
- (void)recalculateWithTimeout:(double)arg1;
- (BOOL)recalculationIsPaused;
- (BOOL)referenceIsValid:(const struct TSCERangeRef *)arg1;
- (BOOL)referenceWasGuaranteedCleanAtRecalcCycleStart:(struct TSCECReference)arg1;
- (int)registerOwnerWithOwnerUID:(const UUIDData_5fbc143e *)arg1 owner:(id)arg2 referenceResolver:(id)arg3 ownerKind:(int)arg4;
- (void)removeAllFormulasFromOwner:(const UUIDData_5fbc143e *)arg1;
- (void)removeCalculationStateObserver:(id)arg1;
- (void)removeFormula:(CDStruct_ed6d627d)arg1 inOwner:(const UUIDData_5fbc143e *)arg2;
- (void)removeFormulasFromRange:(struct TSCERangeRef)arg1;
- (void)replaceFormula:(CDStruct_ed6d627d)arg1 inOwner:(const UUIDData_5fbc143e *)arg2 precedentIterator:(CDUnknownFunctionPointerType)arg3 userData:(void *)arg4;
- (void)replaceFormula:(CDStruct_ed6d627d)arg1 inOwner:(const UUIDData_5fbc143e *)arg2 precedentIterator:(CDUnknownFunctionPointerType)arg3 userData:(void *)arg4 calculatedRemoteDataInterest:(id)arg5 clearCycle:(BOOL)arg6;
- (void)replaceFormula:(CDStruct_ed6d627d)arg1 inOwner:(const UUIDData_5fbc143e *)arg2 precedentIterator:(CDUnknownFunctionPointerType)arg3 userData:(void *)arg4 clearCycle:(BOOL)arg5;
- (void)replaceRemoteDataKeysInterestedIn:(id)arg1 forCell:(const struct TSCECellRef *)arg2;
- (void)resetCorruptCellRefs:(const unordered_set_7ec2a700 *)arg1;
- (id)resolverForCellRef:(id)arg1;
- (id)resolverForTableUID:(const UUIDData_5fbc143e *)arg1;
- (void)resumeRecalculation;
- (void)rollbackTableIDHistoryWithRewriteInfo:(id)arg1;
- (struct TSCECellRef)rootCauseForErrorInCell:(const struct TSCECellRef *)arg1 atRootCell:(BOOL *)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)setError:(id)arg1 forCell:(const struct TSCECellRef *)arg2;
- (void)setOwnerUIDForLegacyGlobalID:(id)arg1 ownerUID:(const UUIDData_5fbc143e *)arg2;
- (BOOL)shouldDelayArchiving;
- (void)startRecalcTaskIfNecessary;
- (void)startRecalculation;
- (id)stringForRangeReference:(const struct TSCERangeRef *)arg1 contextSheetName:(id)arg2 stickyBits:(unsigned char)arg3 suppressIdenticalEndReference:(BOOL)arg4;
- (id)stringForRangeReference:(const struct TSCERangeRef *)arg1 hostTableUID:(const UUIDData_5fbc143e *)arg2 stickyBits:(unsigned char)arg3 suppressIdenticalEndReference:(BOOL)arg4;
- (id)stringForRangeReference:(id)arg1 nsHostTableUID:(id)arg2 stickyBits:(unsigned char)arg3 suppressIdenticalEndReference:(BOOL)arg4;
- (void)unregisterOwner:(const UUIDData_5fbc143e *)arg1;
- (void)updateDirtyPrecedentCountsForRemovedIndex:(int)arg1 inTable:(const UUIDData_5fbc143e *)arg2 forColumns:(BOOL)arg3;
- (UUIDData_5fbc143e)uuidForTableUID:(const UUIDData_5fbc143e *)arg1 andIndex:(unsigned short)arg2 direction:(BOOL)arg3;
- (void)willClose;
- (void)wroteCells:(const vector_13f93596 *)arg1 inOwnerUID:(const UUIDData_5fbc143e *)arg2;

@end

