//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/NSObject.h>

#import <iWorkImport/TSPArchivableContent-Protocol.h>

@class NSDictionary, NSHashTable, NSMutableDictionary, NSString, TSPObject;

__attribute__((visibility("hidden")))
@interface TSPArchiverBase : NSObject <TSPArchivableContent>
{
    auto_ptr_4370f086 _message;
    struct unordered_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>> *_fieldRules;
    struct FieldPath *_currentFieldPath;
    NSMutableDictionary *_alternates;
    TSPObject *_object;
    unsigned long long _messageVersion;
    NSHashTable *_strongReferences;
    NSHashTable *_weakReferences;
    NSHashTable *_commandToModelReferences;
    NSHashTable *_lazyReferences;
    NSHashTable *_dataReferences;
}

@property (readonly, nonatomic) NSDictionary *alternates;
@property (readonly, nonatomic) NSHashTable *commandToModelReferences; // @synthesize commandToModelReferences=_commandToModelReferences;
@property (readonly, nonatomic) const struct FieldPath *currentFieldPath;
@property (readonly, nonatomic) NSHashTable *dataReferences; // @synthesize dataReferences=_dataReferences;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) const struct FieldPath *fieldPath;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) BOOL isContentUnknown;
@property (readonly, nonatomic) BOOL isDiff;
@property (readonly, nonatomic) BOOL isForCopy;
@property (readonly, nonatomic) NSHashTable *lazyReferences; // @synthesize lazyReferences=_lazyReferences;
@property (readonly, nonatomic) unsigned int messageType;
@property (readonly, nonatomic) unsigned long long messageVersion;
@property (nonatomic) unsigned long long messageVersion; // @synthesize messageVersion=_messageVersion;
@property (readonly, nonatomic) unsigned long long minimumSupportedVersion;
@property (readonly, nonatomic) TSPObject *object; // @synthesize object=_object;
@property (readonly, nonatomic) NSHashTable *strongReferences; // @synthesize strongReferences=_strongReferences;
@property (readonly) Class superclass;
@property (readonly, nonatomic) long long targetType;
@property (readonly, nonatomic) NSHashTable *weakReferences; // @synthesize weakReferences=_weakReferences;

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)addAlternateArchiverForVersion:(unsigned long long)arg1 fieldPath:(const struct FieldPath *)arg2 isDiffArchiver:(BOOL)arg3;
- (void)addWeakReferenceToObjectUUID:(id)arg1;
- (id)alternateDiffForVersion:(unsigned long long)arg1;
- (id)alternateDiffForVersion:(unsigned long long)arg1 field:(int)arg2;
- (id)alternateDiffForVersion:(unsigned long long)arg1 fieldPath:(int *)arg2;
- (id)alternateDiffForVersion:(unsigned long long)arg1 fieldPath:(int *)arg2 baseFieldPath:(const struct FieldPath *)arg3;
- (void)cleanup;
- (void)dealloc;
- (void)enumerateRulesUsingBlock:(CDUnknownBlockType)arg1;
- (id)init;
- (id)initWithObject:(id)arg1;
- (struct Message *)message;
- (struct Message *)messageWithNewFunction:(CDUnknownFunctionPointerType)arg1;
- (void)pushScopeForField:(int)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)releaseMessage;
- (void)setDataReference:(id)arg1 message:(struct DataReference *)arg2;
- (void)setDataReferenceArray:(id)arg1 message:(RepeatedPtrField_5fb0b506 *)arg2;
- (void)setIgnoreAndDropRuleForField:(int)arg1;
- (void)setIgnoreAndDropRuleForFieldPath:(int *)arg1;
- (void)setIgnoreAndPreserveRuleForField:(int)arg1;
- (void)setIgnoreAndPreserveRuleForFieldPath:(int *)arg1;
- (void)setMustUnderstandRuleForField:(int)arg1;
- (void)setMustUnderstandRuleForFieldPath:(int *)arg1;
- (void)setRule:(int)arg1 forFieldPath:(int *)arg2;
- (void)setSparseReferenceArray:(id)arg1 isWeak:(BOOL)arg2 message:(struct SparseReferenceArray *)arg3;
- (void)setSparseReferenceArray:(id)arg1 message:(struct SparseReferenceArray *)arg2;
- (void)setSparseWeakObjectUUIDPathReferenceArray:(id)arg1 message:(struct SparseUUIDPathArray *)arg2;
- (void)setSparseWeakObjectUUIDReferenceArray:(id)arg1 message:(struct SparseUUIDArray *)arg2;
- (void)setSparseWeakReferenceArray:(id)arg1 message:(struct SparseReferenceArray *)arg2;
- (void)setStrongLazyReference:(id)arg1 message:(struct Reference *)arg2;
- (void)setStrongLazyReferenceArray:(id)arg1 message:(RepeatedPtrField_a0d2dbe7 *)arg2;
- (void)setStrongReference:(id)arg1 message:(struct Reference *)arg2;
- (void)setStrongReferenceArray:(id)arg1 message:(RepeatedPtrField_a0d2dbe7 *)arg2;
- (void)setWeakLazyReference:(id)arg1 message:(struct Reference *)arg2;
- (void)setWeakReference:(id)arg1 message:(struct Reference *)arg2;
- (void)setWeakReferenceArray:(id)arg1 message:(RepeatedPtrField_a0d2dbe7 *)arg2;
- (void)setWeakReferenceToObjectUUID:(id)arg1 message:(struct UUID *)arg2;
- (void)setWeakReferenceToObjectUUIDArray:(id)arg1 message:(RepeatedPtrField_bfda3daa *)arg2;
- (void)setWeakReferenceToObjectUUIDData:(const UUIDData_5fbc143e *)arg1 message:(struct UUID *)arg2;
- (void)setWeakReferenceToObjectUUIDPath:(id)arg1 message:(struct UUIDPath *)arg2;
- (void)setWeakReferenceToObjectUUIDPathArray:(id)arg1 message:(RepeatedPtrField_0a3269f6 *)arg2;

@end

