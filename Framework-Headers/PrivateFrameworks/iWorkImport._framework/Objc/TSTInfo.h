//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <iWorkImport/TSDDrawableInfo.h>

#import <iWorkImport/TSCECalculationEngineRegistration-Protocol.h>
#import <iWorkImport/TSCEFormulaOwning-Protocol.h>
#import <iWorkImport/TSCEReferenceResolving-Protocol.h>
#import <iWorkImport/TSCETableModeling-Protocol.h>
#import <iWorkImport/TSDCompatibilityAwareMediaContainer-Protocol.h>
#import <iWorkImport/TSDContainerInfo-Protocol.h>
#import <iWorkImport/TSDMixing-Protocol.h>
#import <iWorkImport/TSDReducibleImageContainer-Protocol.h>
#import <iWorkImport/TSDReplaceableMediaContainer-Protocol.h>
#import <iWorkImport/TSKModel-Protocol.h>
#import <iWorkImport/TSKSearchable-Protocol.h>
#import <iWorkImport/TSSPresetSource-Protocol.h>
#import <iWorkImport/TSSPropertySource-Protocol.h>
#import <iWorkImport/TSSStyleClient-Protocol.h>
#import <iWorkImport/TSTCustomStrokeProviding-Protocol.h>
#import <iWorkImport/TSTStyleProviding-Protocol.h>
#import <iWorkImport/TSTTableHiddenRowColumnProviding-Protocol.h>
#import <iWorkImport/TSTTableInternalGeometryProviding-Protocol.h>
#import <iWorkImport/TSTTableMergeRangeProviding-Protocol.h>
#import <iWorkImport/TSTTableStrokeProviding-Protocol.h>
#import <iWorkImport/TSWPStorageParent-Protocol.h>
#import <iWorkImport/TSWPTextStatisticsTrackerProvider-Protocol.h>

@class NSArray, NSObject, NSString, NSUUID, TSCECalculationEngine, TSCECellCoordinateVector, TSCEOwnerFormulaMap, TSCEOwnerUidMapper, TSDFill, TSDInfoGeometry, TSDStroke, TSPObject, TSTCell, TSTCellDictionary, TSTCellStyle, TSTConditionalStyleFormulaOwner, TSTHiddenStateFormulaOwner, TSTHiddenStateIndexSet, TSTImportWarningSetByCoordinateMap, TSTMasterLayout, TSTMergeOwner, TSTSortRuleReferenceTracker, TSTStrokeSidecar, TSTStructuredTextImportRecord, TSTTableFilterSet, TSTTableModel, TSTTablePartitioner, TSTTableSortOrder, TSTTableStyle, TSTTableStylePreset, TSWPParagraphStyle, TSWPShapeStyle;
@protocol TSDContainerInfo, TSDOwningAttachment;

__attribute__((visibility("hidden")))
@interface TSTInfo : TSDDrawableInfo <TSSPropertySource, TSDReplaceableMediaContainer, TSDReducibleImageContainer, TSDCompatibilityAwareMediaContainer, TSCEReferenceResolving, TSCECalculationEngineRegistration, TSCEFormulaOwning, TSCETableModeling, TSDContainerInfo, TSDMixing, TSKModel, TSKSearchable, TSSPresetSource, TSSStyleClient, TSTCustomStrokeProviding, TSTStyleProviding, TSTTableHiddenRowColumnProviding, TSTTableInternalGeometryProviding, TSTTableMergeRangeProviding, TSTTableStrokeProviding, TSWPStorageParent, TSWPTextStatisticsTrackerProvider>
{
    BOOL _hasReference;
    BOOL _migratingStylesOnly;
    TSTTablePartitioner *_partitioner;
    TSTMasterLayout *_masterLayout;
    TSTTableModel *_tableModel;
}

@property (readonly, nonatomic, getter=isAnchoredToText) BOOL anchoredToText; // @dynamic anchoredToText;
@property (readonly, nonatomic, getter=isAttachedToBodyText) BOOL attachedToBodyText;
@property (readonly, nonatomic) BOOL autoListRecognition;
@property (readonly, nonatomic) BOOL autoListTermination;
@property (readonly, nonatomic) TSDFill *backgroundFill;
@property (strong, nonatomic) TSTCellStyle *bodyCellStyle;
@property (readonly, nonatomic) TSDStroke *bodyColumnStroke;
@property (readonly, nonatomic) TSDFill *bodyFill;
@property (readonly, nonatomic) TSDStroke *bodyRowStroke;
@property (readonly, nonatomic) TSDStroke *bodyRowStrokeEvenIfNotVisible;
@property (strong, nonatomic) TSWPParagraphStyle *bodyTextStyle;
@property (nonatomic) TSCECalculationEngine *calcEngine;
@property (readonly, nonatomic) TSTCellDictionary *cellsPendingWrite;
@property (readonly, nonatomic) TSCECellCoordinateVector *cellsToInvalidateAfterRecalc;
@property (readonly, nonatomic) TSCECellCoordinateVector *cellsToInvalidateNonoverflowingAfterRecalc;
@property (readonly, nonatomic) NSArray *childInfos;
@property NSArray *columnWidths;
@property (readonly, nonatomic) TSTConditionalStyleFormulaOwner *conditionalStyleFormulaOwner;
@property (readonly, nonatomic) UUIDData_5fbc143e conditionalStyleFormulaOwnerUID;
@property (nonatomic) long long contentWritingDirection;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) TSTCell *defaultBodyCell;
@property (nonatomic) double defaultColumnWidth;
@property (readonly, nonatomic) TSTCell *defaultFooterRowCell;
@property (readonly, nonatomic) TSTCell *defaultHeaderColumnCell;
@property (readonly, nonatomic) TSTCell *defaultHeaderRowCell;
@property (readonly, nonatomic) TSDStroke *defaultHorizontalBorderStroke;
@property (readonly, nonatomic) TSDStroke *defaultHorizontalBorderStrokeEvenIfNotVisible;
@property (nonatomic) double defaultRowHeight;
@property (readonly, nonatomic) TSDStroke *defaultVerticalBorderStroke;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *description;
@property (copy, nonatomic) TSTTableFilterSet *filterSet;
@property (readonly, nonatomic, getter=isFloatingAboveText) BOOL floatingAboveText; // @dynamic floatingAboveText;
@property (readonly, nonatomic) TSDStroke *footerRowBodyColumnStroke;
@property (readonly, nonatomic) TSDStroke *footerRowBodyRowStroke;
@property (readonly, nonatomic) TSDStroke *footerRowBorderStroke;
@property (strong, nonatomic) TSTCellStyle *footerRowCellStyle;
@property (readonly, nonatomic) TSDStroke *footerRowSeparatorStroke;
@property (strong, nonatomic) TSWPParagraphStyle *footerRowTextStyle;
@property (readonly, nonatomic) TSDFill *footerRowsFill;
@property (strong, nonatomic) TSCEOwnerFormulaMap *formulasForUndo;
@property (nonatomic) UUIDData_5fbc143e fromTableUID;
@property (copy, nonatomic) TSDInfoGeometry *geometry; // @dynamic geometry;
@property (readonly, nonatomic) BOOL hasAlternatingRows;
@property (nonatomic) BOOL hasReference; // @synthesize hasReference=_hasReference;
@property (readonly, nonatomic) BOOL hasTableBorder;
@property (readonly) unsigned long long hash;
@property (readonly) unsigned long long hash;
@property (readonly) unsigned long long hash;
@property (readonly) unsigned long long hash;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) TSDStroke *headerColumnBodyColumnStroke;
@property (readonly, nonatomic) TSDStroke *headerColumnBodyRowStroke;
@property (readonly, nonatomic) TSDStroke *headerColumnBorderStroke;
@property (strong, nonatomic) TSTCellStyle *headerColumnCellStyle;
@property (readonly, nonatomic) TSDStroke *headerColumnSeparatorStroke;
@property (strong, nonatomic) TSWPParagraphStyle *headerColumnTextStyle;
@property (readonly, nonatomic) TSDFill *headerColumnsFill;
@property (nonatomic) BOOL headerColumnsFrozen;
@property (readonly, nonatomic) TSDStroke *headerRowBodyColumnStroke;
@property (readonly, nonatomic) TSDStroke *headerRowBodyRowStroke;
@property (readonly, nonatomic) TSDStroke *headerRowBorderStroke;
@property (strong, nonatomic) TSTCellStyle *headerRowCellStyle;
@property (readonly, nonatomic) TSDStroke *headerRowSeparatorStroke;
@property (strong, nonatomic) TSWPParagraphStyle *headerRowTextStyle;
@property (readonly, nonatomic) TSDFill *headerRowsFill;
@property (nonatomic) BOOL headerRowsFrozen;
@property (readonly, nonatomic) TSTHiddenStateIndexSet *hiddenColumns;
@property (readonly, nonatomic) TSTHiddenStateIndexSet *hiddenRows;
@property (readonly, nonatomic) TSTHiddenStateFormulaOwner *hiddenStateFormulaOwnerForColumns;
@property (readonly, nonatomic) TSTHiddenStateFormulaOwner *hiddenStateFormulaOwnerForRows;
@property (readonly, nonatomic) TSCEOwnerUidMapper *identityOwnerUIDMapper;
@property (readonly, nonatomic, getter=isInlineWithText) BOOL inlineWithText; // @dynamic inlineWithText;
@property (strong, nonatomic) TSTMasterLayout *masterLayout; // @synthesize masterLayout=_masterLayout;
@property (nonatomic) BOOL matchesObjectPlaceholderGeometry;
@property (readonly, nonatomic) TSTMergeOwner *mergeOwner;
@property (nonatomic) BOOL migratingStylesOnly; // @synthesize migratingStylesOnly=_migratingStylesOnly;
@property (readonly, nonatomic, getter=isNewlyImported) BOOL newlyImported;
@property (readonly, nonatomic) NSUUID *nsTableUID;
@property (nonatomic) unsigned short numberOfColumns;
@property (readonly, nonatomic) unsigned short numberOfFilteredRows;
@property (nonatomic) unsigned short numberOfFooterRows;
@property (nonatomic) unsigned short numberOfHeaderColumns;
@property (nonatomic) unsigned short numberOfHeaderRows;
@property (readonly, nonatomic) unsigned short numberOfHiddenColumns;
@property (readonly, nonatomic) unsigned short numberOfHiddenRows;
@property (nonatomic) unsigned short numberOfRows;
@property (readonly, nonatomic) unsigned short numberOfUserHiddenColumns;
@property (readonly, nonatomic) unsigned short numberOfUserHiddenRows;
@property (readonly, nonatomic) unsigned short numberOfUserVisibleBodyRows;
@property (readonly, nonatomic) unsigned short numberOfVisibleBodyColumns;
@property (readonly, nonatomic) unsigned short numberOfVisibleBodyRows;
@property (readonly, nonatomic) TSCEOwnerUidMapper *ownerUIDMapper;
@property (nonatomic) TSPObject<TSDOwningAttachment> *owningAttachment; // @dynamic owningAttachment;
@property (readonly, nonatomic) TSPObject<TSDOwningAttachment> *owningAttachmentNoRecurse; // @dynamic owningAttachmentNoRecurse;
@property (nonatomic) NSObject<TSDContainerInfo> *parentInfo; // @dynamic parentInfo;
@property (strong, nonatomic) TSTTablePartitioner *partitioner; // @synthesize partitioner=_partitioner;
@property (nonatomic) BOOL presetNeedsStrongOwnership;
@property (readonly, nonatomic) BOOL preventsComments;
@property (readonly, nonatomic, getter=isReimportable) BOOL reimportable;
@property (nonatomic) BOOL repeatingHeaderColumnsEnabled;
@property (nonatomic) BOOL repeatingHeaderRowsEnabled;
@property NSArray *rowHeights;
@property (copy, nonatomic) TSTTableSortOrder *sortOrder;
@property (readonly, nonatomic) TSTSortRuleReferenceTracker *sortRuleReferenceTracker;
@property (readonly, nonatomic) BOOL storageChangesInvalidateWrap;
@property (readonly, nonatomic) TSTStrokeSidecar *strokeSidecar;
@property (nonatomic) BOOL styleApplyClearsAll;
@property (readonly) Class superclass;
@property (readonly) Class superclass;
@property (readonly) Class superclass;
@property (readonly) Class superclass;
@property (readonly) Class superclass;
@property (readonly, nonatomic) BOOL supportsRichTextUndo;
@property (strong, nonatomic) TSTTableModel *tableModel; // @synthesize tableModel=_tableModel;
@property (strong, nonatomic) NSString *tableName;
@property (nonatomic) BOOL tableNameBorderEnabled;
@property (readonly, nonatomic) TSDStroke *tableNameBorderStroke;
@property (nonatomic) BOOL tableNameEnabled;
@property (nonatomic) double tableNameHeight;
@property (strong, nonatomic) TSWPShapeStyle *tableNameShapeStyle;
@property (strong, nonatomic) TSWPParagraphStyle *tableNameStyle;
@property (strong, nonatomic) TSTTableStyle *tableStyle;
@property (strong, nonatomic) TSTTableStylePreset *tableStylePreset;
@property (nonatomic) UUIDData_5fbc143e tableUID;
@property (readonly, nonatomic) int tableWritingDirection;
@property (strong, nonatomic) TSTStructuredTextImportRecord *textImportRecord;
@property (readonly, nonatomic) BOOL textIsLinked;
@property (readonly, nonatomic) BOOL textIsVertical;
@property (readonly, nonatomic) TSTHiddenStateIndexSet *userHiddenRows;
@property (strong, nonatomic) TSTImportWarningSetByCoordinateMap *warningSetsForUndo;
@property (nonatomic) BOOL wasCut;
@property (nonatomic) BOOL wasUnarchivedFromAProvidedTable;

+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3;
+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3 reservedCount:(unsigned long long)arg4;
+ (BOOL)canPartition;
+ (struct TSCETableReference)canonicalCellReferenceForReference:(const struct TSCETableReference *)arg1;
+ (struct TSUCellRect)cellRangeForTableArea:(unsigned long long)arg1 givenTableSize:(CDStruct_d65e47c4)arg2 numberOfHeaderRows:(unsigned short)arg3 numberOfFooterRows:(unsigned short)arg4 numberOfHeaderColumns:(unsigned short)arg5;
+ (void)ensureAllTablesAreRegisteredInDocumentRoot:(id)arg1;
+ (struct TSCEFormat)format:(const struct TSCETableReference *)arg1 fromCell:(struct TSUCellCoord)arg2;
+ (struct TSCEFormat)formatFromVector:(const struct TSCETableReferenceVector *)arg1 atIndex:(unsigned long long)arg2;
+ (id)geometryForPrototypeIndex:(long long)arg1 withCanvasPoint:(struct CGPoint)arg2;
+ (int)getHidingAction:(const struct TSCETableReference *)arg1;
+ (struct TSCERangeCoordinate)getRange:(const struct TSCETableReference *)arg1;
+ (struct TSCERangeRef)getRangeReference:(const struct TSCETableReference *)arg1;
+ (id)localizedDescriptionForProtoIndex:(unsigned long long)arg1;
+ (struct TSCETableReference)makeCellReferenceInSameTable:(const struct TSCETableReference *)arg1 cellID:(struct TSUCellCoord)arg2;
+ (struct TSCETableReferenceVector)makeReferenceVectorWithReference:(const struct TSCETableReference *)arg1 rangeContext:(unsigned char)arg2 apparentRangePtr:(struct TSCERangeCoordinate *)arg3;
+ (int)mergeReferences:(struct TSCETableReference *)arg1 left:(const struct TSCETableReference *)arg2 right:(const struct TSCETableReference *)arg3;
+ (BOOL)needsObjectUUID;
+ (unsigned short)numberOfColumnsForProtoIndex:(unsigned long long)arg1;
+ (unsigned short)numberOfRowsForProtoIndex:(unsigned long long)arg1;
+ (void)performRewritesForInsertedTableInfos:(id)arg1;
+ (void)prefetchData:(struct TSCEReferenceValue *)arg1 fromVectorObject:(struct TSCETableReferenceVector *)arg2 cellID:(struct TSUCellCoord)arg3;
+ (id)presetKinds;
+ (struct TSUCellCoord)resolvedCellIDForScalarAccess:(struct TSCETableReference)arg1 fromCell:(struct TSUCellCoord)arg2;
+ (id)resolverContainerMatchingName:(id)arg1 inDocumentRoot:(id)arg2;
+ (id)resolverMatchingName:(id)arg1 inDocumentRoot:(id)arg2 contextResolver:(id)arg3;
+ (id)resolverMatchingNameWithContextContainer:(id)arg1 inDocumentRoot:(id)arg2 contextContainerName:(id)arg3;
+ (struct TSCEValue)scalarValue:(const struct TSCETableReference *)arg1 fromCell:(struct TSUCellCoord)arg2 permitAccessInsideMergeRegions:(BOOL)arg3 fetchRichTextAttributesIfPlainText:(BOOL)arg4;
+ (unsigned long long)tableAreaForCellID:(struct TSUCellCoord)arg1 inTableWithHeaderColumns:(unsigned short)arg2 headerRows:(unsigned short)arg3 footerRows:(unsigned short)arg4 totalRows:(unsigned short)arg5;
+ (id)tablePrototypeWithIndex:(long long)arg1 context:(id)arg2 geometry:(id)arg3 styles:(id)arg4;
+ (id)tablePrototypeWithIndex:(long long)arg1 context:(id)arg2 geometry:(id)arg3 styles:(id)arg4 forTableInsertOnly:(BOOL)arg5;
+ (BOOL)validateNewName:(id)arg1 forTable:(id)arg2;
+ (struct TSCEValue)valueForTable:(id)arg1 cellID:(struct TSUCellCoord)arg2 fetchRichTextAttributesIfPlainText:(BOOL)arg3;
- (void).cxx_destruct;
- (UUIDData_5fbc143e)UIDForIndex:(unsigned short)arg1 isRows:(BOOL)arg2;
- (id)UIDSetForIndexes:(id)arg1 isRows:(BOOL)arg2;
- (id)UIDSetForRange:(struct _NSRange)arg1 isRows:(BOOL)arg2;
- (vector_4dc5f307)UIDsForIndexes:(id)arg1 isRows:(BOOL)arg2;
- (vector_4dc5f307)UIDsForRange:(struct _NSRange)arg1 isRows:(BOOL)arg2;
- (void)acceptVisitor:(id)arg1;
- (struct TSUCellRect)actualHeaderColumnRange;
- (void)addPasteboardCustomFormatsToDocumentAndUpdateCells;
- (id)additionalObjectsToCopy;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (id)allAnnotations;
- (vector_4dc5f307)allColumnUIDs;
- (id)allMergeRanges;
- (id)allRichTextPayloadStorages;
- (vector_4dc5f307)allRowUIDs;
- (BOOL)anyHiddenColumnsInCellRange:(struct TSUCellRect)arg1;
- (BOOL)anyHiddenRowsInCellRange:(struct TSUCellRect)arg1;
- (BOOL)anyHiddenRowsInCellRange:(struct TSUCellRect)arg1 forAction:(unsigned char)arg2;
- (struct TSCERangeCoordinate)apparentRangeForRange:(struct TSCERangeCoordinate)arg1 rangeContext:(unsigned char)arg2;
- (id)applyCellDiff:(id)arg1 atCellID:(struct TSUCellCoord)arg2 migrationMap:(id)arg3;
- (id)applyCellDiff:(id)arg1 atCellID:(struct TSUCellCoord)arg2 migrationMap:(id)arg3 inverseCellDiff:(id)arg4 defaultCellStyle:(id)arg5 defaultTextStyle:(id)arg6;
- (void)applyWritingDirection:(int)arg1 toCell:(id)arg2 cellID:(struct TSUCellCoord)arg3;
- (void)assertCollaborationConvergence;
- (struct CGPoint)autosizePositionOffsetForGeometry:(id)arg1 dynamicallyDraggedLayout:(id)arg2;
- (void)bakeFormulas;
- (id)bandedFillObject;
- (void)beginRewriteForCalculationEngine:(id)arg1 spec:(id)arg2;
- (struct TSUCellRect)bodyColumnRange;
- (struct TSUCellRect)bodyRange;
- (struct TSCERangeCoordinate)bodyRangeCoordinate;
- (struct TSUCellRect)bodyRowRange;
- (struct TSUCellRect)bottomCornerRange;
- (BOOL)canAspectRatioLockBeChangedByUser;
- (BOOL)canTranspose;
- (id)cellAtCellID:(struct TSUCellCoord)arg1;
- (id)cellBorderAtCellID:(struct TSUCellCoord)arg1;
- (BOOL)cellExistsAtCellID:(struct TSUCellCoord)arg1;
- (struct TSUCellCoord)cellIDAboveCellID:(struct TSUCellCoord)arg1;
- (struct TSUCellCoord)cellIDBelowCellID:(struct TSUCellCoord)arg1;
- (struct TSUCellCoord)cellIDForCellContainingRichTextStorage:(id)arg1;
- (struct TSUCellCoord)cellIDForCellUID:(const struct TSTCellUID *)arg1;
- (struct TSUCellCoord)cellIDLeftOfCellID:(struct TSUCellCoord)arg1;
- (struct TSUCellCoord)cellIDRightOfCellID:(struct TSUCellCoord)arg1;
- (id)cellIteratorWithFlags:(unsigned long long)arg1 searchFlags:(unsigned long long)arg2;
- (id)cellIteratorWithRange:(struct TSUCellRect)arg1 flags:(unsigned long long)arg2 searchFlags:(unsigned long long)arg3;
- (id)cellIteratorWithRegion:(id)arg1 flags:(unsigned long long)arg2 searchFlags:(unsigned long long)arg3;
- (id)cellIteratorWithRegion:(id)arg1 flags:(unsigned long long)arg2 searchFlags:(unsigned long long)arg3 clampingRange:(struct TSUCellRect)arg4;
- (id)cellMapForRegion:(id)arg1 uidBased:(BOOL)arg2 suppressMergeContent:(BOOL)arg3;
- (struct TSUCellRect)cellRangeForTableArea:(unsigned long long)arg1;
- (struct TSUCellRect)cellRangeForUIDRange:(const struct TSTCellUIDRange *)arg1;
- (id)cellRangeName:(struct TSCERangeCoordinate)arg1 stickyBits:(unsigned char)arg2 suppressIdenticalEndReference:(BOOL)arg3 quoteComponents:(BOOL)arg4 forceEscaping:(BOOL)arg5 rangeNameContainsColumnOrRowName:(out BOOL *)arg6;
- (id)cellRegionForUIDRange:(const struct TSTCellUIDRange *)arg1;
- (id)cellRegionFromCellUIDList:(id)arg1;
- (id)cellRegionWithConditionalStyleMatchingCell:(struct TSUCellCoord)arg1;
- (BOOL)cellStyle:(id)arg1 isEqualToDefaultCellStyleForCellID:(struct TSUCellCoord)arg2;
- (id)cellStyleAtCellID:(struct TSUCellCoord)arg1 isDefault:(out BOOL *)arg2;
- (id)cellStyleForCellWithEmptyStyleAtCellID:(struct TSUCellCoord)arg1 isDefault:(out BOOL *)arg2;
- (id)cellStyleOfColumnAtIndex:(unsigned char)arg1 isDefault:(out BOOL *)arg2;
- (id)cellStyleOfRowAtIndex:(unsigned short)arg1 isDefault:(out BOOL *)arg2;
- (id)cellTextStyle:(struct TSUCellCoord)arg1;
- (id)cellUIDListFromCellRegion:(id)arg1;
- (struct TSTCellUIDRange)cellUIDRangeForCellRange:(struct TSUCellRect)arg1;
- (struct TSTCellUID)cellUIDforCellID:(const struct TSUCellCoord *)arg1;
- (int)cellValueTypeAtCellID:(struct TSUCellCoord)arg1;
- (BOOL)cellWasModifiedInCurrentRecalcCycle:(struct TSUCellCoord)arg1;
- (BOOL)cellWasModifiedInThisRecalcCycle:(struct TSUCellCoord)arg1;
- (id)childCommandForReplaceAllCommand:(id)arg1;
- (id)childEnumerator;
- (void)chooseUniqueNameInContainer:(id)arg1 forPaste:(BOOL)arg2;
- (void)chooseUniqueNameInContainer:(id)arg1 forPaste:(BOOL)arg2 needsNewName:(BOOL)arg3;
- (void)chooseUniqueNameInContainer:(id)arg1 forPaste:(BOOL)arg2 needsNewName:(BOOL)arg3 avoidNames:(id)arg4;
- (unsigned long long)chunkCountForTextureDeliveryStyle:(unsigned long long)arg1 animationFilter:(id)arg2;
- (void)clearCommentHostingMapForCommentStorage:(id)arg1;
- (void)clearFromTableUID;
- (void)clearPartitioner;
- (unsigned char)columnIndexForColumnUID:(const UUIDData_5fbc143e *)arg1;
- (id)columnIndexesForUIDs:(const vector_4dc5f307 *)arg1;
- (id)columnNameForCellID:(struct TSUCellCoord)arg1 cellRangeContainingName:(struct TSUCellRect *)arg2 restrictToBodyRange:(BOOL)arg3;
- (UUIDData_5fbc143e)columnUIDForColumnIndex:(unsigned char)arg1;
- (vector_4dc5f307)columnUIDs;
- (vector_4dc5f307)columnUIDsForColumnIndexes:(id)arg1;
- (vector_4dc5f307)columnUIDsForColumnRange:(struct _NSRange)arg1;
- (id)commandForSettingTableDirection:(int)arg1 icc:(id)arg2;
- (id)commentHostingAtCellID:(struct TSUCellCoord)arg1;
- (id)commentHostingAtCellID:(struct TSUCellCoord)arg1 forCommentStorage:(id)arg2;
- (id)compatibilityCheckerForData:(id)arg1 associatedHint:(id)arg2;
- (id)componentRootObject;
- (double)computeDefaultFontHeightForTableArea:(unsigned long long)arg1;
- (void)computeDefaultRowHeight;
- (id)conditionalStyleSetAtCellID:(struct TSUCellCoord)arg1;
- (BOOL)containsProperty:(int)arg1;
- (BOOL)contentsAreRightToLeft;
- (void)convertFormulasToUidForm:(id)arg1 atCellID:(struct TSUCellCoord)arg2;
- (void)convertFormulasToUidForm:(id)arg1 atCellID:(struct TSUCellCoord)arg2 preserveHostCell:(BOOL)arg3;
- (id)copyWithContext:(id)arg1;
- (Class)dataStoreIteratorClass;
- (void)dealloc;
- (id)defaultCellStyleForCellID:(struct TSUCellCoord)arg1;
- (id)defaultCellStyleForTableArea:(unsigned long long)arg1;
- (id)defaultTextStyleForCellID:(struct TSUCellCoord)arg1;
- (id)defaultTextStyleForTableArea:(unsigned long long)arg1;
- (void)didCopy;
- (void)didReplaceTextsInStoragesWithPlaceHolderString;
- (void)dirtyFilterState;
- (id)duplicateFilterSet;
- (id)duplicateFilterSetInUidForm;
- (Class)editorClass;
- (int)elementKind;
- (void)enableFilterSet:(BOOL)arg1;
- (void)enumerateAllAnnotationsInModelWithHitBlock:(CDUnknownBlockType)arg1;
- (struct TSUCellRect)expandCellRangeToCoverMergedCells:(struct TSUCellRect)arg1;
- (id)expandCellRegionToCoverMergedCells:(id)arg1;
- (id)fillForColumn:(unsigned char)arg1;
- (id)fillForRow:(unsigned short)arg1;
- (void)filterSetUpdated;
- (BOOL)findChartableRangesFromTableRange:(struct TSCERangeCoordinate)arg1 getBodyRange:(out struct TSCERangeCoordinate *)arg2 headerColumnRange:(out struct TSCERangeCoordinate *)arg3 headerRowRange:(out struct TSCERangeCoordinate *)arg4;
- (float)floatValueForProperty:(int)arg1;
- (id)fontColorAtCellID:(struct TSUCellCoord)arg1 optionalCell:(id)arg2;
- (struct TSCERangeCoordinate)footerRangeCoordinate;
- (struct TSUCellRect)footerRowRange;
- (id)formatAtCellID:(struct TSUCellCoord)arg1 formatIsImplicitOut:(BOOL *)arg2;
- (struct TSCEFormula *)formulaAtCellID:(struct TSUCellCoord)arg1;
- (UUIDData_5fbc143e)formulaOwnerUID;
- (id)geometryForRTLTableWithGeometry:(id)arg1;
- (int)getCell:(id)arg1 atCellID:(struct TSUCellCoord)arg2;
- (int)getCell:(id)arg1 atCellID:(struct TSUCellCoord)arg2 holdingReadLockWithAccessController:(id)arg3;
- (int)getCell:(id)arg1 atCellID:(struct TSUCellCoord)arg2 suppressCellBorder:(BOOL)arg3;
- (int)getDefaultCell:(out id)arg1 forCellID:(struct TSUCellCoord)arg2;
- (int)getDefaultCell:(id)arg1 forTableArea:(unsigned long long)arg2;
- (void)getTextPropertiesWithCell:(id)arg1 cellID:(struct TSUCellCoord)arg2 wraps:(BOOL *)arg3 alignment:(int *)arg4 verticalAlignment:(int *)arg5 padding:(id *)arg6;
- (int)getValue:(out struct TSCEValue *)arg1 atCellID:(struct TSUCellCoord)arg2 fetchRichTextAttributesIfPlainText:(BOOL)arg3;
- (void)getValue:(out struct TSCEValue *)arg1 fromIteratorData:(id)arg2 fetchRichTextAttributesIfPlainText:(BOOL)arg3;
- (id)grabAllMergeRanges;
- (BOOL)hasActiveFilters;
- (BOOL)hasCellID:(struct TSUCellCoord)arg1;
- (BOOL)hasCommentAtCellID:(struct TSUCellCoord)arg1;
- (BOOL)hasFilterRulesInColumns:(id)arg1;
- (BOOL)hasFormulaAtCellID:(struct TSUCellCoord)arg1;
- (BOOL)hasFormulas;
- (BOOL)hasHiddenColumnAtIndex:(unsigned char)arg1;
- (BOOL)hasHiddenColumnAtIndex:(unsigned char)arg1 forAction:(unsigned char)arg2;
- (BOOL)hasHiddenRowAtIndex:(unsigned short)arg1;
- (BOOL)hasHiddenRowAtIndex:(unsigned short)arg1 forAction:(unsigned char)arg2;
- (BOOL)hasMergeFragmentAtCellID:(struct TSUCellCoord)arg1;
- (BOOL)hasMergeRanges;
- (BOOL)hasMergeRangesIntersectingCellRegion:(id)arg1;
- (BOOL)hasNamesInHeaders;
- (struct TSUCellRect)headerColumnRange;
- (struct TSUCellRect)headerRowRange;
- (double)heightOfRowAtIndex:(unsigned short)arg1 isDefault:(out BOOL *)arg2;
- (BOOL)hideColumnAtIndex:(unsigned char)arg1 forAction:(unsigned char)arg2;
- (BOOL)hideRowAtIndex:(unsigned short)arg1 forAction:(unsigned char)arg2;
- (unsigned char)hidingActionForColumnAtIndex:(unsigned char)arg1;
- (unsigned char)hidingActionForRowAtIndex:(unsigned short)arg1;
- (unsigned short)indexForUID:(const UUIDData_5fbc143e *)arg1 isRows:(BOOL)arg2;
- (unsigned char)indexOfVisibleColumnAfterAndIncludingColumnAtIndex:(unsigned char)arg1;
- (unsigned char)indexOfVisibleColumnAfterColumnAtIndex:(unsigned char)arg1;
- (unsigned char)indexOfVisibleColumnBeforeAndIncludingColumnAtIndex:(unsigned char)arg1;
- (unsigned char)indexOfVisibleColumnBeforeColumnAtIndex:(unsigned char)arg1;
- (unsigned short)indexOfVisibleRowAfterAndIncludingRowAtIndex:(unsigned short)arg1;
- (unsigned short)indexOfVisibleRowAfterRowAtIndex:(unsigned short)arg1;
- (unsigned short)indexOfVisibleRowBeforeAndIncludingRowAtIndex:(unsigned short)arg1;
- (unsigned short)indexOfVisibleRowBeforeRowAtIndex:(unsigned short)arg1;
- (id)indexesForUIDs:(const vector_4dc5f307 *)arg1 isRows:(BOOL)arg2;
- (id)indexesOfHiddenColumnsInCellRange:(struct TSUCellRect)arg1;
- (id)indexesOfHiddenRowsInCellRange:(struct TSUCellRect)arg1;
- (id)indexesOfUserHiddenRowsInCellRange:(struct TSUCellRect)arg1;
- (id)indexesOfUserVisibleRowsInCellRange:(struct TSUCellRect)arg1;
- (id)indexesOfVisibleColumnsInCellRange:(struct TSUCellRect)arg1;
- (id)indexesOfVisibleColumnsInColumnRange:(id)arg1;
- (id)indexesOfVisibleRowsInCellRange:(struct TSUCellRect)arg1;
- (id)indexesOfVisibleRowsInRowRange:(id)arg1;
- (id)infoForSelectionPath:(id)arg1;
- (id)initForTestingWithContext:(id)arg1 rows:(unsigned short)arg2 columns:(unsigned char)arg3;
- (id)initWithContext:(id)arg1 fromSourceInfo:(id)arg2 cellRegion:(id)arg3 tableModel:(id)arg4 waitForCalcEngine:(BOOL)arg5;
- (id)initWithContext:(id)arg1 fromSourceInfo:(id)arg2 cellRegion:(id)arg3 waitForCalcEngine:(BOOL)arg4;
- (id)initWithContext:(id)arg1 geometry:(id)arg2;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 rows:(unsigned short)arg3 columns:(unsigned short)arg4;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 rows:(unsigned short)arg3 columns:(unsigned short)arg4 stylePreset:(id)arg5;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 rows:(unsigned short)arg3 columns:(unsigned short)arg4 stylePreset:(id)arg5 styles:(id)arg6;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 rows:(unsigned short)arg3 columns:(unsigned short)arg4 styles:(id)arg5;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 styles:(id)arg3;
- (id)initWithContext:(id)arg1 otherTableInfo:(id)arg2;
- (void)insertColumnsAtIndex:(unsigned char)arg1 count:(unsigned short)arg2 addBefore:(BOOL)arg3;
- (int)insertColumnsInRange:(struct _NSRange)arg1 uids:(const vector_4dc5f307 *)arg2 metadata:(id)arg3;
- (void)insertRowsAtIndex:(unsigned short)arg1 count:(unsigned short)arg2 addBefore:(BOOL)arg3;
- (int)insertRowsInRange:(struct _NSRange)arg1 uids:(const vector_4dc5f307 *)arg2 metadata:(id)arg3;
- (int)insertRowsInRange:(struct _NSRange)arg1 uids:(const vector_4dc5f307 *)arg2 metadata:(id)arg3 unsetFilterHidingAction:(BOOL)arg4;
- (void)invalidateForCalculationEngine:(id)arg1;
- (BOOL)isCellRangeHidden:(struct TSUCellRect)arg1;
- (BOOL)isEquivalentForCrossDocumentPasteMasterComparison:(id)arg1;
- (BOOL)isEquivalentForCrossDocumentPasteMasterComparison:(id)arg1 styleComparisonBlock:(CDUnknownBlockType)arg2;
- (BOOL)isRegisteredWithCalculationEngine:(id)arg1;
- (BOOL)isSafeToConvertToAttributedString;
- (BOOL)isSafeToConvertToImage;
- (BOOL)isSafeToConvertToImageForImagePaste;
- (BOOL)isSafeToConvertToText;
- (BOOL)isSelectable;
- (BOOL)isSingleCellOrMergeRange:(struct TSUCellRect)arg1;
- (void)iterateCellsInRange:(struct TSUCellRect)arg1 flags:(unsigned long long)arg2 searchFlags:(unsigned long long)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)iterateCellsInRegion:(id)arg1 flags:(unsigned long long)arg2 searchFlags:(unsigned long long)arg3 clampingRange:(struct TSUCellRect)arg4 usingBlock:(CDUnknownBlockType)arg5;
- (void)iterateCellsInRegion:(id)arg1 flags:(unsigned long long)arg2 searchFlags:(unsigned long long)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)iterateCellsWithFlags:(unsigned long long)arg1 searchFlags:(unsigned long long)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (Class)layoutClass;
- (void)loadFromArchive:(const struct TableInfoArchive *)arg1 unarchiver:(id)arg2;
- (void)loadFromUnarchiver:(id)arg1;
- (struct TSCETableReference)makeReference:(struct TSUCellCoord)arg1 bottomRight:(struct TSUCellCoord)arg2;
- (void)mapTableStylesToStylesheet:(id)arg1 withMapper:(id)arg2;
- (id)mappingForSortWithRules:(id)arg1 inRows:(id)arg2;
- (double)masterLayoutEffectiveTableNameHeight;
- (int)maxStrokeOrder;
- (long long)mediaCompatibilityTypeForData:(id)arg1 associatedHint:(id)arg2;
- (BOOL)mergeCellRange:(struct TSUCellRect)arg1;
- (UUIDData_5fbc143e)mergeOwnerUID;
- (struct TSUCellRect)mergeRangeAtCellID:(struct TSUCellCoord)arg1;
- (id)mergeRangesForCellRange:(struct TSUCellRect)arg1;
- (id)mergeRangesForCellRegion:(id)arg1;
- (BOOL)mergeRangesPartiallyIntersectingCellRange:(struct TSUCellRect)arg1;
- (id)mergedContainedStorages;
- (id)mergedGridIndicesForDirection:(long long)arg1;
- (id)mergesIntersectingCellRegion:(id)arg1;
- (id)mergesIntersectingRange:(struct TSUCellRect)arg1;
- (struct TSUCellRect)minPopulatedCellRange;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1 context:(id)arg2;
- (void)moveColumnRange:(struct _NSRange)arg1 toColumnIndex:(unsigned char)arg2;
- (void)moveRowRange:(struct _NSRange)arg1 toRowIndex:(unsigned short)arg2;
- (id)mutableColumnIndexesForUIDs:(const vector_4dc5f307 *)arg1;
- (id)mutableIndexesForUIDSet:(id)arg1 isRows:(BOOL)arg2;
- (id)mutableIndexesForUIDSet:(id)arg1 isRows:(BOOL)arg2 notFoundUIDs:(id)arg3;
- (id)mutableRowIndexesForUIDs:(const vector_4dc5f307 *)arg1;
- (void)mutateFormulaFiltersUsingBlock:(CDUnknownBlockType)arg1;
- (BOOL)needsFilterFormulaRewriteForImport;
- (id)newCell;
- (void)notifyAboutStructuredTextImportState;
- (void)notifyTableOfNewResults;
- (unsigned int)numberOfCells;
- (unsigned long long)numberOfComments;
- (unsigned short)numberOfHiddenColumnsInCellRange:(struct TSUCellRect)arg1;
- (unsigned short)numberOfHiddenRowsInCellRange:(struct TSUCellRect)arg1;
- (unsigned int)numberOfPopulatedCells;
- (unsigned short)numberOfUserHiddenRowsInCellRange:(struct TSUCellRect)arg1;
- (id)objectForProperty:(int)arg1;
- (id)objectToArchiveInDependencyTracker;
- (void)p_bakeMixedCellStrokesIntoTable:(id)arg1 outgoingTable:(id)arg2 incomingTable:(id)arg3 fraction:(double)arg4;
- (void)p_gatherReorganizeValuesForColumn:(unsigned char)arg1 inRows:(id)arg2 outValues:(struct TSTCellReorganizeValue *)arg3;
- (id)p_imageFillAtCellID:(struct TSUCellCoord)arg1;
- (void)p_initializeDefaultHeight:(double)arg1 andWidth:(double)arg2;
- (void)p_iterateCellsAndTerminateWithIterator:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)p_masterLayoutCreateIfNeeded:(BOOL)arg1;
- (id)p_negativeImageFill;
- (void)p_performCommentStorageDOLC:(id)arg1;
- (id)p_popupItemsForStrings:(id)arg1;
- (id)p_positiveImageFill;
- (id)p_propertyMapForReplacingImageFill:(id)arg1 atCellID:(struct TSUCellCoord)arg2;
- (void)p_setCell:(id)arg1 atColumn:(unsigned char)arg2 andRow:(unsigned short)arg3;
- (void)p_setFillOnCell:(id)arg1 positive:(BOOL)arg2;
- (void)p_setFormula:(struct TSCEFormula)arg1 atCellID:(struct TSUCellCoord)arg2;
- (void)p_setFormulaWithSymbolCellCoord:(struct TSUCellCoord)arg1 andAttributeCellCoord:(struct TSUCellCoord)arg2 atCellID:(struct TSUCellCoord)arg3;
- (void)p_setFormulaWithSymbolString:(id)arg1 atCellID:(struct TSUCellCoord)arg2;
- (void)p_setPopupMenuOnCell:(id)arg1 withItems:(id)arg2 andSelectedIndex:(double)arg3;
- (void)p_setupTableModelforStockPrototype;
- (void)p_setupTableModelforStockSwatch;
- (id)p_stockAttributesForDisplayArray;
- (int)parseNumberFromTableName:(id)arg1;
- (void)performReadForOneOffFormulaEvaluation:(id)arg1 forCellID:(struct TSUCellCoord *)arg2;
- (void)postCommentNotificationForStorage:(id)arg1 atCellID:(struct TSUCellCoord)arg2 notificationKey:(id)arg3;
- (struct TSCERangeCoordinate)preMergeRangeFromUidTract:(id)arg1;
- (void)prepareForPasteWithSourceOffset:(CDStruct_945081a1)arg1;
- (id)presetKind;
- (BOOL)prohibitsModificationToChildren;
- (id)prunedCellUIDListFromCellUIDList:(id)arg1 allowMergeFragment:(BOOL)arg2 addingPrunedIndicesToIndexSet:(id)arg3;
- (vector_4dc5f307)prunedColumnUIDsFromColumnUIDs:(const vector_4dc5f307 *)arg1;
- (vector_4dc5f307)prunedRowUIDsFromRowUIDs:(const vector_4dc5f307 *)arg1;
- (struct TSUCellRect)range;
- (void)rearrangeWithMapping:(id)arg1;
- (void)reassignPasteboardCustomFormatKeys;
- (CDStruct_2a4d9400)recalculateForCalculationEngine:(id)arg1 formulaID:(CDStruct_ed6d627d)arg2 isInCycle:(BOOL)arg3 hasCalculatedPrecedents:(BOOL)arg4;
- (struct TSCERangeRef)referenceToHiddenStateFromColumn:(unsigned char)arg1 toColumn:(unsigned char)arg2;
- (struct TSCERangeRef)referenceToHiddenStateFromRow:(unsigned short)arg1 toRow:(unsigned short)arg2;
- (id)referencedStyles;
- (id)regionForValueOrCommentCellsInRange:(struct TSUCellRect)arg1;
- (void)registerAllFormulasWithCalculationEngine:(id)arg1;
- (BOOL)registerLast;
- (int)registerWithCalculationEngine:(id)arg1;
- (void)registerWithCalculationEngineForDocumentLoad:(id)arg1;
- (void)releaseMasterLayout;
- (void)remapTableUIDsInFormulasWithMap:(const UUIDMap_b66c2694 *)arg1 calcEngine:(id)arg2 bakeForBadRefs:(BOOL)arg3;
- (void)removeColumnsAtIndex:(unsigned char)arg1 count:(unsigned short)arg2;
- (void)removeColumnsAtIndexes:(id)arg1;
- (int)removeCommentStorageAtCellID:(struct TSUCellCoord)arg1;
- (void)removeRowsAtIndex:(unsigned short)arg1 count:(unsigned short)arg2;
- (void)removeRowsAtIndexes:(id)arg1;
- (Class)repClass;
- (void)replaceReferencedStylesUsingBlock:(CDUnknownBlockType)arg1;
- (BOOL)requiresStagesBuildingInReverse;
- (void)resetAllFormulaDependenciesForCell:(struct TSUCellCoord)arg1;
- (void)resetDependenciesForCell:(struct TSUCellCoord)arg1;
- (void)resetSortRuleReferenceTrackerForInsert;
- (void)resetStyles:(id)arg1;
- (struct TSCERangeCoordinate)resolverExpandCellRangeToCoverMergedCells:(struct TSCERangeCoordinate)arg1;
- (BOOL)resolverIsATable;
- (UUIDData_5fbc143e)resolverUID;
- (void)rewriteForCalculationEngine:(id)arg1 formulaID:(CDStruct_ed6d627d)arg2 rewriteSpec:(id)arg3;
- (unsigned short)rowIndexForRowUID:(const UUIDData_5fbc143e *)arg1;
- (id)rowIndexesForUIDs:(const vector_4dc5f307 *)arg1;
- (id)rowNameForCellID:(struct TSUCellCoord)arg1 cellRangeContainingName:(struct TSUCellRect *)arg2 restrictToBodyRange:(BOOL)arg3;
- (UUIDData_5fbc143e)rowUIDForRowIndex:(unsigned short)arg1;
- (vector_4dc5f307)rowUIDs;
- (vector_4dc5f307)rowUIDsForRowIndexes:(id)arg1;
- (vector_4dc5f307)rowUIDsForRowRange:(struct _NSRange)arg1;
- (void)saveToArchive:(struct TableInfoArchive *)arg1 archiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)scaleInfoGeometry:(struct CGSize)arg1;
- (id)searchForAnnotationsWithHitBlock:(CDUnknownBlockType)arg1;
- (int)setCell:(id)arg1 atCellID:(struct TSUCellCoord)arg2;
- (int)setCell:(id)arg1 atCellID:(struct TSUCellCoord)arg2 clearWarnings:(BOOL)arg3;
- (int)setCell:(id)arg1 atCellID:(struct TSUCellCoord)arg2 ignoreFormula:(BOOL)arg3 clearImportWarnings:(BOOL)arg4 calculationEngine:(id)arg5;
- (int)setCellStyle:(id)arg1 atCellID:(struct TSUCellCoord)arg2;
- (int)setCellStyle:(id)arg1 ofColumnAtIndex:(unsigned char)arg2;
- (int)setCellStyle:(id)arg1 ofRowAtIndex:(unsigned short)arg2;
- (int)setCellsWithCellMap:(id)arg1 calculationEngine:(id)arg2;
- (int)setCellsWithCellMap:(id)arg1 ignoreFormulas:(BOOL)arg2 skipDirtyingNonFormulaCells:(BOOL)arg3 calculationEngine:(id)arg4;
- (int)setCommentStorage:(id)arg1 atCellID:(struct TSUCellCoord)arg2;
- (void)setDrawableIsBeingCopied:(BOOL)arg1;
- (void)setFilterSetType:(int)arg1;
- (void)setFormulaOwnerUIDsWithMap:(id)arg1 shouldStealReferences:(BOOL)arg2;
- (void)setHeight:(double)arg1 ofRowAtIndex:(unsigned short)arg2;
- (void)setInsertionCenterPosition:(struct CGPoint)arg1;
- (void)setNeedsFilterFormulaRewriteForImport:(BOOL)arg1;
- (void)setPrimitiveGeometry:(id)arg1;
- (void)setStroke:(id)arg1 forBottomOfRow:(unsigned short)arg2 order:(int)arg3;
- (void)setStroke:(id)arg1 forBottomOfRow:(unsigned short)arg2 order:(int)arg3 columnRange:(struct TSTSimpleRange)arg4;
- (void)setStroke:(id)arg1 forLeftOfColumn:(unsigned char)arg2 order:(int)arg3;
- (void)setStroke:(id)arg1 forLeftOfColumn:(unsigned char)arg2 order:(int)arg3 rowRange:(struct TSTSimpleRange)arg4;
- (void)setStroke:(id)arg1 forRightOfColumn:(unsigned char)arg2 order:(int)arg3;
- (void)setStroke:(id)arg1 forRightOfColumn:(unsigned char)arg2 order:(int)arg3 rowRange:(struct TSTSimpleRange)arg4;
- (void)setStroke:(id)arg1 forTopOfRow:(unsigned short)arg2 order:(int)arg3;
- (void)setStroke:(id)arg1 forTopOfRow:(unsigned short)arg2 order:(int)arg3 columnRange:(struct TSTSimpleRange)arg4;
- (void)setStylesheetForUpgradeToSingleStylesheet:(id)arg1;
- (int)setTextStyle:(id)arg1 atCellID:(struct TSUCellCoord)arg2;
- (int)setTextStyle:(id)arg1 ofColumnAtIndex:(unsigned char)arg2;
- (int)setTextStyle:(id)arg1 ofRowAtIndex:(unsigned short)arg2;
- (void)setWidth:(double)arg1 ofColumnAtIndex:(unsigned char)arg2;
- (void)setupDefaultCells;
- (void)setupTableModelForPrototypeIndex:(long long)arg1 forTableInsertOnly:(BOOL)arg2;
- (id)sheetName;
- (void)shiftGeometryToIncludeTableNameHeight;
- (BOOL)shouldCancelScrollingToSelectionPath:(id)arg1 forChanges:(id)arg2;
- (BOOL)showColumnAtIndex:(unsigned char)arg1 forAction:(unsigned char)arg2;
- (BOOL)showRowAtIndex:(unsigned short)arg1 forAction:(unsigned char)arg2;
- (id)stringAtCellID:(struct TSUCellCoord)arg1 optionalCell:(id)arg2;
- (id)strokeExporterReturningDefaultStrokes:(BOOL)arg1;
- (id)strokeLayerForBottomOfRow:(unsigned short)arg1;
- (id)strokeLayerForLeftSideOfColumn:(unsigned char)arg1;
- (id)strokeLayerForRightSideOfColumn:(unsigned char)arg1;
- (id)strokeLayerForTopOfRow:(unsigned short)arg1;
- (BOOL)suppliesFinalTextures;
- (BOOL)supportsAttachedComments;
- (BOOL)supportsHyperlinks;
- (void)swapRowAtIndex:(unsigned short)arg1 withRowAtIndex:(unsigned short)arg2;
- (unsigned long long)tableAreaForCellID:(struct TSUCellCoord)arg1;
- (unsigned long long)tableAreaForColumn:(unsigned char)arg1;
- (unsigned long long)tableAreaForRow:(unsigned short)arg1;
- (id)tableAreasForCellRange:(struct TSUCellRect)arg1;
- (id)tableInfo;
- (Class)tableModelClass;
- (struct TSCERangeCoordinate)tableRangeCoordinate;
- (struct CGSize)targetSizeForImageData:(id)arg1 associatedHint:(id)arg2;
- (BOOL)textStyle:(id)arg1 isEqualToDefaultTextStyleForCellID:(struct TSUCellCoord)arg2;
- (id)textStyleAtCellID:(struct TSUCellCoord)arg1 isDefault:(out BOOL *)arg2;
- (id)textStyleForCellWithEmptyStyleAtCellID:(struct TSUCellCoord)arg1 isDefault:(out BOOL *)arg2;
- (id)textStyleOfColumnAtIndex:(unsigned char)arg1 isDefault:(out BOOL *)arg2;
- (id)textStyleOfRowAtIndex:(unsigned short)arg1 isDefault:(out BOOL *)arg2;
- (unsigned long long)textureDeliveryStyleFromDeliveryString:(id)arg1;
- (id)textureDeliveryStylesLocalized:(BOOL)arg1 animationFilter:(id)arg2;
- (struct TSUCellRect)topCornerRange;
- (BOOL)unmergeCellRange:(struct TSUCellRect)arg1;
- (void)unregisterFromCalculationEngine:(id)arg1;
- (int)updateCalculationEngineForFormula:(struct TSCEFormula *)arg1 inCellID:(struct TSUCellCoord)arg2;
- (void)updateTableRowColumnStylesWithBlock:(CDUnknownBlockType)arg1;
- (void)upgradeDuringDocumentUpgradeIfNeeded:(unsigned long long)arg1;
- (void)upgradeFormatsForCustomFormatListU2_0;
- (void)upgradeFromPreUFF;
- (BOOL)useBandedFill;
- (void)validate;
- (double)widthOfColumnAtIndex:(unsigned char)arg1 isDefault:(out BOOL *)arg2;
- (void)willClose;
- (void)willCopyWithOtherDrawables:(id)arg1;
- (BOOL)writeCellIDsInCellUIDList:(id)arg1 toVector:(vector_38b190b0 *)arg2;
- (void)writeResultsForCalculationEngine:(id)arg1;
- (int)writingDirectionForCellwithTableDefault:(id)arg1;

@end

