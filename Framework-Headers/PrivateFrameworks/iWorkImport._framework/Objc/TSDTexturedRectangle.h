//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <iWorkImport/NSCopying-Protocol.h>

@class CALayer, NSMapTable, NSOperation, NSString, TSDBitmapRenderingQualityInfo, TSDTextureSet, TSUBezierPath, TSUColor;
@protocol MTLTexture, TSDLiveTexturedRectangleSource;

__attribute__((visibility("hidden")))
@interface TSDTexturedRectangle : NSObject <NSCopying>
{
    struct CGRect _originalFrame;
    CDUnknownBlockType _renderBlock;
    BOOL _singleTextureContainsMipmaps;
    BOOL _didInitFromLayer;
    BOOL _shouldCleanUpSingleTexture;
    BOOL _didInitFromGPUTexture;
    NSMapTable *_eventIndexToViewLayerMap;
    struct CGColorSpace *_colorSpace;
    TSUBezierPath *_shapePath;
    TSUBezierPath *_bakedShapePath;
    BOOL _isIncomingContent;
    BOOL _isVerticalText;
    BOOL _isFlattenedRepresentation;
    BOOL _shouldGenerateMipmap;
    unsigned int _singleTextureName;
    struct CGImage *_bakedImage;
    TSDBitmapRenderingQualityInfo *_bitmapRenderingQualityInfo;
    CALayer *_layer;
    id<MTLTexture> _metalTexture;
    TSDTextureSet *_parent;
    NSOperation *_renderingOperation;
    NSOperation *_renderingOperationOpenGL;
    NSOperation *_renderingOperationMetal;
    struct CGImage *_sourceImage;
    NSString *_text;
    double _textBaseline;
    TSUColor *_textColor;
    double _textXHeight;
    long long _textureType;
    double _textureOpacity;
    id<TSDLiveTexturedRectangleSource> _liveTexturedRectangleSource;
    struct CGPoint _offset;
    struct CGPoint _originalPosition;
    struct CGSize _singleTextureSize;
    struct CGSize _size;
    struct _NSRange _textRange;
    struct CGRect _contentRect;
}

@property struct CGImage *bakedImage; // @synthesize bakedImage=_bakedImage;
@property (weak, nonatomic) TSDBitmapRenderingQualityInfo *bitmapRenderingQualityInfo; // @synthesize bitmapRenderingQualityInfo=_bitmapRenderingQualityInfo;
@property (nonatomic) struct CGColorSpace *colorSpace; // @synthesize colorSpace=_colorSpace;
@property (nonatomic) struct CGRect contentRect; // @synthesize contentRect=_contentRect;
@property (readonly, nonatomic) struct CGRect frame;
@property (readonly, nonatomic) struct CGRect frameOnCanvas;
@property (readonly, nonatomic) struct CGImage *image;
@property (readonly, nonatomic) BOOL isBackgroundTexture;
@property (readonly, nonatomic) BOOL isBaked;
@property (nonatomic) BOOL isFlattenedRepresentation; // @synthesize isFlattenedRepresentation=_isFlattenedRepresentation;
@property (readonly, nonatomic) BOOL isImageSource;
@property (nonatomic) BOOL isIncomingContent; // @synthesize isIncomingContent=_isIncomingContent;
@property (readonly, nonatomic) BOOL isRenderable;
@property (readonly, nonatomic) BOOL isRendered;
@property (readonly, nonatomic) BOOL isSingleTextureSetup;
@property (readonly, nonatomic) BOOL isValid;
@property (nonatomic) BOOL isVerticalText; // @synthesize isVerticalText=_isVerticalText;
@property (readonly, nonatomic) CALayer *layer; // @synthesize layer=_layer;
@property (weak) id<TSDLiveTexturedRectangleSource> liveTexturedRectangleSource; // @synthesize liveTexturedRectangleSource=_liveTexturedRectangleSource;
@property (readonly, nonatomic) id<MTLTexture> metalTexture; // @synthesize metalTexture=_metalTexture;
@property (nonatomic) struct CGPoint offset; // @synthesize offset=_offset;
@property (nonatomic) struct CGPoint originalPosition; // @synthesize originalPosition=_originalPosition;
@property (weak, nonatomic) TSDTextureSet *parent; // @synthesize parent=_parent;
@property (readonly, nonatomic) CALayer *parentLayer;
@property (weak) NSOperation *renderingOperation; // @synthesize renderingOperation=_renderingOperation;
@property (weak) NSOperation *renderingOperationMetal; // @synthesize renderingOperationMetal=_renderingOperationMetal;
@property (weak) NSOperation *renderingOperationOpenGL; // @synthesize renderingOperationOpenGL=_renderingOperationOpenGL;
@property (copy, nonatomic) TSUBezierPath *shapePath; // @synthesize shapePath=_shapePath;
@property (nonatomic) BOOL shouldGenerateMipmap; // @synthesize shouldGenerateMipmap=_shouldGenerateMipmap;
@property (readonly, nonatomic) unsigned int singleTextureName; // @synthesize singleTextureName=_singleTextureName;
@property (readonly, nonatomic) double singleTextureOpacity;
@property (readonly, nonatomic) struct CGSize singleTextureSize; // @synthesize singleTextureSize=_singleTextureSize;
@property (readonly, nonatomic) unsigned int singleTextureTarget;
@property (nonatomic) struct CGSize size; // @synthesize size=_size;
@property struct CGImage *sourceImage; // @synthesize sourceImage=_sourceImage;
@property (copy, nonatomic) NSString *text; // @synthesize text=_text;
@property (nonatomic) double textBaseline; // @synthesize textBaseline=_textBaseline;
@property (copy, nonatomic) TSUColor *textColor; // @synthesize textColor=_textColor;
@property (nonatomic) struct _NSRange textRange; // @synthesize textRange=_textRange;
@property (nonatomic) double textXHeight; // @synthesize textXHeight=_textXHeight;
@property (nonatomic) double textureOpacity; // @synthesize textureOpacity=_textureOpacity;
@property (nonatomic) long long textureType; // @synthesize textureType=_textureType;

+ (struct CGRect)boundingRectForTextures:(id)arg1;
+ (struct CGRect)boundingRectOnCanvasForTextures:(id)arg1;
+ (id)setupMetalShaderForContext:(id)arg1;
- (void).cxx_destruct;
- (void)adjustAnchorRelativeToCenterOfRotation:(struct CGPoint)arg1 atEventIndex:(unsigned long long)arg2;
- (void)bakeLayerWithAngle:(double)arg1 scale:(double)arg2 layer:(id)arg3;
- (struct CGRect)convertToCanvasCoordinates:(struct CGRect)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)description;
- (void)drawFrameAtLayerTime:(double)arg1 context:(id)arg2;
- (void)evictRenderedResources;
- (id)init;
- (id)initWithCGImage:(struct CGImage *)arg1;
- (id)initWithLayer:(id)arg1;
- (id)initWithLayer:(id)arg1 forGLTexture:(id)arg2;
- (id)initWithLayer:(id)arg1 forMetalTexture:(id)arg2;
- (id)initWithMetalTexture:(id)arg1 frame:(struct CGRect)arg2;
- (id)initWithSize:(struct CGSize)arg1 offset:(struct CGPoint)arg2 renderBlock:(CDUnknownBlockType)arg3;
- (id)initWithTextureInfo:(id)arg1 frame:(struct CGRect)arg2;
- (BOOL)isMetalTextureSetup;
- (id)p_allocateMetalTextureForDevice:(id)arg1;
- (void)p_bakeLayerWithAngle:(double)arg1 scale:(double)arg2 layer:(id)arg3;
- (struct CGColorSpace *)p_colorSpace;
- (void)p_initializeMap;
- (struct CGImage *)p_newImageAndBufferWithAngle:(double)arg1 scale:(double)arg2 offset:(struct CGPoint)arg3 transform:(struct CGAffineTransform *)arg4;
- (void)p_renderIntoContext:(struct CGContext *)arg1 viewLayer:(id)arg2 shouldApplyAlpha:(BOOL)arg3 shouldIgnoreLayerVisibility:(BOOL)arg4 shouldClipToBounds:(BOOL)arg5;
- (void)p_setupSingleTextureAndGenerateMipMaps:(BOOL)arg1 withContext:(id)arg2;
- (char *)p_setupTextureDataWithSize:(struct CGSize)arg1 isBGRA:(BOOL)arg2;
- (void)p_updateFrame;
- (void)releaseMetalTexture;
- (void)releaseSingleTexture;
- (void)renderIntoContext:(struct CGContext *)arg1 eventIndex:(unsigned long long)arg2 shouldApplyAlpha:(BOOL)arg3 shouldClipToBounds:(BOOL)arg4;
- (void)renderIntoContext:(struct CGContext *)arg1 shouldApplyAlpha:(BOOL)arg2;
- (void)renderIntoContext:(struct CGContext *)arg1 shouldApplyAlpha:(BOOL)arg2 shouldIgnoreLayerVisibility:(BOOL)arg3;
- (void)renderLayerContentsIfNeeded;
- (void)resetAnchorPointAtEventIndex:(unsigned long long)arg1;
- (void)resetToSourceImageAtEventIndex:(unsigned long long)arg1;
- (void)setupMetalTextureForDevice:(id)arg1;
- (void)setupSingleTexture;
- (void)setupSingleTextureWithContext:(id)arg1;
- (void)teardown;
- (id)viewLayerAtEventIndex:(unsigned long long)arg1;
- (void)waitUntilAsyncRenderingIsCompleteShouldCancel:(BOOL)arg1;

@end

