//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/NSObject.h>

#import <iWorkImport/TSKMediaPlayerController-Protocol.h>

@class CADisplayLink, NSArray, NSMutableSet, NSString;
@protocol TSKMediaPlayerControllerDelegate;

__attribute__((visibility("hidden")))
@interface TSKAnimatedGIFController : NSObject <TSKMediaPlayerController>
{
    id<TSKMediaPlayerControllerDelegate> mDelegate;
    struct CGImageSource *mSource;
    NSArray *mFrames;
    NSMutableSet *mLayers;
    BOOL mPlaying;
    double mLastDisplayUpdateTime;
    unsigned long long mDisplayLinkCounter;
    double mAbsoluteCurrentTime;
    float mRate;
    float mRateBeforeScrubbing;
    unsigned long long mScrubbingCount;
    double mStartTime;
    double mEndTime;
    float mVolume;
    long long mRepeatMode;
    CADisplayLink *mDisplayLink;
    BOOL fastReversing;
    BOOL fastForwarding;
}

@property (readonly, nonatomic) double absoluteCurrentTime;
@property (readonly, nonatomic) double absoluteDuration;
@property (readonly, nonatomic) BOOL canFastForward;
@property (readonly, nonatomic) BOOL canFastReverse;
@property (readonly, nonatomic) BOOL canPlay;
@property (readonly, nonatomic) double currentTime;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) id<TSKMediaPlayerControllerDelegate> delegate; // @synthesize delegate=mDelegate;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) double duration;
@property (nonatomic) double endTime; // @synthesize endTime=mEndTime;
@property (nonatomic, getter=isFastForwarding) BOOL fastForwarding; // @synthesize fastForwarding;
@property (nonatomic, getter=isFastReversing) BOOL fastReversing; // @synthesize fastReversing;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) struct CGImage *imageForCurrentTime;
@property (nonatomic) double lastDisplayUpdateTime; // @synthesize lastDisplayUpdateTime=mLastDisplayUpdateTime;
@property (nonatomic, getter=isPlaying) BOOL playing;
@property (nonatomic) float rate; // @synthesize rate=mRate;
@property (readonly, nonatomic) double remainingTime;
@property (nonatomic) long long repeatMode; // @synthesize repeatMode=mRepeatMode;
@property (readonly, nonatomic, getter=isScrubbing) BOOL scrubbing;
@property (nonatomic) double startTime; // @synthesize startTime=mStartTime;
@property (readonly) Class superclass;
@property (nonatomic) float volume; // @synthesize volume=mVolume;

- (void)addLayer:(id)arg1;
- (id)addPeriodicTimeObserverForInterval:(double)arg1 block:(CDUnknownBlockType)arg2;
- (void)beginScrubbing;
- (void)cancelPendingSeeks;
- (void)dealloc;
- (void)endScrubbing;
- (struct CGImage *)imageForTime:(double)arg1;
- (id)init;
- (id)initWithData:(id)arg1 delegate:(id)arg2;
- (id)initWithImageSource:(struct CGImageSource *)arg1 delegate:(id)arg2;
- (id)newLayer;
- (void)p_disableDisplayLink;
- (void)p_displayLinkDidTrigger:(id)arg1;
- (void)p_enableDisplayLink;
- (void)p_getAbsoluteMovieTime:(double *)arg1 shouldStopPlayback:(BOOL *)arg2 shouldReversePlayback:(BOOL *)arg3;
- (void)p_prepareFrameTimes;
- (void)p_setAbsoluteCurrentTime:(double)arg1;
- (void)p_updateDisplayLink;
- (void)p_updateLayers;
- (void)removeLayer:(id)arg1;
- (void)removePeriodicTimeObserver:(id)arg1;
- (void)scrubToTime:(double)arg1 withTolerance:(double)arg2;
- (void)scrubToTime:(double)arg1 withTolerance:(double)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)seekBackwardByOneFrame;
- (void)seekForwardByOneFrame;
- (void)seekToBeginning;
- (void)seekToEnd;
- (void)stopSynchronously;
- (void)teardown;

@end

