//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSMutableArray, SignpostSerializationFilterConfiguration, SignpostSupportObjectExtractor;

@interface SignpostSupportObjectSerializer : NSObject
{
    BOOL _redactPrivacySensitiveData;
    unsigned long long _maxBatchSize;
    unsigned long long _maxBytesSize;
    CDUnknownBlockType _serializedSignpostEventBlock;
    CDUnknownBlockType _serializedLogMessageBlock;
    SignpostSerializationFilterConfiguration *_filterConfiguration;
    NSMutableArray *_outstandingSignpostObjects;
    NSMutableArray *_outstandingLogMessage;
    SignpostSupportObjectExtractor *_extractor;
}

@property (strong, nonatomic) SignpostSupportObjectExtractor *extractor; // @synthesize extractor=_extractor;
@property (strong, nonatomic) SignpostSerializationFilterConfiguration *filterConfiguration; // @synthesize filterConfiguration=_filterConfiguration;
@property (nonatomic) unsigned long long maxBatchSize; // @synthesize maxBatchSize=_maxBatchSize;
@property (nonatomic) unsigned long long maxBytesSize; // @synthesize maxBytesSize=_maxBytesSize;
@property (strong, nonatomic) NSMutableArray *outstandingLogMessage; // @synthesize outstandingLogMessage=_outstandingLogMessage;
@property (strong, nonatomic) NSMutableArray *outstandingSignpostObjects; // @synthesize outstandingSignpostObjects=_outstandingSignpostObjects;
@property (nonatomic) BOOL redactPrivacySensitiveData; // @synthesize redactPrivacySensitiveData=_redactPrivacySensitiveData;
@property (copy, nonatomic) CDUnknownBlockType serializedLogMessageBlock; // @synthesize serializedLogMessageBlock=_serializedLogMessageBlock;
@property (copy, nonatomic) CDUnknownBlockType serializedSignpostEventBlock; // @synthesize serializedSignpostEventBlock=_serializedSignpostEventBlock;

- (void).cxx_destruct;
- (id)_dataArrayForSignpostSupportObjectArray:(id)arg1 errorOut:(id *)arg2;
- (BOOL)_hasProcessingBlocks;
- (id)_sanityCheckParameters;
- (id)init;
- (BOOL)serializeLogArchiveWithPath:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 errorOut:(id *)arg4;
- (BOOL)serializeNotificationsWithIntervalTimeoutInSeconds:(unsigned long long)arg1 errorOut:(id *)arg2;

@end

