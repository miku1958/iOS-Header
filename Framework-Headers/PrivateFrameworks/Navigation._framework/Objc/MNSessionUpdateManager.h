//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <Navigation/GEOTransitRouteUpdaterDelegate-Protocol.h>

@class GEOApplicationAuditToken, GEOComposedETARoute, GEODataRequestThrottlerToken, GEOETATrafficUpdateRequest, GEOLatLng, GEOTransitRouteUpdater, NSDate, NSError, NSMutableDictionary, NSString, NSTimer;
@protocol MNSessionUpdateManagerDelegate;

@interface MNSessionUpdateManager : NSObject <GEOTransitRouteUpdaterDelegate>
{
    id<MNSessionUpdateManagerDelegate> _delegate;
    NSString *_requestingAppIdentifier;
    GEOApplicationAuditToken *_auditToken;
    GEODataRequestThrottlerToken *_throttleToken;
    GEOLatLng *_tripOrigin;
    GEOTransitRouteUpdater *_transitUpdater;
    NSMutableDictionary *_subscribers;
    NSTimer *_etaTimer;
    double _etaRequestInterval;
    double _initialRequestDelay;
    double _opportunisticRequestTimeWindow;
    NSDate *_dateOfLastUpdate;
    BOOL _lastRequestWasServerDriven;
    unsigned long long _maxAlternateRoutesCount;
    BOOL _isPaused;
    GEOETATrafficUpdateRequest *_pendingETARequest;
    GEOComposedETARoute *_pendingETARoute;
    NSError *_retryError;
}

@property (strong, nonatomic) GEOApplicationAuditToken *auditToken; // @synthesize auditToken=_auditToken;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<MNSessionUpdateManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) unsigned long long maxAlternateRoutesCount; // @synthesize maxAlternateRoutesCount=_maxAlternateRoutesCount;
@property (copy, nonatomic) NSString *requestingAppIdentifier; // @synthesize requestingAppIdentifier=_requestingAppIdentifier;
@property (readonly) Class superclass;
@property (strong, nonatomic) GEODataRequestThrottlerToken *throttleToken; // @synthesize throttleToken=_throttleToken;
@property (strong, nonatomic) GEOLatLng *tripOrigin; // @synthesize tripOrigin=_tripOrigin;

- (void).cxx_destruct;
- (id)_baseETARequest;
- (void)_continueETARequests;
- (void)_handleETAResponse:(id)arg1 forRouteInfo:(id)arg2 etaRoute:(id)arg3 request:(id)arg4 error:(id)arg5;
- (BOOL)_hasAtLeastOneActiveSubscriber;
- (void)_scheduleETATimerWithInterval:(double)arg1;
- (void)_sendETARequest;
- (void)_sendETARequestWithRouteAttributes:(id)arg1;
- (void)_terminateETARequests;
- (id)_updateETARequest:(id)arg1 withRouteInfo:(id)arg2 andUserLocation:(id)arg3;
- (void)_updateRouteAttributesFor:(id)arg1 route:(id)arg2 updatedLocation:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)dealloc;
- (id)init;
- (void)pauseUpdateRequestsForSubscriber:(id)arg1;
- (void)requestUpdateForETAUPosition:(id)arg1;
- (void)restartUpdateTimer;
- (void)resumeUpdateRequestsForSubscriber:(id)arg1;
- (void)startUpdateRequestsForRoutes:(id)arg1 andNavigationType:(int)arg2;
- (void)stopUpdateRequests;
- (void)transitRouteUpdater:(id)arg1 didFailUpdateForRouteIDs:(id)arg2 withError:(id)arg3;
- (void)transitRouteUpdater:(id)arg1 didReceiveResponse:(id)arg2;
- (void)transitRouteUpdater:(id)arg1 didUpdateTransitRoutes:(id)arg2;
- (void)transitRouteUpdater:(id)arg1 willSendRequests:(id)arg2;
- (void)transitRouteUpdater:(id)arg1 willUpdateTransitForRouteIDs:(id)arg2;

@end

