//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <Home/CLLocationManagerDelegate-Protocol.h>

@class CLLocationManager, NAFuture, NSHashTable, NSMutableArray, NSString;

@interface HFLocationManagerDispatcher : NSObject <CLLocationManagerDelegate>
{
    BOOL _hasInitializedAuthorizationStatus;
    int _cachedAuthorizationStatus;
    CLLocationManager *_locationManager;
    NSHashTable *_locationObservers;
    NSMutableArray *_pendingAuthorizationStatusFutures;
}

@property (readonly, nonatomic) int authorizationStatus;
@property (readonly, nonatomic) NAFuture *authorizationStatusFuture;
@property (nonatomic) int cachedAuthorizationStatus; // @synthesize cachedAuthorizationStatus=_cachedAuthorizationStatus;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) BOOL hasInitializedAuthorizationStatus; // @synthesize hasInitializedAuthorizationStatus=_hasInitializedAuthorizationStatus;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) CLLocationManager *locationManager; // @synthesize locationManager=_locationManager;
@property (strong, nonatomic) NSHashTable *locationObservers; // @synthesize locationObservers=_locationObservers;
@property (readonly, nonatomic) NSMutableArray *pendingAuthorizationStatusFutures; // @synthesize pendingAuthorizationStatusFutures=_pendingAuthorizationStatusFutures;
@property (readonly) Class superclass;

+ (id)sharedDispatcher;
- (void).cxx_destruct;
- (void)_updateCachedAuthorizationStatus:(int)arg1;
- (void)addObserver:(id)arg1;
- (void)dispatchLocationManagerObserverMessage:(SEL)arg1 withBlock:(CDUnknownBlockType)arg2 sender:(id)arg3;
- (id)init;
- (void)locationManager:(id)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)locationManager:(id)arg1 didDetermineState:(long long)arg2 forRegion:(id)arg3;
- (void)locationManager:(id)arg1 didEnterRegion:(id)arg2;
- (void)locationManager:(id)arg1 didExitRegion:(id)arg2;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didFinishDeferredUpdatesWithError:(id)arg2;
- (void)locationManager:(id)arg1 didRangeBeacons:(id)arg2 inRegion:(id)arg3;
- (void)locationManager:(id)arg1 didStartMonitoringForRegion:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateHeading:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (void)locationManager:(id)arg1 monitoringDidFailForRegion:(id)arg2 withError:(id)arg3;
- (void)locationManager:(id)arg1 rangingBeaconsDidFailForRegion:(id)arg2 withError:(id)arg3;
- (void)locationManagerDidPauseLocationUpdates:(id)arg1;
- (void)locationManagerDidResumeLocationUpdates:(id)arg1;
- (void)removeObserver:(id)arg1;

@end

