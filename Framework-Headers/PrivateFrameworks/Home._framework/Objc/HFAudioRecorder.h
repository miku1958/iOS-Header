//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <Home/AVAudioRecorderDelegate-Protocol.h>

@class AVAudioRecorder, NSDateFormatter, NSNumber, NSString, NSURL;
@protocol HFAudioRecorderDelegate, OS_dispatch_queue, OS_dispatch_source;

@interface HFAudioRecorder : NSObject <AVAudioRecorderDelegate>
{
    BOOL _recording;
    BOOL _audioSessionIsActive;
    unsigned int _soundIDForRecordBegin;
    unsigned int _soundIDForRecordEnd;
    double _recordingDurationLimit;
    unsigned long long _recordingStopSource;
    NSNumber *_routeChangeReason;
    id<HFAudioRecorderDelegate> _audioRecorderDelegate;
    NSObject<OS_dispatch_queue> *_recordingQueue;
    NSObject<OS_dispatch_source> *_powerMeteringTimer;
    AVAudioRecorder *_audioRecorder;
    double _recordingStartTimeInterval;
    double _recordingStopTimeInterval;
    struct OpaqueAudioFileID *_recordingAudiofileID;
    NSURL *_recordingAudiofileURL;
    long long _totalPacketsCount;
    NSDateFormatter *_dateFormatter;
}

@property (strong, nonatomic) AVAudioRecorder *audioRecorder; // @synthesize audioRecorder=_audioRecorder;
@property (weak, nonatomic) id<HFAudioRecorderDelegate> audioRecorderDelegate; // @synthesize audioRecorderDelegate=_audioRecorderDelegate;
@property (nonatomic, getter=isAudioSessionActive) BOOL audioSessionIsActive; // @synthesize audioSessionIsActive=_audioSessionIsActive;
@property (strong, nonatomic) NSDateFormatter *dateFormatter; // @synthesize dateFormatter=_dateFormatter;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) NSObject<OS_dispatch_source> *powerMeteringTimer; // @synthesize powerMeteringTimer=_powerMeteringTimer;
@property (nonatomic, getter=isRecording) BOOL recording; // @synthesize recording=_recording;
@property (nonatomic) struct OpaqueAudioFileID *recordingAudiofileID; // @synthesize recordingAudiofileID=_recordingAudiofileID;
@property (strong, nonatomic) NSURL *recordingAudiofileURL; // @synthesize recordingAudiofileURL=_recordingAudiofileURL;
@property (nonatomic) double recordingDurationLimit; // @synthesize recordingDurationLimit=_recordingDurationLimit;
@property (strong, nonatomic) NSObject<OS_dispatch_queue> *recordingQueue; // @synthesize recordingQueue=_recordingQueue;
@property (nonatomic) double recordingStartTimeInterval; // @synthesize recordingStartTimeInterval=_recordingStartTimeInterval;
@property (nonatomic) unsigned long long recordingStopSource; // @synthesize recordingStopSource=_recordingStopSource;
@property (nonatomic) double recordingStopTimeInterval; // @synthesize recordingStopTimeInterval=_recordingStopTimeInterval;
@property (strong, nonatomic) NSNumber *routeChangeReason; // @synthesize routeChangeReason=_routeChangeReason;
@property (nonatomic) unsigned int soundIDForRecordBegin; // @synthesize soundIDForRecordBegin=_soundIDForRecordBegin;
@property (nonatomic) unsigned int soundIDForRecordEnd; // @synthesize soundIDForRecordEnd=_soundIDForRecordEnd;
@property (readonly) Class superclass;
@property (nonatomic) long long totalPacketsCount; // @synthesize totalPacketsCount=_totalPacketsCount;

- (void).cxx_destruct;

@end

