//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/NSTextStorage.h>

@class NSArray, NSMutableSet, NSParagraphStyle, NSSet, UIColor, UIFont;
@protocol WFSlotTemplateTextStorageDelegate;

@interface WFSlotTemplateTextStorage : NSTextStorage
{
    BOOL _enabled;
    UIFont *_font;
    UIFont *_unpopulatedFont;
    UIColor *_textColor;
    UIColor *_tintColor;
    NSParagraphStyle *_paragraphStyle;
    UIColor *_disabledSlotTitleColor;
    UIColor *_disabledSlotBackgroundColor;
    NSArray *_contents;
    long long _contentsTextAlignment;
    NSTextStorage *_textStorage;
    NSMutableSet *_mutableHighlightedSlots;
    NSMutableSet *_mutableSelectedSlots;
    NSMutableSet *_mutableTypingSlots;
    unsigned long long _editingLevel;
}

@property (copy, nonatomic) NSArray *contents; // @synthesize contents=_contents;
@property (readonly, nonatomic) long long contentsTextAlignment; // @synthesize contentsTextAlignment=_contentsTextAlignment;
@property (weak, nonatomic) id<WFSlotTemplateTextStorageDelegate> delegate; // @dynamic delegate;
@property (readonly, nonatomic) UIColor *disabledSlotBackgroundColor; // @synthesize disabledSlotBackgroundColor=_disabledSlotBackgroundColor;
@property (readonly, nonatomic) UIColor *disabledSlotTitleColor; // @synthesize disabledSlotTitleColor=_disabledSlotTitleColor;
@property (nonatomic) unsigned long long editingLevel; // @synthesize editingLevel=_editingLevel;
@property (nonatomic, getter=isEnabled) BOOL enabled; // @synthesize enabled=_enabled;
@property (strong, nonatomic) UIFont *font; // @synthesize font=_font;
@property (readonly, nonatomic) NSSet *highlightedSlots;
@property (readonly, nonatomic) NSMutableSet *mutableHighlightedSlots; // @synthesize mutableHighlightedSlots=_mutableHighlightedSlots;
@property (readonly, nonatomic) NSMutableSet *mutableSelectedSlots; // @synthesize mutableSelectedSlots=_mutableSelectedSlots;
@property (readonly, nonatomic) NSMutableSet *mutableTypingSlots; // @synthesize mutableTypingSlots=_mutableTypingSlots;
@property (copy, nonatomic) NSParagraphStyle *paragraphStyle; // @synthesize paragraphStyle=_paragraphStyle;
@property (readonly, nonatomic) NSSet *selectedSlots;
@property (strong, nonatomic) UIColor *textColor; // @synthesize textColor=_textColor;
@property (readonly, nonatomic) NSTextStorage *textStorage; // @synthesize textStorage=_textStorage;
@property (strong, nonatomic) UIColor *tintColor; // @synthesize tintColor=_tintColor;
@property (readonly, nonatomic) NSSet *typingSlots;
@property (strong, nonatomic) UIFont *unpopulatedFont; // @synthesize unpopulatedFont=_unpopulatedFont;

- (void).cxx_destruct;
- (void)_updateColorsForSlot:(id)arg1 inRange:(struct _NSRange)arg2;
- (id)attributedStringForSlot:(id)arg1;
- (id)attributesAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (void)beginEditing;
- (struct _NSRange)characterRangeForSlot:(id)arg1 includingInsideSpacingOpportunities:(BOOL)arg2;
- (void)didBeginTypingInSlot:(id)arg1;
- (void)didDeselectSlot:(id)arg1;
- (void)didEndTypingInSlot:(id)arg1;
- (void)didHighlightSlot:(id)arg1;
- (void)didSelectSlot:(id)arg1;
- (void)didUnhighlightSlot:(id)arg1;
- (void)endEditing;
- (void)enumerateContentInRange:(struct _NSRange)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)getColorsForSlot:(id)arg1 titleColor:(out id *)arg2 backgroundColor:(out id *)arg3;
- (id)init;
- (void)regenerateEntireAttributedString;
- (void)replaceAttribute:(id)arg1 value:(id)arg2 range:(struct _NSRange)arg3;
- (void)replaceAttributeInInanimateText:(id)arg1 value:(id)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (void)setAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (void)setDisabledSlotTitleColor:(id)arg1 backgroundColor:(id)arg2;
- (id)slotAtCharacterIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2 effectiveContentRange:(struct _NSRange *)arg3;
- (unsigned long long)slotSpacingOpportunityAtCharacterIndex:(unsigned long long)arg1;
- (id)string;
- (id)stringForSlotSpacingOpportunity:(unsigned long long)arg1;
- (void)updateColorsForAllSlots;
- (void)updateColorsForSlot:(id)arg1;

@end

