//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import <WorkflowEditor/CKComponentProvider-Protocol.h>
#import <WorkflowEditor/CKSupplementaryViewDataSource-Protocol.h>
#import <WorkflowEditor/WFCollectionViewDelegateModulesLayout-Protocol.h>
#import <WorkflowEditor/WFModuleDelegate-Protocol.h>
#import <WorkflowEditor/WFVariableUIDelegate-Protocol.h>

@class CKCollectionViewTransactionalDataSource, NSIndexPath, NSString, UICollectionView, WFConditionsHostingView, WFContentClassesToolbar, WFModulesCollectionViewLayout, WFScrollPositionPinningCollectionView, WFWorkflow, WFWorkflowModuleIndentationCache;
@protocol UIScrollViewDelegate, WFComponentNavigationContext, WFContentClassesToolbarDelegate, WFModuleModelProvider, WFModulesCollectionViewDelegate, WFModulesSupplementaryViewDataSource, WFWorkflowViewControllerDelegate;

@interface WFWorkflowViewController : UIViewController <CKComponentProvider, CKSupplementaryViewDataSource, WFCollectionViewDelegateModulesLayout, WFModuleDelegate, WFVariableUIDelegate>
{
    BOOL _alwaysBounceCollectionViewVertically;
    BOOL _allowsAcceptsToolbar;
    id<WFWorkflowViewControllerDelegate> _delegate;
    id<WFComponentNavigationContext> _navigationContext;
    WFWorkflow *_workflow;
    unsigned long long _workflowViewStyle;
    double _maximumContentWidth;
    WFScrollPositionPinningCollectionView *_pinningCollectionView;
    CDUnknownFunctionPointerType _cellConfigurationFunction;
    double _currentModuleWidth;
    NSIndexPath *_actionOutputIndexPath;
    CDUnknownBlockType _actionOutputCompletionHandler;
    WFConditionsHostingView *_conditionsView;
    CKCollectionViewTransactionalDataSource *_dataSource;
    WFModulesCollectionViewLayout *_collectionViewLayout;
    id<WFContentClassesToolbarDelegate> _acceptsToolbarDelegate;
    id<WFModulesCollectionViewDelegate> _collectionViewDelegate;
    id<WFModulesSupplementaryViewDataSource> _supplementaryViewDataSource;
    id<WFModuleModelProvider> _modelProvider;
    WFWorkflowModuleIndentationCache *_indentationCache;
    id<UIScrollViewDelegate> _scrollViewDelegate;
    double _maximumModuleWidth;
    WFContentClassesToolbar *_acceptsToolbar;
    struct CGSize _viewSize;
}

@property (readonly, weak, nonatomic) WFContentClassesToolbar *acceptsToolbar; // @synthesize acceptsToolbar=_acceptsToolbar;
@property (weak, nonatomic) id<WFContentClassesToolbarDelegate> acceptsToolbarDelegate; // @synthesize acceptsToolbarDelegate=_acceptsToolbarDelegate;
@property (copy, nonatomic) CDUnknownBlockType actionOutputCompletionHandler; // @synthesize actionOutputCompletionHandler=_actionOutputCompletionHandler;
@property (strong, nonatomic) NSIndexPath *actionOutputIndexPath; // @synthesize actionOutputIndexPath=_actionOutputIndexPath;
@property (nonatomic) BOOL allowsAcceptsToolbar; // @synthesize allowsAcceptsToolbar=_allowsAcceptsToolbar;
@property (nonatomic) BOOL alwaysBounceCollectionViewVertically; // @synthesize alwaysBounceCollectionViewVertically=_alwaysBounceCollectionViewVertically;
@property (readonly, nonatomic) CDUnknownFunctionPointerType cellConfigurationFunction; // @synthesize cellConfigurationFunction=_cellConfigurationFunction;
@property (readonly, weak, nonatomic) UICollectionView *collectionView;
@property (weak, nonatomic) id<WFModulesCollectionViewDelegate> collectionViewDelegate; // @synthesize collectionViewDelegate=_collectionViewDelegate;
@property (readonly, weak, nonatomic) WFModulesCollectionViewLayout *collectionViewLayout; // @synthesize collectionViewLayout=_collectionViewLayout;
@property (strong, nonatomic) WFConditionsHostingView *conditionsView; // @synthesize conditionsView=_conditionsView;
@property (nonatomic) double currentModuleWidth; // @synthesize currentModuleWidth=_currentModuleWidth;
@property (readonly, nonatomic) CKCollectionViewTransactionalDataSource *dataSource; // @synthesize dataSource=_dataSource;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<WFWorkflowViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) WFWorkflowModuleIndentationCache *indentationCache; // @synthesize indentationCache=_indentationCache;
@property (nonatomic) double maximumContentWidth; // @synthesize maximumContentWidth=_maximumContentWidth;
@property (nonatomic) double maximumModuleWidth; // @synthesize maximumModuleWidth=_maximumModuleWidth;
@property (weak, nonatomic) id<WFModuleModelProvider> modelProvider; // @synthesize modelProvider=_modelProvider;
@property (readonly, nonatomic) id<WFComponentNavigationContext> navigationContext; // @synthesize navigationContext=_navigationContext;
@property (weak, nonatomic) WFScrollPositionPinningCollectionView *pinningCollectionView; // @synthesize pinningCollectionView=_pinningCollectionView;
@property (weak, nonatomic) id<UIScrollViewDelegate> scrollViewDelegate; // @synthesize scrollViewDelegate=_scrollViewDelegate;
@property (readonly) Class superclass;
@property (weak, nonatomic) id<WFModulesSupplementaryViewDataSource> supplementaryViewDataSource; // @synthesize supplementaryViewDataSource=_supplementaryViewDataSource;
@property (nonatomic) struct CGSize viewSize; // @synthesize viewSize=_viewSize;
@property (readonly, nonatomic) WFWorkflow *workflow; // @synthesize workflow=_workflow;
@property (readonly, nonatomic) unsigned long long workflowViewStyle; // @synthesize workflowViewStyle=_workflowViewStyle;

+ (id)componentForModel:(id)arg1 context:(id)arg2;
+ (id)moduleAppearanceForStyle:(unsigned long long)arg1;
- (void).cxx_destruct;
- (void)cancelActionOutputPicking;
- (id)collectionView:(id)arg1 contextMenuConfigurationForItemAtIndexPath:(id)arg2 point:(struct CGPoint)arg3;
- (void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (BOOL)collectionView:(id)arg1 layout:(id)arg2 itemAtIndexPath:(id)arg3 isConnectedToItemAtIndexPath:(id)arg4;
- (BOOL)collectionView:(id)arg1 layout:(id)arg2 shouldHideItemAtIndexPath:(id)arg3;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForFooterInSection:(long long)arg3;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForHeaderInSection:(long long)arg3;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (double)collectionView:(id)arg1 layout:(id)arg2 verticalOffsetForItemAtIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (BOOL)conditionsEnabled;
- (void)configureAcceptsToolbar;
- (void)configureConditionsView;
- (id)createModelForAction:(id)arg1;
- (void)dealloc;
- (void)generateNewModelsAndReload;
- (unsigned long long)indentationLevelForModule:(id)arg1 withAction:(id)arg2;
- (id)indexPathOfCellContainingResponder:(id)arg1;
- (id)indexPathOfCellWithSubview:(id)arg1;
- (id)initWithWorkflow:(id)arg1 style:(unsigned long long)arg2;
- (id)initWithWorkflow:(id)arg1 style:(unsigned long long)arg2 cellConfigurationFunction:(CDUnknownFunctionPointerType)arg3;
- (void)invalidateActionConnections;
- (void)loadView;
- (double)moduleWidthForViewSize:(struct CGSize)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)removeOutputTokens;
- (void)revealAction:(id)arg1 fromSourceView:(id)arg2 preScrollHandler:(CDUnknownBlockType)arg3 goBackHandler:(CDUnknownBlockType)arg4 scrolledAwayHandler:(CDUnknownBlockType)arg5;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)showActionOutputPickerFromSourceResponder:(id)arg1 allowExtensionInput:(BOOL)arg2 variableProvider:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)tappedOutputToken:(id)arg1 withModel:(id)arg2;
- (void)textSizeChanged;
- (void)traitCollectionDidChange:(id)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewSafeAreaInsetsDidChange;
- (void)viewWillLayoutSubviews;

@end

