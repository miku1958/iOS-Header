//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <RemoteTextInput/NSXPCListenerDelegate-Protocol.h>
#import <RemoteTextInput/RTIInputSystemSessionDelegate-Protocol.h>

@class NSMutableSet, NSString, NSXPCListener, NSXPCListenerEndpoint, RTIInputSystemServiceSession;
@protocol OS_dispatch_queue, RTIInputSystemDelegate;

@interface RTIInputSystemService : NSObject <NSXPCListenerDelegate, RTIInputSystemSessionDelegate>
{
    NSMutableSet *_sessions;
    BOOL _enabled;
    RTIInputSystemServiceSession *_currentSession;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    id<RTIInputSystemDelegate> _delegate;
    NSString *_machName;
    NSXPCListener *_listener;
}

@property (readonly, nonatomic) RTIInputSystemServiceSession *currentSession; // @synthesize currentSession=_currentSession;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<RTIInputSystemDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
@property (nonatomic, getter=isEnabled) BOOL enabled; // @synthesize enabled=_enabled;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) NSXPCListener *listener; // @synthesize listener=_listener;
@property (readonly, nonatomic) NSXPCListenerEndpoint *listenerEndpoint;
@property (strong, nonatomic) NSString *machName; // @synthesize machName=_machName;
@property (readonly) Class superclass;

+ (Class)serviceSessionClass;
+ (id)sharedServiceWithMachName:(id)arg1;
- (void).cxx_destruct;
- (void)_createListenerIfNecessary;
- (void)_destroyListenerIfNecessary;
- (void)dealloc;
- (id)initWithMachName:(id)arg1;
- (void)inputSession:(id)arg1 didChangePause:(BOOL)arg2 withReason:(id)arg3;
- (void)inputSession:(id)arg1 documentStateDidChange:(id)arg2;
- (void)inputSession:(id)arg1 documentTraitsDidChange:(id)arg2;
- (void)inputSessionDidBegin:(id)arg1;
- (void)inputSessionDidDie:(id)arg1;
- (void)inputSessionDidEnd:(id)arg1;
- (BOOL)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;

@end

