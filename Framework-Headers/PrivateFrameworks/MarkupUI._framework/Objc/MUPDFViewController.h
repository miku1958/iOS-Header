//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import <MarkupUI/MUPDFViewDelegate-Protocol.h>
#import <MarkupUI/MUPDFViewPrivateDelegate-Protocol.h>
#import <MarkupUI/UIDocumentPasswordViewDelegate-Protocol.h>
#import <MarkupUI/UIScrollViewDelegate-Protocol.h>

@class MUPDFNumberFormatter, MUPDFPageLabelView, MUPDFView, MUPDFViewPlaceholder, NSObject, NSString, UIAlertController, UIColor, UIDocumentPasswordView, UIPDFDocument, UIScrollView, UIView;
@protocol MUPDFViewControllerDelegate;

@interface MUPDFViewController : UIViewController <MUPDFViewDelegate, MUPDFViewPrivateDelegate, UIDocumentPasswordViewDelegate, UIScrollViewDelegate>
{
    double _initialZoomScale;
    MUPDFPageLabelView *_pageLabelView;
    UIDocumentPasswordView *_passwordEntryView;
    MUPDFNumberFormatter *_labelViewFormatter;
    MUPDFView *_pdfView;
    struct CGRect _rectOfInterest;
    BOOL _rectOfInterestConsidersHeight;
    BOOL _shouldLoadDocAfterViewDidLoad;
    UIAlertController *_currentAlert;
    BOOL _scalesPageToFit;
    BOOL _showPageLabels;
    BOOL _hideActivityIndicatorForUnRenderedContent;
    BOOL _hidePageViewsUntilReadyToRender;
    UIPDFDocument *_document;
    UIScrollView *_scrollView;
    NSObject<MUPDFViewControllerDelegate> *_delegate;
    UIColor *_backgroundColorForUnRenderedContent;
    unsigned long long _currentPageIndex;
    UIPDFDocument *_pdfDocument;
    struct CGPDFDocument *_pdfDocumentRef;
    MUPDFViewPlaceholder *_pdfPlaceholder;
    struct UIEdgeInsets _additionalEdgeInsets;
}

@property (nonatomic) struct UIEdgeInsets additionalEdgeInsets; // @synthesize additionalEdgeInsets=_additionalEdgeInsets;
@property (strong, nonatomic) UIColor *backgroundColorForUnRenderedContent; // @synthesize backgroundColorForUnRenderedContent=_backgroundColorForUnRenderedContent;
@property (nonatomic) unsigned long long currentPageIndex; // @synthesize currentPageIndex=_currentPageIndex;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) NSObject<MUPDFViewControllerDelegate> *delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly, nonatomic) UIPDFDocument *document; // @synthesize document=_document;
@property (readonly, nonatomic) NSString *documentPassword;
@property (readonly, nonatomic) UIView *frontView;
@property (readonly) unsigned long long hash;
@property (nonatomic) BOOL hideActivityIndicatorForUnRenderedContent; // @synthesize hideActivityIndicatorForUnRenderedContent=_hideActivityIndicatorForUnRenderedContent;
@property (nonatomic) BOOL hidePageViewsUntilReadyToRender; // @synthesize hidePageViewsUntilReadyToRender=_hidePageViewsUntilReadyToRender;
@property (readonly, nonatomic) unsigned long long pageCount;
@property (strong) UIPDFDocument *pdfDocument; // @synthesize pdfDocument=_pdfDocument;
@property struct CGPDFDocument *pdfDocumentRef; // @synthesize pdfDocumentRef=_pdfDocumentRef;
@property (strong, nonatomic) MUPDFViewPlaceholder *pdfPlaceholder; // @synthesize pdfPlaceholder=_pdfPlaceholder;
@property (strong, nonatomic) UIView *pdfView; // @synthesize pdfView=_pdfView;
@property (nonatomic) BOOL scalesPageToFit; // @synthesize scalesPageToFit=_scalesPageToFit;
@property (strong, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property (nonatomic) BOOL showPageLabels; // @synthesize showPageLabels=_showPageLabels;
@property (readonly) Class superclass;
@property (readonly, nonatomic) double zoomToFitZoomFactor;

- (void).cxx_destruct;
- (double)__jetsam_workaround_minimumZoomScale;
- (void)_adjustContentOffsetForKeyboardIfNeeded;
- (void)_adjustZoomScalesForScrollViewInternal:(id)arg1;
- (unsigned long long)_calculateCurrentPageIndex;
- (void)_commonInit;
- (void)_createPDFViewIfNeeded:(id)arg1;
- (void)_ensurePDFViewInHierarchyForWebDocView:(id)arg1;
- (struct CGRect)_frameForDocumentBounds:(struct CGRect)arg1;
- (id)_getLabelViewFormatter;
- (id)_getPDFDocumentViewForWebView:(id)arg1;
- (void)_keyboardDidShow:(id)arg1;
- (void)_pdfView:(id)arg1 didAddPage:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)_pdfView:(id)arg1 didRemovePage:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)_pdfView:(id)arg1 willAddPage:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)_pdfView:(id)arg1 willRemovePage:(id)arg2 atIndex:(unsigned long long)arg3;
- (double)_pinValueForVerticalEdge:(unsigned long long)arg1 inScrollView:(id)arg2;
- (void)_postdidDetermineDocumentBounds;
- (struct CGRect)_rectForPasswordView:(id)arg1;
- (struct CGRect)_rectForPdfView:(struct CGRect)arg1;
- (id)_scroller:(id)arg1;
- (void)_setupWithDocument:(struct CGPDFDocument *)arg1;
- (void)_showPasswordEntryViewForFile:(id)arg1;
- (void)_showPasswordErrorAlert;
- (void)_updateViewHierarchyForDocumentViewNewLoad:(id)arg1;
- (unsigned long long)_verticalEdgeForContentOffsetInScrollView:(id)arg1;
- (void)adjustZoomScalesForScrollView;
- (void)clearAllViews;
- (void)clearPageLabel;
- (id)contentSnapshotPDFDataIncludingAdornments:(BOOL)arg1 atScale:(double)arg2 inRect:(struct CGRect)arg3 onPageAtIndex:(unsigned long long)arg4;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 fromView:(id)arg2 toPDFPageSpaceAtIndex:(unsigned long long)arg3;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 inPDFPageSpaceAtIndex:(unsigned long long)arg2 toView:(id)arg3;
- (id)createPageLabel;
- (void)dealloc;
- (void)didBeginEditingPassword:(id)arg1 inView:(id)arg2;
- (void)didDetermineDocumentBounds:(id)arg1;
- (void)didEndEditingPassword:(id)arg1 inView:(id)arg2;
- (void)didReceiveMemoryWarning;
- (void)didScroll:(id)arg1;
- (void)ensureCorrectPagesAreInstalled:(BOOL)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)loadView;
- (void)pageWasRendered:(id)arg1;
- (id)passwordForPDFView:(id)arg1;
- (void)pdfView:(id)arg1 zoomToRect:(struct CGRect)arg2 forPoint:(struct CGPoint)arg3 considerHeight:(BOOL)arg4;
- (void)resetZoom:(id)arg1;
- (CDStruct_39925896)scalesForContainerSize:(struct CGSize)arg1;
- (void)scrollToPageNumber:(long long)arg1 animate:(BOOL)arg2;
- (void)setupWithDocument:(struct CGPDFDocument *)arg1;
- (void)updatePageNumberLabelWithUserScrolling:(BOOL)arg1 animated:(BOOL)arg2;
- (void)updateViewSettings;
- (void)userDidEnterPassword:(id)arg1 forPasswordView:(id)arg2;
- (id)viewAtIndex:(long long)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (id)viewForZoomingInScrollView:(id)arg1;

@end

