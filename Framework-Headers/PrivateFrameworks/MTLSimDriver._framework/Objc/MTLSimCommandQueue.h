//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Metal/_MTLCommandQueue.h>

#import <MTLSimDriver/MTLCommandQueueSPI-Protocol.h>

@class MTLSimBufferStoragePool, MTLSimCommandStoragePool, NSObject, NSString;
@protocol MTLDevice, OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface MTLSimCommandQueue : _MTLCommandQueue <MTLCommandQueueSPI>
{
    MTLSimCommandStoragePool *commandPool;
    MTLSimBufferStoragePool *bufferPool;
    unsigned int _commandQueueRef;
    id<MTLDevice> _device;
    unsigned long long bufferStorageByteCount;
}

@property (nonatomic, getter=isStatEnabled) BOOL StatEnabled;
@property (nonatomic, getter=getStatLocations) unsigned long long StatLocations;
@property (nonatomic, getter=getStatOptions) unsigned long long StatOptions;
@property int backgroundTrackingPID;
@property (readonly) unsigned long long bufferStorageByteCount; // @synthesize bufferStorageByteCount;
@property (readonly) NSObject<OS_dispatch_queue> *commitQueue;
@property (readonly) BOOL commitSynchronously;
@property (readonly) NSObject<OS_dispatch_queue> *completionQueue;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) id<MTLDevice> device; // @synthesize device=_device;
@property (readonly) BOOL disableCrossQueueHazardTracking;
@property BOOL executionEnabled;
@property (readonly) unsigned long long hash;
@property (readonly) BOOL isOpenGLQueue;
@property (copy) NSString *label;
@property (readonly) unsigned long long maxCommandBufferCount;
@property (getter=isProfilingEnabled) BOOL profilingEnabled;
@property (readonly) unsigned long long qosLevel;
@property BOOL skipRender;
@property (readonly) Class superclass;

- (id)availableCounters;
- (id)commandBuffer;
- (id)commandBufferWithDescriptor:(id)arg1;
- (id)commandBufferWithUnretainedReferences;
- (id)counterInfo;
- (void)dealloc;
- (unsigned long long)getBackgroundGPUPriority;
- (struct BufferStorageEntry *)getBufferStorage;
- (struct StorageEntry *)getCommandBufferStorage;
- (unsigned long long)getGPUPriority;
- (id)getRequestedCounters;
- (id)initWithDevice:(id)arg1 commandQueueRef:(unsigned int)arg2 descriptor:(id)arg3;
- (id)initWithDevice:(id)arg1 maxCommandBufferCount:(unsigned long long)arg2;
- (int)requestCounters:(id)arg1;
- (void)returnBufferStorage:(struct BufferStorageEntry *)arg1;
- (void)returnCommandBufferStorage:(struct StorageEntry *)arg1;
- (BOOL)setBackgroundGPUPriority:(unsigned long long)arg1;
- (BOOL)setBackgroundGPUPriority:(unsigned long long)arg1 offset:(unsigned short)arg2;
- (void)setCompletionQueue:(id)arg1;
- (BOOL)setGPUPriority:(unsigned long long)arg1;
- (BOOL)setGPUPriority:(unsigned long long)arg1 offset:(unsigned short)arg2;
- (void)submitCommandBuffers:(const id *)arg1 count:(unsigned long long)arg2;

@end

