//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Metal/_MTLCommandBuffer.h>

#import <MTLSimDriver/MTLCommandBufferSPI-Protocol.h>
#import <MTLSimDriver/MTLSerializerCommandStream-Protocol.h>

@class MTLResourceList, NSDictionary, NSError, NSMutableDictionary, NSString;
@protocol MTLCommandQueue, MTLDevice;

__attribute__((visibility("hidden")))
@interface MTLSimCommandBuffer : _MTLCommandBuffer <MTLCommandBufferSPI, MTLSerializerCommandStream>
{
    struct StorageEntry *commandHead;
    struct BufferStorageEntry *bufferHead;
    unsigned long long segmentCount;
    struct StorageEntry *commandCurrentStorage;
    struct StorageEntry *commandTail;
    struct StorageEntry *commandPrevious;
    struct BufferStorageEntry *bufferCurrentStorage;
    unsigned long long currentStorageOffset;
    BOOL continuation;
    unsigned int _reference;
    unsigned long long _protectionOptions;
    MTLResourceList *_resourceList;
    id<MTLDevice> device;
    CDUnknownBlockType splitHandler;
}

@property (readonly) double GPUEndTime;
@property (readonly) double GPUStartTime;
@property (readonly) unsigned int commandBufferRef;
@property (readonly) id<MTLCommandQueue> commandQueue;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) id<MTLDevice> device; // @synthesize device;
@property (readonly) NSError *error;
@property (readonly) unsigned long long globalTraceObjectID;
@property (readonly) unsigned long long hash;
@property (readonly) double kernelEndTime;
@property (readonly) double kernelStartTime;
@property (copy) NSString *label;
@property (nonatomic, getter=getListIndex) unsigned long long listIndex;
@property (getter=isProfilingEnabled) BOOL profilingEnabled;
@property (readonly) NSDictionary *profilingResults;
@property (readonly) BOOL retainedReferences;
@property (copy) CDUnknownBlockType splitHandler; // @synthesize splitHandler;
@property (readonly) unsigned long long status;
@property (readonly) Class superclass;
@property (readonly, nonatomic) NSMutableDictionary *userDictionary;

- (void)addPurgedHeap:(id)arg1;
- (void)addPurgedResource:(id)arg1;
- (BOOL)addResourceReference:(id)arg1 isWrite:(BOOL)arg2;
- (BOOL)addStateReference:(id)arg1;
- (void)beginContinuation;
- (id)blitCommandEncoder;
- (BOOL)commitAndWaitUntilSubmitted;
- (id)computeCommandEncoder;
- (id)computeCommandEncoderWithDispatchType:(unsigned long long)arg1;
- (void)dealloc;
- (void)encodeSignalEvent:(id)arg1 value:(unsigned long long)arg2;
- (void)encodeWaitForEvent:(id)arg1 value:(unsigned long long)arg2;
- (void)encodeWaitForEvent:(id)arg1 value:(unsigned long long)arg2 timeout:(unsigned int)arg3;
- (void)endEncoding;
- (void *)getBufferBytes:(unsigned long long)arg1 alignment:(unsigned long long)arg2 buffer:(id *)arg3 offset:(unsigned long long *)arg4;
- (void *)getCommandBufferBytes:(unsigned long long)arg1;
- (void *)getCommandBytes:(unsigned long long)arg1 forCommand:(unsigned int)arg2;
- (id)initWithQueue:(id)arg1 retainedReferences:(BOOL)arg2;
- (void)merge:(id)arg1;
- (id)parallelRenderCommandEncoderWithDescriptor:(id)arg1;
- (unsigned long long)protectionOptions;
- (id)renderCommandEncoderWithDescriptor:(id)arg1;
- (id)resourceStateCommandEncoder;
- (void)setProtectionOptions:(unsigned long long)arg1;
- (void)split;

@end

