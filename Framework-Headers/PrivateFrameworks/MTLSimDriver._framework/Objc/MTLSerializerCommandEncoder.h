//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Metal/_MTLCommandEncoder.h>

#import <MTLSimDriver/MTLCommandEncoder-Protocol.h>

@class NSString;
@protocol MTLDevice, MTLSerializerCommandStream;

__attribute__((visibility("hidden")))
@interface MTLSerializerCommandEncoder : _MTLCommandEncoder <MTLCommandEncoder>
{
    id<MTLSerializerCommandStream> stream;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) id<MTLDevice> device;
@property (readonly) unsigned long long hash;
@property (copy) NSString *label;
@property (readonly) Class superclass;

- (void)beginSegment:(BOOL)arg1;
- (void)dealloc;
- (void)endEncoding;
- (void *)getCommandBytes:(unsigned long long)arg1 forCommand:(unsigned int)arg2;
- (void *)getCommandBytesRetry:(unsigned long long)arg1 forCommand:(unsigned int)arg2;
- (id)initWithCommandBuffer:(id)arg1;
- (void)setBuffers:(const id *)arg1 offsets:(const unsigned long long *)arg2 withRange:(struct _NSRange)arg3 withCommand:(unsigned int)arg4 array:(id *)arg5 rangeMax:(unsigned int)arg6;
- (void)setBytes:(const void *)arg1 length:(unsigned long long)arg2 atIndex:(unsigned long long)arg3 withCommand:(unsigned int)arg4 array:(id *)arg5 rangeMax:(unsigned int)arg6;
- (void)setSamplerStates:(const id *)arg1 lodMinClamps:(const float *)arg2 lodMaxClamps:(const float *)arg3 withRange:(struct _NSRange)arg4 withCommand:(unsigned int)arg5 array:(id *)arg6 rangeMax:(unsigned int)arg7;
- (void)setSamplerStates:(const id *)arg1 withRange:(struct _NSRange)arg2 withCommand:(unsigned int)arg3 array:(id *)arg4 rangeMax:(unsigned int)arg5;
- (void)setTextures:(const id *)arg1 withRange:(struct _NSRange)arg2 withCommand:(unsigned int)arg3 array:(id *)arg4 rangeMax:(unsigned int)arg5;
- (void)useHeap:(id)arg1;
- (void)useHeaps:(const id *)arg1 count:(unsigned long long)arg2;
- (void)useResource:(id)arg1 usage:(unsigned long long)arg2;
- (void)useResources:(const id *)arg1 count:(unsigned long long)arg2 usage:(unsigned long long)arg3;
- (void)writeSegmentHeader:(unsigned char)arg1 continuation:(BOOL)arg2;

@end

