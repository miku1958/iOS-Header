//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <CloudPhotoLibrary/CPLEngineSyncTask.h>

@class CPLFeatureVersionHistory, NSData, NSObject, NSString;
@protocol CPLEngineTransportDownloadBatchTask, CPLEngineTransportGetLibraryInfoTask, CPLEngineTransportGroup, CPLEngineTransportQueryTask, CPLPullFromTransportTaskDelegate, OS_dispatch_queue;

@interface CPLPullFromTransportTask : CPLEngineSyncTask
{
    NSObject<OS_dispatch_queue> *_queue;
    NSData *_initialSyncAnchor;
    id<CPLEngineTransportDownloadBatchTask> _downloadTask;
    id<CPLEngineTransportQueryTask> _queryTask;
    id<CPLEngineTransportGetLibraryInfoTask> _getLibraryInfoTask;
    NSData *_lastKnownSyncAnchor;
    NSString *_clientCacheIdentifier;
    Class _currentQueryClass;
    BOOL _ignoreNewBatches;
    BOOL _gotSomeChanges;
    BOOL _useCourtesyMingling;
    unsigned long long _rewindFeatureVersion;
    NSData *_rewindSyncAnchor;
    CPLFeatureVersionHistory *_versionHistory;
    id<CPLEngineTransportGroup> _transportGroup;
    BOOL _isPrePushPhase;
}

@property (strong) id<CPLPullFromTransportTaskDelegate> delegate; // @dynamic delegate;
@property (nonatomic, setter=setPrePushPhase:) BOOL isPrePushPhase; // @synthesize isPrePushPhase=_isPrePushPhase;

- (void).cxx_destruct;
- (void)_checkServerFeatureVersion:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (BOOL)_checkStateBeforeContinuingInTransaction:(id)arg1;
- (void)_extractAndMingleAssetsIfPossibleFromBatch:(id)arg1 inTransaction:(id)arg2;
- (void)_handleNewBatchFromChanges:(id)arg1 newSyncAnchor:(id)arg2;
- (void)_handleNewBatchFromChanges:(id)arg1 newSyncAnchor:(id)arg2 inTransaction:(id)arg3;
- (void)_handleNewBatchFromQuery:(id)arg1 newCursor:(id)arg2;
- (void)_handleNewBatchFromQuery:(id)arg1 newCursor:(id)arg2 inTransaction:(id)arg3;
- (void)_launch;
- (void)_launchFetchChangesFromSyncAnchor:(id)arg1;
- (void)_launchNextQueryTask;
- (void)_launchPullTasksAndDisableQueries:(BOOL)arg1;
- (void)_launchQueryForClass:(Class)arg1 cursor:(id)arg2;
- (void)_updateLastFeatureVersionAndRelaunchFetchChangesFromSyncAnchor:(id)arg1;
- (void)cancel;
- (id)initWithEngineLibrary:(id)arg1;
- (void)launch;
- (void)pause;
- (void)resume;
- (void)taskDidFinishWithError:(id)arg1;
- (id)taskIdentifier;

@end

