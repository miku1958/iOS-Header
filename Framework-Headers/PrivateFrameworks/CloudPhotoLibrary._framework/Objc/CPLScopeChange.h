//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <CloudPhotoLibrary/CPLRecordChange.h>

#import <CloudPhotoLibrary/NSCopying-Protocol.h>
#import <CloudPhotoLibrary/NSSecureCoding-Protocol.h>

@class CPLEngineScope, CPLScopedIdentifier, NSData, NSDate, NSDictionary, NSString;

@interface CPLScopeChange : CPLRecordChange <NSSecureCoding, NSCopying>
{
    BOOL _disabled;
    long long _scopeType;
    NSDictionary *_assetCountPerType;
    NSDate *_disabledDate;
    NSDate *_deleteDate;
    NSData *_accountFlagsData;
    unsigned long long _pullTaskItem;
    CPLEngineScope *_scope;
}

@property (copy, nonatomic) NSData *accountFlagsData; // @synthesize accountFlagsData=_accountFlagsData;
@property (copy, nonatomic) NSDictionary *assetCountPerType; // @synthesize assetCountPerType=_assetCountPerType;
@property (strong, nonatomic) NSDate *deleteDate; // @synthesize deleteDate=_deleteDate;
@property (nonatomic, getter=isDisabled) BOOL disabled; // @synthesize disabled=_disabled;
@property (strong, nonatomic) NSDate *disabledDate; // @synthesize disabledDate=_disabledDate;
@property (copy, nonatomic) NSString *identifier; // @dynamic identifier;
@property (nonatomic) unsigned long long pullTaskItem; // @synthesize pullTaskItem=_pullTaskItem;
@property (copy, nonatomic) NSDate *recordModificationDate; // @dynamic recordModificationDate;
@property (strong, nonatomic) CPLEngineScope *scope; // @synthesize scope=_scope;
@property (nonatomic) long long scopeType; // @synthesize scopeType=_scopeType;
@property (copy, nonatomic) CPLScopedIdentifier *scopedIdentifier; // @dynamic scopedIdentifier;

+ (BOOL)cplShouldIgnorePropertyForCoding:(id)arg1;
+ (BOOL)cplShouldIgnorePropertyForEquality:(id)arg1;
+ (long long)defaultFlagsForScopeType:(long long)arg1;
+ (id)descriptionForScopeType:(long long)arg1;
+ (id)mappingForScopeTypeDescription;
+ (id)newDeleteScopeChangeWithScopeIdentifier:(id)arg1 type:(long long)arg2;
+ (id)newScopeChangeWithScopeIdentifier:(id)arg1 type:(long long)arg2;
+ (Class)scopeChangeClassForType:(long long)arg1;
+ (BOOL)shouldAutoActivateScopeWithType:(long long)arg1;
+ (BOOL)supportsSecureCoding;
- (void).cxx_destruct;
- (id)_scopedIdentifier;
- (void)_setChangeType:(unsigned long long)arg1;
- (void)_setupWithLibraryInfo:(id)arg1;
- (void)_setupWithLibraryState:(id)arg1;
- (id)accountFlags;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithScopeIdentifier:(id)arg1 type:(long long)arg2;
- (id)initWithScopeIdentifier:(id)arg1 type:(long long)arg2 libraryInfo:(id)arg3 state:(id)arg4;
- (id)scopeIdentifier;
- (id)updatedLibraryInfoFromLibraryInfo:(id)arg1 didUpdate:(BOOL *)arg2;

@end

