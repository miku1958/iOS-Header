//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <CloudPhotoLibrary/CPLEngineScopedTask.h>

@class CPLEngineTransport, CPLFeatureVersionHistory, CPLScopeChange, NSData, NSObject;
@protocol CPLEngineTransportDownloadBatchTask, CPLEngineTransportGetCurrentSyncAnchorTask, CPLEngineTransportGroup, CPLEngineTransportQueryTask, OS_dispatch_queue;

@interface CPLPullFromTransportScopeTask : CPLEngineScopedTask
{
    NSObject<OS_dispatch_queue> *_queue;
    CPLEngineTransport *_transport;
    id<CPLEngineTransportDownloadBatchTask> _downloadTask;
    id<CPLEngineTransportQueryTask> _queryTask;
    CPLScopeChange *_currentScopeChange;
    Class _currentQueryClass;
    BOOL _ignoreNewBatches;
    BOOL _useCourtesyMingling;
    unsigned long long _rewindFeatureVersion;
    NSData *_rewindSyncAnchor;
    CPLFeatureVersionHistory *_versionHistory;
    id<CPLEngineTransportGroup> _transportGroup;
    unsigned long long _totalAssetCountForScope;
    BOOL _hasCachedTotalAssetCountForScope;
    long long _taskItem;
    BOOL _hasFetchedInitialSyncAnchor;
    BOOL _shouldStoreInitialSyncAnchor;
    NSData *_initialSyncAnchor;
    CPLScopeChange *_initialScopeChange;
    id<CPLEngineTransportGetCurrentSyncAnchorTask> _fetchInitialSyncAnchorTask;
    NSObject<OS_dispatch_queue> *_notifyQueue;
    BOOL _didNotifySchedulerPullQueueIsFullOnce;
    BOOL _needsToNotifySchedulerPullQueueIsFull;
}

- (void).cxx_destruct;
- (void)_cancelAllTasks;
- (void)_checkServerFeatureVersionWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_extractAndMingleAssetsIfPossibleFromBatch:(id)arg1 inTransaction:(id)arg2;
- (void)_extractAndMinglePersonsIfPossibleFromBatch:(id)arg1 inTransaction:(id)arg2;
- (void)_fetchInitialSyncAnchor;
- (void)_handleNewBatchFromChanges:(id)arg1 newSyncAnchor:(id)arg2 inTransaction:(id)arg3;
- (void)_handleNewBatchFromChanges:(id)arg1 updatedFlags:(id)arg2 newSyncAnchor:(id)arg3;
- (void)_handleNewBatchFromQuery:(id)arg1 newCursor:(id)arg2 inTransaction:(id)arg3;
- (void)_handleNewBatchFromQuery:(id)arg1 queryClass:(Class)arg2 newCursor:(id)arg3;
- (void)_launch;
- (void)_launchFetchChangesFromSyncAnchor:(id)arg1;
- (void)_launchNextQueryTask;
- (void)_launchPullTasksAndDisableQueries:(BOOL)arg1;
- (void)_launchQueryForClass:(Class)arg1 cursor:(id)arg2;
- (void)_notifySchedulerPullQueueIsFull;
- (void)_notifySchedulerPullQueueIsFullNowIfNecessary;
- (void)_reallyNotifySchedulerPullQueueIsFull;
- (void)_storeInitialSyncAnchorIfNecessaryInTransaction:(id)arg1;
- (unsigned long long)_totalAssetCountForScope;
- (void)_updateLastFeatureVersionAndRelaunchFetchChangesFromSyncAnchor:(id)arg1;
- (void)cancel;
- (BOOL)checkScopeIsValidInTransaction:(id)arg1;
- (id)initWithEngineLibrary:(id)arg1 session:(id)arg2 clientCacheIdentifier:(id)arg3 scope:(id)arg4 transportScope:(id)arg5;
- (void)launch;
- (void)taskDidFinishWithError:(id)arg1;
- (id)taskIdentifier;

@end

