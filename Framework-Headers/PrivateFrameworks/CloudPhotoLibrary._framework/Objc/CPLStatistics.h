//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <CloudPhotoLibrary/CPLEngineComponent-Protocol.h>

@class NSString, NSURL;
@protocol OS_dispatch_queue;

@interface CPLStatistics : NSObject <CPLEngineComponent>
{
    NSURL *_logfileURL;
    struct {
        long long period;
        CDStruct_e6f69ac3 upstream;
        CDStruct_e6f69ac3 downstream;
        struct {
            long long setupErrors;
            long long pushErrors;
            long long pullErrors;
            long long managementErrors;
        } syncerrors;
    } _currentSnapshot;
    long long _lastServedAggregationWindow;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSObject<OS_dispatch_queue> *_persistanceQueue;
    BOOL _closed;
    BOOL _statisticsEnabled;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property BOOL statisticsEnabled; // @synthesize statisticsEnabled=_statisticsEnabled;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (CDUnknownBlockType)attachToDownloadCompletionHandler:(CDUnknownBlockType)arg1 forResource:(id)arg2;
- (CDUnknownBlockType)attachToDownloadProgressHandler:(CDUnknownBlockType)arg1 forResource:(id)arg2;
- (CDUnknownBlockType)attachToDownloadStartHandler:(CDUnknownBlockType)arg1 forResource:(id)arg2;
- (CDUnknownBlockType)attachToUploadRecordSaveHandler:(CDUnknownBlockType)arg1;
- (void)closeAndDeactivate:(BOOL)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)componentName;
- (id)initWithEngineLibrary:(id)arg1;
- (void)markAggregationWindowAsDirtyNow:(BOOL)arg1;
- (void)openWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)recordDownloadedBatchWithError:(id)arg1;
- (void)recordDownloadedResource:(id)arg1 withPotentialError:(id)arg2;
- (void)recordDownloadingResource:(id)arg1;
- (void)recordDownloadingResource:(id)arg1 progress:(float)arg2;
- (void)recordSyncErrorForState:(unsigned long long)arg1;
- (void)recordUploadedBatchWithError:(id)arg1;
- (void)recordUploadedResource:(id)arg1 withPotentialError:(id)arg2;
- (void)recordUploadingResource:(id)arg1;
- (void)recordUploadingResource:(id)arg1 progress:(float)arg2;
- (id)statisticsSnapshotSinceDate:(id)arg1;

@end

