//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <VirtualGarage/NSCopying-Protocol.h>
#import <VirtualGarage/NSSecureCoding-Protocol.h>

@class NSData, NSDate, NSDictionary, NSString, VGVehicleState;

@interface VGVehicle : NSObject <NSCopying, NSSecureCoding>
{
    NSString *_identifier;
    NSDate *_creationDate;
    NSDate *_lastStateUpdateDate;
    NSString *_displayName;
    NSString *_year;
    NSString *_manufacturer;
    NSString *_model;
    NSString *_colorHex;
    NSString *_headUnitBluetoothIdentifier;
    NSString *_headUnitIdentifier;
    NSString *_licensePlate;
    NSString *_lprVehicleType;
    NSString *_lprPowerType;
    unsigned long long _supportedConnectors;
    NSDictionary *_powerByConnector;
    VGVehicleState *_currentVehicleState;
    NSString *_pairedAppIdentifier;
    NSString *_iapIdentifier;
    NSString *_siriIntentsIdentifier;
    NSString *_pairedAppInstallDeviceIdentifier;
    NSData *_pairedAppInstallSessionIdentifier;
}

@property (copy, nonatomic) NSString *colorHex; // @synthesize colorHex=_colorHex;
@property (readonly, copy, nonatomic) NSDate *creationDate; // @synthesize creationDate=_creationDate;
@property (readonly, nonatomic) VGVehicleState *currentVehicleState; // @synthesize currentVehicleState=_currentVehicleState;
@property (copy, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
@property (readonly, copy, nonatomic) NSString *headUnitBluetoothIdentifier; // @synthesize headUnitBluetoothIdentifier=_headUnitBluetoothIdentifier;
@property (readonly, copy, nonatomic) NSString *headUnitIdentifier; // @synthesize headUnitIdentifier=_headUnitIdentifier;
@property (strong, nonatomic) NSString *iapIdentifier; // @synthesize iapIdentifier=_iapIdentifier;
@property (readonly, copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property (readonly, nonatomic) BOOL isPureElectricVehicle;
@property (readonly, copy, nonatomic) NSDate *lastStateUpdateDate; // @synthesize lastStateUpdateDate=_lastStateUpdateDate;
@property (copy, nonatomic) NSString *licensePlate; // @synthesize licensePlate=_licensePlate;
@property (copy, nonatomic) NSString *lprPowerType; // @synthesize lprPowerType=_lprPowerType;
@property (copy, nonatomic) NSString *lprVehicleType; // @synthesize lprVehicleType=_lprVehicleType;
@property (readonly, copy, nonatomic) NSString *manufacturer; // @synthesize manufacturer=_manufacturer;
@property (readonly, copy, nonatomic) NSString *model; // @synthesize model=_model;
@property (strong, nonatomic) NSString *pairedAppIdentifier; // @synthesize pairedAppIdentifier=_pairedAppIdentifier;
@property (strong, nonatomic) NSString *pairedAppInstallDeviceIdentifier; // @synthesize pairedAppInstallDeviceIdentifier=_pairedAppInstallDeviceIdentifier;
@property (strong, nonatomic) NSData *pairedAppInstallSessionIdentifier; // @synthesize pairedAppInstallSessionIdentifier=_pairedAppInstallSessionIdentifier;
@property (readonly, copy, nonatomic) NSDictionary *powerByConnector; // @synthesize powerByConnector=_powerByConnector;
@property (strong, nonatomic) NSString *siriIntentsIdentifier; // @synthesize siriIntentsIdentifier=_siriIntentsIdentifier;
@property (nonatomic) unsigned long long supportedConnectors; // @synthesize supportedConnectors=_supportedConnectors;
@property (readonly, copy, nonatomic) NSString *year; // @synthesize year=_year;

+ (BOOL)supportsSecureCoding;
- (void).cxx_destruct;
- (BOOL)_canBeUpdatedFromState:(id)arg1;
- (id)_identifierForVehicleStateOrigin:(long long)arg1;
- (void)_updateWithVehicleState:(id)arg1;
- (id)_vehicleByUpdatingWithVehicle:(id)arg1;
- (double)batteryPercentageBasedOfCapacity;
- (id)combinedDisplayName;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (double)displayedBatteryPercentage;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithDisplayName:(id)arg1 year:(id)arg2 manufacturer:(id)arg3 model:(id)arg4 colorHex:(id)arg5 headUnitIdentifier:(id)arg6 headUnitBluetoothIdentifier:(id)arg7 supportedConnectors:(unsigned long long)arg8 powerByConnector:(id)arg9;
- (id)initWithIdentifier:(id)arg1 displayName:(id)arg2 year:(id)arg3 manufacturer:(id)arg4 model:(id)arg5 colorHex:(id)arg6 licensePlate:(id)arg7 lprVehicleType:(id)arg8 lprPowerType:(id)arg9;
- (id)initWithLicensePlate:(id)arg1 lprVehicleType:(id)arg2 lprPowerType:(id)arg3;
- (id)initWithMapsSyncVehicle:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (void)pairToIapIdentifier:(id)arg1 bluetoothIdentifier:(id)arg2;

@end

