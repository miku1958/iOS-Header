//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <CoreChart/CCVegaCGContextInterface-Protocol.h>

@class CCVegaJSFont, CCVegaRenderer, JSValue, NSString;

@interface CCVegaCGContext : NSObject <CCVegaCGContextInterface>
{
    JSValue *_fillStyle;
    double _globalAlpha;
    NSString *_lineCap;
    NSString *_lineJoin;
    double _lineWidth;
    double _miterLimit;
    NSString *_strokeStyle;
    NSString *_textAlign;
    struct CGAffineTransform _currentTransform;
    double _lineDashOffset;
    NSString *_font;
    NSString *_globalCompositeOperation;
    struct CGContext *_bitmapContext;
    double _width;
    double _height;
    CCVegaJSFont *_internalFont;
    CCVegaRenderer *renderer;
    double pixelRatio;
}

@property (readonly) struct CGContext *context;
@property (strong) JSValue *fillStyle;
@property (strong) NSString *font;
@property double globalAlpha;
@property (strong) NSString *globalCompositeOperation;
@property double height;
@property (strong) NSString *lineCap;
@property double lineDashOffset;
@property (strong) NSString *lineJoin;
@property double lineWidth;
@property double miterLimit;
@property (nonatomic) double pixelRatio; // @synthesize pixelRatio;
@property (weak, nonatomic) CCVegaRenderer *renderer; // @synthesize renderer;
@property (strong) NSString *strokeStyle;
@property (strong) NSString *textAlign;
@property double width;

+ (struct CGAffineTransform)flipYAxisWithHeight:(double)arg1;
- (void).cxx_destruct;
- (void)arcWithX:(double)arg1 y:(double)arg2 radius:(double)arg3 startAngle:(double)arg4 endAngle:(double)arg5 anticlockwise:(BOOL)arg6;
- (void)beginPath;
- (void)bezierCurveToCP1x:(double)arg1 cp1y:(double)arg2 cp2x:(double)arg3 cp2y:(double)arg4 x:(double)arg5 y:(double)arg6;
- (void)clearRectWithX:(double)arg1 y:(double)arg2 w:(double)arg3 h:(double)arg4;
- (void)clip;
- (void)closePath;
- (id)createLinearGradientWithX0:(double)arg1 y0:(double)arg2 x1:(double)arg3 y1:(double)arg4;
- (void)dealloc;
- (void)fill;
- (void)fillRectWithX:(double)arg1 y:(double)arg2 width:(double)arg3 height:(double)arg4;
- (void)fillTextWithString:(id)arg1 x:(double)arg2 y:(double)arg3;
- (id)init;
- (void)invalidateBitmapContext;
- (BOOL)isPointInPathWithX:(double)arg1 y:(double)arg2;
- (void)lineToX:(double)arg1 y:(double)arg2;
- (id)measureText:(id)arg1;
- (void)moveToX:(double)arg1 y:(double)arg2;
- (struct CGColor *)newColorFromString:(id)arg1;
- (void)quadraticCurveToCP1x:(double)arg1 cp1y:(double)arg2 x:(double)arg3 y:(double)arg4;
- (void)rectWithX:(double)arg1 y:(double)arg2 width:(double)arg3 height:(double)arg4;
- (void)resizeBitmapContext;
- (void)restore;
- (void)rotateWithAngle:(double)arg1;
- (void)save;
- (void)setLineDashWithSegments:(id)arg1;
- (void)setTransformWithA:(double)arg1 b:(double)arg2 c:(double)arg3 d:(double)arg4 e:(double)arg5 f:(double)arg6;
- (void)stroke;
- (void)strokeTextWithString:(id)arg1 x:(double)arg2 y:(double)arg3;
- (void)textWithString:(id)arg1 x:(double)arg2 y:(double)arg3 drawingMode:(int)arg4;
- (void)translateWithX:(double)arg1 y:(double)arg2;

@end

