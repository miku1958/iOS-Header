//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <CoreChart/CCAsyncQueueDelegate-Protocol.h>
#import <CoreChart/CCVegaWorkerClientDelegate-Protocol.h>

@class CALayer, CCAsyncQueue, CCVegaCARenderer, CCVegaExpressionFunctions, CCVegaHTMLElement, CCVegaWorker, CCVegaWorkerClient, CCViewRendererDelegate, JSValue, NSArray, NSCalendar, NSLocale, NSMutableSet, NSString, UITraitCollection;
@protocol CCVegaRendererDelegate;

@interface CCVegaRenderer : NSObject <CCAsyncQueueDelegate, CCVegaWorkerClientDelegate>
{
    NSLocale *_locale;
    NSCalendar *_calendar;
    CCVegaExpressionFunctions *_builtinExpressionFunctions;
    double _width;
    double _height;
    struct CGImage *_currentCGImage;
    double _currentCGImageScaleFactor;
    BOOL _needsUpdateFromMainThread;
    NSMutableSet *_pendingDataUpdates;
    double _internalScaleFactor;
    double _internalZoomFactor;
    CALayer *_caLayer;
    NSArray *_data;
    BOOL _isActive;
    double _scaleFactor;
    double _zoomFactor;
    UITraitCollection *_traitCollection;
    unsigned int rendererType;
    CCVegaWorker *worker;
    CCVegaWorkerClient *workerClient;
    NSString *spec;
    NSString *config;
    CCVegaHTMLElement *container;
    CCVegaCARenderer *CARenderer;
    CCViewRendererDelegate *viewDelegate;
    CCAsyncQueue *asyncQueue;
    JSValue *renderer;
    NSObject<CCVegaRendererDelegate> *delegate;
    struct CGImage *currentCGImage;
}

@property (strong) CCVegaCARenderer *CARenderer; // @synthesize CARenderer;
@property (strong, nonatomic) CCAsyncQueue *asyncQueue; // @synthesize asyncQueue;
@property (strong) CALayer *caLayer;
@property (strong) NSCalendar *calendar;
@property (strong, nonatomic) NSString *config; // @synthesize config;
@property (strong, nonatomic) CCVegaHTMLElement *container; // @synthesize container;
@property struct CGImage *currentCGImage; // @synthesize currentCGImage;
@property (strong, nonatomic) NSArray *data;
@property (weak) NSObject<CCVegaRendererDelegate> *delegate; // @synthesize delegate;
@property BOOL isActive;
@property (strong) NSLocale *locale;
@property (strong, nonatomic) JSValue *renderer; // @synthesize renderer;
@property unsigned int rendererType; // @synthesize rendererType;
@property double scaleFactor;
@property (strong, nonatomic) NSString *spec; // @synthesize spec;
@property (readonly) BOOL specIsValid;
@property (strong) UITraitCollection *traitCollection;
@property (strong) CCViewRendererDelegate *viewDelegate; // @synthesize viewDelegate;
@property (strong) CCVegaWorker *worker; // @synthesize worker;
@property (strong) CCVegaWorkerClient *workerClient; // @synthesize workerClient;
@property double zoomFactor;

- (void).cxx_destruct;
- (void)_doUpdateInMainThread;
- (id)accessibilityElements;
- (id)addListener:(CDUnknownBlockType)arg1 toSignalWithName:(id)arg2;
- (void)addPendingDataUpdate:(id)arg1;
- (void)changeDefaultDatasetByInserting:(id)arg1 removingIDs:(id)arg2;
- (void)changeNamedDataset:(id)arg1 inserting:(id)arg2 removingIDs:(id)arg3;
- (void)changeNamedDataset:(id)arg1 inserting:(id)arg2 removingWithCallback:(CDUnknownBlockType)arg3;
- (void)clearPendingDataUpdates;
- (struct CGImage *)currentBitmap;
- (double)currentBitmapScaleFactor;
- (id)cursor;
- (void)dealloc;
- (void)displayWithCommitter:(id)arg1;
- (void)enqueueRunAsync;
- (id)fontOptions;
- (id)getSignalWithName:(id)arg1;
- (BOOL)hasPendingDataUpdate:(id)arg1;
- (double)height;
- (id)initWithSpec:(id)arg1 config:(id)arg2 options:(id)arg3 workerClient:(id)arg4;
- (void)loadState:(id)arg1;
- (struct CGColor *)newColorFromCSSString:(id)arg1;
- (struct CGColor *)newColorFromCSSString:(id)arg1 alpha:(double)arg2;
- (id)newDataWithPDFImage;
- (struct CGImage *)newImageFromURL:(id)arg1;
- (void)refreshNativeSignals;
- (void)refreshNativeSignalsRerunDataflow:(BOOL)arg1;
- (void)removeListener:(id)arg1 fromSignalWithName:(id)arg2;
- (struct CGImage *)renderToCGImage;
- (void)rerender;
- (void)rerenderEntireChart;
- (void)runAsync;
- (void)runAsyncWithCallback:(CDUnknownBlockType)arg1;
- (id)saveStateWithNamedDatasets:(id)arg1;
- (void)scheduleDisplay;
- (void)setDefaultDataset:(id)arg1;
- (void)setLocale:(id)arg1 calendar:(id)arg2 shouldRefresh:(BOOL)arg3;
- (void)setNamedDataset:(id)arg1 rows:(id)arg2;
- (void)setSignalWithName:(id)arg1 toValue:(id)arg2;
- (void)setSize:(struct CGSize)arg1;
- (void)setupScreenSignal;
- (void)setupSignalHandlers;
- (void)simplifyQueue:(id)arg1;
- (void)triggerEventWithType:(id)arg1 event:(id)arg2 waitForEventHandling:(BOOL)arg3;
- (void)updateInMainThreadIfNeeded;
- (void)updateNativeView;
- (void)updateScaleFactor:(double)arg1 zoomFactor:(double)arg2;
- (id)vegaContext;
- (double)width;
- (void)workerContextEnter;
- (void)workerContextExit;
- (void)workerDidExecuteTimerCallback;

@end

