//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <EmailDaemon/EFLoggable-Protocol.h>

@class EDInMemoryThreadQueryHandler, EDThreadPersistence, EFLocked, EMThreadScope, NSString;
@protocol EDThreadMigratorDelegate, EFScheduler;

@interface EDThreadMigrator : NSObject <EFLoggable>
{
    EMThreadScope *_threadScope;
    EFLocked *_state;
    id<EFScheduler> _workScheduler;
    EDThreadPersistence *_threadPersistence;
    EDInMemoryThreadQueryHandler *_queryHandler;
    id<EDThreadMigratorDelegate> _delegate;
    double _threadFinalizationInterval;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, weak, nonatomic) id<EDThreadMigratorDelegate> delegate; // @synthesize delegate=_delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) EDInMemoryThreadQueryHandler *queryHandler; // @synthesize queryHandler=_queryHandler;
@property (readonly, nonatomic) EFLocked *state; // @synthesize state=_state;
@property (readonly) Class superclass;
@property (nonatomic) double threadFinalizationInterval; // @synthesize threadFinalizationInterval=_threadFinalizationInterval;
@property (readonly, nonatomic) EDThreadPersistence *threadPersistence; // @synthesize threadPersistence=_threadPersistence;
@property (readonly, nonatomic) EMThreadScope *threadScope; // @synthesize threadScope=_threadScope;
@property (readonly, nonatomic) id<EFScheduler> workScheduler; // @synthesize workScheduler=_workScheduler;

+ (id)log;
- (void).cxx_destruct;
- (void)_failMigration;
- (void)_finishMigrating;
- (void)_migrateNextBatchWithGeneration:(unsigned long long)arg1;
- (void)_scheduleFinalizationForBatchedObjectIDs:(id)arg1 withGeneration:(unsigned long long)arg2 forDelete:(BOOL)arg3;
- (void)addObjectIDsToMigrate:(id)arg1;
- (void)cancel;
- (void)changeObjectIDsToMigrate:(id)arg1;
- (void)deleteObjectIDsToMigrate:(id)arg1;
- (id)initWithThreadScope:(id)arg1 threadPersistence:(id)arg2 queryHandler:(id)arg3 delegate:(id)arg4;
- (void)reset;
- (void)start;

@end

