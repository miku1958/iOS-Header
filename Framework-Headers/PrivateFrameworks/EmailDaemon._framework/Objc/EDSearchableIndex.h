//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <EmailDaemon/CSSearchableIndexDelegate-Protocol.h>
#import <EmailDaemon/EDSearchableIndexSchedulable-Protocol.h>
#import <EmailDaemon/EDSearchableIndexVerifierDataSource-Protocol.h>
#import <EmailDaemon/EFLoggable-Protocol.h>
#import <EmailDaemon/EFSignpostable-Protocol.h>
#import <EmailDaemon/EMSearchableIndexInterface-Protocol.h>

@class CSSearchableIndex, EFCancelationToken, EFFuture, EFLazyCache, EFObservable, EFStoppableScheduler, NSMutableArray, NSMutableSet, NSString, _EMSearchableIndexPendingRemovals;
@protocol EDSearchableIndexDataSource, EDSearchableIndexReasonProvider, EDSearchableIndexSchedulableDelegate, EFAssertableScheduler, EFCancelable, EFSuspendableScheduler><EFAssertableScheduler, OS_os_activity;

@interface EDSearchableIndex : NSObject <CSSearchableIndexDelegate, EDSearchableIndexVerifierDataSource, EFLoggable, EFSignpostable, EDSearchableIndexSchedulable, EMSearchableIndexInterface>
{
    NSString *_indexName;
    EFCancelationToken *_cancelationToken;
    EFStoppableScheduler<EFAssertableScheduler> *_stateTransitionScheduler;
    id<EFCancelable> _coalescingTimer;
    long long _resumeCount;
    long long _transaction;
    unsigned long long _throttledIndexingBatchSize;
    unsigned long long _throttledDataSourceBatchSize;
    unsigned long long _currentMaximumBatchSize;
    NSObject<OS_os_activity> *_batchIndexingActivity;
    NSMutableSet *_removedIdentifiers;
    NSMutableArray *_preparingItems;
    NSMutableArray *_pendingItems;
    NSMutableArray *_preprocessingItems;
    NSMutableArray *_processingItems;
    NSMutableSet *_pendingDomainRemovals;
    _EMSearchableIndexPendingRemovals *_pendingIdentifierRemovals;
    EFStoppableScheduler<EFSuspendableScheduler><EFAssertableScheduler> *_indexingScheduler;
    EFStoppableScheduler *_dataSourceScheduler;
    EFStoppableScheduler *_addIndexItemsScheduler;
    EFStoppableScheduler *_preprocessingScheduler;
    struct os_unfair_lock_s _mainThreadAccessibleIvarLock;
    EFStoppableScheduler *_indexingBatchScheduler;
    EFLazyCache *_searchResultsCache;
    BOOL _isActive;
    BOOL _needsRefresh;
    BOOL _needsVerification;
    BOOL _coalesceTimerFired;
    BOOL _scheduledProcessing;
    BOOL _scheduledRefresh;
    BOOL _scheduledVerification;
    BOOL _indexImmediately;
    _Atomic long long _countOfBlocksAffectingDataSourceAndIndex;
    BOOL _dataSourceIndexingPermitted;
    BOOL _persistenceAvailable;
    BOOL _skipIndexExclusionCheck;
    BOOL _clientStateFetched;
    BOOL _enableSpotlightVerification;
    id<EDSearchableIndexDataSource> _dataSource;
    id<EDSearchableIndexReasonProvider> _reasonProvider;
    id<EDSearchableIndexSchedulableDelegate> _schedulableDelegate;
    CSSearchableIndex *_csIndex;
    NSString *_searchableIndexBundleID;
    double _coalescingDelaySeconds;
    double _dataSourceUpdateTimeLimit;
    EFFuture *_delayDataSourceAssignmentFuture;
}

@property (readonly, getter=isActive) BOOL active;
@property (readonly, nonatomic) BOOL canIndexAttachments;
@property (nonatomic) BOOL clientStateFetched; // @synthesize clientStateFetched=_clientStateFetched;
@property (nonatomic) double coalescingDelaySeconds; // @synthesize coalescingDelaySeconds=_coalescingDelaySeconds;
@property (readonly, copy, nonatomic) NSString *copyDiagnosticInformation;
@property (strong, nonatomic) CSSearchableIndex *csIndex; // @synthesize csIndex=_csIndex;
@property (weak, nonatomic) id<EDSearchableIndexDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property (nonatomic, getter=isDataSourceIndexingPermitted) BOOL dataSourceIndexingPermitted; // @synthesize dataSourceIndexingPermitted=_dataSourceIndexingPermitted;
@property (nonatomic) double dataSourceUpdateTimeLimit; // @synthesize dataSourceUpdateTimeLimit=_dataSourceUpdateTimeLimit;
@property (readonly, copy) NSString *debugDescription;
@property (strong, nonatomic) EFFuture *delayDataSourceAssignmentFuture; // @synthesize delayDataSourceAssignmentFuture=_delayDataSourceAssignmentFuture;
@property (readonly, copy) NSString *description;
@property (nonatomic) BOOL enableSpotlightVerification; // @synthesize enableSpotlightVerification=_enableSpotlightVerification;
@property (readonly) unsigned long long hash;
@property (readonly, copy, nonatomic) NSString *indexName;
@property (readonly, nonatomic) unsigned long long pendingIndexItemsCount;
@property (readonly, getter=isPerformingBlockAffectingDataSourceAndIndex) BOOL performingBlockAffectingDataSourceAndIndex;
@property (getter=isPersistenceAvailable) BOOL persistenceAvailable; // @synthesize persistenceAvailable=_persistenceAvailable;
@property (readonly, nonatomic, getter=isPluggedIn) BOOL pluggedIn;
@property (readonly, nonatomic) EFObservable *powerObservable;
@property (weak, nonatomic) id<EDSearchableIndexReasonProvider> reasonProvider; // @synthesize reasonProvider=_reasonProvider;
@property (readonly) long long resumeCount;
@property (weak, nonatomic) id<EDSearchableIndexSchedulableDelegate> schedulableDelegate; // @synthesize schedulableDelegate=_schedulableDelegate;
@property (copy, nonatomic) NSString *searchableIndexBundleID; // @synthesize searchableIndexBundleID=_searchableIndexBundleID;
@property (readonly, nonatomic) BOOL shouldCancelSearchQuery;
@property (readonly) unsigned long long signpostID;
@property (nonatomic) BOOL skipIndexExclusionCheck; // @synthesize skipIndexExclusionCheck=_skipIndexExclusionCheck;
@property (readonly) Class superclass;
@property (readonly, getter=_transaction) long long transaction;

+ (id)_localClientState;
+ (id)_localClientStateURL;
+ (void)_saveLocalClientState:(id)arg1;
+ (BOOL)isIncrementalIndexingType:(long long)arg1;
+ (BOOL)isValidTransaction:(long long)arg1;
+ (id)log;
+ (id)signpostLog;
+ (id)userHandle;
- (void).cxx_destruct;
- (void)_clearOrphanedSearchableMessagesFromDatabase;
- (void)_coalescingTimerFired;
- (id)_consumeBatchOfSize:(unsigned long long)arg1;
- (unsigned long long)_countOfItemsInPendingQueues;
- (void)_dataSourceAssignTransaction:(long long)arg1 forIdentifiers:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_dataSourceAssignTransaction:(long long)arg1 updates:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_dataSourceInvalidateItemsGreaterThanTransaction:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_dataSourcePrepareToIndexItems:(id)arg1 fromRefresh:(BOOL)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)_dataSourceRequestNeededUpdatesExcludingIdentifiers:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_dataSourceScheduleWork:(CDUnknownBlockType)arg1;
- (void)_dataSourceVerifyRepresentativeSampleWithCompletion:(CDUnknownBlockType)arg1;
- (void)_doIndexItems:(id)arg1 fromRefresh:(BOOL)arg2 immediately:(BOOL)arg3;
- (id)_eventDataForTransitionState:(id)arg1;
- (void)_fetchLastClientState;
- (void)_getDomainRemovals:(id *)arg1 identifierRemovals:(id *)arg2;
- (void)_handleFailingTransactionIDs:(id)arg1;
- (id)_identifiersForItems:(id)arg1;
- (id)_identifiersStringForItems:(id)arg1 maxLength:(unsigned long long)arg2;
- (void)_indexItems:(id)arg1 fromRefresh:(BOOL)arg2 immediately:(BOOL)arg3;
- (void)_invalidateCache;
- (void)_invalidateItemsInTransactions:(id)arg1;
- (void)_logSignpostForIndexingBatchAssignedDomainRemovalCount:(unsigned long long)arg1;
- (void)_logSignpostForIndexingBatchAssignedUpdatesWithItemsIndexedCount:(unsigned long long)arg1;
- (void)_logSignpostForIndexingBatchCompletedWithItemsIndexedCount:(id)arg1;
- (void)_logSignpostForIndexingBatchStartWithPendingItemsCount:(id)arg1;
- (long long)_nextTransaction;
- (void)_noteNeedsLastClientStateFetch;
- (id)_pendingIdentifiers;
- (void)_powerStateChanged;
- (BOOL)_preprocessItemIfNecessary:(id)arg1 fromRefresh:(BOOL)arg2;
- (id)_processDomainRemovals:(id)arg1;
- (void)_processIdentifierRemovals:(id)arg1;
- (BOOL)_processIndexingBatch:(id)arg1 clientState:(id)arg2 itemsNotIndexed:(id)arg3;
- (void)_processRefreshRequestWithCompletion:(CDUnknownBlockType)arg1;
- (void)_processSpotlightVerificationWithCompletion:(CDUnknownBlockType)arg1;
- (void)_queueConsumeBudgetElapsedPeriod:(double)arg1;
- (void)_queueConsumeBudgetItemCount:(unsigned long long)arg1;
- (BOOL)_queueContentsAllowsRefresh;
- (void)_queueRefresh;
- (void)_queueTransitionActive:(BOOL)arg1 fromRefresh:(BOOL)arg2;
- (void)_registerDistantFutureSpotlightVerification;
- (void)_resume;
- (void)_resumeIndexingScheduler;
- (void)_scheduleDataSourceRefresh;
- (void)_scheduleProcessPendingItemsFromRefresh:(BOOL)arg1;
- (void)_scheduleSpotlightVerification;
- (void)_scheduleSpotlightVerificationOnIndexingQueueWithCompletion:(CDUnknownBlockType)arg1;
- (void)_startCoalescingTimer;
- (void)_stopCoalescingTimer;
- (void)_suspend;
- (void)_suspendIndexingScheduler;
- (double)_throttleRequestedSize:(unsigned long long *)arg1 targetTime:(double)arg2 action:(CDUnknownBlockType)arg3;
- (void)_transitionWithBudgetTimeUsed:(double)arg1;
- (void)_verifySpotlightIndex;
- (void)addSearchQueryCancelable:(id)arg1;
- (void)applicationWillResume;
- (void)applicationWillSuspend;
- (void)beginUpdatesAffectingDataSourceAndIndex;
- (id)bundleIdentifierForSearchableIndexVerifier:(id)arg1;
- (id)currentReasons;
- (id)dataSamplesForSearchableIndexVerifier:(id)arg1 searchableIndex:(id)arg2 count:(unsigned long long)arg3 lastVerifiedMessageID:(long long)arg4;
- (id)dataSourceRefreshReasons;
- (void)dealloc;
- (void)endUpdatesAffectingDataSourceAndIndex;
- (id)exclusionReasons;
- (id)identifiersMatchingCriterion:(id)arg1;
- (void)indexAttachmentsForMessageWithIdentifier:(id)arg1;
- (void)indexItems:(id)arg1;
- (void)indexItems:(id)arg1 fromRefresh:(BOOL)arg2 immediately:(BOOL)arg3;
- (void)indexItems:(id)arg1 immediately:(BOOL)arg2;
- (void)indexMessages:(id)arg1 includeBody:(BOOL)arg2 indexingType:(long long)arg3;
- (id)indexedEmptySubjectIdentifers;
- (id)initWithName:(id)arg1 dataSource:(id)arg2 reasonProvider:(id)arg3;
- (id)issueDiagnosticsRequestForMessageRowId:(id)arg1;
- (void)logPowerEventWithIdentifier:(id)arg1 eventData:(id)arg2;
- (void)markMessagesAsPrinted:(id)arg1;
- (id)messageIDsMatchingQuery:(id)arg1;
- (void)performBlockAffectingDataSourceAndIndex:(CDUnknownBlockType)arg1;
- (id)purgeReasons;
- (void)refresh;
- (void)reindexAllItemsWithOptions:(unsigned long long)arg1 acknowledgementHandler:(CDUnknownBlockType)arg2;
- (void)reindexAllSearchableItemsWithAcknowledgementHandler:(CDUnknownBlockType)arg1;
- (void)reindexSearchableItemsWithIdentifiers:(id)arg1 acknowledgementHandler:(CDUnknownBlockType)arg2;
- (void)removeAllItems;
- (void)removeAllItemsWithAcknowledgementHandler:(CDUnknownBlockType)arg1;
- (void)removeItemsForDomainIdentifier:(id)arg1;
- (void)removeItemsWithIdentifiers:(id)arg1;
- (void)removeItemsWithIdentifiers:(id)arg1 reasons:(id)arg2 fromRefresh:(BOOL)arg3;
- (void)removeMessages:(id)arg1;
- (void)removeSearchQueryCancelable:(id)arg1;
- (void)resume;
- (void)scheduleRecurringActivity;
- (void)searchableIndex:(id)arg1 reindexAllSearchableItemsWithAcknowledgementHandler:(CDUnknownBlockType)arg2;
- (void)searchableIndex:(id)arg1 reindexSearchableItemsWithIdentifiers:(id)arg2 acknowledgementHandler:(CDUnknownBlockType)arg3;
- (id)searchableIndexForSearchableIndexVerifier:(id)arg1;
- (void)setForeground:(BOOL)arg1;
- (void)suspend;
- (void)test_tearDown;

@end

