//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <AXRuntime/UIElementProtocol-Protocol.h>

@class NSString;

@interface AXUIElement : NSObject <UIElementProtocol>
{
    struct __AXUIElement *_axElement;
    long long _cachedRefCount;
    struct __CFDictionary *_cachedAttributes;
    BOOL _isValid;
}

@property (readonly, nonatomic) struct __AXUIElement *axElement; // @synthesize axElement=_axElement;
@property (nonatomic) struct __CFDictionary *cachedAttributes; // @synthesize cachedAttributes=_cachedAttributes;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

+ (void)applyElementAttributeCacheScheme:(int)arg1;
+ (void)initialize;
+ (struct __AXUIElement *)systemWideAXUIElement;
+ (id)uiApplicationAtCoordinate:(struct CGPoint)arg1;
+ (id)uiElementAtCoordinate:(struct CGPoint)arg1;
+ (id)uiElementAtCoordinate:(struct CGPoint)arg1 hitTestOrientation:(int)arg2;
+ (id)uiElementAtCoordinate:(struct CGPoint)arg1 startWithElement:(id)arg2;
+ (id)uiElementWithAXElement:(struct __AXUIElement *)arg1;
+ (id)uiElementWithAXElement:(struct __AXUIElement *)arg1 cache:(struct __CFDictionary *)arg2;
+ (id)uiSystemWideApplication;
- (id)_attributedValueForRange:(struct _NSRange)arg1;
- (void *)_cachedValueForAttribute:(int)arg1;
- (void)_createCache:(BOOL)arg1;
- (id)_elementsWithParameter:(int)arg1 andCount:(unsigned long long)arg2;
- (void)_invalidate;
- (long long)_lineEndPosition;
- (struct _NSRange)_lineRangeForPosition:(unsigned long long)arg1;
- (long long)_lineStartPosition;
- (id)_objectForRange:(struct _NSRange)arg1 withParameterizedAttribute:(int)arg2;
- (id)_outputCache;
- (struct _NSRange)_selectedTextRange;
- (id)_valueForRange:(struct _NSRange)arg1;
- (id)arrayWithAXAttribute:(int)arg1;
- (BOOL)boolWithAXAttribute:(int)arg1;
- (BOOL)canPerformAXAction:(int)arg1;
- (void)dealloc;
- (void)disableCache;
- (void)enableCache:(BOOL)arg1;
- (id)initWithAXElement:(struct __AXUIElement *)arg1;
- (id)initWithAXElement:(struct __AXUIElement *)arg1 cache:(struct __CFDictionary *)arg2;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isMockElement;
- (BOOL)isValid;
- (BOOL)isValidForApplication:(id)arg1;
- (void *)modifyStaticCacheValue:(void *)arg1;
- (struct _NSRange)nextCursorRangeInDirection:(unsigned long long)arg1 unit:(unsigned long long)arg2 outputRange:(struct _NSRange *)arg3;
- (struct _NSRange)nextCursorRangeInDirection:(unsigned long long)arg1 unit:(unsigned long long)arg2 outputRange:(struct _NSRange *)arg3 currentCursorRange:(struct _NSRange)arg4;
- (id)nextElementsWithCount:(unsigned long long)arg1;
- (id)numberWithAXAttribute:(int)arg1;
- (id)objectWithAXAttribute:(int)arg1;
- (id)objectWithAXAttribute:(int)arg1 parameter:(void *)arg2;
- (struct CGPath *)pathWithAXAttribute:(int)arg1;
- (BOOL)performAXAction:(int)arg1;
- (BOOL)performAXAction:(int)arg1 withValue:(id)arg2;
- (int)pid;
- (struct CGPoint)pointWithAXAttribute:(int)arg1;
- (id)previousElementsWithCount:(unsigned long long)arg1;
- (struct _NSRange)rangeWithAXAttribute:(int)arg1;
- (struct CGRect)rectWithAXAttribute:(int)arg1;
- (void)setAXAttribute:(int)arg1 withArray:(id)arg2;
- (void)setAXAttribute:(int)arg1 withBOOL:(BOOL)arg2;
- (void)setAXAttribute:(int)arg1 withFloat:(float)arg2;
- (void)setAXAttribute:(int)arg1 withLong:(long long)arg2;
- (void)setAXAttribute:(int)arg1 withNumber:(id)arg2;
- (void)setAXAttribute:(int)arg1 withObject:(id)arg2;
- (void)setAXAttribute:(int)arg1 withObject:(id)arg2 synchronous:(BOOL)arg3;
- (void)setAXAttribute:(int)arg1 withPoint:(struct CGPoint)arg2;
- (void)setAXAttribute:(int)arg1 withRange:(struct _NSRange)arg2;
- (void)setAXAttribute:(int)arg1 withSize:(struct CGSize)arg2;
- (void)setAXAttribute:(int)arg1 withString:(id)arg2;
- (void)setAXAttribute:(int)arg1 withUIElement:(id)arg2;
- (void)setAXAttribute:(int)arg1 withUIElementArray:(id)arg2;
- (void)setAXElement:(struct __AXUIElement *)arg1;
- (id)stringWithAXAttribute:(int)arg1;
- (id)uiElementsWithAttribute:(int)arg1;
- (id)uiElementsWithAttribute:(int)arg1 parameter:(void *)arg2;
- (void)updateCache:(int)arg1;
- (void)updateCacheWithAttributes:(id)arg1;
- (id)valueArrayWithAXAttributes:(struct __CFArray *)arg1;

@end

