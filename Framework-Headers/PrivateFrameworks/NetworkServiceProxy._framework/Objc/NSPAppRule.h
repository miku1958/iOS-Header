//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <NetworkExtension/NEAppRule.h>

@class NSArray, NSData, NSDate, NSNumber, NSPNetworkAgent, NSString, NSUUID, NWNetworkAgentRegistration;

@interface NSPAppRule : NEAppRule
{
    BOOL _disabledByRatio;
    NSNumber *_disableFallback;
    NSNumber *_enableDirectMultipath;
    NSNumber *_enableDirectTFO;
    NSNumber *_enableDirectExtendedValidation;
    NSArray *_directTLSPorts;
    NSNumber *_divertDNSOnly;
    NSNumber *_noDNSDelegation;
    NSNumber *_serviceID;
    NSNumber *_enabled;
    NSNumber *_fallbackTimeout;
    NSNumber *_fallbackBufferLimit;
    NSNumber *_fallbackCountBeforeImmediateFallback;
    NSString *_proxyEvaluationPath;
    NSNumber *_useCustomProtocol;
    NSNumber *_useLocalFlowDivert;
    NSNumber *_enableDirectRace;
    NSString *_label;
    NSString *_edgeSetIdentifier;
    NSNumber *_connectionTimeout;
    NSNumber *_connectionIdleTimeout;
    NSNumber *_enableMultipath;
    NSNumber *_enableTFO;
    NSNumber *_requireTFO;
    NSNumber *_useTFOHeuristics;
    NSNumber *_enableNoTFOCookie;
    NSNumber *_enableUDPRace;
    NSNumber *_enableRatio;
    NSNumber *_reenableInterval;
    NSNumber *_telemetryRatio;
    NSNumber *_shouldComposeInitialData;
    NSNumber *_enableOptInPerTask;
    NSArray *_matchEffectiveApplications;
    NSString *_locationBundlePath;
    NSNumber *_initialWindowSize;
    NSPAppRule *_defaults;
    NSPNetworkAgent *_agent;
    NWNetworkAgentRegistration *_agentRegistration;
    NSUUID *_configurationIdentifier;
    NSDate *_enableCheckDate;
    NSData *_updateHash;
}

@property (strong, nonatomic) NSPNetworkAgent *agent; // @synthesize agent=_agent;
@property (strong, nonatomic) NWNetworkAgentRegistration *agentRegistration; // @synthesize agentRegistration=_agentRegistration;
@property (strong, nonatomic) NSUUID *configurationIdentifier; // @synthesize configurationIdentifier=_configurationIdentifier;
@property (copy, nonatomic) NSNumber *connectionIdleTimeout; // @synthesize connectionIdleTimeout=_connectionIdleTimeout;
@property (copy, nonatomic) NSNumber *connectionTimeout; // @synthesize connectionTimeout=_connectionTimeout;
@property (strong, nonatomic) NSPAppRule *defaults; // @synthesize defaults=_defaults;
@property (copy, nonatomic) NSArray *directTLSPorts; // @synthesize directTLSPorts=_directTLSPorts;
@property (copy, nonatomic) NSNumber *disableFallback; // @synthesize disableFallback=_disableFallback;
@property (nonatomic) BOOL disabledByRatio; // @synthesize disabledByRatio=_disabledByRatio;
@property (copy, nonatomic) NSNumber *divertDNSOnly; // @synthesize divertDNSOnly=_divertDNSOnly;
@property (copy, nonatomic) NSString *edgeSetIdentifier; // @synthesize edgeSetIdentifier=_edgeSetIdentifier;
@property (strong, nonatomic) NSDate *enableCheckDate; // @synthesize enableCheckDate=_enableCheckDate;
@property (copy, nonatomic) NSNumber *enableDirectExtendedValidation; // @synthesize enableDirectExtendedValidation=_enableDirectExtendedValidation;
@property (copy, nonatomic) NSNumber *enableDirectMultipath; // @synthesize enableDirectMultipath=_enableDirectMultipath;
@property (copy, nonatomic) NSNumber *enableDirectRace; // @synthesize enableDirectRace=_enableDirectRace;
@property (copy, nonatomic) NSNumber *enableDirectTFO; // @synthesize enableDirectTFO=_enableDirectTFO;
@property (copy, nonatomic) NSNumber *enableMultipath; // @synthesize enableMultipath=_enableMultipath;
@property (copy, nonatomic) NSNumber *enableNoTFOCookie; // @synthesize enableNoTFOCookie=_enableNoTFOCookie;
@property (copy, nonatomic) NSNumber *enableOptInPerTask; // @synthesize enableOptInPerTask=_enableOptInPerTask;
@property (copy, nonatomic) NSNumber *enableRatio; // @synthesize enableRatio=_enableRatio;
@property (copy, nonatomic) NSNumber *enableTFO; // @synthesize enableTFO=_enableTFO;
@property (copy, nonatomic) NSNumber *enableUDPRace; // @synthesize enableUDPRace=_enableUDPRace;
@property (copy, nonatomic) NSNumber *enabled; // @synthesize enabled=_enabled;
@property (copy, nonatomic) NSNumber *fallbackBufferLimit; // @synthesize fallbackBufferLimit=_fallbackBufferLimit;
@property (copy, nonatomic) NSNumber *fallbackCountBeforeImmediateFallback; // @synthesize fallbackCountBeforeImmediateFallback=_fallbackCountBeforeImmediateFallback;
@property (copy, nonatomic) NSNumber *fallbackTimeout; // @synthesize fallbackTimeout=_fallbackTimeout;
@property (copy, nonatomic) NSNumber *initialWindowSize; // @synthesize initialWindowSize=_initialWindowSize;
@property (copy, nonatomic) NSString *label; // @synthesize label=_label;
@property (copy, nonatomic) NSString *locationBundlePath; // @synthesize locationBundlePath=_locationBundlePath;
@property (copy, nonatomic) NSArray *matchEffectiveApplications; // @synthesize matchEffectiveApplications=_matchEffectiveApplications;
@property (copy, nonatomic) NSNumber *noDNSDelegation; // @synthesize noDNSDelegation=_noDNSDelegation;
@property (copy, nonatomic) NSString *proxyEvaluationPath; // @synthesize proxyEvaluationPath=_proxyEvaluationPath;
@property (copy, nonatomic) NSNumber *reenableInterval; // @synthesize reenableInterval=_reenableInterval;
@property (copy, nonatomic) NSNumber *requireTFO; // @synthesize requireTFO=_requireTFO;
@property (copy, nonatomic) NSNumber *serviceID; // @synthesize serviceID=_serviceID;
@property (copy, nonatomic) NSNumber *shouldComposeInitialData; // @synthesize shouldComposeInitialData=_shouldComposeInitialData;
@property (copy, nonatomic) NSNumber *telemetryRatio; // @synthesize telemetryRatio=_telemetryRatio;
@property (strong, nonatomic) NSData *updateHash; // @synthesize updateHash=_updateHash;
@property (copy, nonatomic) NSNumber *useCustomProtocol; // @synthesize useCustomProtocol=_useCustomProtocol;
@property (copy, nonatomic) NSNumber *useLocalFlowDivert; // @synthesize useLocalFlowDivert=_useLocalFlowDivert;
@property (copy, nonatomic) NSNumber *useTFOHeuristics; // @synthesize useTFOHeuristics=_useTFOHeuristics;

+ (id)copyUUIDsForSigningIdentifier:(id)arg1 executablePath:(id)arg2;
+ (void)loadAppRules:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
+ (BOOL)supportsSecureCoding;
+ (id)validateRuleDictionary:(id)arg1;
- (void).cxx_destruct;
- (id)copyAccountIdentifierConditions;
- (id)copyExecutableConditions;
- (id)copyMatchDomainConditions;
- (id)copyMatchEffectiveApplicationConditions;
- (id)copyTLVData;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initFromDictionary:(id)arg1;
- (id)initFromTLVs:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (void)merge:(id)arg1;
- (void)saveWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)teardownNetworkAgent;
- (BOOL)updateNetworkAgent;

@end

