//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSDate, NSMutableDictionary, NSPAppRule, NSUUID;
@protocol NPTunnelDelegate, OS_dispatch_data, OS_nw_endpoint, OS_nw_interface, OS_nw_parameters, OS_nw_path;

@interface NPTunnel : NSObject
{
    struct nw_protocol _protocol;
    NSObject<OS_dispatch_data> *_savedData;
    void *_idleTimer;
    BOOL _isTFOProbeSucceeded;
    BOOL _isCancelled;
    BOOL _isReadyForData;
    BOOL _eof;
    BOOL _handledDisconnected;
    BOOL _disableIdleTimeout;
    int _error;
    NSUUID *_identifier;
    NSObject<OS_nw_parameters> *_parameters;
    NSObject<OS_nw_endpoint> *_endpoint;
    NSObject<OS_nw_endpoint> *_localEndpoint;
    NSObject<OS_nw_path> *_path;
    id<NPTunnelDelegate> _delegate;
    NSMutableDictionary *_flows;
    NSPAppRule *_appRule;
    NSDate *_connectionStartDate;
    double _timeToFirstRequest;
    double _timeToFirstByte;
    long long _connectionState;
    long long _fallbackReason;
    unsigned long long *_timestamps;
}

@property (readonly, nonatomic) NSPAppRule *appRule; // @synthesize appRule=_appRule;
@property (readonly, nonatomic) BOOL canHandleMoreData;
@property (strong, nonatomic) NSDate *connectionStartDate; // @synthesize connectionStartDate=_connectionStartDate;
@property (nonatomic) long long connectionState; // @synthesize connectionState=_connectionState;
@property (readonly, weak, nonatomic) id<NPTunnelDelegate> delegate; // @synthesize delegate=_delegate;
@property (nonatomic) BOOL disableIdleTimeout; // @synthesize disableIdleTimeout=_disableIdleTimeout;
@property (readonly, nonatomic) NSObject<OS_nw_endpoint> *endpoint; // @synthesize endpoint=_endpoint;
@property (nonatomic) BOOL eof; // @synthesize eof=_eof;
@property (nonatomic) int error; // @synthesize error=_error;
@property (nonatomic) long long fallbackReason; // @synthesize fallbackReason=_fallbackReason;
@property (readonly, nonatomic) NSMutableDictionary *flows; // @synthesize flows=_flows;
@property (nonatomic) BOOL handledDisconnected; // @synthesize handledDisconnected=_handledDisconnected;
@property (readonly, nonatomic) NSUUID *identifier; // @synthesize identifier=_identifier;
@property (readonly, nonatomic) unsigned long long initialWindowSize;
@property (nonatomic) BOOL isCancelled; // @synthesize isCancelled=_isCancelled;
@property (readonly, nonatomic) BOOL isConnectionAlive;
@property (readonly, nonatomic) BOOL isReadyForData; // @synthesize isReadyForData=_isReadyForData;
@property (readonly, nonatomic) BOOL isTFOProbeSucceeded; // @synthesize isTFOProbeSucceeded=_isTFOProbeSucceeded;
@property (strong, nonatomic) NSObject<OS_nw_endpoint> *localEndpoint; // @synthesize localEndpoint=_localEndpoint;
@property (readonly, nonatomic) NSObject<OS_nw_interface> *outputInterface;
@property (readonly, nonatomic) NSObject<OS_nw_parameters> *parameters; // @synthesize parameters=_parameters;
@property (strong, nonatomic) NSObject<OS_nw_path> *path; // @synthesize path=_path;
@property (readonly, nonatomic) struct nw_protocol *protocol;
@property (nonatomic) double timeToFirstByte; // @synthesize timeToFirstByte=_timeToFirstByte;
@property (nonatomic) double timeToFirstRequest; // @synthesize timeToFirstRequest=_timeToFirstRequest;
@property (readonly, nonatomic) unsigned long long *timestamps; // @synthesize timestamps=_timestamps;

+ (void)initializeProtocol;
- (void).cxx_destruct;
- (void)acknowledgeData:(unsigned long long)arg1 sentToFlow:(id)arg2;
- (BOOL)addNewFlow:(id)arg1;
- (unsigned long long)allocateFlowID;
- (void)cancelConnection;
- (void)closeFlow:(id)arg1;
- (id)createConnectionInfo;
- (void)dealloc;
- (void)destroyConnection;
- (BOOL)flowIsFirstFlow:(id)arg1;
- (void)handleCanHandleMoreData;
- (void)handleConnected;
- (void)handleConnectionIsDisconnected;
- (void)handleDataWrittenWithError:(int)arg1;
- (void)handleDisconnected;
- (void)handleEOF;
- (void)handleFallbackForFlow:(id)arg1;
- (id)handleFlowClosed:(unsigned long long)arg1 withFallbackReason:(long long)arg2;
- (void)handleFlowUsedTunnel;
- (void)handleInputAvailable;
- (void)handleOutputAvailable;
- (void)handleReadData:(struct nw_frame_array_s *)arg1;
- (void)handleReady;
- (BOOL)hasFlow:(unsigned long long)arg1;
- (void)increaseWindowSizeForFlow:(unsigned long long)arg1 byBytes:(unsigned long long)arg2;
- (id)initWithEndpoint:(id)arg1 parameters:(id)arg2 appRule:(id)arg3 flowProperties:(id)arg4 delegate:(id)arg5;
- (unsigned long long)maxDataSendSizeForFlow:(id)arg1;
- (void)readMinimumLength:(unsigned long long)arg1 maximumLength:(unsigned long long)arg2;
- (void)removeFlow:(unsigned long long)arg1;
- (long long)sendData:(id)arg1 forFlow:(id)arg2;
- (void)sendData:(id)arg1 toClientFlow:(unsigned long long)arg2;
- (BOOL)start;
- (void)startIdleTimer;
- (void)teardownOutputHandler;
- (void)write:(id)arg1;
- (void)writeInitialData;

@end

