//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class AVContentKeyRequest, NSArray, NSData, NSDate, NSDictionary, NSError, NSNumber, NSString, NSURL, TVPContentKeySession;

@interface TVPContentKeyRequest : NSObject
{
    BOOL _isRenewal;
    BOOL _isLowValueKey;
    BOOL _allowManualRenewal;
    BOOL _wantsOfflineKeysIfPossible;
    NSURL *_keyIdentifier;
    unsigned long long _requestID;
    NSString *_eventReportingID;
    long long _type;
    NSDate *_requestStartDate;
    NSDate *_requestEndDate;
    NSData *_keyRequestData;
    NSDictionary *_additionalRequestParams;
    NSDate *_serverRequestStartDate;
    NSArray *_keyFormatVersions;
    NSData *_offlineKeyData;
    NSData *_secureInvalidationNonceData;
    id _context;
    NSData *_keyResponseData;
    NSDate *_renewalDate;
    NSNumber *_renewalInterval;
    NSDate *_expirationDate;
    NSString *_contentID;
    NSNumber *_playbackDuration;
    NSDictionary *_additionalRequestParamsFromResponse;
    NSError *_error;
    AVContentKeyRequest *_avContentKeyRequest;
    TVPContentKeySession *_contentKeySession;
}

@property (strong, nonatomic) NSDictionary *additionalRequestParams; // @synthesize additionalRequestParams=_additionalRequestParams;
@property (strong, nonatomic) NSDictionary *additionalRequestParamsFromResponse; // @synthesize additionalRequestParamsFromResponse=_additionalRequestParamsFromResponse;
@property (nonatomic) BOOL allowManualRenewal; // @synthesize allowManualRenewal=_allowManualRenewal;
@property (readonly, nonatomic) AVContentKeyRequest *avContentKeyRequest; // @synthesize avContentKeyRequest=_avContentKeyRequest;
@property (strong, nonatomic) NSString *contentID; // @synthesize contentID=_contentID;
@property (weak, nonatomic) TVPContentKeySession *contentKeySession; // @synthesize contentKeySession=_contentKeySession;
@property (strong, nonatomic) id context; // @synthesize context=_context;
@property (strong, nonatomic) NSError *error; // @synthesize error=_error;
@property (readonly, nonatomic) NSString *eventReportingID; // @synthesize eventReportingID=_eventReportingID;
@property (strong, nonatomic) NSDate *expirationDate; // @synthesize expirationDate=_expirationDate;
@property (readonly, nonatomic) BOOL isCancelled;
@property (nonatomic) BOOL isLowValueKey; // @synthesize isLowValueKey=_isLowValueKey;
@property (nonatomic) BOOL isRenewal; // @synthesize isRenewal=_isRenewal;
@property (strong, nonatomic) NSArray *keyFormatVersions; // @synthesize keyFormatVersions=_keyFormatVersions;
@property (strong, nonatomic) NSURL *keyIdentifier; // @synthesize keyIdentifier=_keyIdentifier;
@property (strong, nonatomic) NSData *keyRequestData; // @synthesize keyRequestData=_keyRequestData;
@property (strong, nonatomic) NSData *keyResponseData; // @synthesize keyResponseData=_keyResponseData;
@property (strong, nonatomic) NSData *offlineKeyData; // @synthesize offlineKeyData=_offlineKeyData;
@property (strong, nonatomic) NSNumber *playbackDuration; // @synthesize playbackDuration=_playbackDuration;
@property (strong, nonatomic) NSDate *renewalDate; // @synthesize renewalDate=_renewalDate;
@property (strong, nonatomic) NSNumber *renewalInterval; // @synthesize renewalInterval=_renewalInterval;
@property (strong, nonatomic) NSDate *requestEndDate; // @synthesize requestEndDate=_requestEndDate;
@property (readonly, nonatomic) unsigned long long requestID; // @synthesize requestID=_requestID;
@property (strong, nonatomic) NSDate *requestStartDate; // @synthesize requestStartDate=_requestStartDate;
@property (strong, nonatomic) NSData *secureInvalidationNonceData; // @synthesize secureInvalidationNonceData=_secureInvalidationNonceData;
@property (strong, nonatomic) NSDate *serverRequestStartDate; // @synthesize serverRequestStartDate=_serverRequestStartDate;
@property (nonatomic) long long type; // @synthesize type=_type;
@property (nonatomic) BOOL wantsOfflineKeysIfPossible; // @synthesize wantsOfflineKeysIfPossible=_wantsOfflineKeysIfPossible;

+ (void)initialize;
+ (id)secureInvalidationRequestForIdentifier:(id)arg1 offlineKeyData:(id)arg2 additionalRequestParams:(id)arg3 contentID:(id)arg4;
- (void).cxx_destruct;
- (id)description;
- (void)finish;
- (void)finishByRequestingOfflineKeysIfPossible;
- (id)initWithAVContentKeyRequest:(id)arg1;
- (void)makeKeyRequestDataForCertificateData:(id)arg1 assetIDData:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)offlineKeyDataFromServerKeyData:(id)arg1 error:(id *)arg2;

@end

