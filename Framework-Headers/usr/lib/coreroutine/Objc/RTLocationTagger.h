//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSUUID, RTAuthorizationManager, RTInvocationDispatcher, RTLearnedLocationManager, RTLocationManager, RTMicroLocation, RTVisitManager;
@protocol OS_dispatch_queue;

@interface RTLocationTagger : NSObject
{
    BOOL _ready;
    BOOL _realtimeLocationTaggingAllowed;
    BOOL _historicLocationTaggingAllowed;
    NSObject<OS_dispatch_queue> *_queue;
    RTInvocationDispatcher *_dispatcher;
    RTAuthorizationManager *_authorizationManager;
    RTLocationManager *_locationManager;
    RTLearnedLocationManager *_learnedLocationManager;
    RTVisitManager *_visitManager;
    double _maximumEventLocationTaggingTimeInterval;
    RTMicroLocation *_currentMicroLocation;
    NSUUID *_currentLocationOfInterestIdentifier;
}

@property (strong, nonatomic) RTAuthorizationManager *authorizationManager; // @synthesize authorizationManager=_authorizationManager;
@property (strong, nonatomic) NSUUID *currentLocationOfInterestIdentifier; // @synthesize currentLocationOfInterestIdentifier=_currentLocationOfInterestIdentifier;
@property (strong, nonatomic) RTMicroLocation *currentMicroLocation; // @synthesize currentMicroLocation=_currentMicroLocation;
@property (strong, nonatomic) RTInvocationDispatcher *dispatcher; // @synthesize dispatcher=_dispatcher;
@property (nonatomic) BOOL historicLocationTaggingAllowed; // @synthesize historicLocationTaggingAllowed=_historicLocationTaggingAllowed;
@property (strong, nonatomic) RTLearnedLocationManager *learnedLocationManager; // @synthesize learnedLocationManager=_learnedLocationManager;
@property (strong, nonatomic) RTLocationManager *locationManager; // @synthesize locationManager=_locationManager;
@property (nonatomic) double maximumEventLocationTaggingTimeInterval; // @synthesize maximumEventLocationTaggingTimeInterval=_maximumEventLocationTaggingTimeInterval;
@property (strong, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property (nonatomic) BOOL ready; // @synthesize ready=_ready;
@property (nonatomic) BOOL realtimeLocationTaggingAllowed; // @synthesize realtimeLocationTaggingAllowed=_realtimeLocationTaggingAllowed;
@property (strong, nonatomic) RTVisitManager *visitManager; // @synthesize visitManager=_visitManager;

- (void).cxx_destruct;
- (void)_armLocationTagger;
- (void)_disarmLocationTagger;
- (void)_fetchLowConfidenceVisitIncident:(CDUnknownBlockType)arg1;
- (void)_handleLowConfidenceVisitIncident:(id)arg1;
- (void)_performTagWithObject:(id)arg1;
- (void)_registerForNotifications;
- (void)_unregisterForNotifications;
- (BOOL)_validateObject:(id)arg1;
- (void)historicalLocationTaggingAllowed:(CDUnknownBlockType)arg1;
- (id)init;
- (id)initWithAuthorizationManager:(id)arg1 locationManager:(id)arg2 learnedLocationManager:(id)arg3 visitManager:(id)arg4;
- (void)onLowConfidenceVisitNotification:(id)arg1;
- (void)onMagicalMomentsLocationUsageUpdate:(id)arg1;
- (void)onMicroLocationUpdate:(id)arg1;
- (void)onRoutineEnabledUpdate:(id)arg1;
- (void)onVisitManagerAvailable:(id)arg1;
- (void)realtimeLocationTaggingAllowed:(CDUnknownBlockType)arg1;
- (void)shutdown;
- (void)tagObject:(id)arg1 withLocationVisitEvents:(id)arg2;
- (void)tagObject:(id)arg1 withMicroLocationEvents:(id)arg2 minimumProbability:(double)arg3;
- (BOOL)tagObjectWithLocation:(id)arg1 error:(id *)arg2;
- (void)tagObjectWithLocation:(id)arg1 handler:(CDUnknownBlockType)arg2;

@end

