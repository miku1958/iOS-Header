//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <coreroutine/RTNotifier.h>

#import <coreroutine/RTNextPredictedLocationsOfInterestCacheDelegate-Protocol.h>
#import <coreroutine/RTStateModelDelegate-Protocol.h>

@class NSArray, NSDate, NSMutableArray, NSObject, NSString, RTNextPredictedLocationsOfInterestCache, RTStateModel;
@protocol OS_dispatch_source;

@interface RTDeviceLocationPredictor : RTNotifier <RTStateModelDelegate, RTNextPredictedLocationsOfInterestCacheDelegate>
{
    BOOL _monitorVisits;
    BOOL _encryptedDataAvailabilityNotificationNeeded;
    BOOL _monitorNextPredictedLocationsOfInterest;
    BOOL _pendingNextPredictedLocationsOfInterestRequest;
    RTStateModel *_stateModel;
    NSMutableArray *_pendingStateModelInvocations;
    long long _encryptedDataAvailability;
    RTNextPredictedLocationsOfInterestCache *_nextPredictedLocationsOfInterestCache;
    NSDate *_lastNextPredictedLocationsOfInterestDate;
    NSObject<OS_dispatch_source> *_nextPredictedLocationsOfInterestPollLocationTimer;
    NSArray *_nextPredictedLocationsOfInterest;
    double _nextPredictedLocationsOfInterestProcessInterval;
    double _nextPredictedLocationsOfInterestPollLocationInterval;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) long long encryptedDataAvailability; // @synthesize encryptedDataAvailability=_encryptedDataAvailability;
@property (nonatomic) BOOL encryptedDataAvailabilityNotificationNeeded; // @synthesize encryptedDataAvailabilityNotificationNeeded=_encryptedDataAvailabilityNotificationNeeded;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) NSDate *lastNextPredictedLocationsOfInterestDate; // @synthesize lastNextPredictedLocationsOfInterestDate=_lastNextPredictedLocationsOfInterestDate;
@property (nonatomic) BOOL monitorNextPredictedLocationsOfInterest; // @synthesize monitorNextPredictedLocationsOfInterest=_monitorNextPredictedLocationsOfInterest;
@property (nonatomic) BOOL monitorVisits; // @synthesize monitorVisits=_monitorVisits;
@property (strong, nonatomic) NSArray *nextPredictedLocationsOfInterest; // @synthesize nextPredictedLocationsOfInterest=_nextPredictedLocationsOfInterest;
@property (strong, nonatomic) RTNextPredictedLocationsOfInterestCache *nextPredictedLocationsOfInterestCache; // @synthesize nextPredictedLocationsOfInterestCache=_nextPredictedLocationsOfInterestCache;
@property (nonatomic) double nextPredictedLocationsOfInterestPollLocationInterval; // @synthesize nextPredictedLocationsOfInterestPollLocationInterval=_nextPredictedLocationsOfInterestPollLocationInterval;
@property (strong, nonatomic) NSObject<OS_dispatch_source> *nextPredictedLocationsOfInterestPollLocationTimer; // @synthesize nextPredictedLocationsOfInterestPollLocationTimer=_nextPredictedLocationsOfInterestPollLocationTimer;
@property (nonatomic) double nextPredictedLocationsOfInterestProcessInterval; // @synthesize nextPredictedLocationsOfInterestProcessInterval=_nextPredictedLocationsOfInterestProcessInterval;
@property (nonatomic) BOOL pendingNextPredictedLocationsOfInterestRequest; // @synthesize pendingNextPredictedLocationsOfInterestRequest=_pendingNextPredictedLocationsOfInterestRequest;
@property (strong, nonatomic) NSMutableArray *pendingStateModelInvocations; // @synthesize pendingStateModelInvocations=_pendingStateModelInvocations;
@property (strong, nonatomic) RTStateModel *stateModel; // @synthesize stateModel=_stateModel;
@property (readonly) Class superclass;

+ (id)sequentialClusterIdentificationIdentifier;
+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)_clear;
- (void)_fetchLocationOfInterestAtLocation:(id)arg1 withHandler:(CDUnknownBlockType)arg2;
- (void)_fetchNextPredictedLocationsOfInterestFromLocation:(id)arg1 startDate:(id)arg2 timeInterval:(double)arg3 withHandler:(CDUnknownBlockType)arg4;
- (void)_fetchPredictedExitDatesFromLocation:(id)arg1 onDate:(id)arg2 withHandler:(CDUnknownBlockType)arg3;
- (void)_fetchPredictedLocationsOfInterestBetweenStartDate:(id)arg1 endDate:(id)arg2 withHandler:(CDUnknownBlockType)arg3;
- (void)_onLocations:(id)arg1;
- (void)_postNextPredictedLocationsOfInterest:(id)arg1;
- (void)_purge;
- (void)_sequentialClusterIdentification;
- (void)_updateNextPredictedLocationsOfInterestWithLocations:(id)arg1;
- (void)clear;
- (void)dealloc;
- (void)fetchAllLocationsOfInterestWithHandler:(CDUnknownBlockType)arg1;
- (void)fetchLocationOfInterestAtCachedLocationWithHandler:(CDUnknownBlockType)arg1;
- (void)fetchLocationOfInterestAtCurrentLocationWithHandler:(CDUnknownBlockType)arg1;
- (void)fetchLocationOfInterestAtLocation:(id)arg1 withHandler:(CDUnknownBlockType)arg2;
- (void)fetchLocationsOfInterestOfType:(long long)arg1 withHandler:(CDUnknownBlockType)arg2;
- (void)fetchLocationsOfInterestWithinDistance:(double)arg1 ofLocation:(id)arg2 withHandler:(CDUnknownBlockType)arg3;
- (void)fetchNextPredictedLocationsOfInterestFromLocation:(id)arg1 startDate:(id)arg2 timeInterval:(double)arg3 withHandler:(CDUnknownBlockType)arg4;
- (void)fetchPredictedExitDatesFromLocation:(id)arg1 onDate:(id)arg2 withHandler:(CDUnknownBlockType)arg3;
- (void)fetchPredictedLocationsOfInterestBetweenStartDate:(id)arg1 endDate:(id)arg2 withHandler:(CDUnknownBlockType)arg3;
- (void)fetchPredictedLocationsOfInterestOnDate:(id)arg1 withHandler:(CDUnknownBlockType)arg2;
- (void)fetchRoutineModeFromLocation:(id)arg1 withHandler:(CDUnknownBlockType)arg2;
- (void)forceSequentialClusterIdentification:(CDUnknownBlockType)arg1;
- (id)init;
- (void)initStateModel;
- (void)injectLocationOfInterest:(id)arg1;
- (void)injectVisit:(id)arg1 locationOfInterest:(id)arg2;
- (void)internalAddObserver:(id)arg1 name:(id)arg2;
- (void)internalRemoveObserver:(id)arg1 name:(id)arg2;
- (void)logStateModelAvailabilityMetricWithAvailability:(long long)arg1;
- (void)onCacheEnabledDidChange:(BOOL)arg1;
- (void)onDataProtectionNotification:(id)arg1;
- (void)onLocationNotification:(id)arg1;
- (void)onLocationsOfInterestUpdated;
- (void)onPurgeNotification:(id)arg1;
- (void)onVisit:(id)arg1 withError:(id)arg2;
- (void)purge;
- (void)removeLocationOfInterest:(id)arg1;
- (void)removeVisit:(id)arg1 locationOfInterest:(id)arg2;
- (void)sequentialClusterIdentification;
- (void)shouldMonitorNextPredictedLocationsOfInterest;
- (void)shouldMonitorVisits;
- (void)spoofVisit:(id)arg1;
- (void)startMonitoringVisits;
- (void)stopMonitoringVisits;
- (void)updateEncryptedDataAvailabilityNotificationNeeded;

@end

