//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <coreroutine/NSXPCConnectionDelegate-Protocol.h>
#import <coreroutine/RTDaemonInternalProtocol-Protocol.h>

@class NSString, NSXPCConnection, RTAccountManager, RTAssetManager, RTAuthorizationManager, RTDeviceLocationPredictor, RTDiagnostics, RTEntitlementProvider, RTEventModelProvider, RTFingerprintManager, RTHintManager, RTLearnedLocationManager, RTLearnedLocationStore, RTLocationManager, RTLocationStore, RTMotionActivityManager, RTPersistenceManager, RTPurgeManager, RTScenarioTriggerManager, RTVehicleLocationProvider, RTVisitManager;
@protocol OS_dispatch_queue;

@interface RTDaemonClientInternal : NSObject <RTDaemonInternalProtocol, NSXPCConnectionDelegate>
{
    NSXPCConnection *_xpcConnection;
    NSObject<OS_dispatch_queue> *_queue;
    RTEntitlementProvider *_entitlementProvider;
    RTAccountManager *_accountManager;
    RTAssetManager *_assetManager;
    RTAuthorizationManager *_authorizationManager;
    RTDeviceLocationPredictor *_deviceLocationPredictor;
    RTDiagnostics *_diagnostics;
    RTEventModelProvider *_eventModelProvider;
    RTFingerprintManager *_fingerprintManager;
    RTHintManager *_hintManager;
    RTLearnedLocationManager *_learnedLocationManager;
    RTLearnedLocationStore *_learnedLocationStore;
    RTLocationManager *_locationManager;
    RTLocationStore *_locationStore;
    RTMotionActivityManager *_motionActivityManager;
    RTPersistenceManager *_persistenceManager;
    RTPurgeManager *_purgeManager;
    RTScenarioTriggerManager *_scenarioTriggerManager;
    RTVehicleLocationProvider *_vehicleLocationProvider;
    RTVisitManager *_visitManager;
}

@property (strong, nonatomic) RTAccountManager *accountManager; // @synthesize accountManager=_accountManager;
@property (strong, nonatomic) RTAssetManager *assetManager; // @synthesize assetManager=_assetManager;
@property (strong, nonatomic) RTAuthorizationManager *authorizationManager; // @synthesize authorizationManager=_authorizationManager;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (strong, nonatomic) RTDeviceLocationPredictor *deviceLocationPredictor; // @synthesize deviceLocationPredictor=_deviceLocationPredictor;
@property (strong, nonatomic) RTDiagnostics *diagnostics; // @synthesize diagnostics=_diagnostics;
@property (strong, nonatomic) RTEntitlementProvider *entitlementProvider; // @synthesize entitlementProvider=_entitlementProvider;
@property (strong, nonatomic) RTEventModelProvider *eventModelProvider; // @synthesize eventModelProvider=_eventModelProvider;
@property (strong, nonatomic) RTFingerprintManager *fingerprintManager; // @synthesize fingerprintManager=_fingerprintManager;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) RTHintManager *hintManager; // @synthesize hintManager=_hintManager;
@property (strong, nonatomic) RTLearnedLocationManager *learnedLocationManager; // @synthesize learnedLocationManager=_learnedLocationManager;
@property (strong, nonatomic) RTLearnedLocationStore *learnedLocationStore; // @synthesize learnedLocationStore=_learnedLocationStore;
@property (strong, nonatomic) RTLocationManager *locationManager; // @synthesize locationManager=_locationManager;
@property (strong, nonatomic) RTLocationStore *locationStore; // @synthesize locationStore=_locationStore;
@property (strong, nonatomic) RTMotionActivityManager *motionActivityManager; // @synthesize motionActivityManager=_motionActivityManager;
@property (strong, nonatomic) RTPersistenceManager *persistenceManager; // @synthesize persistenceManager=_persistenceManager;
@property (strong, nonatomic) RTPurgeManager *purgeManager; // @synthesize purgeManager=_purgeManager;
@property (strong, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property (strong, nonatomic) RTScenarioTriggerManager *scenarioTriggerManager; // @synthesize scenarioTriggerManager=_scenarioTriggerManager;
@property (readonly) Class superclass;
@property (strong, nonatomic) RTVehicleLocationProvider *vehicleLocationProvider; // @synthesize vehicleLocationProvider=_vehicleLocationProvider;
@property (strong, nonatomic) RTVisitManager *visitManager; // @synthesize visitManager=_visitManager;
@property (strong, nonatomic) NSXPCConnection *xpcConnection; // @synthesize xpcConnection=_xpcConnection;

- (void).cxx_destruct;
- (void)clearAllLocationsOfInterestWithReply:(CDUnknownBlockType)arg1;
- (void)connection:(id)arg1 handleInvocation:(id)arg2 isReply:(BOOL)arg3;
- (void)expireLifetimeOfVisitsWithIdentifiers:(id)arg1 expirationDate:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (void)extendLifetimeOfVisitsWithIdentifiers:(id)arg1 toExpireOn:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (void)fetchAllLocationsOfInterestWithReply:(CDUnknownBlockType)arg1;
- (void)fetchDataVaultPath:(CDUnknownBlockType)arg1;
- (void)fetchFMCEnabledWithReply:(CDUnknownBlockType)arg1;
- (void)fetchFingerprintsWithOptions:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)fetchFusionCandidatesForVisitIdentifier:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)fetchInferredMapItemForVisitIdentifier:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)fetchLocationsOfInterestWithVisitsWithinDistance:(id)arg1 location:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (void)fetchMotionActivitiesFromStartDate:(id)arg1 endDate:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (void)fetchPathToBackupWithReply:(CDUnknownBlockType)arg1;
- (void)fetchStoredLocationsCountFromDate:(id)arg1 toDate:(id)arg2 uncertainty:(double)arg3 limit:(unsigned long long)arg4 reply:(CDUnknownBlockType)arg5;
- (void)fetchVisitsBetweenStartDate:(id)arg1 endDate:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (void)fetchVisitsWithReply:(CDUnknownBlockType)arg1;
- (void)fetchWiFiAccessPointsForFingerprint:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)forceEventModelRefreshWithReply:(CDUnknownBlockType)arg1;
- (void)forceRelabeling:(CDUnknownBlockType)arg1;
- (void)forceSequentialClusterIdentification:(CDUnknownBlockType)arg1;
- (void)forceUpdateAssetMetadataWithReply:(CDUnknownBlockType)arg1;
- (id)init;
- (id)initWithQueue:(id)arg1 accountManager:(id)arg2 assetManager:(id)arg3 authorizationManager:(id)arg4 deviceLocationPredictor:(id)arg5 diagnostics:(id)arg6 eventModelProvider:(id)arg7 fingerprintManager:(id)arg8 hintManager:(id)arg9 learnedLocationManager:(id)arg10 learnedLocationStore:(id)arg11 locationManager:(id)arg12 locationStore:(id)arg13 motionActivityManager:(id)arg14 persistenceManager:(id)arg15 purgeManager:(id)arg16 scenarioTriggerManager:(id)arg17 vehicleLocationProvider:(id)arg18 visitManager:(id)arg19;
- (void)injectFingerprintWithIdentifier:(id)arg1 settledState:(unsigned long long)arg2 start:(id)arg3 reply:(CDUnknownBlockType)arg4;
- (void)injectFingerprintWithSettledState:(BOOL)arg1 start:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (void)injectLocationOfInterest:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)injectLocations:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)injectRealtimeVisit:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)injectSignalForSignalGeneratorOptions:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)injectVisit:(id)arg1 locationOfInterest:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (void)injectWiFiAccessPointWithMac:(id)arg1 rssi:(long long)arg2 channel:(long long)arg3 age:(double)arg4 date:(id)arg5 reply:(CDUnknownBlockType)arg6;
- (void)logDatabasesWithReply:(CDUnknownBlockType)arg1;
- (void)mirroringDelegateSetupState:(CDUnknownBlockType)arg1;
- (void)performExportMirroringRequest:(CDUnknownBlockType)arg1;
- (void)performImportMirroringRequest:(CDUnknownBlockType)arg1;
- (void)performZoneResetMirroringRequest:(CDUnknownBlockType)arg1;
- (void)queryProvider:(id)arg1 options:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (void)reconstructTransitionsWithReply:(CDUnknownBlockType)arg1;
- (void)simulateScenarioTrigger:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)simulateVisit:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)storeHints:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)submitHintAtLocation:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)submitMetrics:(id)arg1 metricName:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (void)tearDownPersistenceStack:(CDUnknownBlockType)arg1;
- (void)updateAssetServerURL:(id)arg1 assetType:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (void)updateTransitionWithIdentifier:(id)arg1 modeOfTransportation:(long long)arg2 reply:(CDUnknownBlockType)arg3;

@end

