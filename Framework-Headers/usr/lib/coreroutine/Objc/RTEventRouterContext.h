//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <coreroutine/RTEventStore.h>

#import <coreroutine/NSSecureCoding-Protocol.h>
#import <coreroutine/RTEventStore-Protocol.h>

@class NSMutableDictionary, NSString;

@interface RTEventRouterContext : RTEventStore <RTEventStore, NSSecureCoding>
{
    NSMutableDictionary *_contextMap;
    Class _eventStoreClass;
}

@property (strong, nonatomic) NSMutableDictionary *contextMap; // @synthesize contextMap=_contextMap;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (strong, nonatomic) Class eventStoreClass; // @synthesize eventStoreClass=_eventStoreClass;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

+ (BOOL)supportsSecureCoding;
- (void).cxx_destruct;
- (id)_createEventStore;
- (void)_processEventsForContext:(id)arg1 globalAppLaunchCountedSet:(id)arg2 withHandler:(CDUnknownBlockType)arg3;
- (void)addAppLaunchEvent:(id)arg1 context:(id)arg2;
- (void)addEvent:(id)arg1;
- (void)addEvent:(id)arg1 context:(id)arg2;
- (void)addEvents:(id)arg1;
- (void)addEvents:(id)arg1 context:(id)arg2;
- (void)clearAllEvents;
- (void)clearAllEventsForContext:(id)arg1;
- (BOOL)containsContext:(id)arg1;
- (unsigned long long)countOfContexts;
- (unsigned long long)countOfEvents;
- (unsigned long long)countOfEventsForContext:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)fetchPredictionForEvent:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (id)initWithApplicableEventClasses:(id)arg1;
- (id)initWithApplicableEventClasses:(id)arg1 eventStoreType:(long long)arg2;
- (id)initWithCoder:(id)arg1;
- (void)invalidate;
- (void)logRecommendedAppsHistogramMetric:(CDUnknownBlockType)arg1;
- (void)processEventsWithGlobalAppLaunchCountedSet:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)removeEvent:(id)arg1;
- (void)removeEvent:(id)arg1 context:(id)arg2;
- (void)removeEvents:(id)arg1;
- (void)removeEvents:(id)arg1 context:(id)arg2;
- (void)setUnderlyingQueue:(id)arg1;
- (id)storeForContext:(id)arg1;

@end

