//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSAttributedString, NSMutableArray, NSString;

@interface AXSpeechAction : NSObject
{
    NSString *_string;
    double _pitch;
    double _volume;
    double _speakingRate;
    NSString *_language;
    BOOL _shouldQueue;
    BOOL _cannotInterrupt;
    BOOL _shouldDetectLanguage;
    BOOL _shouldProcessEmoji;
    BOOL _shouldProcessEmoticons;
    BOOL _shouldPrecomposeString;
    CDUnknownBlockType _completionCallback;
    CDUnknownBlockType _onPauseCallback;
    CDUnknownBlockType _onResumeCallback;
    CDUnknownBlockType _onWillSpeakRangeCallback;
    CDUnknownBlockType _onSpeechStartCallback;
    BOOL _ignoreCustomSubstitutions;
    BOOL _synthesizeSilently;
    BOOL _useMonarchStyleSpeechRate;
    NSString *_voiceIdentifier;
    long long _state;
    CDUnknownBlockType _audioBufferCallback;
    NSAttributedString *_attributedString;
    long long _wordCallbackPostProcessedOffset;
    NSString *_finalSpokenString;
    NSString *_processedString;
    NSMutableArray *_emojiRangeReplacements;
}

@property (copy, nonatomic) NSAttributedString *attributedString; // @synthesize attributedString=_attributedString;
@property (copy, nonatomic) CDUnknownBlockType audioBufferCallback; // @synthesize audioBufferCallback=_audioBufferCallback;
@property (nonatomic) BOOL cannotInterrupt; // @synthesize cannotInterrupt=_cannotInterrupt;
@property (copy, nonatomic) CDUnknownBlockType completionCallback; // @synthesize completionCallback=_completionCallback;
@property (strong, nonatomic) NSMutableArray *emojiRangeReplacements; // @synthesize emojiRangeReplacements=_emojiRangeReplacements;
@property (strong, nonatomic) NSString *finalSpokenString; // @synthesize finalSpokenString=_finalSpokenString;
@property (nonatomic) BOOL ignoreCustomSubstitutions; // @synthesize ignoreCustomSubstitutions=_ignoreCustomSubstitutions;
@property (strong, nonatomic) NSString *language; // @synthesize language=_language;
@property (copy, nonatomic) CDUnknownBlockType onPauseCallback; // @synthesize onPauseCallback=_onPauseCallback;
@property (copy, nonatomic) CDUnknownBlockType onResumeCallback; // @synthesize onResumeCallback=_onResumeCallback;
@property (copy, nonatomic) CDUnknownBlockType onSpeechStartCallback; // @synthesize onSpeechStartCallback=_onSpeechStartCallback;
@property (copy, nonatomic) CDUnknownBlockType onWillSpeakRangeCallback; // @synthesize onWillSpeakRangeCallback=_onWillSpeakRangeCallback;
@property (nonatomic) double pitch; // @synthesize pitch=_pitch;
@property (strong, nonatomic) NSString *processedString; // @synthesize processedString=_processedString;
@property (nonatomic) BOOL shouldDetectLanguage; // @synthesize shouldDetectLanguage=_shouldDetectLanguage;
@property (nonatomic) BOOL shouldPrecomposeString; // @synthesize shouldPrecomposeString=_shouldPrecomposeString;
@property (nonatomic) BOOL shouldProcessEmoji; // @synthesize shouldProcessEmoji=_shouldProcessEmoji;
@property (nonatomic) BOOL shouldProcessEmoticons; // @synthesize shouldProcessEmoticons=_shouldProcessEmoticons;
@property (nonatomic) BOOL shouldQueue; // @synthesize shouldQueue=_shouldQueue;
@property (nonatomic) double speakingRate; // @synthesize speakingRate=_speakingRate;
@property (nonatomic) long long state; // @synthesize state=_state;
@property (copy, nonatomic) NSString *string; // @synthesize string=_string;
@property (nonatomic) BOOL synthesizeSilently; // @synthesize synthesizeSilently=_synthesizeSilently;
@property (nonatomic) BOOL useMonarchStyleSpeechRate; // @synthesize useMonarchStyleSpeechRate=_useMonarchStyleSpeechRate;
@property (strong, nonatomic) NSString *voiceIdentifier; // @synthesize voiceIdentifier=_voiceIdentifier;
@property (nonatomic) double volume; // @synthesize volume=_volume;
@property (nonatomic) long long wordCallbackPostProcessedOffset; // @synthesize wordCallbackPostProcessedOffset=_wordCallbackPostProcessedOffset;

+ (id)actionWithAttributedString:(id)arg1 shouldQueue:(BOOL)arg2;
+ (id)actionWithString:(id)arg1 shouldQueue:(BOOL)arg2;
+ (void)test_setUseMaxSpeechRate:(BOOL)arg1;
- (void).cxx_destruct;
- (id)_detectLanguageFromContent;
- (id)description;
- (id)init;
- (void)preprocessAction;

@end

