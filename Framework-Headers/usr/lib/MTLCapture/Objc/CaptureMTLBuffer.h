//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <MTLCapture/CaptureMTLObject-Protocol.h>
#import <MTLCapture/MTLBufferSPI-Protocol.h>
#import <MTLCapture/MTLResourceSPI-Protocol.h>

@class MTLResourceAllocationInfo, NSString;
@protocol MTLBuffer, MTLBufferSPI><MTLResourceSPI, MTLDevice, MTLHeap;

@interface CaptureMTLBuffer : NSObject <MTLBufferSPI, MTLResourceSPI, CaptureMTLObject>
{
    id<MTLBufferSPI><MTLResourceSPI> _baseObject;
    id<MTLDevice> _captureDevice;
    id<MTLHeap> _captureHeap;
    id<MTLBuffer> _captureRemoteStorageBuffer;
    struct GTTraceContext *_traceContext;
    struct GTTraceStream *_traceStream;
}

@property (readonly) unsigned long long allocatedSize;
@property (readonly) unsigned long long allocationID;
@property (readonly) id<MTLBuffer> baseObject;
@property (readonly) MTLResourceAllocationInfo *cachedAllocationInfo;
@property (readonly) unsigned long long cpuCacheMode;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) id<MTLDevice> device;
@property (readonly, nonatomic) unsigned long long gpuAddress;
@property (readonly) unsigned long long hash;
@property (readonly) unsigned long long hazardTrackingMode;
@property (readonly) id<MTLHeap> heap;
@property (readonly) unsigned long long heapOffset;
@property (readonly) struct __IOSurface *iosurface;
@property (copy) NSString *label;
@property (readonly) unsigned long long length;
@property (readonly) unsigned long long protectionOptions;
@property (nonatomic) unsigned long long resourceIndex;
@property (readonly) unsigned long long resourceOptions;
@property int responsibleProcess;
@property (readonly) MTLResourceAllocationInfo *sharedAllocationInfo;
@property (readonly) unsigned long long storageMode;
@property (readonly) unsigned long long streamReference;
@property (readonly) Class superclass;
@property (readonly) struct GTTraceContext *traceContext;
@property (readonly) struct GTTraceStream *traceStream;
@property (readonly) unsigned long long unfilteredResourceOptions;

- (void).cxx_destruct;
- (id)_quicklookData;
- (void)addDebugMarker:(id)arg1 range:(struct _NSRange)arg2;
- (BOOL)conformsToProtocol:(id)arg1;
- (void *)contents;
- (void)dealloc;
- (void)didModifyRange:(struct _NSRange)arg1;
- (BOOL)doesAliasAllResources:(const id *)arg1 count:(unsigned long long)arg2;
- (BOOL)doesAliasAnyResources:(const id *)arg1 count:(unsigned long long)arg2;
- (BOOL)doesAliasResource:(id)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (id)initWithBaseObject:(id)arg1 captureBuffer:(id)arg2;
- (id)initWithBaseObject:(id)arg1 captureDevice:(id)arg2;
- (id)initWithBaseObject:(id)arg1 captureHeap:(id)arg2;
- (BOOL)isAliasable;
- (BOOL)isComplete;
- (BOOL)isPurgeable;
- (void)makeAliasable;
- (id)newLinearTextureWithDescriptor:(id)arg1 offset:(unsigned long long)arg2 bytesPerRow:(unsigned long long)arg3 bytesPerImage:(unsigned long long)arg4;
- (id)newTextureWithDescriptor:(id)arg1 offset:(unsigned long long)arg2 bytesPerRow:(unsigned long long)arg3;
- (void)removeAllDebugMarkers;
- (BOOL)respondsToSelector:(SEL)arg1;
- (unsigned long long)setPurgeableState:(unsigned long long)arg1;
- (void)touch;
- (void)waitUntilComplete;

@end

