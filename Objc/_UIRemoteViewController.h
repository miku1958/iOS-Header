//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import <UIKit/UIActionSheetDelegate-Protocol.h>
#import <UIKit/_UIRemoteViewController_TextEffectsOperatorInterface-Protocol.h>
#import <UIKit/_UIRemoteViewController_ViewControllerOperatorInterface-Protocol.h>

@class BKSTouchDeliveryPolicyAssertion, NSArray, NSError, NSString, UIActionSheet, UIDimmingView, UIView, _UIAsyncInvocation, _UIRemoteView, _UIRemoteViewService, _UISizeTrackingView, _UITextEffectsRemoteView, _UITextServiceSession, _UIViewServiceInterface;

@interface _UIRemoteViewController : UIViewController <_UIRemoteViewController_ViewControllerOperatorInterface, _UIRemoteViewController_TextEffectsOperatorInterface, UIActionSheetDelegate>
{
    int __automatic_invalidation_retainCount;
    BOOL __automatic_invalidation_invalidated;
    NSString *_serviceBundleIdentifier;
    _UIViewServiceInterface *_serviceInterface;
    _UIRemoteViewService *_remoteViewService;
    id _serviceViewControllerProxy;
    id _serviceViewControllerControlMessageProxy;
    NSArray *_serviceViewControllerSupportedInterfaceOrientations;
    unsigned int _serviceAccessibilityServerPort;
    unsigned long long _serviceRegisteredScrollToTopViewCount;
    int _applicationDeactivationReason;
    id _viewControllerOperatorProxy;
    _UIAsyncInvocation *_viewControllerOperatorHalfDisconnectionInvocation;
    id _textEffectsOperatorProxy;
    _UIAsyncInvocation *_textEffectsOperatorHalfDisconnectionInvocation;
    _UISizeTrackingView *_sizeTrackingView;
    _UIRemoteView *_serviceViewControllerRemoteView;
    _UITextEffectsRemoteView *_fullScreenTextEffectsRemoteView;
    _UITextEffectsRemoteView *_textEffectsAboveStatusBarRemoteView;
    _UITextEffectsRemoteView *_remoteKeyboardRemoteView;
    UIView *_fullScreenTextEffectsSnapshotView;
    BOOL _snapshotTextEffectsAfterRotation;
    unsigned int _serviceScreenDisplayID;
    _UIAsyncInvocation *_terminationInvocation;
    int _terminationErrorLock;
    NSError *_terminationError;
    UIActionSheet *_hostedActionSheet;
    _UITextServiceSession *_textServiceSession;
    UIDimmingView *_hostedDimmingView;
    UIView *_touchGrabbingView;
    long long _preferredStatusBarStyle;
    BOOL _prefersStatusBarHidden;
    long long _preferredStatusBarUpdateAnimation;
    BOOL _isFocusDeferred;
    NSString *_deferredDisplayUUID;
    unsigned int _deferredContextID;
    NSArray *_allowedNotifications;
    NSArray *_sizeTrackingConstraints;
    BOOL _sizeTrackingViewShouldTranslateAutoResizeMaskIntoConstraints;
    int _sizeTrackingViewAutoResizeMask;
    struct CGSize _serviceScreenSize;
    BOOL _alreadySentFence;
    UIView *_viewServiceTouchInterdictionView;
    BOOL _isUpdatingSize;
    BOOL _serviceViewShouldShareTouchesWithHost;
    BKSTouchDeliveryPolicyAssertion *_touchDeliveryPolicyAssertion;
}

@property (nonatomic, setter=_setIsUpdatingSize:) BOOL _isUpdatingSize; // @synthesize _isUpdatingSize;
@property (strong, nonatomic, setter=_setTouchDeliveryPolicyAssertion:) BKSTouchDeliveryPolicyAssertion *_touchDeliveryPolicyAssertion; // @synthesize _touchDeliveryPolicyAssertion;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, nonatomic) CDStruct_4c969caf serviceAuditToken;
@property (readonly, nonatomic) NSString *serviceBundleIdentifier;
@property (readonly, nonatomic) int serviceProcessIdentifier;
@property (nonatomic) BOOL serviceViewShouldShareTouchesWithHost; // @synthesize serviceViewShouldShareTouchesWithHost=_serviceViewShouldShareTouchesWithHost;
@property (readonly) Class superclass;

+ (BOOL)__shouldAllowHostProcessToTakeFocus;
+ (BOOL)__shouldHostRemoteTextEffectsWindow;
+ (id)_requestViewController:(id)arg1 traitCollection:(id)arg2 fromServiceWithBundleIdentifier:(id)arg3 service:(id)arg4 connectionHandler:(CDUnknownBlockType)arg5;
+ (BOOL)_shouldForwardViewWillTransitionToSize;
+ (BOOL)_shouldSendLegacyMethodsFromViewWillTransitionToSize;
+ (id)exportedInterface;
+ (id)requestViewController:(id)arg1 fromServiceWithBundleIdentifier:(id)arg2 connectionHandler:(CDUnknownBlockType)arg3;
+ (id)requestViewController:(id)arg1 traitCollection:(id)arg2 fromServiceWithBundleIdentifier:(id)arg3 connectionHandler:(CDUnknownBlockType)arg4;
+ (id)requestViewControllerWithService:(id)arg1 connectionHandler:(CDUnknownBlockType)arg2;
+ (id)requestViewControllerWithService:(id)arg1 traitCollection:(id)arg2 connectionHandler:(CDUnknownBlockType)arg3;
+ (id)serviceViewControllerInterface;
+ (BOOL)shouldPropagateAppearanceCustomizations;
- (void).cxx_destruct;
- (int)__automatic_invalidation_logic;
- (void)__dismissActionSheetWithClickedButtonIndex:(long long)arg1 animated:(BOOL)arg2;
- (void)__dismissTextServiceSessionAnimated:(BOOL)arg1;
- (long long)__getPreferredInterfaceOrientation;
- (BOOL)__interdictServiceViewTouches;
- (void)__presentActionSheetFromYCoordinate:(double)arg1 withTitle:(id)arg2 buttonTitles:(id)arg3 cancelButtonIndex:(long long)arg4 destructiveButtonIndex:(long long)arg5 style:(long long)arg6;
- (void)__sendNotificationName:(id)arg1 userInfo:(id)arg2;
- (void)__setInterdictServiceViewTouches:(BOOL)arg1;
- (void)__setServiceMaxFrameSize:(struct CGSize)arg1;
- (void)__setSupportedInterfaceOrientations:(id)arg1;
- (void)__setViewServiceIsDisplayingPopover:(BOOL)arg1;
- (BOOL)__shouldRemoteViewControllerFenceOperations;
- (void)__showServiceForText:(id)arg1 type:(long long)arg2 fromRectValue:(id)arg3 replyHandler:(CDUnknownBlockType)arg4;
- (void)__trampolineButtonPressData:(id)arg1 canceled:(BOOL)arg2;
- (void)__viewServiceDidPromoteFirstResponder;
- (void)__viewServiceDidRegisterScrollToTopView;
- (void)__viewServiceDidUnregisterScrollToTopView;
- (void)__viewServiceDidUpdatePreferredStatusBarStyle:(long long)arg1 hidden:(BOOL)arg2 updateAnimation:(long long)arg3;
- (void)__viewServiceDidUpdateTintColor:(id)arg1 duration:(double)arg2;
- (void)__viewServiceInstrinsicContentSizeDidChange:(struct CGSize)arg1 fence:(id)arg2;
- (void)__viewServicePopoverDidChangeContentSize:(struct CGSize)arg1 animated:(BOOL)arg2 fence:(id)arg3 withReplyHandler:(CDUnknownBlockType)arg4;
- (void)__viewServicePopoverDidSetUseToolbarShine:(BOOL)arg1;
- (void)__viewServicePreferredContentSizeDidChange:(struct CGSize)arg1 fence:(id)arg2;
- (void)__willChangeToIdiom:(long long)arg1 onScreen:(id)arg2;
- (id)_addAutoAllowedNotifications:(id)arg1;
- (void)_appearanceInvocationsDidChange:(id)arg1;
- (id)_appearanceSource;
- (void)_applicationDidAddDeactivationReason:(id)arg1;
- (void)_applicationDidBecomeActive:(id)arg1;
- (void)_applicationDidEnterBackground:(id)arg1;
- (void)_applicationDidFinishSuspendSnapshot:(id)arg1;
- (void)_applicationWillDeactivate:(id)arg1;
- (void)_applicationWillEnterForeground:(id)arg1;
- (void)_awakeWithConnectionInfo:(id)arg1;
- (id)_cancelTouchesForCurrentEventInHostedContent;
- (id)_clientDeferralProperties;
- (void)_configureSizeViewConstraintsForWindow:(id)arg1 interfaceOrientation:(long long)arg2;
- (BOOL)_customizesForPresentationInPopover;
- (void)_didResignContentViewControllerOfPopover:(id)arg1;
- (void)_didRotateFromInterfaceOrientation:(long long)arg1 forwardToChildControllers:(BOOL)arg2 skipSelf:(BOOL)arg3;
- (void)_firstResponderDidChange:(id)arg1;
- (id)_hostDeferralProperties;
- (void)_hostDidEnterBackground:(id)arg1;
- (void)_hostWillEnterForeground:(id)arg1;
- (BOOL)_ignoreAppSupportedOrientations;
- (id)_initWithViewServiceBundleIdentifier:(id)arg1;
- (void)_initializeAccessibilityPortInformation;
- (BOOL)_isDeallocating;
- (void)_prepareTouchDeliveryPolicy;
- (BOOL)_requiresKeyboardWindowWhenFirstResponder;
- (void)_restoreTextEffectsRemoteView;
- (void)_screenDidConnect:(id)arg1;
- (void)_screenDidDisconnect:(id)arg1;
- (void)_scrollToTopFromTouchAtViewLocation:(struct CGPoint)arg1 resultHandler:(CDUnknownBlockType)arg2;
- (BOOL)_serviceHasScrollToTopView;
- (void)_setContentOverlayInsets:(struct UIEdgeInsets)arg1;
- (void)_setDeferred:(BOOL)arg1 forDisplayUUID:(id)arg2;
- (BOOL)_shouldDeferEventsForFocusOnScreen:(id)arg1;
- (void)_snapshotAndRemoveTextEffectsRemoteView;
- (void)_statusBarHeightDidChange:(id)arg1;
- (void)_statusBarOrientationDidChange:(id)arg1;
- (void)_terminateUnconditionallyThen:(CDUnknownBlockType)arg1;
- (id)_terminateWithError:(id)arg1;
- (void)_traitCollectionDidChange:(id)arg1;
- (BOOL)_tryRetain;
- (void)_updateTintColor;
- (void)_updateTouchGrabbingView;
- (void)_updateUnderflowProperties;
- (void)_willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2 forwardToChildControllers:(BOOL)arg3 skipSelf:(BOOL)arg4;
- (void)_willBecomeContentViewControllerOfPopover:(id)arg1;
- (void)_willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2 forwardToChildControllers:(BOOL)arg3 skipSelf:(BOOL)arg4;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (id)allowedNotifications;
- (id)autorelease;
- (BOOL)canBecomeFirstResponder;
- (void)dealloc;
- (void)didMoveToParentViewController:(id)arg1;
- (void)dimmingViewWasTapped:(id)arg1;
- (id)disconnect;
- (id)forbiddenNotifications;
- (BOOL)inheritsSecurity;
- (struct CGSize)intrinsicContentSizeForServiceSize:(struct CGSize)arg1;
- (void)loadView;
- (long long)preferredStatusBarStyle;
- (long long)preferredStatusBarUpdateAnimation;
- (BOOL)prefersStatusBarHidden;
- (oneway void)release;
- (void)restoreStateForSession:(id)arg1 anchor:(id)arg2;
- (id)retain;
- (unsigned long long)retainCount;
- (void)saveStateForSession:(id)arg1 anchor:(id)arg2;
- (id)serviceViewControllerProxy;
- (id)serviceViewControllerProxyWithErrorHandler:(CDUnknownBlockType)arg1;
- (void)setAllowedNotifications:(id)arg1;
- (void)setInheritsSecurity:(BOOL)arg1;
- (BOOL)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (void)synchronizeAnimationsInActions:(CDUnknownBlockType)arg1;
- (id)textEffectsWindowForServiceScreen;
- (void)updateTouchInterdictionViewLayout;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewDidDisappear:(BOOL)arg1;
- (void)viewDidInvalidateIntrinsicContentSize;
- (void)viewDidMoveToWindow:(id)arg1 shouldAppearOrDisappear:(BOOL)arg2;
- (void)viewServiceDidTerminateWithError:(id)arg1;
- (void)viewWillAppear:(BOOL)arg1;
- (void)viewWillDisappear:(BOOL)arg1;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)willTransitionToTraitCollection:(id)arg1 withTransitionCoordinator:(id)arg2;

@end

