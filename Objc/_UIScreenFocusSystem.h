//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/NSObject.h>

#import <UIKit/BKSEventFocusObserving-Protocol.h>

@class NSHashTable, NSString, UIFocusAnimationCoordinator, UIScreen, UIView;
@protocol UIFocusEnvironment, UIFocusItem;

__attribute__((visibility("hidden")))
@interface _UIScreenFocusSystem : NSObject <BKSEventFocusObserving>
{
    BOOL _focusEnabled;
    BOOL _ignoreFocusUpdateIfNeeded;
    BOOL _pendingFocusUpdateAllowsDeferral;
    BOOL _forceSourceItemMayRemainFocused;
    BOOL _pendingFocusRestoration;
    id<UIFocusItem> _focusedItem;
    NSHashTable *_unfocusingItems;
    UIFocusAnimationCoordinator *_currentFocusAnimationCoordinator;
    id<UIFocusItem> _previousFocusedItem;
    UIScreen *_screen;
    id<UIFocusEnvironment> _pendingFocusUpdateEnvironment;
    double _lastFocusStartTime;
}

@property (readonly, nonatomic) NSHashTable *_unfocusingItems; // @synthesize _unfocusingItems;
@property (readonly, nonatomic) UIFocusAnimationCoordinator *currentFocusAnimationCoordinator; // @synthesize currentFocusAnimationCoordinator=_currentFocusAnimationCoordinator;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, getter=isFocusEnabled) BOOL focusEnabled; // @synthesize focusEnabled=_focusEnabled;
@property (readonly, weak, nonatomic) id<UIFocusItem> focusedItem; // @synthesize focusedItem=_focusedItem;
@property (readonly, weak, nonatomic) UIView *focusedView;
@property (nonatomic, getter=_forceSourceItemMayRemainFocused, setter=_forceSourceItemMayRemainFocused:) BOOL forceSourceItemMayRemainFocused; // @synthesize forceSourceItemMayRemainFocused=_forceSourceItemMayRemainFocused;
@property (readonly) unsigned long long hash;
@property (nonatomic) BOOL ignoreFocusUpdateIfNeeded; // @synthesize ignoreFocusUpdateIfNeeded=_ignoreFocusUpdateIfNeeded;
@property (readonly, nonatomic, getter=_lastFocusStartTime) double lastFocusStartTime; // @synthesize lastFocusStartTime=_lastFocusStartTime;
@property (nonatomic, getter=_pendingFocusRestoration, setter=_setPendingFocusRestoration:) BOOL pendingFocusRestoration; // @synthesize pendingFocusRestoration=_pendingFocusRestoration;
@property (nonatomic, getter=_pendingFocusUpdateAllowsDeferral, setter=_setPendingFocusUpdateAllowsDeferral:) BOOL pendingFocusUpdateAllowsDeferral; // @synthesize pendingFocusUpdateAllowsDeferral=_pendingFocusUpdateAllowsDeferral;
@property (weak, nonatomic, getter=_pendingFocusUpdateEnvironment, setter=_setPendingFocusUpdateEnvironment:) id<UIFocusEnvironment> pendingFocusUpdateEnvironment; // @synthesize pendingFocusUpdateEnvironment=_pendingFocusUpdateEnvironment;
@property (readonly, weak, nonatomic) id<UIFocusItem> previousFocusedItem; // @synthesize previousFocusedItem=_previousFocusedItem;
@property (weak, nonatomic) UIScreen *screen; // @synthesize screen=_screen;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (BOOL)_isEnvironmentEligibleForFocusUpdate:(id)arg1 allowsDeferral:(BOOL)arg2;
- (void)_uiktest_setPreviousFocusedItem:(id)arg1;
- (BOOL)_updateFocusWithContext:(id)arg1;
- (void)cancelPendingFocusRestoration;
- (id)contextForProgrammaticFocusUpdateToEnvironment:(id)arg1;
- (void)dealloc;
- (void)focusEnvironmentWillDisappear:(id)arg1;
- (void)focusedDeferralPropertiesDidChange:(id)arg1;
- (id)initWithScreen:(id)arg1;
- (BOOL)requestFocusUpdateToEnvironment:(id)arg1 allowsDeferral:(BOOL)arg2;
- (BOOL)requestForcedFocusUpdateToEnvironment:(id)arg1;
- (void)setNeedsFocusRestoration;
- (void)updateFocusIfNeeded;
- (BOOL)updateFocusWithContext:(id)arg1;

@end

