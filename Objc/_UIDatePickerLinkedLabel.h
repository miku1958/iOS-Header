//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKitCore/UIView.h>

#import <UIKitCore/UIContentSizeCategoryAdjusting-Protocol.h>

@class NSArray, NSLayoutConstraint, NSMapTable, NSString, UIColor, UIFont, UILabel, UILayoutGuide, _UIDatePickerLinkedLabelStorage;

__attribute__((visibility("hidden")))
@interface _UIDatePickerLinkedLabel : UIView <UIContentSizeCategoryAdjusting>
{
    struct {
        unsigned int needsStorageSync:1;
    } _flags;
    UILabel *_renderingLabel;
    struct CGSize _lastSize;
    NSMapTable *_longestPossibleTitle;
    NSMapTable *_longestPossibleWidth;
    NSLayoutConstraint *_renderLabelXConstraint;
    _UIDatePickerLinkedLabelStorage *_storage;
    UILayoutGuide *_contentLayoutGuide;
    NSArray *_titles;
    NSArray *_possibleTitles;
}

@property (nonatomic) BOOL adjustsFontForContentSizeCategory;
@property (readonly, nonatomic) UILayoutGuide *contentLayoutGuide; // @synthesize contentLayoutGuide=_contentLayoutGuide;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (strong, nonatomic) UIFont *font;
@property (readonly) unsigned long long hash;
@property (strong, nonatomic) NSArray *possibleTitles; // @synthesize possibleTitles=_possibleTitles;
@property (strong, nonatomic) _UIDatePickerLinkedLabelStorage *storage; // @synthesize storage=_storage;
@property (readonly) Class superclass;
@property (nonatomic) long long textAlignment;
@property (strong, nonatomic) UIColor *textColor;
@property (strong, nonatomic) NSArray *titles; // @synthesize titles=_titles;

- (void).cxx_destruct;
- (void)_invalidatePossibleTitleCaches;
- (id)_longestPossibleTitleForPriority:(unsigned long long)arg1 width:(double *)arg2;
- (void)_setNeedsStorageSync;
- (void)_storageSync;
- (void)_storageSyncIfNecessary;
- (void)_updateAlignmentConstraint;
- (id)initWithFrame:(struct CGRect)arg1;
- (struct CGSize)intrinsicContentSize;
- (void)layoutSubviews;
- (void)setBounds:(struct CGRect)arg1;
- (void)setContentCompressionResistancePriority:(float)arg1 forAxis:(long long)arg2;
- (void)setContentHuggingPriority:(float)arg1 forAxis:(long long)arg2;
- (void)setFrame:(struct CGRect)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)traitCollectionDidChange:(id)arg1;

@end

