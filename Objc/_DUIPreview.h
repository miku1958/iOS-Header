//
//     Generated by class-dump 3.5-MH (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <UIKitCore/NSCopying-Protocol.h>
#import <UIKitCore/NSSecureCoding-Protocol.h>

@class UIBezierPath, UIColor, UIDragPreviewParameters;

@interface _DUIPreview : NSObject <NSSecureCoding, NSCopying>
{
    BOOL _fadesHorizontally;
    BOOL _fadesVertically;
    BOOL _hidesSourceView;
    BOOL _avoidAnimation;
    BOOL _wantsSuppressedMask;
    unsigned int _coordinateSpaceSourceContextID;
    UIColor *_backgroundColor;
    UIBezierPath *_outline;
    UIBezierPath *_shadowPath;
    unsigned long long _coordinateSpaceSourceLayerRenderID;
    double _originalRotation;
    long long _previewMode;
    struct CGPoint _contentOffset;
    struct CGSize _contentSize;
    struct CGPoint _originalCenter;
    struct CGPoint _originalCenterInCoordinateSpace;
    struct CGPoint _liftAnchorPoint;
    struct CGSize _viewScaleFactor;
}

@property (readonly, nonatomic) BOOL _springboardPlatterStyle;
@property (nonatomic) BOOL avoidAnimation; // @synthesize avoidAnimation=_avoidAnimation;
@property (readonly, nonatomic) double backAlpha;
@property (copy, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property (readonly, nonatomic) struct CGSize boundingSize;
@property (readonly, nonatomic) struct CGPoint contentOffset; // @synthesize contentOffset=_contentOffset;
@property (readonly, nonatomic) struct CGSize contentSize; // @synthesize contentSize=_contentSize;
@property (nonatomic) unsigned int coordinateSpaceSourceContextID; // @synthesize coordinateSpaceSourceContextID=_coordinateSpaceSourceContextID;
@property (nonatomic) unsigned long long coordinateSpaceSourceLayerRenderID; // @synthesize coordinateSpaceSourceLayerRenderID=_coordinateSpaceSourceLayerRenderID;
@property (readonly, nonatomic) struct CGPoint croppedScaledAnchorPoint;
@property (readonly, nonatomic) struct CGSize croppedScaledSize;
@property (readonly, nonatomic) UIBezierPath *effectiveShadowPath;
@property (nonatomic) BOOL fadesHorizontally; // @synthesize fadesHorizontally=_fadesHorizontally;
@property (nonatomic) BOOL fadesVertically; // @synthesize fadesVertically=_fadesVertically;
@property (nonatomic) BOOL hidesSourceView; // @synthesize hidesSourceView=_hidesSourceView;
@property (readonly, nonatomic) double liftAlpha;
@property (nonatomic) struct CGPoint liftAnchorPoint; // @synthesize liftAnchorPoint=_liftAnchorPoint;
@property (readonly, nonatomic) struct CGAffineTransform liftTransform;
@property (nonatomic) struct CGPoint originalCenter; // @synthesize originalCenter=_originalCenter;
@property (nonatomic) struct CGPoint originalCenterInCoordinateSpace; // @synthesize originalCenterInCoordinateSpace=_originalCenterInCoordinateSpace;
@property (nonatomic) double originalRotation; // @synthesize originalRotation=_originalRotation;
@property (copy, nonatomic) UIBezierPath *outline; // @synthesize outline=_outline;
@property (readonly, nonatomic, getter=isOversized) BOOL oversized;
@property (readonly, nonatomic) UIDragPreviewParameters *parameters;
@property (nonatomic) long long previewMode; // @synthesize previewMode=_previewMode;
@property (readonly, nonatomic) double scaleFactor;
@property (readonly, nonatomic) struct CGSize scaledSize;
@property (copy, nonatomic) UIBezierPath *shadowPath; // @synthesize shadowPath=_shadowPath;
@property (readonly, nonatomic) double stackAlpha;
@property (nonatomic) BOOL textMode;
@property (readonly, nonatomic) double topAlpha;
@property (readonly, nonatomic) struct CGPoint unscaledAnchorPoint;
@property (readonly, nonatomic) struct CGSize unscaledSize;
@property (readonly, nonatomic) struct CGSize viewScaleFactor; // @synthesize viewScaleFactor=_viewScaleFactor;
@property (nonatomic) BOOL wantsSuppressedMask; // @synthesize wantsSuppressedMask=_wantsSuppressedMask;

+ (id)defaultPreviewWithFrame:(struct CGRect)arg1;
+ (double)defaultStackAlpha;
+ (BOOL)supportsSecureCoding;
- (void).cxx_destruct;
- (double)_topOffset;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)init;
- (id)initWithBounds:(struct CGRect)arg1 outline:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initWithView:(id)arg1 container:(id)arg2 parameters:(id)arg3;
- (id)initWithView:(id)arg1 container:(id)arg2 parameters:(id)arg3 center:(struct CGPoint)arg4;
- (BOOL)isEqual:(id)arg1;

@end

